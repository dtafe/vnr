@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Infrastructure.Utilities
@{
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;

    IList<SelectListItem> listMethodPayment = Enum.GetValues(typeof(EnumDropDown.MethodPayment))
         .Cast<EnumDropDown.MethodPayment>()
         .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
         .ToList();
    Layout = null;

    IList<SelectListItem> listStatus = Enum.GetValues(typeof(EnumDropDown.OverTimeStatus))
       .Cast<EnumDropDown.OverTimeStatus>()
       .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
       .ToList();
}
@model HRM.Presentation.Evaluation.Models.Eva_SaleEvaluationModel
<div>
    <div class="col-lg-4 col-md-5 col-sm-12 col-xs-12">
        <div class="col-lg-5 col-md-5 col-sm-5 col-xs-12 lable">
            @Html.VnrLabelFor(mode => mode.ProfileID)
            @Html.HiddenFor(mode => mode.ID)
        </div>
        <div class="col-lg-7 col-md-7 col-sm-7 col-xs-12 value">
            @{
                System.Collections.IEnumerable userProfile = new string[] { };
                //if (Model != null)
                //{
                var profileName = Session["ProfileName"];
                var profileId = Session["ProfileId"];
                userProfile = new[] { new { ProfileName = profileName, ID = profileId } };

            }
            @{
                var mtsProfile = new MultiSelectBuilderInfo()
                {
                    DataTextField = "ProfileName",
                    DataValueField = "ID",
                    Url = @_hrm_Hre_Service + "HrMultiSelect/GetMultiProfile",
                    Width = 250,
                    Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                    Value = userProfile
                };

                if (Model != null)
                {
                    if (Model.ID != Guid.Empty)
                    {
                        mtsProfile.MaxSelectedItems = 1;
                    }
                }
            }

            @Html.VnrMultiSelectFor(model => model.ProfileID, mtsProfile)

        </div>

        <div class="col-lg-5 col-md-5 col-sm-5 col-xs-12 lable">
            @Html.VnrLabelFor(mode => mode.SalesTypeID)
        </div>
        <div class="col-lg-7 col-md-7 col-sm-7 col-xs-12 value">
            @{
                var ddlSalesType = new DropDownListBuilderInfo()
                {
                    Name = "SalesTypeID",
                    DataTextField = "SalesTypeName",
                    DataValueField = "ID",
                    Url = _hrm_Hre_Service + "Eva_GetData/GetMultiSalesType",
                    OptionLabel = ConstantDisplay.HRM_Evaluation_SalesType_Choose.TranslateString(),
                    StyleCss = "Width:200px",
                };
            }
            @(Html.VnrDropDownListFor(mode => mode.SalesTypeID, ddlSalesType))

        </div>
        <div class="col-lg-5 col-md-5 col-sm-5 col-xs-12 lable">
            @Html.VnrLabelFor(mode => mode.Year)
        </div>
        <div class="col-lg-7 col-md-7 col-sm-7 col-xs-12 value">
            @{
                var dtYear = new DatePickerBuilderInfo()
                {
                    Format = "MM/yyyy",
                };
            }
            @Html.VnrDatePickerFor(model => model.Year, dtYear)
        </div>
        <div class="col-lg-5 col-md-5 col-sm-5 col-xs-12 lable">
            @Html.VnrLabelFor(mode => mode.TagetNumber)
        </div>
        <div class="col-lg-7 col-md-7 col-sm-7 col-xs-12 value">
            @{
                var targetNumber = new NumericTextBoxBuilderInfo<float>() { };
            }
            @Html.VnrNumericTextBoxFor(model => model.TagetNumber, targetNumber)
        </div>
        <div class="col-lg-5 col-md-5 col-sm-5 col-xs-12 lable">
            @Html.VnrLabelFor(mode => mode.ResultNumber)
        </div>
        <div class="col-lg-7 col-md-7 col-sm-7 col-xs-12 value">
            @{
                var resultNumber = new NumericTextBoxBuilderInfo<float>() { };
            }
            @Html.VnrNumericTextBoxFor(model => model.ResultNumber, resultNumber)
        </div>
        <div class="col-lg-5 col-md-5 col-sm-5 col-xs-12 lable">
            @Html.VnrLabelFor(mode => mode.Note)
        </div>
        <div class="col-lg-7 col-md-7 col-sm-7 col-xs-12 value">
            @Html.VnrTextAreaFor(mode => mode.Note)
        </div>

        <div class="col-lg-4 col-md-2 col-sm-12 col-xs-12">

        </div>
    </div>
</div>