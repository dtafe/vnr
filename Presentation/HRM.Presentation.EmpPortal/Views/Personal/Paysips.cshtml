@using HRM.Presentation.EmpPortal.Models
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Payroll.Models
@{
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var controller = ViewContext.RouteData.Values["Controller"].ToString();
    var action = ViewContext.RouteData.Values["Action"].ToString();
    var screen = controller + "/" + action;
    var SelectID = Session[SessionObjects.ProfileID];
}
@model Hre_ProfileModelPortal
@*<script type="text/javascript">
        //Read data for grid module Pal
        function filterField_Paysips() {
            var param = {
                ProfileID: '@Model.ID',
                CutOffDurationID: $("#CutOffDuration_Pal").val(),
            };
            return param;
        };

    </script>*@
<script>
    function onDataBoundGrid() {
        debugger;
        SetStyleStringGrid('gridPayroll_Paysips', 'Value', '3');
    }
   
    function filterFieldInfo(isExport) {
        var elementPara = {
            CutOffDurationID: $('#CutOffDuration_Att').val(),
            ProfileID: '@SelectID',

        };
        if (isExport == true) {
            elementPara["ExportId"] = $('#ddlScreenName').val();
        }
        return elementPara;
    };
    function SetStyleStringGrid(gridName, colName, colIndex) {
        debugger;

        if (gridName != "" && gridName != undefined) {
            var grid = $('#' + gridName).data("kendoGrid");

            grid.tbody.find('>tr').each(function () {
                debugger;
                var dataItem = grid.dataItem(this);

                var valueField = dataItem[colName];

                if (valueField != '' && valueField != undefined) {
                    //var _Value = parseFloat(parseFloat(valueField).formatMoney());

                    $(this.cells[colIndex]).context.innerHTML = parseFloat(parseFloat(valueField).toFixed(2)).toLocaleString();
                    $(this.cells[colIndex]).attr('style', 'text-align:right;');

                }

            });
        }
    };

    @*$(document).ready(function () {
        $("#toolbar_Payslip").kendoToolBar({
            items: [
                { type: "button", text: "@ConstantDisplay.HRM_Common_Export_BasicSalary_Button_PDF.TranslateString()", id: "btnExportPDF", imageUrl: '@ConstantPath.IconExportPathPDF' },
            ],
            click: function (e) {
                var grid = $('#gridPayroll_Paysips').data("kendoGrid");
                if (grid.dataSource.total() == 0) {
                    var notificationWidget = $("#popupNotification").kendoNotification().data("kendoNotification");
                    notificationWidget.show(' @ConstantMessages.NoSelectExportDataToExcel.TranslateString()', 'error');
                    return;
                }
                if ($('#ddlScreenName').val() == "") {
                    ShowNotificationProcessor("@ConstantDisplay.PleaseTemplateToExport.TranslateString()");//Chưa dịch!
                    return;
                }
                var urlGetData = '@_hrm_Hre_Service' + "Sal_GetData/GetPayrollTableItemByIdProfile/";
                var urlDownload = document.domain;
                var dataParameter = filterField_Sal(true);
                dataParameter["ExportPDF"] = true;

                ExportAll(urlGetData, dataParameter, urlDownload, '');
            }
        });
    });*@

</script>

<div class="row">
    
    <div id="toolbar-SetStatus">
        <div style="float:left;">
            <script>
                function GetScreenName() {
                    return {
                        screenName: '@screen'
                    };
                }
            </script>
            @{
                var screenName = new DropDownListBuilderInfo()
                {
                    Name = "ddlScreenName",
                    DataTextField = "ExportName",
                    DataValueField = "ID",
                    Url = @_hrm_Hre_Service + "Cat_GetData/GetScreenName",
                    StyleCss = "width:200px;",
                    Data = "GetScreenName",
                };
            }
            @Html.VnrDropDownList(screenName)
        </div>
    </div> 
      <script>
    $(document).ready(function () {
        $("#toolbar-SetStatus").kendoToolBar({
            items: [
                { type: "button", text: "Xuất PDF", id: "btnExportpdf", imageUrl: "/Content/images/icons/save.png" },

            ],
            click: function (e) {
                debugger;
                var id = e.id;
                switch (id) {
                    case "btnExportpdf":
                        debugger;
                        if ($('#ddlScreenName').val() == "") {
                            ShowNotificationProcessor("Vui lòng chọn mẫu báo cáo !");//Chưa dịch!
                            return;
                        }
                        var urlGetData = '@_hrm_Hre_Service' + "Sal_GetData/GetPayrollTableItemByIdProfile/";
                        var urlDownload = '@_hrm_Main_Web';
                              var dataParameter = filterFieldInfo(true);
                              dataParameter["ExportPDF"] = true;

                              ExportAll(urlGetData, dataParameter, urlDownload, "Att_TAMScanLog");
                             

                      }
                  }
              });
          });
    </script>
    <div id="example1">
       
       

        <div class="demo-section k-header">
            <div id="toolbar_Payslip"></div>
        </div>
    </div>
</div>
<div class="row">
    @{
        string[] valueFields = new string[]
        {
            Sal_PayrollTableItemModel.FieldNames.OrderNo,
            Sal_PayrollTableItemModel.FieldNames.Name,
            Sal_PayrollTableItemModel.FieldNames.Description1,
            Sal_PayrollTableItemModel.FieldNames.Value,
        };

        Dictionary<string, int> sizeFields = new Dictionary<string, int>()
        {
            {Sal_PayrollTableItemModel.FieldNames.OrderNo,49},
            {Sal_PayrollTableItemModel.FieldNames.Name,200},
            {Sal_PayrollTableItemModel.FieldNames.Description1,200},
            {Sal_PayrollTableItemModel.FieldNames.Value,200},
        };

        Dictionary<string, string> displayFields = new Dictionary<string, string>()
        {
            {Sal_PayrollTableItemModel.FieldNames.OrderNo,ConstantDisplay.HRM_Category_Element_OrderNumber.TranslateString()},
            {Sal_PayrollTableItemModel.FieldNames.Name,ConstantDisplay.HRM_Payroll_TableItem_Name.TranslateString()},
            {Sal_PayrollTableItemModel.FieldNames.Description1,ConstantDisplay.HRM_Payroll_TableItem_Description.TranslateString()},
            {Sal_PayrollTableItemModel.FieldNames.Value,ConstantDisplay.HRM_Payroll_TableItem_Value.TranslateString()},
        };

        Dictionary<string, string> formatFields = new Dictionary<string, string>()
        {
            //{Sal_PayrollTableItemModel.FieldNames.Value, ConstantFormat.HRM_Format_Money},
        };

        var grid = new GridBuilderInfo
        {
            Name = "gridPayroll_Paysips",
            ValueFields = valueFields,
            SizeFields = sizeFields,
            DisplayFields = displayFields,
            FormatFields = formatFields,
            ReadActionUrl = @_hrm_Hre_Service + "Sal_GetData/GetPayrollTableItemByIdProfile",
            ShowCheckbox = false,
            AutoBind = true,
            ShowEditIcon = false,
            ReadData = "filterField_Sal",
            EventDataBound = "onDataBoundGrid",
            FormatSum = "n0",

        };
        @(Html.VnrGrid<Sal_PayrollTableItemModel>(grid))
    }
</div>

