
@using HRM.Presentation.EmpPortal.Models
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Infrastructure.Utilities
@using System.Collections

@{
    Layout = null;
    var _Hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _Hrm_EmpPortal_Web = ConstantPathWeb.Hrm_EmpPortal_Web;
}

<style>
    #Personal .padtop {
        padding-top: 2px;
    }

    input.customWH {
        width: 200px;
        height: 25px !important;
        margin-top:0px;
    }

    .k-multiselect-wrap {
        height: 25px;
    }
</style>

@model Hre_ProfileModelPortal
@if (Model != null)
{

    IList<SelectListItem> listLaborType = Enum.GetValues(typeof(EnumDropDown.LaborType))
  .Cast<EnumDropDown.LaborType>()
  .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
  .ToList();
    listLaborType= listLaborType.OrderBy(s=>s.Text).ToList();

    
    <script>
        $(document).ready(function () {
            $('#BasicInfo-box-Info').show();
            $('#BasicInfo-box-update').toggle();

            $("#toolbar1").kendoToolBar({
                items: [
                    { type: "button", text: "@ConstantDisplay.HRM_System_Resource_Sys_Edit.TranslateString()", id: "btnUpdateBasic", imageUrl: "/Content/images/icons/edit-file-icon.png" },
                ],
                click: function (e) {
                    var id = e.id;
                    switch (id) {
                        case "btnUpdateBasic":
                            $('#BasicInfo-box-Info').toggle();
                            $('#BasicInfo-box-update').show();
                            break;
                    }
                }
            });

            $("#toolbar2").kendoToolBar({
                items: [
                    { type: "button", text: "Cập Nhật", id: "btnSaveBasic", imageUrl: "/Content/images/icons/save.png" },
                    { type: "separator" },
                    { type: "button", text: "Hủy Bỏ", id: "btnCancelBasic", imageUrl: "/Content/images/icons/reject.png" },
                ],
                click: function (e) {
                    var id = e.id;
                    switch (id) {
                        case "btnSaveBasic":
                            debugger;
                            var result = false;

                            var dataReturn = onCreate($('#form-create-Basic'), '@_Hrm_EmpPortal_Web', 'Personal/CreateBasicInfo/', "popupNotification");
                            if (dataReturn.ActionStatus == "ErrorDateOfBirth") {
                                ShowNotification('@Html.Raw(ConstantMessages.Notification.TranslateString())', "Ngày Tháng Không Hợp Lệ", "k-block k-info-colored");
                                return;
                            }

                            debugger;
                            if (dataReturn.ActionStatus == "Change") {
                                HreProfileChange_Basic();
                            } else {
                                if (dataReturn != null) {
                                    result = true;
                                }

                                if (dataReturn.ActionStatus == "Success") {
                                    ReloadTabsTrip("Hre");
                                }
                                else {
                                    $('#BasicInfo-box-Info').show();
                                    $('#BasicInfo-box-update').toggle();
                                }
                            }
                            
                            return result;
                            break;
                        case "btnCancelBasic":
                            $('#BasicInfo-box-Info').show();
                            $('#BasicInfo-box-update').toggle();
                            break;
                    }
                }
            });

        });

        function HreProfileChange_Basic() {
            debugger;
            $.when(kendo.ui.ExtOkCancelDialog.show({
                title: "Xác nhận",
                message: "Bạn Có Muốn Cập Nhật Thay Đổi Vào 'Quá Trình Công Tác'?",
                icon: "k-ext-warning"
            })
            ).done(function (response) {
                if (response.button == "OK") {
                    $("#ActionStatus").val(1);
                    onCreate($('#form-create-Basic'), '@_Hrm_EmpPortal_Web', 'Personal/CreateBasicInfo/', "popupNotification");
                    ReloadTabsTrip("Hre");
                }

                $('#BasicInfo-box-Info').show();
                $('#BasicInfo-box-update').toggle();
            });
        }
    </script>

    <div class="row" id="BasicInfo-box-Info">
        <div id="example1">
            <div class="demo-section k-header">
                <div id="toolbar1"></div>
            </div>
        </div>
        <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12 row-data">
            <div class="header-box">@ConstantDisplay.HRM_HR_Profile.TranslateString()</div>
            <div class="div-parent">
                <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable" title="Tên nhân viên">
                    @Html.VnrLabelFor(model => model.ProfileName)
                </div>
                <div class="col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                    @Html.DisplayFor(model => model.ProfileName)
                </div>
            </div>
            <div class="div-parent">
                <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable" title="Mã nhân viên">
                    @Html.VnrLabelFor(model => model.CodeEmp)
                </div>
                <div class="col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                    @Html.DisplayFor(model => model.CodeEmp)
                </div>
            </div>
            <div class="div-parent">
                <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable" title="Mã chấm công">
                    @Html.VnrLabelFor(model => model.CodeAttendance)
                </div>
                <div class="col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                    @Html.DisplayFor(model => model.CodeAttendance)
                </div>
            </div>
            <div class="div-parent">
                <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable" title="Ngày áp dụng mã chấm công">
                    @*@Html.Label(ConstantDisplay.HRM_HR_Profile_DateApplyAttendanceCode.TranslateString())*@
                    @Html.VnrLabelFor(model => model.DateApplyAttendanceCode)
                </div>
                <div class="col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                    @String.Format("{0:dd/MM/yyyy}", Model.DateApplyAttendanceCode)
                    @*@Html.DisplayFor(model => model.DateApplyAttendanceCode)*@
                </div>
            </div>

            <div class="div-parent">
                <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable" title="Nơi làm việc">
                    @Html.VnrLabelFor(model => model.LocationCode)
                </div>
                <div class="col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                    @Html.DisplayFor(model => model.WorkPlaceName)
                </div>
            </div>
            <div class="div-parent">
                <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable" title="Mã số thuế">
                    @Html.VnrLabelFor(model => model.CodeTax)
                </div>
                <div class="col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                    @Html.DisplayFor(model => model.CodeTax)
                </div>
            </div>
            <div class="div-parent">
                <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable" title="Ngày cấp mã số thuế">
                    @Html.VnrLabelFor(model => model.DateOfIssuedTaxCode)
                </div>
                <div class="col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                    @String.Format("{0:dd/MM/yyyy}", Model.DateOfIssuedTaxCode)
                    @*@Html.DisplayFor(model => model.DateOfIssuedTaxCode)*@
                </div>
            </div>
            <div class="div-parent">
                <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable" title="Ngày vào làm">
                    @Html.VnrLabelFor(model => model.DateHire)
                </div>
                <div class="col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                    @String.Format("{0:dd/MM/yyyy}", Model.DateHire)
                    @*@Html.DisplayFor(model => model.DateHire)*@
                </div>
            </div>
            <div class="div-parent">
                <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable" title="Số ngày thử việc">
                    @Html.VnrLabelFor(model => model.PromotionCondition)
                </div>
                <div class="col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                    @Html.DisplayFor(model => model.PromotionCondition)
                </div>
            </div>
            <div class="div-parent">
                <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable" title="Ngày kết thúc thử việc">
                    @Html.VnrLabelFor(model => model.DateEndProbation)
                </div>
                <div class="col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                    @*@Html.DisplayFor(model => model.DateEndProbation)*@
                    @String.Format("{0:dd/MM/yyyy}", Model.DateEndProbation)
                </div>
            </div>
        </div>

        <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12 row-data">
            <div class="header-box">@ConstantDisplay.HR_ProfileInformation.TranslateString()</div>
            <div class="div-parent">
                <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable">
                    @Html.VnrLabelFor(model => model.OrgStructureName)
                </div>
                <div class="col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                    @Html.DisplayFor(model => model.OrgStructureName)
                </div>
            </div>
            <div class="div-parent">
                <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable">
                    @Html.VnrLabelFor(model => model.JobTitleName)
                </div>
                <div class="col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                    @Html.DisplayFor(model => model.JobTitleName)
                </div>
            </div>
            <div class="div-parent">
                <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable">
                    @Html.VnrLabelFor(model => model.PositionName)
                </div>
                <div class="col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                    @Html.DisplayFor(model => model.PositionName)
                </div>
            </div>
            <div class="div-parent">
                <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable">
                    @Html.VnrLabelFor(model => model.EmployeeTypeName)
                </div>
                <div class="col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                    @Html.DisplayFor(model => model.EmployeeTypeName)
                </div>
            </div>
            <div class="div-parent">
                <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable">
                    @Html.VnrLabelFor(model => model.PayrollGroupName)
                </div>
                <div class="col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                    @Html.DisplayFor(model => model.PayrollGroupName)
                </div>
            </div>
            <div class="div-parent">
                <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable">
                    @Html.VnrLabelFor(model => model.DateOfEffect)
                </div>
                <div class="col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                    @String.Format("{0:dd/MM/yyyy}", Model.DateOfEffect)
                    @*@Html.DisplayFor(model => model.DateOfEffect)*@
                </div>
            </div>
            <div class="div-parent">
                <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable">
                    @Html.VnrLabelFor(model => model.LaborType)
                </div>
                <div class="col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                    @{
    if (Model.LaborType != null)
    {
        var laborType = listLaborType.Where(d => d.Value == Model.LaborType).Select(d => d.Text).FirstOrDefault();

        @laborType
    }
                    }
                </div>
            </div>
            <div class="div-parent">
                <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable">
                    @Html.VnrLabelFor(model => model.WorkingPlace)
                </div>
                <div class="col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                    @Html.DisplayFor(model => model.WorkPlaceName)
                </div>
            </div>
            <div class="div-parent">
                <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable">
                    @Html.VnrLabelFor(model => model.SupervisorName)
                </div>
                <div class="col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                    @Html.DisplayFor(model => model.SupervisorName)
                </div>
            </div>
            <div class="div-parent">
                <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable">
                    @Html.VnrLabelFor(model => model.HighSupervisorName)
                </div>
                <div class="col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                    @Html.DisplayFor(model => model.HighSupervisorName)
                </div>
            </div>
        </div>
    </div>

    <form action="#" method="POST" id="form-create-Basic">
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.ActionStatus)
        <div class="row" id="BasicInfo-box-update">
            <div id="example2">
                <div class="demo-section k-header">
                    <div id="toolbar2"></div>
                </div>
            </div>

            <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12 row-data">
                <div class="header-box">@ConstantDisplay.HRM_HR_Profile.TranslateString()</div>
                <div class="div-parent">
                    <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable" title="Tên nhân viên">
                        @Html.VnrLabelFor(model => model.ProfileName)
                    </div>
                    <div class="padtop col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                        @{
                                var _ProfileName = new TextBoxBuilderInfo()
                                {
                                    ClassName = "customWH",
                                    Value = Model != null && Model.ProfileName != null ? Model.ProfileName : string.Empty
                                };
                        }
                        @Html.VnrTextBoxFor(model => model.ProfileName, _ProfileName)
                    </div>

                </div>
                <div class="div-parent">
                    <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable" title="Mã nhân viên">
                        @Html.VnrLabelFor(model => model.CodeEmp)
                    </div>
                    <div class="padtop col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                        @{
    var _CodeEmp = new TextBoxBuilderInfo()
    {
        ClassName = "customWH",
        Value = Model != null && Model.CodeEmp != null ? Model.CodeEmp : string.Empty
    };
                        }
                        @Html.VnrTextBoxFor(model => model.CodeEmp, _CodeEmp)
                    </div>
                </div>
                <div class="div-parent">
                    <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable" title="Mã chấm công">
                        @Html.VnrLabelFor(model => model.CodeAttendance)
                    </div>
                    <div class="padtop col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                        @{
    var _CodeAttendance = new TextBoxBuilderInfo()
    {
        ClassName = "customWH",
        Value = Model != null && Model.CodeAttendance != null ? Model.CodeAttendance : string.Empty
    };
                        }
                        @Html.VnrTextBoxFor(model => model.CodeAttendance, _CodeAttendance)
                    </div>
                </div>
                <div class="div-parent">
                    <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable" title="Ngày áp dụng mã chấm công">
                        @*@Html.Label(ConstantDisplay.HRM_HR_Profile_DateApplyAttendanceCode.TranslateString())*@
                        @Html.VnrLabelFor(model => model.DateApplyAttendanceCode)
                    </div>
                    <div class="padtop col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                        @{
    var _DateApplyAttendanceCode = new DatePickerBuilderInfo()
    {
        Format = ConstantFormat.HRM_Format_DayMonthYear,
        StyleCss = "width:200px;height:25px"
    };
                        }
                        @Html.VnrDatePickerFor(mode => mode.DateApplyAttendanceCode, _DateApplyAttendanceCode)

                        @*@String.Format("{0:dd/MM/yyyy}", Model.DateApplyAttendanceCode)*@
                    </div>
                </div>

                <div class="div-parent">
                    <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable" title="Nơi làm việc">
                        @Html.VnrLabelFor(model => model.LocationCode)
                    </div>
                    <div class="padtop col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                        @{
    var _WorkPlaceName = new TextBoxBuilderInfo()
    {
        ClassName = "customWH",
        Value = Model != null && Model.WorkPlaceName != null ? Model.WorkPlaceName : string.Empty
    };
                        }
                        @Html.VnrTextBoxFor(model => model.WorkPlaceName, _WorkPlaceName)
                    </div>
                </div>
                <div class="div-parent">
                    <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable" title="Mã số thuế">
                        @Html.VnrLabelFor(model => model.CodeTax)
                    </div>
                    <div class="padtop col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                        @{
    var _CodeTax = new TextBoxBuilderInfo()
    {
        ClassName = "customWH",
        Value = Model != null && Model.CodeTax != null ? Model.CodeTax : string.Empty
    };
                        }
                        @Html.VnrTextBoxFor(model => model.CodeTax, _CodeTax)
                    </div>
                </div>

                <div class="div-parent">
                    <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable" title="Ngày cấp mã số thuế">
                        @Html.VnrLabelFor(model => model.DateOfIssuedTaxCode)
                    </div>
                    <div class="padtop col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                        @{
    var _DateOfIssuedTaxCode = new DatePickerBuilderInfo()
    {
        Format = ConstantFormat.HRM_Format_DayMonthYear,
        StyleCss = "width:200px; height:25px"
    };
                        }
                        @Html.VnrDatePickerFor(mode => mode.DateOfIssuedTaxCode, _DateOfIssuedTaxCode)

                        @*@String.Format("{0:dd/MM/yyyy}", Model.DateOfIssuedTaxCode)*@
                    </div>
                </div>
                <div class="div-parent">
                    <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable" title="Ngày vào làm">
                        @Html.VnrLabelFor(model => model.DateHire)
                    </div>
                    <div class="padtop col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                        @{
    var _DateHire = new DatePickerBuilderInfo()
    {
        Format = ConstantFormat.HRM_Format_DayMonthYear,
        StyleCss = "width:200px; height:25px"
    };
                        }
                        @Html.VnrDatePickerFor(mode => mode.DateHire, _DateHire)

                        @*@String.Format("{0:dd/MM/yyyy}", Model.DateHire)*@
                    </div>
                </div>
                <div class="div-parent">
                    <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable" title="Số ngày thử việc">
                        @Html.VnrLabelFor(model => model.PromotionCondition)
                    </div>
                    <div class="padtop col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                        @Html.DisplayFor(model => model.PromotionCondition)
                        @*@{
    var _PromotionCondition = new NumericTextBoxBuilderInfo<double>()
    {
        StyleCss = "width:200px; height:25px",
        Value = Model == null ? 0 : Model.PromotionCondition.Value,
    };
}
                        @Html.VnrNumericTextBoxFor(model => model.PromotionCondition, _PromotionCondition)*@
                    </div>
                </div>
                <div class="div-parent">
                    <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable" title="Ngày kết thúc thử việc">
                        @Html.VnrLabelFor(model => model.DateEndProbation)
                    </div>
                    <div class="padtop col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                        @{
    var _DateEndProbation = new DatePickerBuilderInfo()
    {
        Format = ConstantFormat.HRM_Format_DayMonthYear,
        StyleCss = "width:200px; height:25px"
    };
                        }
                        @Html.VnrDatePickerFor(mode => mode.DateEndProbation, _DateEndProbation)

                        @*@String.Format("{0:dd/MM/yyyy}", Model.DateEndProbation)*@
                    </div>
                </div>
            </div>

            <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12 row-data">
                <div class="header-box">@ConstantDisplay.HR_ProfileInformation.TranslateString()</div>
                <div class="div-parent">
                    <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable">
                        @Html.VnrLabelFor(model => model.OrgStructureName)
                    </div>
                    <div class="padtop col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                        @Html.DisplayFor(model => model.OrgStructureName)
                    </div>
                </div>
                <div class="div-parent">
                    <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable">
                        @Html.VnrLabelFor(model => model.JobTitleName)
                    </div>
                    <div class="padtop col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                        @{
                            var jobTitleID = new ComboBoxBuilderInfo
                            {
                                DataTextField = "JobTitleName",
                                DataValueField = "ID",
                                Url = _Hrm_Hre_Service + "Cat_GetData/GetJobTitleOrd",
                                Placeholder = ConstantDisplay.HRM_Category_SelectJobTitle.TranslateString(),
                                Autobind = true,
                                ServerFilter = true,
                                FilterType = FilterType.Contains,
                                StyleCss = "width:200px; height:25px",
                            };
                        }
                        @Html.VnrComboBoxFor(mode => mode.JobTitleID, jobTitleID).Text(Model != null ? Model.JobTitleName : string.Empty)

                    </div>
                </div>
                <div class="div-parent">
                    <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable">
                        @Html.VnrLabelFor(model => model.PositionName)
                    </div>
                    <div class="padtop col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                        @{
                            var _Position = new ComboBoxBuilderInfo
                            {
                                DataTextField = "PositionName",
                                DataValueField = "ID",
                                Url = _Hrm_Hre_Service + "Cat_GetData/GetPositionOrd",
                                StyleCss = "width:200px; height:25px",
                                Placeholder = ConstantDisplay.HRM_Category_SelectPosition.TranslateString(),
                            };
                        }
                        @Html.VnrComboBoxFor(mode => mode.PositionID, _Position).Text(Model != null ? Model.PositionName : string.Empty)

                    </div>
                </div>
                <div class="div-parent">
                    <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable">
                        @Html.VnrLabelFor(model => model.EmployeeTypeName)
                    </div>
                    <div class="padtop col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                        @{
                            var empTypeID = new ComboBoxBuilderInfo()
                            {
                                DataTextField = "EmployeeTypeName",
                                DataValueField = "ID",
                                Url = _Hrm_Hre_Service + "Cat_GetData/GetEmployeeTypeOrd",
                                Placeholder = ConstantDisplay.HRM_Category_SelectEmployeeType.TranslateString(),
                                StyleCss = "width:200px; height:25px",
                                Value = Model != null ? Model.EmpTypeID.ToString() : string.Empty
                            };
                        }
                        @Html.VnrComboBoxFor(mode => mode.EmpTypeID, empTypeID).Text(Model == null ? string.Empty : Model.EmployeeTypeName)
                    </div>
                </div>
                <div class="div-parent">
                    <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable">
                        @Html.VnrLabelFor(model => model.PayrollGroupName)
                    </div>
                    <div class="padtop col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                        @{
    var _PayrollGroupName = new ComboBoxBuilderInfo()
     {
         DataTextField = "PayrollGroupName",
         DataValueField = "ID",
         Url = _Hrm_Hre_Service + "Cat_GetData/GetPayrollGroupOrd",
         Placeholder = ConstantDisplay.HRM_Category_SelectPayrollGroup.TranslateString(),
         StyleCss = "width:200px; height:25px",
         Value = Model == null ? string.Empty : Model.PayrollGroupID.ToString(),
     };
                        }
                        @(Html.VnrComboBoxFor(mode => mode.PayrollGroupID, _PayrollGroupName).Text(Model == null ? string.Empty : Model.PayrollGroupName))
                    </div>
                </div>
                <div class="div-parent">
                    <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable">
                        @Html.VnrLabelFor(model => model.DateOfEffect)
                    </div>
                    <div class="padtop col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                        @{
    var _DateOfEffect = new DatePickerBuilderInfo()
    {
        Format = ConstantFormat.HRM_Format_DayMonthYear,
        StyleCss = "width:200px; height:25px"
    };
                        }
                        @Html.VnrDatePickerFor(mode => mode.DateOfEffect, _DateOfEffect)

                        @*@String.Format("{0:dd/MM/yyyy}", Model.DateOfEffect)*@
                    </div>
                </div>
                <div class="div-parent">
                    <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable">
                        @Html.VnrLabelFor(model => model.LaborType)
                    </div>
                    <div class="padtop col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                        @{
                            var ddlLaborType = new ComboBoxBuilderInfo()
                            {
                                DataTextField = "Text",
                                DataValueField = "Value",
                                StyleCss = "width:200px; height:25px",
                                BindTo = listLaborType,
                                Autobind = true
                            };
                        }
                        @Html.VnrComboBoxFor(model => model.LaborType, ddlLaborType)
                    </div>
                </div>
                <div class="div-parent">
                    <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable">
                        @Html.VnrLabelFor(model => model.WorkingPlace)
                    </div>
                    <div class="padtop col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                        @{
    var _workplaceName = new ComboBoxBuilderInfo()
     {
         DataTextField = "WorkPlaceName",
         DataValueField = "ID",
         Url = _Hrm_Hre_Service + "Cat_GetData/GetWorkPlaceOrd",
         Placeholder = ConstantDisplay.HRM_Category_WorkPlace.TranslateString(),
         StyleCss = "width:200px; height:25px",
         Value = Model == null ? string.Empty : Model.WorkPlaceID.ToString(),
     };
                        }
                        @(Html.VnrComboBoxFor(mode => mode.WorkPlaceID, _workplaceName).Text(Model == null ? string.Empty : Model.WorkPlaceName))
                    </div>
                </div>
                <div class="div-parent">
                    <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable">
                        @Html.VnrLabelFor(model => model.SupervisorName)
                    </div>
                    <div class="padtop col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                        @{
                            var _Supervisor = new ComboBoxBuilderInfo()
                             {
                                 DataTextField = "ProfileName",
                                 DataValueField = "ID",
                                 Url = _Hrm_Hre_Service + "Hre_GetData/GetProfileOrd",
                                 StyleCss = "width:200px; height:25px",
                                 Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                                 Value = Model == null ? string.Empty : Model.SupervisorID.ToString(),
                             };
                        }
                        @(Html.VnrComboBoxFor(mode => mode.SupervisorID, _Supervisor).Text(Model == null ? string.Empty : Model.SupervisorName))

                    </div>
                </div>
                <div class="div-parent">
                    <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5 lable">
                        @Html.VnrLabelFor(model => model.HighSupervisorName)
                    </div>
                    <div class="padtop col-lg-7 col-md-7 col-sm-7 col-xs-7 value">
                        @{
                                var _HighSupervisor = new ComboBoxBuilderInfo()
                                 {
                                     DataTextField = "ProfileName",
                                     DataValueField = "ID",
                                     Url = _Hrm_Hre_Service + "Hre_GetData/GetProfileOrd",
                                     StyleCss = "width:200px; height:25px",
                                     Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                                     Value = Model == null ? string.Empty : Model.HighSupervisorID.ToString(),
                                 };
                        }
                        @(Html.VnrComboBoxFor(mode => mode.HighSupervisorID, _HighSupervisor).Text(Model == null ? string.Empty : Model.HighSupervisorName))
                    </div>
                </div>
            </div>
        </div>

    </form>
}