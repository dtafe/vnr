
@using HRM.Presentation.EmpPortal.Models
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.Attendance.Models
@using HRM.Infrastructure.Utilities
@{
    Layout = null;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    IList<SelectListItem> listStatus = Enum.GetValues(typeof(AttendanceDataStatus))
        .Cast<AttendanceDataStatus>()
        .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
        .ToList();
    IList<SelectListItem> listRosterType = Enum.GetValues(typeof(RosterType))
       .Cast<RosterType>()
       .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
       .ToList();
    string[] valueFields = null;
}
@model Hre_ProfileModelPortal
<div class="row"></div>
<div class="row">
    @{
    Dictionary<object, object[]> foreignKey = new Dictionary<object, object[]>()
        {

            {Att_RosterModel.FieldNames.Type,new object[]
               { "Value", "Text", listRosterType, ConstantDisplay.HRM_Attendance_Roster_Type,""}},

                {Att_RosterModel.FieldNames.Status,new object[]
               { "Value", "Text", listStatus, ConstantDisplay.HRM_Attendance_Roster_Status,""}},
        };

    valueFields = new string[]
                            {
                                Att_RosterModel.FieldNames.DateStart,
                                Att_RosterModel.FieldNames.DateEnd,
                                Att_RosterModel.FieldNames.Type,
                                Att_RosterModel.FieldNames.MonShiftName,
                                Att_RosterModel.FieldNames.TueShiftName,
                                Att_RosterModel.FieldNames.WedShiftName,
                                Att_RosterModel.FieldNames.ThuShiftName,
                                Att_RosterModel.FieldNames.FriShiftName,
                                Att_RosterModel.FieldNames.SatShiftName,
                                Att_RosterModel.FieldNames.SunShiftName,
                                Att_RosterModel.FieldNames.Status
                            };
    Dictionary<string, int> sizeFields = new Dictionary<string, int>()
                            {
                                {Att_RosterModel.FieldNames.DateStart,120},
                                {Att_RosterModel.FieldNames.DateEnd,120},
                                {Att_RosterModel.FieldNames.Type,120},
                                {Att_RosterModel.FieldNames.MonShiftName,110},
                                {Att_RosterModel.FieldNames.TueShiftName,110},
                                {Att_RosterModel.FieldNames.WedShiftName,130},
                                {Att_RosterModel.FieldNames.ThuShiftName,110},
                                {Att_RosterModel.FieldNames.FriShiftName,110},
                                {Att_RosterModel.FieldNames.SatShiftName,110},
                                {Att_RosterModel.FieldNames.SunShiftName,110},
                                {Att_RosterModel.FieldNames.Status,160}
                            };

    Dictionary<string, string> displayFields = new Dictionary<string, string>()
                            {
                                {Att_RosterModel.FieldNames.DateStart, ConstantDisplay.HRM_Attendance_Roster_DateStart},
                                {Att_RosterModel.FieldNames.DateEnd, ConstantDisplay.HRM_Attendance_Roster_DateEnd},
                                {Att_RosterModel.FieldNames.Type, ConstantDisplay.HRM_Attendance_Roster_Type},
                                {Att_RosterModel.FieldNames.MonShiftName, ConstantDisplay.HRM_Attendance_Roster_MonShiftName},
                                {Att_RosterModel.FieldNames.TueShiftName, ConstantDisplay.HRM_Attendance_Roster_TueShiftName},
                                {Att_RosterModel.FieldNames.WedShiftName, ConstantDisplay.HRM_Attendance_Roster_WedShiftName},
                                {Att_RosterModel.FieldNames.ThuShiftName, ConstantDisplay.HRM_Attendance_Roster_ThuShiftName},
                                {Att_RosterModel.FieldNames.FriShiftName, ConstantDisplay.HRM_Attendance_Roster_FriShiftName},
                                {Att_RosterModel.FieldNames.SatShiftName, ConstantDisplay.HRM_Attendance_Roster_SatShiftName},
                                {Att_RosterModel.FieldNames.SunShiftName, ConstantDisplay.HRM_Attendance_Roster_SunShiftName},
                                {Att_RosterModel.FieldNames.Status, ConstantDisplay.HRM_Attendance_Roster_Status}
                            };

    var grid = new GridBuilderInfo
    {
        Name = "gridTab_RosterView",
        ValueFields = valueFields,
        SizeFields = sizeFields,
        DisplayFields = displayFields,
        ReadActionUrl = _hrm_Hre_Service + "Att_GetData/GetRosterByProIDandCutOID",
        ReadData = "filterField_Att",
        AutoBind = true,
        ShowDeleteButton = true,
        ShowCheckAll = false,
        ShowEditIcon = false,
        DeleteActionUrl = _hrm_Main_Web + "/Att_Roster/Remove/",
        ForeignKey = foreignKey
        //SelectionHandler = "onChange"
    };
}
<!--Khởi tạo Grid-->
@(Html.VnrGrid<Att_RosterModel>(grid))
</div>
