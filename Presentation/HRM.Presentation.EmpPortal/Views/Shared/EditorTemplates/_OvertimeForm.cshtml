@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Infrastructure.Utilities
@using HRM.Infrastructure.Security

@using System.Collections
@using HRM.Presentation.Attendance.Models
@{
    ViewBag.Title = "Yêu Cầu Tăng Ca";
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Cat_Service = ConstantPathWeb.Hrm_Cat_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;

    IList<SelectListItem> listMethodPayment = Enum.GetValues(typeof(EnumDropDown.MethodPayment))
         .Cast<EnumDropDown.MethodPayment>()
         .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
         .ToList();

    IList<SelectListItem> listStatus = Enum.GetValues(typeof(EnumDropDown.OverTimeStatus))
       .Cast<EnumDropDown.OverTimeStatus>()
       .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
       .ToList();
}
@model Att_OvertimeModel
<div>
    <div class="col-lg-4 col-md-5 col-sm-12 col-xs-12">
        <div class="col-lg-5 col-md-5 col-sm-5 col-xs-12 lable">
            @Html.VnrLabelFor(mode => mode.WorkDate)
            @Html.HiddenFor(mode => mode.ID)
        </div>
        <div class="col-lg-7 col-md-7 col-sm-7 col-xs-12 value">
            @{
                var datetimepickerWorkDate = new DateTimePickerBuilderInfo()
                {
                    Value = @Html.DisplayFor(mode => mode.WorkDate).ToString(),
                    Format = ConstantFormat.HRM_Format_DayMonthYear_HoursMin.TranslateString()
                };
            }
            @Html.VnrDateTimePickerFor(model => model.WorkDate, datetimepickerWorkDate)
        </div>

        <div class="col-lg-5 col-md-5 col-sm-5 col-xs-12 lable">
            @Html.VnrLabelFor(mode => mode.ShiftID)
        </div>
        <div class="col-lg-7 col-md-7 col-sm-7 col-xs-12 value">
            @{
                var _dropdownShiftID = new DropDownListBuilderInfo()
                {

                    DataTextField = "ShiftName",
                    DataValueField = "ID",
                    Url = @_hrm_Cat_Service + "Cat_GetData/GetMultiShift",
                    OptionLabel = @ConstantDisplay.HRM_Category_SelectShift.TranslateString(),
                    Autobind = true,
                };
            }
            @(Html.VnrDropDownListFor(mode => mode.ShiftID, _dropdownShiftID))
            <script>
                var dropdownlist = $("#ShiftID").data("kendoDropDownList");
                dropdownlist.value('@Html.DisplayFor(mode => mode.ShiftID).ToString()');
            </script>

        </div>
        <div class="col-lg-5 col-md-5 col-sm-5 col-xs-12 lable">
            @Html.VnrLabelFor(mode => mode.ProfileName)
        </div>
        <div class="col-lg-7 col-md-7 col-sm-7 col-xs-12 value">
            @{
                IEnumerable valueProfile = new string[] { };
                if (Model != null)
                {
                    valueProfile = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
                }
            }
            @{
                var Profile = new MultiSelectBuilderInfo()
                 {
                     DataTextField = "ProfileName",
                     DataValueField = "ID",
                     Url = @_hrm_Hr_Service + "HrMultiSelect/GetMultiProfile",
                     Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                     MaxSelectedItems = 1,
                     Value = valueProfile
                 };
            }
            @(Html.VnrMultiSelectFor(mode => mode.ProfileID, Profile))
        </div>
        <div class="col-lg-5 col-md-5 col-sm-5 col-xs-12 lable">
            @Html.VnrLabelFor(mode => mode.RegisterHours)
        </div>
        <div class="col-lg-7 col-md-7 col-sm-7 col-xs-12 value">
            @{
                var numericTextBoxRegisterHours = new NumericTextBoxBuilderInfo<double>()
                {
                    StyleCss = "width:170px;"
                };
            }
            @Html.VnrNumericTextBoxFor(model => model.RegisterHours, numericTextBoxRegisterHours)
        </div>
        <div class="col-lg-5 col-md-5 col-sm-5 col-xs-12 lable">
            @Html.VnrLabelFor(mode => mode.MethodPayment)
        </div>
        <div class="col-lg-7 col-md-7 col-sm-7 col-xs-12 value">
            @{
                var dropdownMethodPayment = new DropDownListBuilderInfo()
                {
                    Name = "MethodPayment",
                    DataTextField = "Text",
                    DataValueField = "Value",
                    BindTo = listMethodPayment,
                    OptionLabel = @ConstantDisplay.HRM_Attendance_SelectMethodPayment.TranslateString(),
                    StyleCss = "width:170px"
                };
            }
            @(Html.VnrDropDownListFor(mode => mode.MethodPayment, dropdownMethodPayment))
        </div>
        <div class="col-lg-5 col-md-5 col-sm-5 col-xs-12 lable">
            @Html.VnrLabelFor(mode => mode.OvertimeTypeID)
        </div>
        <div class="col-lg-7 col-md-7 col-sm-7 col-xs-12 value">
            @{
                var dropdownOvertimeTypeID = new DropDownListBuilderInfo()
                {

                    DataTextField = "OvertimeTypeName",
                    DataValueField = "ID",
                    Url = @_hrm_Cat_Service + "Cat_GetData/GetMultiOvertimeType",
                    Value = @Html.DisplayFor(mode => mode.OvertimeTypeID).ToString(),
                    OptionLabel = @ConstantDisplay.HRM_Attendance_SelectOvertimeType.TranslateString(),
                    StyleCss = "width:170px"
                };
            }
            @(Html.VnrDropDownListFor(mode => mode.OvertimeTypeID, dropdownOvertimeTypeID))
        </div>
        <div class="col-lg-5 col-md-5 col-sm-5 col-xs-12 lable">
            @Html.VnrLabelFor(mode => mode.Status)
        </div>
        <div class="col-lg-7 col-md-7 col-sm-7 col-xs-12 value">
            @{
                var dropdownStatus = new DropDownListBuilderInfo()
                {
                    Name = "Status",
                    DataTextField = "Text",
                    DataValueField = "Value",
                    BindTo = listStatus,
                    OptionLabel = @ConstantDisplay.HRM_Category_SelectStatus.TranslateString(),
                    StyleCss = "width:170px"
                };
            }
            @(Html.VnrDropDownListFor(mode => mode.Status, dropdownStatus))
        </div>
    </div>
    <div class="col-lg-4 col-md-5 col-sm-12 col-xs-12">
        <div class="col-lg-5 col-md-5 col-sm-5 col-xs-12 lable">
            @Html.VnrLabelFor(mode => mode.ReasonOT)
        </div>
        <div class="col-lg-7 col-md-7 col-sm-7 col-xs-12 value">
            @Html.VnrTextAreaFor(model => model.ReasonOT, "width:250px")
        </div>

        <div class="col-lg-5 col-md-5 col-sm-5 col-xs-12 lable">
            @Html.VnrLabelFor(mode => mode.UserApproveID)
        </div>
        <div class="col-lg-7 col-md-7 col-sm-7 col-xs-12 value">
            @{
                IEnumerable valueUserApprove = new string[] { };
                if (Model != null)
                {
                    valueUserApprove = new[] { new { UserInfoName = Model.UserApproveName1, ID = Model.UserApproveID } };
                }
            }
            @{
                var multiSelectUserApproveID = new MultiSelectBuilderInfo()
                {
                    Name = "UserApproveID",
                    DataTextField = "UserInfoName",
                    DataValueField = "ID",
                    Url = @_hrm_Sys_Service + "Sys_GetData/GetMultiUser",
                    Placeholder = ConstantDisplay.HRM_System_SelectUserApprove.TranslateString(),
                    MaxSelectedItems = 1,
                    Value = valueUserApprove
                };
            }
            @(Html.VnrMultiSelectFor(mode => mode.UserApproveID, multiSelectUserApproveID))

        </div>

        <div class="col-lg-5 col-md-5 col-sm-5 col-xs-12 lable">
            @Html.VnrLabelFor(mode => mode.UserApproveID2)
        </div>
        <div class="col-lg-7 col-md-7 col-sm-7 col-xs-12 value">
            @{
                IEnumerable valueUserApprove2 = new string[] { };
                if (Model != null)
                {
                    valueUserApprove2 = new[] { new { UserInfoName = Model.UserApproveName2, ID = Model.UserApproveID2 } };
                }
            }
            @{
                var multiSelectUserApproveID2 = new MultiSelectBuilderInfo()
                {
                    Name = "UserApproveID2",
                    DataTextField = "UserInfoName",
                    DataValueField = "ID",
                    Url = @_hrm_Sys_Service + "Sys_GetData/GetMultiUser",
                    Placeholder = ConstantDisplay.HRM_System_SelectUserApprove.TranslateString(),
                    MaxSelectedItems = 1,
                    Value = valueUserApprove2
                };
            }
            @(Html.VnrMultiSelectFor(mode => mode.UserApproveID2, multiSelectUserApproveID2))
        </div>
    </div>
    <div class="col-lg-4 col-md-2 col-sm-12 col-xs-12">

    </div>
</div>