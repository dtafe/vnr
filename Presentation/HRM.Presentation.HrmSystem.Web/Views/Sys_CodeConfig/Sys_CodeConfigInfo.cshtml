@using System.Collections
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.HrmSystem.Models

@{
    ViewBag.Title = "Sys_CodeConfigInfo";
    Layout = null;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var hrm_Sys_Web = ConstantPathWeb.Hrm_Sys_Web;

       var resetByField1_ObjectName = string.Empty;
       var resetByField1_FieldName = string.Empty;
       var resetByField2_ObjectName = string.Empty;
       var resetByField2_FieldName = string.Empty;
       
        if (Model != null && Model.ResetByField1 != null && Model.ResetByField1.Length>1 && Model.ResetByField1.IndexOf(".") !=-1)
        {
            var arrResetByField1 = Model.ResetByField1.Split('.');
            if (arrResetByField1.Length ==2)
            {
                resetByField1_ObjectName = arrResetByField1[0];
                resetByField1_FieldName = arrResetByField1[1];
            }
        }
        if (Model != null && Model.ResetByField2 != null && Model.ResetByField2.Length > 1 && Model.ResetByField2.IndexOf(".") != -1)
        {
            var arrResetByField2 = Model.ResetByField2.Split('.');
            if (arrResetByField2.Length == 2)
            {
                resetByField2_ObjectName = arrResetByField2[0];
                resetByField2_FieldName = arrResetByField2[1];
            }
        }
}
@model Sys_CodeConfigModel
<script>
    var formName = "form_Sys_CodeConfigInfo";
    var gridName = "gridSys_CodeConfig";
    var popUpName = "windowSys_CodeConfigInfoNew";

    function beforeSave() {
        var objectName1 = $("#ResetByField1_ObjectName").val();
        var fieldName1 = $("#ResetByField1_FieldName").val();
        var objectName2 = $("#ResetByField2_ObjectName").val();
        var fieldName2 = $("#ResetByField2_FieldName").val();
        if (objectName1.length > 0 && fieldName1.length > 0) {
            $("#ResetByField1").val(objectName1 + '.' + fieldName1);
        }
        if (objectName2.length > 0 && fieldName2.length > 0) {
            $("#ResetByField2").val(objectName2 + '.' + fieldName2);
        }

    }

    function onSaveDataPopUp() {
        beforeSave();
        onlySave($('#' + formName), '@_hrm_Sys_Service', 'api/Sys_CodeConfig/', gridName, popUpName); return false;
    }

    function onSave() {
        beforeSave();
        onSaveAndContinue($('#' + formName), '@_hrm_Sys_Service', 'api/Sys_CodeConfig/', gridName, popUpName); return false;
    }
    function onSaveClose() {
        beforeSave();
        onSaveAndClose($('#' + formName), '@_hrm_Sys_Service', 'api/Sys_CodeConfig/', gridName, popUpName); return false;
    }
     
    function onCheckReset(obj) {
        selectedBox = obj.id;
        $("input[name='IsReset']").each(function () {
            if (this.id != selectedBox) {
                this.checked = false;
            };
        });
    }
</script>
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Sys_CodeConfigInfo" }))
{
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.ResetByField1)
    @Html.HiddenFor(model => model.ResetByField2)
    <table>
        <tr>
            <td>
                <div>
                    <script>
                        function filterByObjectName() {
                            return {
                                text: $("#ObjectName").val(),
                            };
                        }
                        function filterByResetObjectName() {
                            return {
                                text: $("#ResetByField1_ObjectName").val(),
                            };
                        }
                        function filterByResetObjectName1() {
                            return {
                                text: $("#ResetByField2_ObjectName").val(),
                            };
                        }
                    </script>

                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.ObjectName)
                    </div>
                    <div class="FieldValue">
                        @{
                        var _ObjectName = new ComboBoxBuilderInfo()
                        {
                            DataTextField = "Name",
                            DataValueField = "Name",
                            Url = _hrm_Hre_Service + "Cat_GetData/GetMultiObjectName",
                            Placeholder = ConstantDisplay.HRM_Category_SelectObjectName.TranslateString(),
                            StyleCss = "width:300px;",
                            ServerFilter = true,
                        };
                        }
                        @Html.VnrComboBoxFor(mode => mode.ObjectName, _ObjectName)
                    </div>

                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.FieldName)
                    </div>
                    <div class="FieldValue">
                        @{
                        var _FieldName = new ComboBoxBuilderInfo()
                        {
                            DataTextField = "Name",
                            DataValueField = "Name",
                            Url = _hrm_Hre_Service + "Cat_GetData/GetMultiFieldNameByTableName",
                            Placeholder = ConstantDisplay.HRM_Category_SelectFieldName.TranslateString(),
                            StyleCss = "width:300px;",
                            CascadeFrom = "ObjectName",
                            Data = "filterByObjectName",
                            ServerFilter = true
                        };
                        }
                        @Html.VnrComboBoxFor(mode => mode.FieldName, _FieldName)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Formula)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Formula, "width:500px;height:100px;")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Ordinal)
                    </div>
                    <div class="FieldValue">
                        @{
                          var ordinal = new NumericTextBoxBuilderInfo<int>()
                        {
                            Name = "Ordinal"
                        };
                        }
                        @Html.VnrNumericTextBoxFor(p => p.Ordinal, ordinal)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">

                    </div>
                    <div class="FieldValue">
                        <input type="checkbox" name="IsReset" id="IsResetByDay" onclick="onCheckReset(this);" class="k-checkbox" /> @ConstantDisplay.HRM_System_CodeConfig_IsResetByDay.TranslateString()
                        <input type="checkbox" name="IsReset" id="IsResetByMonth" onclick="onCheckReset(this);" class="k-checkbox" /> @ConstantDisplay.HRM_System_CodeConfig_IsResetByMonth.TranslateString()
                        <input type="checkbox" name="IsReset" id="IsResetByYear" onclick="onCheckReset(this);" class="k-checkbox" /> @ConstantDisplay.HRM_System_CodeConfig_IsResetByYear.TranslateString()
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                    </div>
                    <div class="FieldValue">
                        @Html.VnrCheckBoxFor(mode => mode.IsResetByUser) @ConstantDisplay.HRM_System_CodeConfig_IsResetByUser.TranslateString()
                        @Html.VnrCheckBoxFor(mode => mode.IsResetByField) @ConstantDisplay.HRM_System_CodeConfig_IsResetByField.TranslateString()
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabel(ConstantDisplay.HRM_System_CodeConfig_ResetByObject1.TranslateString())
                    </div>
                    <div class="FieldValue">
                        @{
                        var _ResetByField1_ObjectName = new ComboBoxBuilderInfo()
                        {
                            Name = "ResetByField1_ObjectName",
                            DataTextField = "Name",
                            DataValueField = "Name",
                            Url = _hrm_Hre_Service + "Cat_GetData/GetMultiObjectName",
                            Placeholder = ConstantDisplay.HRM_Category_SelectObjectName.TranslateString(),
                            StyleCss = "width:300px;",
                            Value= resetByField1_ObjectName,
                            ServerFilter = true,
                        };
                        }
                        @Html.VnrComboBox(_ResetByField1_ObjectName)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.ResetByField1)
                    </div>
                    <div class="FieldValue">
                        @{
                        var _ResetByField1_FieldName = new ComboBoxBuilderInfo()
                        {
                            Name = "ResetByField1_FieldName",
                            DataTextField = "Name",
                            DataValueField = "Name",
                            Url = _hrm_Hre_Service + "Cat_GetData/GetMultiFieldNameByTableName",
                            Placeholder = ConstantDisplay.HRM_Category_SelectFieldName.TranslateString(),
                            StyleCss = "width:300px;",
                            CascadeFrom = "ResetByField1_ObjectName",
                            Data = "filterByResetObjectName",
                            Value = resetByField1_FieldName,
                            ServerFilter = true
                        };
                        }
                        @Html.VnrComboBox(_ResetByField1_FieldName)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabel(ConstantDisplay.HRM_System_CodeConfig_ResetByObject2.TranslateString())
                    </div>
                    <div class="FieldValue">
                        @{
                        var _ResetByField2_ObjectName = new ComboBoxBuilderInfo()
                        {
                            Name = "ResetByField2_ObjectName",
                            DataTextField = "Name",
                            DataValueField = "Name",
                            Url = _hrm_Hre_Service + "Cat_GetData/GetMultiObjectName",
                            Placeholder = ConstantDisplay.HRM_Category_SelectObjectName.TranslateString(),
                            StyleCss = "width:300px;",
                            Value = resetByField2_ObjectName,
                            ServerFilter = true,
                        };
                        }
                        @Html.VnrComboBox(_ResetByField2_ObjectName)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.ResetByField2)
                    </div>
                    <div class="FieldValue">
                        @{
                       var _ResetByField2_FieldName = new ComboBoxBuilderInfo()
                        {
                            Name = "ResetByField2_FieldName",
                            DataTextField = "Name",
                            DataValueField = "Name",
                            Url = _hrm_Hre_Service + "Cat_GetData/GetMultiFieldNameByTableName",
                            Placeholder = ConstantDisplay.HRM_Category_SelectFieldName.TranslateString(),
                            StyleCss = "width:300px;",
                            CascadeFrom = "ResetByField2_ObjectName",
                            Value = resetByField2_FieldName,
                            Data = "filterByResetObjectName1",
                            ServerFilter = true
                        };
                        }
                        @Html.VnrComboBox(_ResetByField2_FieldName)
                    </div>
                </div>

                @*<div>
                        <div class="FieldTitle150">
                        </div>
                        <div class="FieldValue">
                            @Html.VnrCheckBoxFor(mode => mode.IsManual)Không sinh tự động
                        </div>
                    </div>*@
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-code-config", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-code-config", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-code-config", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })

                    </div>
                </div>
            </td>
        </tr>
    </table>
}
