@using System.Collections
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@model HRM.Presentation.HrmSystem.Models.Sys_UserApproveModel

@{
    ViewBag.Title = "Sys_UserApprove";
    Layout = null;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var userApproveId = Model == null ? Guid.Empty : Model.ID;
    var formName = "form_cat_sysuserApprove";
    var gridName = "gridUserApprove";
    var windowName = "windowSysUserApprove";
    IList<SelectListItem> lstApproveType = Enum.GetValues(typeof(ApproveType))
    .Cast<ApproveType>()
    .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
    .ToList();

    string orgStructureName = string.Empty;
    if (Model != null && !string.IsNullOrEmpty(Model.OrgStructureName))
    {
        orgStructureName = Model.OrgStructureName;
    }

}

<script>
    var data = SetCharacteFieldRequired();
    var formName = '@formName';
    var gridName = '@gridName';
    var windowName = '@windowName';


    $(document).ready(function () {

    });

    function validateType() {
        var approveType = $("#Type").val();
        var currentStatus = $("#CurrentStatus").val();
        var userRequest = $("#UserRequestID").val();
        //if (approveType == 'E_FIN_PurchaseRequest' ) {
        //    if (currentStatus.length == 0 || userRequest == null) {
        //        ShowNotificationProcessor("Vui lòng Chọn Trạng Thái Hiện Tại và Người Yêu Cầu");
        //        return false;
        //    }
        //}
        return true;
    }

    function onSave() {
        //luu
        if (validateType()) {
            onlySave($('#' + formName), '@_hrm_Sys_Service', 'api/Sys_UserApprove/', gridName, windowName); return false;
        }
    }

    function onSaveDataPopUp() {
        //luu va tao moi
        if (validateType()) {
            onSaveAndContinue($('#' + formName), '@_hrm_Sys_Service', 'api/Sys_UserApprove/', gridName, windowName); return false;
        }

        @*onlySave($('#' + formName), '@_hrm_Sys_Service', 'api/Sys_UserApprove/', gridName, windowName); return false;*@
    }

    function onSaveClose() {
        //luu va dong
        if (validateType()) {
            onSaveAndClose($('#' + formName), '@_hrm_Sys_Service', 'api/Sys_UserApprove/', gridName, windowName); return false;
        }
    }

    function onChange_Type(e) {
        debugger;
        if (e.sender.value() == 'E_FIN_PurchaseRequest' || e.sender.value() == 'E_FIN_TravelRequest' || e.sender.value() == 'E_FIN_ClaimRequest') {
            $("#dvFIN_PurchaseRequest").show();
        } else {
            $("#dvFIN_PurchaseRequest").hide();
        }
       
    }

</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = formName }))
{
    @Html.HiddenFor(model => model.ID)

    <table>
        <tr>
            <td>
                <div id="dvUserApproveID">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.UserApproveID)
                    </div>
                    <div class="FieldValue">
                        @{
    IEnumerable valueProfile = new string[] { };
    if (Model != null)
    {
        valueProfile = new[] {
                                new{
                                         UserLogin = Model.UserApproveName,
                                         ID = Model.UserApproveID
                                   }
                            };
    }

    var multiSelectProfileID = new MultiSelectBuilderInfo()
    {
        DataTextField = "UserLogin",
        DataValueField = "ID",
        Url = _hrm_Sys_Service + "Sys_GetData/GetMultiUser",
        MaxSelectedItems = 1,
        Placeholder = ConstantDisplay.HRM_System_SelectUser.TranslateString(),
        Value = valueProfile,
        Width = 300
    };
                        }
                        @Html.VnrMultiSelectFor(mode => mode.UserApproveID, multiSelectProfileID)
                    </div>
                </div>

                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Type)
                    </div>
                    <div class="FieldValue">
                        @{
                        var dropdownStatus = new DropDownListBuilderInfo()
                        {
                            Name = "Type",
                            DataTextField = "Text",
                            DataValueField = "Value",
                            BindTo = lstApproveType,
                            EventChange = "onChange_Type",
                            OptionLabel = @ConstantDisplay.HRM_System_UserApprove_SelectType.TranslateString(),
                            StyleCss = "width:300px;"
                        };
                        }
                        @(Html.VnrDropDownListFor(mode => mode.Type, dropdownStatus))
                    </div>

                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.OrgStructureID)
                    </div>
                    <div class="FieldValue">
                        @{
                        var org = new TreeViewDropdDownBuilderInfo()
                        {
                            IsShowCheckBox = false,
                            SetFieldName = "OrgStructureID",
                            Value = orgStructureName
                        };
                        }
                        @Html.Partial("EditorTemplates/OrgTreeViewDropDown", org)

                        @Html.HiddenFor(m => m.OrgStructureID)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.IsNoGetMail)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrCheckBoxFor(mode => mode.IsNoGetMail)
                    </div>
                </div>

                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.IsMasterApprove)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrCheckBoxFor(mode => mode.IsMasterApprove)
                    </div>
                </div>

                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Notes)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Notes, "width:500px;height:100px;")
                    </div>
                </div>
              
                @* nếu loại là FIN_PurchaseRequest thì sẽ hiển thị div bên dưới*@
                <div id="dvFIN_PurchaseRequest">
                    <div>
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.CurrentStatus)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(mode => mode.CurrentStatus, "width:300px;")
                        </div>
                    </div>
                    <div id="dvUserApproveID">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.UserRequestID)
                        </div>
                        <div class="FieldValue">
                            @{
                            IEnumerable valueRequestProfile = new string[] { };
                            if (Model != null)
                            {
                                valueRequestProfile = new[] { new { UserLogin = Model.UserRequestName, ID = Model.UserRequestID } };
                            }

                            var multiSelectRequestProfileID = new MultiSelectBuilderInfo()
                            {
                                DataTextField = "UserLogin",
                                DataValueField = "ID",
                                Url = _hrm_Sys_Service + "Sys_GetData/GetMultiUser",
                                MaxSelectedItems = 1,
                                Placeholder = ConstantDisplay.HRM_System_SelectRequestUser.TranslateString(),
                                Value = valueRequestProfile,
                                Width = 300
                            };
                            }
                            @Html.VnrMultiSelectFor(mode => mode.UserRequestID, multiSelectRequestProfileID)
                        </div>
                    </div>
                </div>
            
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-SysUserApprove", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-continue-SysUserApprove", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-SysUserApprove", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })

                    </div>
                </div>
            </td>
        </tr>
    </table>
}

