@using HRM.Infrastructure.Utilities;
@using HRM.Presentation.UI.Controls.Kendo;
@using HRM.Presentation.HrmSystem.Models;

@model  HRM.Presentation.HrmSystem.Models.Sys_HreConfigModel
@{
    Layout = null;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
}

<script type="text/javascript">
    function pickerSelect(e) {
        $('#@Html.FieldIdFor(model => model.ProfileQuitColor)').val(e.value);
    }

    function pickerSelectbg(e) {
        $('#@Html.FieldIdFor(model => model.ProfileQuitBackGroundColor)').val(e.value);
    }

</script>

<div class="VnRMain">
    <table style="width: 100%;">
        <tbody>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                <td valign="top" style="background-color: #ffffff;">
                    <div style="display:block; padding-top:10px;">
                    
                        <fieldset>
                            <legend>
                                @ConstantDisplay.HRM_HR_HRE_CONFIG.TranslateString()
                                @*Cấu Hình Nhân Sự*@
                            </legend>

                            <div class="DivContentTitleValue" id="dvIsCheckDuplicateProfile">
                                <div class="FieldTitleConfig300">
                                    @Html.VnrLabelIcon(ConstantDisplay.HRM_Hr_Hre_IsGroupByOrgProfileQuit.TranslateString())
                                </div>
                                <div class="FieldValueConfig">
                                    @{

                                        var IsGroupByOrgProfileQuit = new CheckBoxBuilderInfo()
                                        {
                                            Value = Model.IsGroupByOrgProfileQuit == true ? true : false
                                        };
                                    }
                                    @Html.VnrCheckBoxFor(model => model.IsGroupByOrgProfileQuit, IsGroupByOrgProfileQuit)
                                </div>
                            </div>

                            <div class="DivContentTitleValue" id="dvIsCheckDuplicateProfile">
                                <div class="FieldTitleConfig300">
                                    @Html.VnrLabelIcon(ConstantDisplay.HRM_Hr_Hre_IsCheckDuplicateProfile.TranslateString())
                                </div>
                                <div class="FieldValueConfig">
                                    @{

                                        var allowDuplicateProfile = new CheckBoxBuilderInfo()
                                        {
                                            Value = Model.IsCheckDuplicateProfile == true ? true : false
                                        };
                                    }
                                    @Html.VnrCheckBoxFor(model => model.IsCheckDuplicateProfile, allowDuplicateProfile)
                                </div>
                            </div>

                            <div class="DivContentTitleValue" id="dvIsCheckDuplicateRelatives">
                                <div class="FieldTitleConfig300">
                                    @Html.VnrLabelIcon(ConstantDisplay.HRM_Hr_Hre_IsCheckDuplicateProfileAndBirthday.TranslateString())
                                </div>
                                <div class="FieldValueConfig">
                                    @{

                                        var allowCheckDuplicateProfileAndBirthday = new CheckBoxBuilderInfo()
                                        {
                                            Value = Model.IsCheckDuplicateProfileAndBirthday == true ? true : false
                                        };
                                    }
                                    @Html.VnrCheckBoxFor(model => model.IsCheckDuplicateProfileAndBirthday, allowCheckDuplicateProfileAndBirthday)
                                </div>
                            </div>



                            <div class="DivContentTitleValue" id="dvIsCheckDuplicateCodeEmp">
                                <div class="FieldTitleConfig300">
                                    @Html.VnrLabelIcon(ConstantDisplay.HRM_Hr_Hre_IsCheckDuplicateCodeEmp.TranslateString())
                                </div>
                                <div class="FieldValueConfig">
                                    @{

                                        var allowCheckDuplicateCodeEmp = new CheckBoxBuilderInfo()
                                        {
                                            Value = Model.IsCheckDuplicateCodeEmp == true ? true : false
                                        };
                                    }
                                    @Html.VnrCheckBoxFor(model => model.IsCheckDuplicateCodeEmp, allowCheckDuplicateCodeEmp)
                                </div>
                            </div>
                            
                            <div class="DivContentTitleValue" id="dvIsCheckDuplicateCodeAtt">
                                <div class="FieldTitleConfig300">
                                    @Html.VnrLabelIcon(ConstantDisplay.HRM_Hr_Hre_IsCheckDuplicateCodeAtt.TranslateString())
                                </div>
                                <div class="FieldValueConfig">
                                    @{

                                        var allowIsCheckDuplicateCodeAtt = new CheckBoxBuilderInfo()
                                        {
                                            Value = Model.IsCheckDuplicateCodeAtt == true ? true : false
                                        };
                                    }
                                    @Html.VnrCheckBoxFor(model => model.IsCheckDuplicateCodeAtt, allowIsCheckDuplicateCodeAtt)
                                </div>
                            </div>

                            <div class="DivContentTitleValue" id="dvIsCheckDuplicateIDNo">
                                <div class="FieldTitleConfig300">
                                    @Html.VnrLabelIcon(ConstantDisplay.HRM_Hr_Hre_IsCheckDuplicateIDNo.TranslateString())
                                </div>
                                <div class="FieldValueConfig">
                                    @{

                                        var allowCheckDuplicateIDNo = new CheckBoxBuilderInfo()
                                        {
                                            Value = Model.IsCheckDuplicateIDNo == true ? true : false
                                        };
                                    }
                                    @Html.VnrCheckBoxFor(model => model.IsCheckDuplicateIDNo, allowCheckDuplicateIDNo)
                                </div>
                            </div>

                            <div class="DivContentTitleValue" id="dvIsCheckDuplicateRelatives">
                                <div class="FieldTitleConfig300">
                                    @Html.VnrLabelIcon(ConstantDisplay.HRM_Hr_Hre_IsCheckDuplicateRelatives.TranslateString())
                                </div>
                                <div class="FieldValueConfig">
                                    @{

                                        var allowCheckDuplicateRelatives = new CheckBoxBuilderInfo()
                                        {
                                            Value = Model.IsCheckDuplicateRelatives == true ? true : false
                                        };
                                    }
                                    @Html.VnrCheckBoxFor(model => model.IsCheckDuplicateRelatives, allowCheckDuplicateRelatives)
                                </div>
                            </div>

                            <div class="DivContentTitleValue" id="dvProfileQuitColor">
                                <div class="FieldTitleConfig300">
                                    @Html.VnrLabelIcon(ConstantDisplay.HRM_Hr_Hre_ProfileQuitColor.TranslateString())
                                </div>
                                <div class="FieldValueConfig">
                                    @{
                                        var profileQuitColor = new TextBoxBuilderInfo()
                                        {
                                            Width = 70,
                                            Value = Model.ProfileQuitColor,
                                            Readonly = true
                                        };
                                    }
                                    @Html.VnrTextBoxFor(mode => mode.ProfileQuitColor, profileQuitColor)
                                    @(Html.Kendo().ColorPicker()
                                          .Name("ColorProfileQuit")
                                          .Value(!string.IsNullOrEmpty(Model.ProfileQuitColor) ? Model.ProfileQuitColor : "#22cc22")
                                          .Events(events => events
                                              .Select("pickerSelect")))
                                </div>
                            </div>
                            
                            <div class="DivContentTitleValue" id="dvProfileQuitBackGroundColor">
                                <div class="FieldTitleConfig300">
                                    @Html.VnrLabelIcon(ConstantDisplay.HRM_Hr_Hre_ProfileQuitBackGroundColor.TranslateString())
                                </div>
                                <div class="FieldValueConfig">
                                    @{
                                        var profileQuitBackGroundColor = new TextBoxBuilderInfo()
                                        {
                                            Width = 70,
                                            Value = Model.ProfileQuitBackGroundColor,
                                            Readonly = true
                                        };
                                    }
                                    @Html.VnrTextBoxFor(mode => mode.ProfileQuitBackGroundColor, profileQuitBackGroundColor)
                                    @(Html.Kendo().ColorPicker()
                                          .Name("ColorProfileBackgroundQuit")
                                          .Value(!string.IsNullOrEmpty(Model.ProfileQuitBackGroundColor) ? Model.ProfileQuitBackGroundColor : "#22cc22")
                                          .Events(events => events
                                              .Select("pickerSelectbg")))
                                </div>
                            </div>
                            
                            <div class="DivContentTitleValue" id="dvGenerateCodeContractFormular">
                                <div class="FieldTitleConfig300">
                                    @Html.VnrLabelIcon(ConstantDisplay.HRM_Hr_Hre_GenerateCodeContractFormular.TranslateString())
                                </div>
                                <div class="FieldValueConfig">
                                    @Html.VnrTextAreaFor(m => m.GenerateCodeContractFormular, "width:600px")
                                </div>
                            </div>

                            <div class="DivContentTitleValue" id="dvDefaultCurrency">
                                <div class="FieldTitleConfig300">
                                    @Html.VnrLabelIcon(ConstantDisplay.HRM_Hr_Hre_DefautCurrency.TranslateString())
                                </div>
                                <div class="FieldValueConfig">
                                   @Html.VnrTextBoxFor(model => model.DefautCurrency)
                                </div>
                            </div>

                            <div class="DivContentTitleValue" id="dvIsCheckDuplicateIDNo">
                                <div class="FieldTitleConfig300">
                                    @Html.VnrLabelIcon(ConstantDisplay.HRM_Hr_Hre_IsShowExConByConResult.TranslateString())
                                </div>
                                <div class="FieldValueConfig">
                                    @{

                                        var IsShowExConByConResult = new CheckBoxBuilderInfo()
                                        {
                                            Value = Model.IsShowExConByConResult == true ? true : false
                                        };
                                    }
                                    @Html.VnrCheckBoxFor(model => model.IsShowExConByConResult, IsShowExConByConResult)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="dvIsCheckDuplicateIDNo">
                                <div class="FieldTitleConfig300">
                                    @Html.VnrLabelIcon(ConstantDisplay.HRM_Hr_Hre_DaySuspenseExpiry.TranslateString())
                                </div>
                                <div class="FieldValueConfig">
                                    @{

                                        var _DaySuspenseExpiry = new NumericTextBoxBuilderInfo<int>()
                                        {
                                            //Value = Model.IsShowExConByConResult == true ? true : false
                                        };
                                    }
                                    @Html.VnrNumericTextBoxFor(model => model.DaySuspenseExpiry, _DaySuspenseExpiry)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="dvIsCheckDuplicateIDNo">
                                <div class="FieldTitleConfig300">
                                    @Html.VnrLabelIcon(ConstantDisplay.HRM_Hr_Hre_DayStopWorkingExpiry.TranslateString())
                                </div>
                                <div class="FieldValueConfig">
                                    @{

                                        var _DayStopWorkingExpiry = new NumericTextBoxBuilderInfo<int>()
                                        {
                                        };
                                    }
                                    @Html.VnrNumericTextBoxFor(model => model.DayStopWorkingExpiry, _DayStopWorkingExpiry)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="dvIsCheckDuplicateIDNo">
                                <div class="FieldTitleConfig300">
                                    @Html.VnrLabelIcon(ConstantDisplay.HRM_Hr_Hre_DayComeBackExpiry.TranslateString())
                                </div>
                                <div class="FieldValueConfig">
                                    @{

                                        var _DayComeBackExpiry = new NumericTextBoxBuilderInfo<int>()
                                        {
                                        };
                                    }
                                    @Html.VnrNumericTextBoxFor(model => model.DayComeBackExpiry, _DayComeBackExpiry)
                                </div>
                            </div>

                            <div class="DivContentTitleValue" id="dvIsCheckDuplicateRelatives">
                                <div class="FieldTitleConfig300">
                                    @Html.VnrLabelIcon(ConstantDisplay.HRM_Hr_Hre_IsInputGeneralCandidateManual.TranslateString())
                                </div>
                                <div class="FieldValueConfig">
                                    @{

                                        var IsInputGeneralCandidateManual = new CheckBoxBuilderInfo()
                                        {
                                            Value = Model.IsInputGeneralCandidateManual == true ? true : false
                                        };
                                    }
                                    @Html.VnrCheckBoxFor(model => model.IsInputGeneralCandidateManual, IsInputGeneralCandidateManual)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="dvIsCheckDuplicateRelatives">
                                <div class="FieldTitleConfig300">
                                    @Html.VnrLabelIcon(ConstantDisplay.HRM_Hr_Hre_IsUseCodeEmpOfCustomer.TranslateString())
                                </div>
                                <div class="FieldValueConfig">
                                    @{

                                        var IsUseCodeEmpOfCustomer = new CheckBoxBuilderInfo()
                                        {
                                            Value = Model.IsUseCodeEmpOfCustomer == true ? true : false
                                        };
                                    }
                                    @Html.VnrCheckBoxFor(model => model.IsUseCodeEmpOfCustomer, IsUseCodeEmpOfCustomer)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="dvIsCheckDuplicateRelatives">
                                <div class="FieldTitleConfig300">
                                    @Html.VnrLabelIcon(ConstantDisplay.HRM_Hr_Hre_IsAlertIfNumberOfEmpExceedPlan.TranslateString())
                                </div>
                                <div class="FieldValueConfig">
                                    @{
                                        var IsAlertIfNumberOfEmpExceedPlan = new CheckBoxBuilderInfo()
                                        {
                                            Value = Model.IsAlertIfNumberOfEmpExceedPlan == true ? true : false
                                        };
                                    }
                                    @Html.VnrCheckBoxFor(model => model.IsAlertIfNumberOfEmpExceedPlan, IsAlertIfNumberOfEmpExceedPlan)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="dvGenerateCodeContractFormular">
                                <div class="FieldTitleConfig300">
                                    @Html.VnrLabelIcon(ConstantDisplay.HRM_Hr_Hre_FieldValidateHireProfile.TranslateString())
                                </div>
                                <div class="FieldValueConfig">
                                    @Html.VnrTextAreaFor(m => m.FieldValidateHireProfile)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="dvIsCheckDuplicateRelatives">
                                <div class="FieldTitleConfig300">
                                    @Html.VnrLabelIcon(ConstantDisplay.HRM_Hr_Hre_IsNotUseExpiryContractLoop.TranslateString())
                                </div>
                                <div class="FieldValueConfig">
                                    @{

                                        var IsNotUseExpiryContractLoop = new CheckBoxBuilderInfo()
                                        {
                                            Value = Model.IsNotUseExpiryContractLoop == true ? true : false
                                        };
                                    }
                                    @Html.VnrCheckBoxFor(model => model.IsNotUseExpiryContractLoop, IsNotUseExpiryContractLoop)
                                </div>
                            </div>
                        </fieldset>
                    </div>
                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
        </tbody>
    </table>
</div>