@using HRM.Infrastructure.Utilities
@using HRM.Infrastructure.Utilities

@model HRM.Presentation.HrmSystem.Models.Sys_DynamicColumnModel
@using HRM.Presentation.UI.Controls.Kendo

@{
    ViewBag.Title = "InsertSysDynamicColumn";
}
@{
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Cat_Service = ConstantPathWeb.Hrm_Cat_Service;

    IList<SelectListItem> listStatus = Enum.GetValues(typeof(EnumDropDown.StatusDynamicColumn))
       .Cast<EnumDropDown.StatusDynamicColumn>()
       .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
       .ToList();
    IList<SelectListItem> listTableName = Enum.GetValues(typeof(EnumDropDown.TypeElement))
   .Cast<EnumDropDown.TypeElement>()
   .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
   .ToList();
    IList<SelectListItem> listDataType = Enum.GetValues(typeof(EnumDropDown.DataType))
  .Cast<EnumDropDown.DataType>()
  .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
  .ToList();

}

<div class="insert-SysDynamicColumn">
    <table style="width: 250%; text-align: center" align="center">
        <tr>
            <th>@Html.VnrLabelFor(mode => mode.ColumnName)</th>
            <td style="text-align:left;">@(Html.VnrTextBoxFor(model => model.ColumnName))</td>

        </tr>
        <tr>
            <th>@Html.VnrLabelFor(mode => mode.Code)</th>
            <td style ="text-align:left;">@(Html.VnrTextBoxFor(model => model.Code))</td>

        </tr>
        <tr>
            <th>@Html.VnrLabelFor(mode => mode.Status)</th>
            <td style="text-align:left;">
           
                @{
                    var dropdownStatus = new DropDownListBuilderInfo()
                    {
                        Name = "Status",
                        DataTextField = "Text",
                        DataValueField = "Value",
                        BindTo = listStatus
                    };
                }
                @(Html.VnrDropDownListFor(mode => mode.Status, dropdownStatus))
            </td>

        </tr>
        <tr>
            <th>@Html.VnrLabelFor(mode => mode.DataType)</th>
            <td style="text-align:left;">

                @*@(Html.Kendo().DropDownList()
                        .Name("DataType")
                .DataTextField("Text")
                .DataValueField("Value")
                        .BindTo(listDataType)
                .Events(e =>
                {
                    e.Change("ddlDataTypeChange");
                })
                )*@
                @{
                    var dropdownDataType = new DropDownListBuilderInfo()
                    {
                        Name = "DataType",
                        DataTextField = "Text",
                        DataValueField = "Value",
                        BindTo = listDataType,
                        EventChange = "ddlDataTypeChange"
                    };
                }
                @(Html.VnrDropDownListFor(mode => mode.DataType, dropdownDataType))
            </td>

        </tr>
        <tr>
            <th>@Html.VnrLabelFor(mode => mode.Length)</th>
            <td style="text-align:left;">               
                @{
                    var numericTextBoxLength = new NumericTextBoxBuilderInfo<int>()
                    {                        
                        //StyleCss = "width:170px;"
                        Name = "Length"
                    };
                }
                @Html.VnrNumericTextBoxFor(model => model.Length, numericTextBoxLength)
                @Html.ValidationMessageFor(model => model.Length)
            </td>

        </tr>
        <tr>
            <th>@Html.VnrLabelFor(mode => mode.TableName)</th>
            <td style="text-align:left;">
                @{
                    var dropdownTableName = new DropDownListBuilderInfo()
                    {
                        Name = "TableName",
                        DataTextField = "Text",
                        DataValueField = "Value",
                        BindTo = listTableName
                    };
                }
                @(Html.VnrDropDownListFor(mode => mode.TableName, dropdownTableName))
            </td>

        </tr>
        <tr>
            <th>@Html.VnrLabelFor(mode => mode.Comment)</th>
            <td style="text-align:left;">@(Html.VnrTextAreaFor(model => model.Comment))</td>

        </tr>
      
    </table>
</div>

