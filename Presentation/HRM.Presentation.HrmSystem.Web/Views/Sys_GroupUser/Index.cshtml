@using System.Web.Mvc.Html
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.HrmSystem.Models
@using HRM.Infrastructure.Utilities
@using HRM.Infrastructure.Security;

@model IEnumerable<Sys_GroupUserModel>
@{
    Layout = null;
    var hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var hrm_Sys_Web = ConstantPathWeb.Hrm_Sys_Web;
    var idUser = @Model.Select(m => m.UserID).FirstOrDefault();
    var userName = @Model.Select(m => m.UserName).FirstOrDefault();
}
@{
    var window = new WindowBuilderInfo
    {
        Name = "windowSysGroupUser",
        Visible = false,
        Title = "Thông tin nhóm người dùng",
        LoadContentFrom = @hrm_Sys_Web + "Sys_GroupUser/SysGroupUserInfo/",
    };
}
@(Html.VnrWindow(window))
@Html.Hidden("hdUserName", userName)
<script type="text/javascript">

    var checkedNodes = [];
    //Khởi tạo điều kiện tìm kiếm
    @*function filterFieldInfo() {
        return {
            UserID:'@Model.Select(m => m.UserID).FirstOrDefault()',
            UserName: $("#txtLoginName").val(),
            OrgStructures: checkedNodes,
            GroupID: $("#ddlGroup").val(),
    };
    }*@

    ////Xử lý sự kiện click button tìm kiếm
    //$(document).ready(function () {
    //    $("#btnSearch").click(function () {
    //        var treeView = $("#treeviewOrg").data("kendoTreeView");
    //        checkedNodeIds(treeView.dataSource.view(), checkedNodes);
    //        ReadGrid("GroupUser");
    //        checkedNodes = [];
    //    });
    //});


    $("#btnCreate").click(function () {
        var isAccess =
            (PrivilegeType.Create, '@ConstantPermission.Sys_GroupUser');
        if (!isAccess) {
            return;
        }
        PopUpCreate("windowSysGroupUser");
        @*var treeView = $("#treeviewOrg").data("kendoTreeView");
        checkedNodeIds(treeView.dataSource.view(), checkedNodes);
        var urlPost = '@hrm_Sys_Service' + "api/Sys_GroupUser/";
        $.ajax({
            url: urlPost,
            data: filterFieldInfo(),
            type: 'POST',
            success: function (data) {
                ReadGrid("GroupUser");
                checkedNodes = [];
            },
            error: function (data) {
                alert('error');
            }
        });*@
    });

    function onEditSysGroupUser(e) {
        var isAccess =
            (PrivilegeType.Modify, '@ConstantPermission.Sys_GroupUser');
        if (!isAccess) {
            return;
        }
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var url = '@hrm_Sys_Web' + "Sys_GroupUser/SysGroupUserInfo/";
        PopUpEdit("windowSysGroupUser", url, dataItem.Id);
    }
    function checkedNodeIds(nodes, checkedNodes) {
        for (var i = 0; i < nodes.length; i++) {
            if (nodes[i].checked) {
                checkedNodes.push(nodes[i].id);
            }
            if (nodes[i].hasChildren) {
                checkedNodeIds(nodes[i].children.view(), checkedNodes);
            }
        }
    }
</script>
<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
           
            @*<form action="#" method="POST" id="form-search">
                <div class="contendSearchWidge">
                    <div id="div2">
                        <div class="FieldTitle">
                            @Html.VnrLabel("Tên đăng nhập")
                        </div>
                        <div class="FieldValue">
                            @Html.TextBox("txtLoginName", Model.Select(m => m.UserName).FirstOrDefault(), new { @class = "k-textbox", @readonly = "readonly" })
                        </div>
                    </div>
                    <div id="div2">
                        <div class="FieldTitle">
                           @Html.VnrLabel("Nhóm quyền")
                        </div>
                        <div class="FieldValue">
                           @{
                               var groupName = new DropDownListBuilderInfo()
                                {
                                    Name = "ddlGroup",
                                    DataTextField = "GroupName",
                                    DataValueField = "Id",
                                    Url = @hrm_Sys_Service + "Sys_GetData/GetGroup",
                                };
                            }
                            @Html.VnrDropDownList(groupName)
                        </div>
                    </div>
                    <div id="div2">
                        <div class="FieldTitle">
                            @Html.VnrLabel("Phòng ban")
                        </div>
                        <div class="FieldValue">
                            @Html.Partial("EditorTemplates/OrgStructureTreeView")
                        </div>
                    </div>
                </div>
            </form>*@
</div>
    </div>
</div>
<div class="commandToolBarWidge">
@Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreate", Content = ConstantAction.HRM_Common_Create.TranslateString(), SpriteCssClass = "k-icon k-i-plus" })
@*@Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), SpriteCssClass = "k-icon k-i-search" })*@
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @{
        string[] valueFields = new string[] 
        { 
            Sys_GroupUserModel.FieldNames.UserName,
            Sys_GroupUserModel.FieldNames.GroupName,
            Sys_GroupUserModel.FieldNames.OrgStructuresName,
            Sys_GroupUserModel.FieldNames.Note, 
        };
        Dictionary<string, int> sizeFields = new Dictionary<string, int>()
        {
            {Sys_GroupUserModel.FieldNames.UserName, 150},
            {Sys_GroupUserModel.FieldNames.GroupName, 250},
            {Sys_GroupUserModel.FieldNames.OrgStructuresName, 250},
            {Sys_GroupUserModel.FieldNames.Note, 350},
        };

        Dictionary<string, string> displayFields = new Dictionary<string, string>()
        {
            {Sys_GroupUserModel.FieldNames.UserName, ConstantDisplay.HRM_System_GroupUser_UserID},
            {Sys_GroupUserModel.FieldNames.GroupName, ConstantDisplay.HRM_System_GroupUser_GroupID},
            {Sys_GroupUserModel.FieldNames.OrgStructuresName, "Phòng ban"},
            {Sys_GroupUserModel.FieldNames.Note, ConstantDisplay.HRM_System_GroupUser_Note},
        };
        var grid = new GridBuilderInfo
        {
            Name = "GroupUser",
            ValueFields = valueFields,
            ShowCommand = true,
            ShowEditButton = true,
            ShowDeleteButton = true,
            ShowCreateButton = true,
            DeleteActionUrl = @hrm_Sys_Web + "/Sys_GroupUser/Delete/",
            AutoBind = true,
            EventCustomEdit = "onEditSysGroupUser",
            ReadActionUrl = hrm_Sys_Web + "Sys_GroupUser/ReadGrid/" + idUser,
            SizeFields = sizeFields,
            DisplayFields = displayFields,
            ReadData = "filterFieldInfo"
        };

    }

    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<Sys_GroupUserModel>(grid))
</div>

