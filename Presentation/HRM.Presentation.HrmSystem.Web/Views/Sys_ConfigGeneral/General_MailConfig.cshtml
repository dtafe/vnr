@using HRM.Infrastructure.Utilities;
@using HRM.Presentation.UI.Controls.Kendo;
@using HRM.Presentation.HrmSystem.Models;

@model  HRM.Presentation.HrmSystem.Models.Sys_GeneralConfigModel
@{
    Layout = null;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_sys_web = ConstantPathWeb.Hrm_Sys_Web;
}

<script type="text/javascript">
    $(document).ready(function () {
        debugger;
        // create ComboBox from select HTML element
        $("#organizationType").kendoComboBox({
            dataTextField: "text",
            dataValueField: "value",
            dataSource: [
                { text: "Gmail", value: "1" },
                { text: "Other", value: "2" }
            ],
            placeholder: '@ConstantDisplay.HRM_General_Mail_ChooseOrganizationType.TranslateString()',
            select: onSelect
        });
       
    });

    $("#CheckEmailConnect").click(function () {
        var mailHost = $("#MailServer").val();
        var mailPort = $("#Port").val();
        var mailUserName = $("#MailUserName").val();
        var mailPassword = $("#MailPassword").val();
        var mailTest = $("#EmailTest").val();
        var isSSL = $("#SSL").is(":checked");
        $.ajax({
            url: '@_hrm_sys_web' + "Sys_ConfigGeneral/CheckMailServer",
            type: "POST",
            async: false,
            dataType: "json",
            data: { Host: mailHost, Port:mailPort ,MailFrom:mailUserName ,MailUserName: mailUserName, MailPassword: mailPassword, EmailTest: mailTest, IsSSL: isSSL },
            success: function (data) {
                debugger;
                if (data == true) {
                    ShowNotificationProcessor("Kiểm Tra Việc Gởi Mail Thành Công");
                } else {
                    ShowNotificationProcessor("Kiểm Tra Việc Gởi Mail Thất Bại ! Vui Lòng Kiểm Tra Lại Thông Tin Máy Chủ");
                }
            }
        });
    });


    function onSelect(e) {
        var dataItem = this.dataItem(e.item.index());
        if (dataItem.text == 'Other') {
            $("#dvOther").show();
            $("#MailServer").val("");
        }
        else {
            $("#dvOther").hide();
            $("#MailServer").val("smtp.gmail.com");
        }
    };
</script>


<div class="VnRMain">
    <table style="width: 100%;">
        <tbody>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                <td valign="top" style="background-color: #ffffff;">
                    <div style="display:block; padding-top:10px;">

                        <fieldset>
                            <legend>
                                @ConstantDisplay.HRM_System_ConfigMail.TranslateString()
                            </legend>

                            <div class="DivContentTitleValue" id="dvMailServer">
                                <div class="FieldTitleConfig200">
                                    @Html.VnrLabelIcon(ConstantDisplay.HRM_General_Mail_OrganizationType.TranslateString(), ConstantDisplay.HRM_General_Mail_Desc_OrganizationType.TranslateString())
                                </div>
                                <div class="FieldValueConfig">
                                    <input id="organizationType" style="width:200px;" />
                                </div>
                            </div>

                            <div class="DivContentTitleValue" id="dvMailServer">
                                <div class="FieldTitleConfig200">
                                    @Html.VnrLabelIconFor(p => p.MailServer)
                                </div>
                                <div class="FieldValueConfig">
                                    @Html.VnrTextBoxFor(model => model.MailServer)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="dvPort">
                                <div class="FieldTitleConfig200">
                                    @Html.VnrLabelIconFor(p => p.Port)
                                </div>
                                <div class="FieldValueConfig">
                                    @{
                                        var port = new TextBoxBuilderInfo
                                        {
                                            Value ="587"
                                        };
                                    }
                                    @Html.VnrTextBoxFor(model => model.Port,port)
                                </div>
                            </div>

                            <div class="DivContentTitleValue" id="dvMailUserName">
                                <div class="FieldTitleConfig200">
                                    @Html.VnrLabelIconFor(p => p.MailUserName)
                                </div>
                                <div class="FieldValueConfig">
                                    @Html.VnrTextBoxFor(model => model.MailUserName)
                                </div>
                            </div>

                            <div class="DivContentTitleValue" id="dvMailPassword">
                                <div class="FieldTitleConfig200">
                                    @Html.VnrLabelIconFor(p => p.MailPassword)
                                </div>
                                <div class="FieldValueConfig">
                                    @Html.VnrPasswordFor(model => model.MailPassword)
                                </div>
                            </div>

                            <div class="DivContentTitleValue" id="dvMailUserName">
                                <div class="FieldTitleConfig200">
                                    @Html.VnrLabelIconFor(p => p.EmailTest)
                                </div>
                                <div class="FieldValueConfig">
                                    @Html.VnrTextBoxFor(model => model.EmailTest)
                                </div>
                            </div>

                            <div id="dvCheckEmailConnect">
                                <div class="FieldTitle200">
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrButton(new ButtonBuilderInfo() { Name = "CheckEmailConnect", Content = ConstantDisplay.HRM_System_CheckSendMail.TranslateString(), ImageUrl = ConstantPath.IconCheckConnect })
                                </div>
                            </div>
                            

                            <div id="dvTLS">
                                <div class="FieldTitleConfig200">
                                    @Html.VnrLabelIcon(ConstantDisplay.HRM_General_Mail_SSL.TranslateString(), ConstantDisplay.HRM_General_Mail_Desc_SSL.TranslateString())
                                </div>
                                <div class="FieldValueConfig">
                                    <div>
                                        @{
                                                var allowSSL = new CheckBoxBuilderInfo()
                                                {
                                                    Value = Model.SSL == true ? true : false
                                                };
                                        }
                                        @Html.VnrCheckBoxFor(model => model.SSL, allowSSL)
                                    </div>

                                </div>
                            </div>

                            <div id="dvOther">
                                <div id="dvImap">
                                    <div class="FieldTitleConfig200">
                                        @Html.VnrLabelIcon(ConstantDisplay.HRM_General_Mail_IMAPOption.TranslateString(), ConstantDisplay.HRM_General_Mail_Desc_IMAPOption.TranslateString())
                                    </div>
                                    <div class="FieldValueConfig">
                                        <div>
                                            @{
                                                var allowIMAP2 = new CheckBoxBuilderInfo()
                                                {
                                                    Value = Model.IMAP2 == true ? true : false
                                                };
                                            }
                                            @Html.VnrCheckBoxFor(model => model.IMAP2, allowIMAP2)
                                            @Html.VnrLabelFor(p => p.IMAP2)

                                            @{

                                                var allowIMAP4 = new CheckBoxBuilderInfo()
                                                {
                                                    Value = Model.IMAP4 == true ? true : false
                                                };
                                            }
                                            @Html.VnrCheckBoxFor(model => model.IMAP4, allowIMAP4)
                                            @Html.VnrLabelFor(p => p.IMAP4)
                                        </div>

                                    </div>
                                </div>

                                <div id="dvTLS">
                                    <div class="FieldTitleConfig200">
                                        @Html.VnrLabelIcon(ConstantDisplay.HRM_General_Mail_TLSOption.TranslateString(), ConstantDisplay.HRM_General_Mail_Desc_TLSOption.TranslateString())
                                    </div>
                                    <div class="FieldValueConfig">
                                        <div>
                                            @{
                                                var allowNoTLS = new CheckBoxBuilderInfo()
                                                {
                                                    Value = Model.NoTLS == true ? true : false
                                                };
                                            }
                                            @Html.VnrCheckBoxFor(model => model.NoTLS, allowNoTLS)
                                            @Html.VnrLabelFor(p => p.NoTLS)

                                            @{
                                                var allowTLS = new CheckBoxBuilderInfo()
                                                {
                                                    Value = Model.TLS == true ? true : false
                                                };
                                            }
                                            @Html.VnrCheckBoxFor(model => model.TLS, allowTLS)
                                            @Html.VnrLabelFor(p => p.TLS)
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </fieldset>

                        <div style="margin-top:15px;">
                            <fieldset>
                                <legend>
                                    @ConstantDisplay.HRM_Category_ExportExcel.TranslateString()
                                </legend>

                                <div class="DivContentTitleValue" id="dvMailServer">
                                    <div class="FieldTitleConfig200">
                                        @Html.VnrLabelIconFor(p => p.ExcelPasswordReadonly)
                                    </div>
                                    <div class="FieldValueConfig">
                                        @Html.VnrTextBoxFor(model => model.ExcelPasswordReadonly)
                                    </div>
                                </div>

                                <div class="DivContentTitleValue" id="dvMailServer">
                                    <div class="FieldTitleConfig200">
                                        @Html.VnrLabelIconFor(p => p.ExcelPasswordOpenFile)
                                    </div>
                                    <div class="FieldValueConfig">
                                        @Html.VnrTextBoxFor(model => model.ExcelPasswordOpenFile)
                                    </div>
                                </div>
                            </fieldset>
                        </div>


                        <div style="margin-top:15px;">
                            <fieldset>
                                <legend>
                                    @ConstantDisplay.HRM_System_ConfigGeneral.TranslateString()
                                </legend>

                                <div class="DivContentTitleValue" id="dvMailServer">
                                    <div class="FieldTitleConfig200">
                                        @Html.VnrLabelIconFor(p => p.DefaultApproved)
                                    </div>
                                    <div class="FieldValueConfig">
                                        @{
                                            var allowDefaultApproved = new CheckBoxBuilderInfo()
                                            {
                                                Value = Model.DefaultApproved == true ? true : false
                                            };
                                        }
                                        @Html.VnrCheckBoxFor(model => model.DefaultApproved, allowDefaultApproved)
                                    </div>
                                </div>
                                <div class="DivContentTitleValue" id="dvMailServer">
                                    <div class="FieldTitleConfig200">
                                        @Html.VnrLabelIconFor(model=>model.DayEndFinance)
                                    </div>
                                    <div class="FieldValueConfig">
                                        @{
                                            var _DayEndFinance = new DatePickerBuilderInfo()
                                            {
                                                Format = ConstantFormat.HRM_Format_DayMonth,
                                                StyleCss="width:120px"
                                            };
                                        }
                                        @Html.VnrDatePickerFor(model => model.DayEndFinance, _DayEndFinance).Format(ConstantFormat.HRM_Format_DayMonth)
                                    </div>
                                </div>
                            </fieldset>
                        </div>

                    </div>
                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
        </tbody>
    </table>
</div>