@using HRM.Infrastructure.Utilities;
@using HRM.Presentation.UI.Controls.Kendo;
@using HRM.Presentation.HrmSystem.Models;

@model  HRM.Presentation.HrmSystem.Models.Sys_AttConfigModel
@{
    ViewBag.Title = "Overtime";
    Layout = null;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;

    IList<SelectListItem> listMissTAM_LeaveType = Enum.GetValues(typeof(EnumDropDown.MissTAM_LeaveType))
      .Cast<EnumDropDown.MissTAM_LeaveType>()
      .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
      .ToList();

    IList<SelectListItem> listOverTimeStatus = Enum.GetValues(typeof(EnumDropDown.OverTimeStatus))
    .Cast<EnumDropDown.OverTimeStatus>()
    .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
    .ToList();

    IList<SelectListItem> listConfigNightShift = Enum.GetValues(typeof(EnumDropDown.ConfigNightShift))
   .Cast<EnumDropDown.ConfigNightShift>()
   .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
   .ToList();

    var _NumericTextBoxBuilder = new NumericTextBoxBuilderInfo<int>()
    {
        Format = ConstantFormat.HRM_Format_Number_Integer.ToString(),
        StyleCss = "width:70px"
    };
   
}
<script>
    $(document).ready(function () {
        $('input[type=checkbox]').change(function () {
            if ($(this).is(':checked')) {
                $(this).val('true');
            } else {
                $(this).val('false');
            }
        });

    });
</script>
    <div class="VnRMain">
    <table style="width: 100%;">
        <tbody>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                <td valign="top" style="background-color: #ffffff;">
                    <div style="display:block; padding-top:10px;">
                        <fieldset>
                            <legend>
                                @ConstantDisplay.HRM_Att_Overtime.TranslateString()
                            </legend>
                            <div style="float:left; width:100%">
                                <div style="float:left;">
                                    <div class="DivContentTitleValue" id="dvNotAutoRegisterHolidayLeave">
                                        <div class="FieldTitleConfig300">
                                            @Html.VnrLabelIconFor(m => m.NotAutoRegisterHolidayLeave)
                                        </div>
                                        <div class="FieldValueConfig">
                                            @{
                                                var _NotAutoRegisterHolidayLeave = new CheckBoxBuilderInfo() { Value = Model.NotAutoRegisterHolidayLeave == true ? true : false };
                                            }
                                            @Html.VnrCheckBoxFor(model => model.NotAutoRegisterHolidayLeave, _NotAutoRegisterHolidayLeave)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div style="float:left; width:100%">
                                <div style="float:left;">
                                    <div class="DivContentTitleValue" id="dvHolidaysCompute400">
                                            <div class="FieldTitleConfig300">
                                            @Html.VnrLabelIconFor(m => m.HolidaysCompute400)
                                        </div>
                                        <div class="FieldValueConfig">
                                            @{
                                                var _HolidaysCompute400 = new CheckBoxBuilderInfo() { Value = Model.HolidaysCompute400 == true ? true : false };
                                            }
                                            @Html.VnrCheckBoxFor(model => model.HolidaysCompute400, _HolidaysCompute400)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div style="float:left; width:100%">
                                <div style="float:left;">
                                    <div class="DivContentTitleValue" id="dvMisstamLeaveType">
                                            <div class="FieldTitleConfig300">
                                            @Html.VnrLabelIconFor(m => m.MisstamLeaveType)
                                        </div>
                                        <div class="FieldValueConfig">
                                            @{
                                                var ddlMisstamLeaveType = new DropDownListBuilderInfo()
                                                {
                                                    DataTextField = "Text",
                                                    DataValueField = "Value",
                                                    BindTo = listMissTAM_LeaveType,
                                                    Value = Model.MisstamLeaveType,
                                                    //EventChange = "selectTypeLoadData"
                                                };
                                            }
                                            @Html.VnrDropDownListFor(model => model.MisstamLeaveType, ddlMisstamLeaveType)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div style="float:left; width:100%">
                                <div style="float:left;">
                                    <div class="DivContentTitleValue" id="dvIsAllowAddHourWhenOtThanTwoHour">
                                            <div class="FieldTitleConfig300">
                                            @Html.VnrLabelIconFor(m => m.IsAllowAddHourWhenOtThanTwoHour)
                                        </div>
                                        <div class="FieldValueConfig">
                                            @{
                                                var _IsAllowAddHourWhenOtThanTwoHour = new CheckBoxBuilderInfo() { Value = Model.IsAllowAddHourWhenOtThanTwoHour == true ? true : false };
                                            }
                                            @Html.VnrCheckBoxFor(model => model.IsAllowAddHourWhenOtThanTwoHour, _IsAllowAddHourWhenOtThanTwoHour)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div style="float:left; width:100%">
                                <div style="float:left;">
                                    <div class="DivContentTitleValue" id="dvDoNotSplitOtBreaktime">
                                            <div class="FieldTitleConfig300">
                                            @Html.VnrLabelIconFor(m => m.DoNotSplitOtBreaktime)
                                        </div>
                                        <div class="FieldValueConfig">
                                            @{
                                                var _DoNotSplitOtBreaktime = new CheckBoxBuilderInfo() { Value = Model.DoNotSplitOtBreaktime == true ? true : false };
                                            }
                                            @Html.VnrCheckBoxFor(model => model.DoNotSplitOtBreaktime, _DoNotSplitOtBreaktime)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div style="float:left; width:100%">
                                <div style="float:left;">
                                    <div class="DivContentTitleValue" id="dvDoNotApproveOTMySeft">
                                            <div class="FieldTitleConfig300">
                                            @Html.VnrLabelIconFor(m => m.DoNotApproveOTMySeft)
                                        </div>
                                        <div class="FieldValueConfig">
                                            @{
                                                var _DoNotApproveOTMySeft = new CheckBoxBuilderInfo() { Value = Model.DoNotApproveOTMySeft == true ? true : false };
                                            }
                                            @Html.VnrCheckBoxFor(model => model.DoNotApproveOTMySeft, _DoNotApproveOTMySeft)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div style="float:left; width:100%">
                                <div style="float:left;">
                                    <div class="DivContentTitleValue" id="dvAllowRegisterOtWhenInmaternityregime">
                                            <div class="FieldTitleConfig300">
                                            @Html.VnrLabelIconFor(m => m.AllowRegisterOtWhenInmaternityregime)
                                        </div>
                                        <div class="FieldValueConfig">
                                            @{
                                                var _AllowRegisterOtWhenInmaternityregime = new CheckBoxBuilderInfo() { Value = Model.AllowRegisterOtWhenInmaternityregime == true ? true : false };
                                            }
                                            @Html.VnrCheckBoxFor(model => model.AllowRegisterOtWhenInmaternityregime, _AllowRegisterOtWhenInmaternityregime)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div style="float:left; width:100%">
                                <div style="float:left;">
                                    <div class="DivContentTitleValue" id="dvNoCutOvertimePassday">
                                            <div class="FieldTitleConfig300">
                                            @Html.VnrLabelIconFor(m => m.NoCutOvertimePassday)
                                        </div>
                                        <div class="FieldValueConfig">
                                            @{
                                                var _NoCutOvertimePassday = new CheckBoxBuilderInfo() { Value = Model.NoCutOvertimePassday == true ? true : false };
                                            }
                                            @Html.VnrCheckBoxFor(model => model.NoCutOvertimePassday, _NoCutOvertimePassday)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div style="float:left; width:100%">
                                <div style="float:left;">
                                    <div class="DivContentTitleValue" id="dvByperiodOfTime">
                                            <div class="FieldTitleConfig300">
                                            @Html.VnrLabelIconFor(m => m.ByperiodOfTime)
                                        </div>
                                        <div class="FieldValueConfig">
                                            @{
                                                var ddlConfigNightShift = new DropDownListBuilderInfo()
                                                {
                                                    DataTextField = "Text",
                                                    DataValueField = "Value",
                                                    BindTo = listConfigNightShift,
                                                    Value = Model.ByperiodOfTime,
                                                    //EventChange = "selectTypeLoadData"
                                                };
                                            }
                                            @Html.VnrDropDownListFor(model => model.ByperiodOfTime, ddlConfigNightShift)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div style="float:left; width:100%">
                                <div style="float:left;">
                                    <div class="DivContentTitleValue" id="dvNightShiftFrom">
                                            <div class="FieldTitleConfig300">
                                            @Html.VnrLabelIconFor(m => m.NightShiftFrom)
                                        </div>
                                        <div class="FieldValueConfig">
                                            @{
                                                var _NightShiftFrom = new TimePickerBuilderInfo()
                                                {
                                                    StyleCss = "width: 90px;",
                                                };
                                            }
                                            @Html.VnrTimePickerFor(mode => mode.NightShiftFrom, _NightShiftFrom)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div style="float:left; width:100%">
                                <div style="float:left;">
                                    <div class="DivContentTitleValue" id="dvNightShiftTo">
                                            <div class="FieldTitleConfig300">
                                            @Html.VnrLabelIconFor(m => m.NightShiftTo)
                                        </div>
                                        <div class="FieldValueConfig">
                                            @{
                                                var _NightShiftTo = new TimePickerBuilderInfo()
                                                {
                                                    StyleCss = "width: 90px;",
                                                };
                                            }
                                            @Html.VnrTimePickerFor(mode => mode.NightShiftTo, _NightShiftTo)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div style="float:left; width:100%">
                                <div style="float:left;">
                                    <div class="DivContentTitleValue" id="dvOverTimeStatus">
                                            <div class="FieldTitleConfig300">
                                            @Html.VnrLabelIconFor(m => m.OverTimeStatus)
                                        </div>
                                        <div class="FieldValueConfig">
                                            @{
                                                var ddlOverTimeStatus = new DropDownListBuilderInfo()
                                                {
                                                    DataTextField = "Text",
                                                    DataValueField = "Value",
                                                    BindTo = listOverTimeStatus,
                                                    Value = Model.OverTimeStatus
                                                };
                                            }
                                            @Html.VnrDropDownListFor(model => model.OverTimeStatus, ddlOverTimeStatus)
                                        </div>
                                    </div>
                                    
                                    <div class="DivContentTitleValue" id="dvAllowSaveDuplicate">
                                            <div class="FieldTitleConfig300">
                                            @Html.VnrLabelIconFor(m => m.AllowSaveDuplicate)
                                        </div>
                                        <div class="FieldValueConfig">
                                            @{
                                                var _allowSaveDuplicate = new CheckBoxBuilderInfo() { Value = Model.AllowSaveDuplicate == true ? true : false };
                                            }
                                            @Html.VnrCheckBoxFor(model => model.AllowSaveDuplicate, _allowSaveDuplicate)
                                        </div>
                                    </div>

                                    <div class="DivContentTitleValue" id="dvAllowSaveDuplicate">
                                        <div class="FieldTitleConfig300">
                                            @Html.VnrLabelIconFor(m => m.NumberLeaveApproveOverTime)
                                        </div>
                                        <div class="FieldValueConfig">
                                            @Html.VnrNumericTextBoxFor(m => m.NumberLeaveApproveOverTime, _NumericTextBoxBuilder)
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </fieldset>
                    </div>
                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
        </tbody>
    </table>
</div>