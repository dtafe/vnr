@using System.Collections
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@model HRM.Presentation.HrmSystem.Models.Sys_ConditionApprovedModel

@{
    ViewBag.Title = "Sys_ConditionApproved";
    Layout = null;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var ConditionApprovedId = Model == null ? Guid.Empty : Model.ID;
    var formName = "form_cat_sysConditionApproved";
    var gridName = "gridConditionApproved";
    var windowName = "windowSysConditionApproved";

    IList<SelectListItem> lstExpensesType = Enum.GetValues(typeof(ExpensesType))
    .Cast<ExpensesType>()
    .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) }).OrderBy(p=>p.Text)
    .ToList();

    IList<SelectListItem> lstApproveType = Enum.GetValues(typeof(ApproveType))
    .Cast<ApproveType>()
    .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) }).OrderBy(p=>p.Text)
    .ToList();


}

<script>
    var data = SetCharacteFieldRequired();
    var formName = '@formName';
    var gridName = '@gridName';
    var windowName = '@windowName';


    function onSave() {
        onlySave($('#' + formName), '@_hrm_Sys_Service', 'api/Sys_ConditionApproved/', gridName, windowName); return false;
    }

    function onSaveDataPopUp() {
        onSaveAndContinue($('#' + formName), '@_hrm_Sys_Service', 'api/Sys_ConditionApproved/', gridName, windowName); return false;
    }

    function onSaveClose() {
        onSaveAndClose($('#' + formName), '@_hrm_Sys_Service', 'api/Sys_ConditionApproved/', gridName, windowName); return false;
    }

</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = formName }))
{
    @Html.HiddenFor(model => model.ID)

    <table>
        <tr>
            <td>
                <div>

                    <div style="width: 400px; float: left; display: inline; ">
                        <div class="div2">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.ConditionName)
                            </div>
                            <div class="FieldValue">
                                @(Html.VnrTextBoxFor(mode => mode.ConditionName))
                            </div>
                        </div>                        
                        <div class="div4">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.ApprovedType)
                            </div>
                            <div class="FieldValue">
                                @{
    var dropApprovedType = new ComboBoxBuilderInfo()
    {
        Name = "SysConditionApprovedInfo_ApprovedType",
        DataTextField = "Text",
        DataValueField = "Value",
        BindTo = lstApproveType,
        Placeholder = ConstantDisplay.HRM_System_UserApprove_SelectType.TranslateString(),
        StyleCss = "width:200px;"
    };
                                }
                                @(Html.VnrComboBoxFor(mode => mode.ApprovedType, dropApprovedType))
                            </div>
                        </div>
                        <div class="div5">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.ExpensesType)
                            </div>
                            <div class="FieldValue">
                                @{
    var dropExpensesType = new ComboBoxBuilderInfo()
    {
        Name = "SysConditionApprovedInfo_ExpensesType",
        DataTextField = "Text",
        DataValueField = "Value",
        BindTo = lstExpensesType,
        Placeholder = ConstantDisplay.HRM_System_UserApprove_SelectType.TranslateString(),
        StyleCss = "width:200px;"
    };
                                }
                                @(Html.VnrComboBoxFor(mode => mode.ExpensesType, dropExpensesType))
                            </div>
                        </div>
                        <div class="div6">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.JobTitleID)
                            </div>
                            <div class="FieldValue">

                                @{
    var dropJobTitle = new ComboBoxBuilderInfo()
    {
        DataTextField = "JobTitleName",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiJobTitle",
        Placeholder = ConstantDisplay.HRM_Category_SelectJobTitle.TranslateString(),
        StyleCss = "width:200px;"
    };
    if (Model != null && Model.JobTitleID != null)
    {
        dropJobTitle.Autobind = true;
    }
                                }
                                @(Html.VnrComboBoxFor(mode => mode.JobTitleID, dropJobTitle))
                            </div>
                        </div>
                        <div class="div7">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.PositionID)
                            </div>
                            <div class="FieldValue">
                                @{
    var dropPosition = new ComboBoxBuilderInfo()
    {
        DataTextField = "PositionName",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiPosition",
        Placeholder = ConstantDisplay.HRM_Category_SelectPosition.TranslateString(),
        StyleCss = "width:200px;"
    };
    if (Model != null && Model.PositionID != null)
    {
        dropPosition.Autobind = true;
    }
                                }
                                @(Html.VnrComboBoxFor(mode => mode.PositionID, dropPosition))
                            </div>
                        </div>
                        <div class="div8">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.WorkPlaceID)
                            </div>
                            <div class="FieldValue">
                                @{
    var dropWorkPlace = new ComboBoxBuilderInfo()
    {
        DataTextField = "WorkPlaceName",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiWorkPlace",
        Placeholder = ConstantDisplay.HRM_Category_SelectWorkPlace.TranslateString(),
        StyleCss = "width:200px;"
    };
    if (Model != null && Model.WorkPlaceID != null)
    {
        dropWorkPlace.Autobind = true;
    }
                                }
                                @(Html.VnrComboBoxFor(mode => mode.WorkPlaceID, dropWorkPlace))
                            </div>
                        </div>
                        <div class="div9">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.ProcessApprovedID)
                            </div>
                            <div class="FieldValue">
                                @{
    var _ProcessApproved = new ComboBoxBuilderInfo()
    {
        DataTextField = "ProcessName",
        DataValueField = "ID",
        Url = _hrm_Sys_Service + "Sys_GetData/GetMultiProcessApproved",
        StyleCss = "width:200px;"
    };
    if (Model != null && Model.ProcessApprovedID != null)
    {
        _ProcessApproved.Autobind = true;
    }
                                }
                                @(Html.VnrComboBoxFor(mode => mode.ProcessApprovedID, _ProcessApproved))
                            </div>
                        </div>

                    </div>
                    <div style="width: 480px; float: right; display: inline;">
                        <div class="div11">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.OrgID1)
                            </div>
                            <div class="FieldValue">
                                <script>
                                function filter_E_COMPANY() {
                                    return {
                                        text: '1'
                                            + "||" + $("#OrgID1").data("kendoComboBox").input.val()
                                    };
                                }
                                </script>
                                @{
    var dropOrg1 = new ComboBoxBuilderInfo()
    {
        DataTextField = "Code",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiOrgStructure_Cascading",
        Placeholder = ConstantDisplay.HRM_Category_SelectOrgStructure.TranslateString(),
        StyleCss = "width:200px;",
        ServerFilter = true,
        FilterType = FilterType.Contains,
        Data = "filter_E_COMPANY",
    };
    if (Model != null && Model.OrgID1 != null)
    {
        dropOrg1.Autobind = true;
    }
                                }
                                @(Html.VnrComboBoxFor(mode => mode.OrgID1, dropOrg1))
                            </div>
                        </div>
                        <div class="div12">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.OrgID2)
                            </div>
                            <div class="FieldValue">
                                <script>
                                function filter_OrgID2() {
                                    return {
                                        text: "2|" + $("#OrgID1").val()
                                            + "|" + $("#OrgID2").data("kendoComboBox").input.val()
                                    };
                                }
                                </script>

                                @{
    var dropOrg2 = new ComboBoxBuilderInfo()
    {
        DataTextField = "Code",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiOrgStructure_Cascading",
        Placeholder = ConstantDisplay.HRM_Category_SelectOrgStructure.TranslateString(),
        ServerFilter = true,
        FilterType = FilterType.Contains,
        CascadeFrom = "OrgID1",
        Data = "filter_OrgID2",
        StyleCss = "width:200px;"
    };
    if (Model != null && Model.OrgID2 != null)
    {
        dropOrg2.Autobind = true;
    }
                                }
                                @(Html.VnrComboBoxFor(mode => mode.OrgID2, dropOrg2))
                            </div>
                        </div>
                        <div class="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.OrgID3)
                            </div>
                            <div class="FieldValue">
                                <script>
                                function filter_OrgID3() {
                                    return {
                                        text: "|" + $("#OrgID2").val()
                                            + "|" + $("#OrgID3").data("kendoComboBox").input.val()
                                    };
                                }
                                </script>


                                @{
    var dropOrg3 = new ComboBoxBuilderInfo()
    {
        DataTextField = "Code",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiOrgStructure_Cascading",
        Placeholder = ConstantDisplay.HRM_Category_SelectOrgStructure.TranslateString(),
        ServerFilter = true,
        FilterType = FilterType.Contains,
        CascadeFrom = "OrgID2",
        Data = "filter_OrgID3",
        StyleCss = "width:200px;"
    };
    if (Model != null && Model.OrgID3 != null)
    {
        dropOrg3.Autobind = true;
    }
                                }
                                @(Html.VnrComboBoxFor(mode => mode.OrgID3, dropOrg3))
                            </div>
                        </div>
                        <div class="div14">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.OrgID4)
                            </div>
                            <div class="FieldValue">
                                <script>
                                function filter_OrgID4() {
                                    return {
                                        text: "|" + $("#OrgID3").val()
                                            + "|" + $("#OrgID4").data("kendoComboBox").input.val()
                                    };
                                }
                                </script>
                                @{
    var dropOrg4 = new ComboBoxBuilderInfo()
    {
        DataTextField = "Code",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiOrgStructure_Cascading",
        Placeholder = ConstantDisplay.HRM_Category_SelectOrgStructure.TranslateString(),
        ServerFilter = true,
        FilterType = FilterType.Contains,
        CascadeFrom = "OrgID3",
        Data = "filter_OrgID4",
        StyleCss = "width:200px;"
    };
    if (Model != null && Model.OrgID4 != null)
    {
        dropOrg4.Autobind = true;
    }
                                }
                                @(Html.VnrComboBoxFor(mode => mode.OrgID4, dropOrg4))
                            </div>
                        </div>
                        <div class="div15">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.OrgID5)
                            </div>
                            <div class="FieldValue">
                                <script>
                                function filter_OrgID5() {
                                    return {
                                        text: "|" + $("#OrgID4").val()
                                            + "|" + $("#OrgID5").data("kendoComboBox").input.val()
                                    };
                                }
                                </script>

                                @{
    var dropOrg5 = new ComboBoxBuilderInfo()
    {
        DataTextField = "Code",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiOrgStructure_Cascading",
        Placeholder = ConstantDisplay.HRM_Category_SelectOrgStructure.TranslateString(),
        ServerFilter = true,
        FilterType = FilterType.Contains,
        CascadeFrom = "OrgID4",
        Data = "filter_OrgID5",
        StyleCss = "width:200px;"
    };
    if (Model != null && Model.OrgID5 != null)
    {
        dropOrg5.Autobind = true;
    }
                                }
                                @(Html.VnrComboBoxFor(mode => mode.OrgID5, dropOrg5))
                            </div>
                        </div>
                        <div class="div16">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.OrgID6)
                            </div>
                            <div class="FieldValue">
                                <script>
                                function filter_OrgID6() {
                                    return {
                                        text: "|" + $("#OrgID5").val()
                                            + "|" + $("#OrgID6").data("kendoComboBox").input.val()
                                    };
                                }
                                </script>
                                @{
    var dropOrg6 = new ComboBoxBuilderInfo()
    {
        DataTextField = "Code",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiOrgStructure_Cascading",
        Placeholder = ConstantDisplay.HRM_Category_SelectOrgStructure.TranslateString(),
        ServerFilter = true,
        FilterType = FilterType.Contains,
        CascadeFrom = "OrgID5",
        Data = "filter_OrgID6",
        StyleCss = "width:200px;"
    };
    if (Model != null && Model.OrgID6 != null)
    {
        dropOrg6.Autobind = true;
    }
                                }
                                @(Html.VnrComboBoxFor(mode => mode.OrgID6, dropOrg6))
                            </div>
                        </div>
                        <div class="div3">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.Description)
                            </div>
                            <div class="FieldValue">
                                @(Html.VnrTextAreaFor(mode => mode.Description))
                            </div>
                        </div>
                    </div>                    
                </div>              

            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-SysConditionApproved", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-continue-SysConditionApproved", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-SysConditionApproved", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}

