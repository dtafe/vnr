@using HRM.Infrastructure.Utilities;
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.HrmSystem.Models
@model HRM.Presentation.HrmSystem.Models.Rep_ConditionModel
@{
    Layout = null;
    var _hrm_Att_Web = ConstantPathWeb.Hrm_Att_Web;
    var _hrm_Att_Service = ConstantPathWeb.Hrm_Att_Service;
    var _hrm_Cat_Service = ConstantPathWeb.Hrm_Cat_Service;
    var _hrm_Sal_Service = ConstantPathWeb.Hrm_Sal_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    
        IList<SelectListItem> List_WhereType = Enum.GetValues(typeof(WhereType))
.Cast<WhereType>()
.Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
.ToList();
}

<script type="text/javascript">
    function onSaveNew() {
        // var dataCheck = data[''];

        //if (CheckValidate(data) && !checkDuplicationCode()) {
        onSaveAndContinue($('#form_rep_Condition'), '@_hrm_Sys_Service', 'api/Rep_Condition/', 'grid_ConditionItem', 'windowRepCondition'); return false;

        //}
    };

    function onSaveClose() {
        // if (CheckValidate(data) && !checkDuplicationCode()) {
        onSaveAndClose($('#form_rep_Condition'), '@_hrm_Sys_Service', 'api/Rep_Condition/', 'grid_ConditionItem', 'windowRepCondition'); return false;

        // }
    };
    function onSaveDataPopUp() {

        //  if (CheckValidate(data)) {
        //  if (!checkDuplicationCode()) {
        onlySave($('#form_rep_Condition'), '@_hrm_Sys_Service', 'api/Rep_Condition/', 'grid_ConditionItem'); return false;
        //  }
        // }
    };

    $(document).ready(function () {
        $("#MasterIDCondition").val($("#IDMaster").val());
    });

</script>


@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_rep_Condition" }))
{
    @Html.HiddenFor(model => model.ID, new { id="IDCondition"})
    @Html.HiddenFor(model => model.MasterID, new {id="MasterIDCondition"})
    <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.ConditionGroupName)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.ConditionGroupName)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.WhereType)
                    </div>
                    <div class="FieldValue">
                        @{
                            var dropdownlist = new DropDownListBuilderInfo()
                            {
                                BindTo = List_WhereType,
                                DataTextField="Text",
                                DataValueField = "Value",
                                OptionLabel=null,
                            };
                        }
                        @Html.VnrDropDownListFor(mode => mode.WhereType,dropdownlist)
                    </div>
                </div>
               
                <div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.OrderNumber)
                    </div>
                    <div class="FieldValue">
                        @{
                        var numberic = new NumericTextBoxBuilderInfo<int>()
                        {
                        };
                        }
                        @Html.VnrNumericTextBoxFor(mode => mode.OrderNumber, numberic)
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle"></div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-Condition", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveNew", Name = "save-New-Condition", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-Condition", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}
