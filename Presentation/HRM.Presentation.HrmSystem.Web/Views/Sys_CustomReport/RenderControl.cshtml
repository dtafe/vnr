@using HRM.Infrastructure.Utilities;
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.HrmSystem.Models
@using HRM.Presentation.UI.Controls.Kendo
@model Rep_ControlModel
@{
    Layout = null;
    var _hrm_Att_Web = ConstantPathWeb.Hrm_Att_Web;
    var _hrm_Att_Service = ConstantPathWeb.Hrm_Att_Service;
    var _hrm_Cat_Service = ConstantPathWeb.Hrm_Cat_Service;
    var _hrm_Sal_Service = ConstantPathWeb.Hrm_Sal_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
}

<script type="text/javascript">

    function onSaveControl(formValidate, url, route, gridId) {
        debugger;
        $.ajax({
            url: url,
            data: formValidate.serialize(),
            type: 'POST',
            async: false,
            success: function (data) {
                var grid = $("#" + gridId).data("kendoGrid");
                grid.dataSource.read();
                ShowNotificationProcessor("Lưu Thành Công !");
            },
            error: function (data) {
                alert('error');
            }
        });

    }


    function CreateControl() {

        $("#SMasterID").val( $("#IDMaster").val());
        onSaveControl($('#form-create-Control'), '@_hrm_Sys_Service', 'Sys_Getdata/CreateControl/', 'gridRep_RenderControl', '');
    };

</script>

<form action="#" method="POST" id="form-create-Control">
    @Html.HiddenFor(m => m.MasterID, new { id = "SMasterID" })
    <div class="panel-wrap">
        <div id="main-content">
            <div class="widget">
                <!--Bất đầu nôi dung tìm kiếm-->
                <div class="contendSearchWidge">
                    <div style="float:left; width:400px">
                        <div id="div4">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(m=>m.ControlType)
                            </div>
                            <div class="FieldValue">
                                @{
                                IList<SelectListItem> listControl = Enum.GetValues(typeof(CustomReportControl))
                                 .Cast<CustomReportControl>()
                                 .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
                                 .ToList();
                                var ControlType = new DropDownListBuilderInfo()
                                {
                                    DataTextField="Text",
                                    DataValueField="Value",
                                    BindTo = listControl,
                                };
                                }
                                @Html.VnrDropDownListFor(model => model.ControlType, ControlType)
                            </div>
                        </div>
                        <div id="div4">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(m => m.ParamerterName1)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextBoxFor(m => m.ParamerterName1)
                            </div>
                        </div>
                        <div id="div4">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(m => m.ParamerterName2)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextBoxFor(m => m.ParamerterName2, new TextBoxBuilderInfo() { Disabled = true })
                            </div>
                        </div>
                    </div>
                    <div style="width:400px; float:left">
                        <div id="div4">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(m => m.IsEnum)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrCheckBoxFor(m => m.IsEnum)
                            </div>
                        </div>
                        <div id="div4">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(m => m.DisplayName1)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextBoxFor(m => m.DisplayName1)
                            </div>
                        </div>
                        <div id="div4">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(m => m.DisplayName2)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextBoxFor(m => m.DisplayName2, new TextBoxBuilderInfo() { Disabled = true })
                            </div>
                        </div>
                    </div>
                    <div style="width:400px; float:left">
                        <div id="div4">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(m => m.TableName)
                            </div>
                            <div class="FieldValue">
                                @{
                                var Table = new ComboBoxBuilderInfo()
                                {
                                    Url = _hrm_Sys_Service + "Sys_GetData/GetTableNameMultiple",
                                    DataValueField = "ID",
                                    DataTextField = "Name",
                                    StyleCss = "width:200px;",
                                    ServerFilter=true,

                                };
                                }
                                @Html.VnrComboBoxFor(model => model.TableName, Table)
                            </div>
                        </div>

                        <div id="div4">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(m => m.DefaultValue1)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextBoxFor(m => m.DefaultValue1)
                            </div>
                        </div>
                        <div id="div4">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(m => m.DefaultValue2)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextBoxFor(m => m.DefaultValue2, new TextBoxBuilderInfo() {Disabled=true })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

    <div class="commandToolBarWidge" id="anchor">
        <div style="float:left">
            @Html.VnrButton(new ButtonBuilderInfo() {EventClick="CreateControl" ,Name = "Create-Control", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
        </div>
        <div style="float:right">
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDeleteItemControl", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
        </div>

        <div class="clear"></div>
    </div>


    <div>
        <!--Khai báo các thông tin cho Grid-->
        @{
            string[] valueFields = new string[]
        {
            Rep_ControlModel.FieldNames.ControlType,
            Rep_ControlModel.FieldNames.ParamerterName1,
            Rep_ControlModel.FieldNames.DisplayName1,
            Rep_ControlModel.FieldNames.DefaultValue1,
            Rep_ControlModel.FieldNames.ParamerterName2,
            Rep_ControlModel.FieldNames.DisplayName2,
            Rep_ControlModel.FieldNames.DefaultValue2,
            Rep_ControlModel.FieldNames.TableName,
            Rep_ControlModel.FieldNames.TextField,
            Rep_ControlModel.FieldNames.ValueField,
        };
            Dictionary<string, int> sizeFields = new Dictionary<string, int>()
        {
            {Rep_ControlModel.FieldNames.ControlType, 150},
            {Rep_ControlModel.FieldNames.ParamerterName1, 100},
            {Rep_ControlModel.FieldNames.DisplayName1, 150},
            {Rep_ControlModel.FieldNames.DefaultValue1, 150},
            {Rep_ControlModel.FieldNames.ParamerterName2, 150},
            {Rep_ControlModel.FieldNames.DisplayName2, 100},
            {Rep_ControlModel.FieldNames.DefaultValue2, 150},
            {Rep_ControlModel.FieldNames.TableName, 150},
            {Rep_ControlModel.FieldNames.TextField, 150},
            {Rep_ControlModel.FieldNames.ValueField, 100},
        };
            Dictionary<string, string> displayFields = new Dictionary<string, string>()
        {
            {Rep_ControlModel.FieldNames.ControlType, "ControlType"},
            {Rep_ControlModel.FieldNames.ParamerterName1, "ParamerterName1"},
            {Rep_ControlModel.FieldNames.DisplayName1, "DisplayName1"},
            {Rep_ControlModel.FieldNames.DefaultValue1, "DefaultValue1"},
            {Rep_ControlModel.FieldNames.ParamerterName2, "ParamerterName2"},
            {Rep_ControlModel.FieldNames.DisplayName2, "DisplayName2"},
            {Rep_ControlModel.FieldNames.DefaultValue2, "DefaultValue2"},
            {Rep_ControlModel.FieldNames.TableName, "TableName"},
            {Rep_ControlModel.FieldNames.TextField, "TextField"},
            {Rep_ControlModel.FieldNames.ValueField, "ValueField"},
        };

            var grid = new GridBuilderInfo
            {
                Name = "gridRep_RenderControl",
                ValueFields = valueFields,
                SizeFields = sizeFields,
                DisplayFields = displayFields,
                ReadData = "filterFieldInfo",
                ShowEditIcon = false,
            };
        }
        <!--Khởi tạo Grid-->
        @(Html.VnrGrid<Rep_ControlModel>(grid))
    </div>
