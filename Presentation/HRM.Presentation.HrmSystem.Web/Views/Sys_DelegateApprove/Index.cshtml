@using HRM.Infrastructure.Utilities;
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.HrmSystem.Models;
@using HRM.Infrastructure.Security;

@model Sys_DelegateApproveSearchModel

@{
    var hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var Hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var hrm_Sys_Web = ConstantPathWeb.Hrm_Sys_Web;
    Layout = null;
}

@{
    var window = new WindowBuilderInfo
    {
        Name = "windowSys_Delegate",
        Visible = false,
        Width = 700,
        LoadContentFrom = @hrm_Sys_Web + "Sys_DelegateApprove/SysDelegateInfo/",
    };
}
@(Html.VnrWindow(window))

<script>
    var gridSys_Delegate = '@ConstantControlName.HRM_Sys_Delegate_Grid_Name';
    var popUpSys_Delegate = '@ConstantControlName.HRM_Sys_Delegate_PopUp_Name';

    var titleEditPopUpDelegate = '@Html.Raw(ConstantDisplay.HRM_Sys_DelegateApprove_Update_Title.TranslateString())';
    var titleCreatePopUpDelegateApprove = '@Html.Raw(ConstantDisplay.HRM_Sys_DelegateApprove_Create_Title.TranslateString())';


    //Data khi tìm kiếm
    function filterFieldInfo() {
        return {
            UserName: $('#SUserName').val(),
            UserDelegateName: $('#SUserDelegateName').val(),
            DateFrom: ConvertDatetime('@hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateFrom").val()),
            DateTo: ConvertDatetime('@hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateTo").val()),
            IsExport: false,
            ValueFields: $('#valueFieldsGrid').val()
        };
    }
    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        //Show Hide Panel
        ShowHidePanel();
        //Jump Anchor
        jumpAnchor("anchor");
        $("#btnSearch").click(function () {
            ReadGrid(gridSys_Delegate);
        });

        //Xử lý Edit popup
        var url = '@hrm_Sys_Web' + "Sys_DelegateApprove/SysDelegateInfo/";
        EditGridPopUp("@ConstantControlName.HRM_Sys_Delegate_Grid_Name", "windowSys_Delegate", url, '@ConstantPermission.Sys_DelegateApprove', titleEditPopUpDelegate);
    });

    //Xử lý Create
    $("#btnCreateDelegateApprove").click(function () {
        var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Sys_DelegateApprove');
        if (!isAccess) {
            return;
        }
        PopUpCreate("windowSys_Delegate", titleCreatePopUpDelegateApprove, '@ConstantPermission.Sys_DelegateApprove');
    });

    //Xử Lý grid
    GridCheckbox(gridSys_Delegate);

     //Xử Lý button delete
    $('#btnDelete').click(function (e) {
      //  e.preventDefault();
        DeleteSelected("gridSys_Delegate", '@hrm_Sys_Web' + "Sys_DelegateApprove/RemoveSelected/", selectedIds, '@ConstantPermission.Sys_DelegateApprove');
    })

    $(document).ready(function () {
        ShowHidePanel();
    });

</script>

<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            <div class="contendSearchWidge">
                <div>
                    <div>
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(model => model.UserName)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBox("SUserName")
                        </div>
                    </div>
                    <div>
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(model => model.UserDelegateName)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBox("SUserDelegateName")
                        </div>
                    </div>
                    <div id="div3">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(model => model.DateFrom)
                        </div>
                        <div class="FieldValue">
                            @{
                                var dateFrom = new DatePickerBuilderInfo()
                                {
                                    StyleCss = "width:100px;",
                                    Placeholder = ConstantDisplay.HRM_HR_Profile_DateFrom.TranslateString()
                                };
                            }
                            @Html.VnrDatePickerFor(model => model.DateFrom, dateFrom)
                            @{
                                var dateTo = new DatePickerBuilderInfo()
                                {
                                    StyleCss = "width:100px;",
                                    Placeholder = ConstantDisplay.HRM_HR_Profile_DateTo.TranslateString()
                                };
                            }
                            @Html.VnrDatePickerFor(model => model.DateTo, dateTo)
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
<div class="commandToolBarWidge" id="anchor">
    <div style="float:left">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateDelegateApprove", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    </div>
    <div style="float:right">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
    </div>
    <div class="clear"></div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @using VnResource.Helper.Security
    @{
        string[] valueFields = new string[]
        {
            Sys_DelegateApproveModel.FieldNames.UserName,
            Sys_DelegateApproveModel.FieldNames.UserDelegateName,
            Sys_DelegateApproveModel.FieldNames.DateFrom,
            Sys_DelegateApproveModel.FieldNames.DateTo,
            Sys_DelegateApproveModel.FieldNames.DataTypeDelegateView,
        };
        Dictionary<string, int> sizeFields = new Dictionary<string, int>()
        {
            {Sys_DelegateApproveModel.FieldNames.UserName, 130},
            {Sys_DelegateApproveModel.FieldNames.UserDelegateName, 130},
            {Sys_DelegateApproveModel.FieldNames.DateFrom, 100},
            {Sys_DelegateApproveModel.FieldNames.DateTo, 100},
            {Sys_DelegateApproveModel.FieldNames.DataTypeDelegateView, 130},
        };

        Dictionary<string, string> displayFields = new Dictionary<string, string>()
        {
            {Sys_DelegateApproveModel.FieldNames.UserName, ConstantDisplay.HRM_Sys_DelegateApprove_UserID},
            {Sys_DelegateApproveModel.FieldNames.UserDelegateName, ConstantDisplay.HRM_Sys_DelegateApprove_UserDelegateID},
            {Sys_DelegateApproveModel.FieldNames.DateFrom, ConstantDisplay.HRM_Sys_DelegateApprove_DateFrom},
            {Sys_DelegateApproveModel.FieldNames.DateTo, ConstantDisplay.HRM_Sys_DelegateApprove_DateTo},
            {Sys_DelegateApproveModel.FieldNames.DataTypeDelegateView, ConstantDisplay.HRM_Sys_DelegateApprove_DataTypeDelegate},
        };
        var grid = new GridBuilderInfo
        {
            Name = "gridSys_Delegate",
            ValueFields = valueFields,
            ReadActionUrl = Hrm_Hre_Service + "Hre_GetData/GetDelegateApproveList",
            SizeFields = sizeFields,
            DisplayFields = displayFields,
            ReadData = "filterFieldInfo",
        };

    }

    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<Sys_DelegateApproveModel>(grid))
</div>
@{
    var listValueField = grid.ValueFields;
    var valueFields1 = string.Empty;
    if (listValueField != null)
    {
        for (int i = 0; i < listValueField.Count(); i++)
        {
            valueFields1 += "," + listValueField[i];
        }
    }
}
@Html.Hidden("valueFieldsGrid", valueFields1)