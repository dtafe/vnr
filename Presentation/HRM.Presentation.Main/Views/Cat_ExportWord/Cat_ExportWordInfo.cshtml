@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@model HRM.Presentation.Category.Models.CatExportModel

@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var exportId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
}
<script>
    SetFieldRequiredByScreenName('Cat_ExportWord');

    function onSaveClose() {
        onSaveAndClose($('#form_cat_exportWord'), '@_hrm_Hr_Service', 'api/CatExport/', '@ConstantControlName.HRM_Category_ExportWord_Grid_Name', '@ConstantControlName.HRM_Category_ExportWord_PopUp_Name'); return false;
    }
    function onSaveDataPopUp() {
        onlySave($('#form_cat_exportWord'), '@_hrm_Hr_Service', 'api/CatExport/', '@ConstantControlName.HRM_Category_ExportWord_Grid_Name'); return false;
    }
    @*function downloadFileTemplate() {
        window.location = '@_hrm_Main_Web' + "/Templates/" + '@Html.DisplayFor(model=>model.TemplateFile)';
    }*@
</script>
<div>
    <!--Form dùng cho edit và update-->
    @using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_cat_exportWord" }))
    {
        @Html.HiddenFor(model => model.IsExportWord, true)
        @Html.HiddenFor(model => model.ID)
        <div>
            <div class="FieldTitle150">
                @Html.VnrLabelFor(mode => mode.ExportName)
            </div>
            <div class="FieldValue">
                @Html.VnrTextBoxFor(mode => mode.ExportName, "width: 300px")
            </div>
        </div>
        <div>
            <div class="FieldTitle150">
                @Html.VnrLabelFor(mode => mode.Code)
            </div>
            <div class="FieldValue">
                @Html.VnrTextBoxFor(mode => mode.Code, "width: 300px")
            </div>
        </div>
        <div>
            <div class="FieldTitle150">
                @Html.VnrLabelFor(mode => mode.ScreenName)
            </div>
            <div class="FieldValue">
                @Html.VnrTextBoxFor(mode => mode.ScreenName, "width: 300px")
            </div>
        </div>
        <div id="div9">
            <div class="FieldTitle150">
                @Html.VnrLabelFor(mode => mode.TemplateFile)
            </div>
            <div class="FieldValue">
                @Html.HiddenFor(model => model.TemplateFile)
                <input type="file" name="files" id="UploadTemplateFile1" />
                <script>
                                             var vnrUpload = VnrUploadBuilder;
                                            vnrUpload.Id = "UploadTemplateFile1";
                                            vnrUpload.Host = '@_hrm_Main_Web';
                                            vnrUpload.Files = '@Html.DisplayFor(model => model.TemplateFile)';
                                            vnrUpload.Field = "TemplateFile";
                                            vnrUpload.AutoUpload = true;
                                            vnrUpload.Multiple = true;
                                            vnrUpload.AutoReNameFile = true;
                                            VnrUpload(vnrUpload);
                </script>
            </div>
            <div style="clear: both;"></div>
        </div>
        <div>
            <div class="FieldTitle150">
                @Html.VnrLabelFor(mode => mode.Description)
            </div>
            <div class="FieldValue">

                @Html.VnrTextAreaFor(mode => mode.Description, "width:500px;height:100px;")
            </div>
        </div>
        <div>
            <div class="FieldTitle150"></div>
            <div class="FieldValue">
                @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-Export", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                @*@Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveNew", Name = "save-New-catExport", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })*@
                @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-catExport", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
            </div>
        </div>
    }

</div>