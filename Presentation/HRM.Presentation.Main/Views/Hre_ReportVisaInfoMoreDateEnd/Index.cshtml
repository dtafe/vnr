@using HRM.Infrastructure.Utilities
@using HRM.Infrastructure.Security
@using HRM.Presentation.Hr.Models
@using HRM.Presentation.UI.Controls.Kendo

@model Hre_VisaInfoSearchModel
@{
    ViewBag.Title = "Visa Info Index";
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var controller = ViewContext.RouteData.Values["Controller"].ToString();
    var action = ViewContext.RouteData.Values["Action"].ToString();
    var screen = controller + "/" + action;
    Layout = null;
    string[] valueFields = null;
}
@Html.Hidden("Screen", screen)
<script>
    var isCreateTemplate = false;
    var isCreateTemplateForDynamicGrid = false;
    var checkedNodes = [];
    var selectedIds = [];
    function filterFieldInfo(isExport) {
        var dataParameter = {
            DateEnd: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateEnd").val()),
            DateTo: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateTo").val()),
            ValueFields: $('#valueFieldsGrid').val(),
            IsCreateTemplate: isCreateTemplate,
            IsCreateTemplateForDynamicGrid: isCreateTemplateForDynamicGrid

        };
        if (isExport == true) {
            dataParameter["ExportId"] = $('#ddlScreenName').val();
        }
        return dataParameter;
    }
    $(document).ready(function () {
        //Xử lý sự kiện click button tìm kiếm
        $("#btnSearch").click(function () {
            //checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes)
            var grid = $('#gridHre_VisaInfo').data("kendoGrid");
            grid.dataSource.read();
            selectedIds = [];
            checkedNodes = [];
        });
        //Xử lý show hide form tìm kiếm
        ShowHidePanel();
    });
    GridCheckbox("gridHre_VisaInfo");
    $("#btnExport").click(function () {
        var isAccess = checkPermission(PrivilegeType.Export, '@ConstantPermission.Hre_VisaInfo');
        if (!isAccess) {
            return;
        }
        if ($('#ddlScreenName').val() == "") {
            ExportFail();
            return;
        }
        //ExportProfileIsBackList
        var urlGetData = '@hrm_Hr_Service' + "Hre_GetData/GetDateEndInfoListss";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo(true);
        ExportAll(urlGetData, dataParameter, urlDownload);
        checkedNodes = [];
    });
    $("#btnCreateTemplate").click(function () {
        isCreateTemplate = true;
        isCreateTemplateForDynamicGrid = false;
        CreateTemplate('@hrm_Hr_Service' + '/Hre_GetData/GetDateEndInfoListss', filterFieldInfo(true));
    });
    function onDataBoundGrid() {
        CheckedGrid("gridHre_VisaInfo", selectedIds.join(","));
    }
</script>
<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            <div class="contendSearchWidge">
                <form action="#" method="POST" id="form-search">
                    <div class="hrm_box">
                        <div>
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.DateEnd)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var DateEnd = new DatePickerBuilderInfo()
                                    {
                                        StyleCss = "width:100px;",
                                        Placeholder = ConstantDisplay.HRM_HR_Profile_DateFrom.TranslateString(),
                                    };
                                }
                                @Html.VnrDatePickerFor(model => model.DateEnd, DateEnd)
                                @{
                                    var dateTo = new DatePickerBuilderInfo()
                                    {
                                        StyleCss = "width:100px;",
                                        Placeholder = ConstantDisplay.HRM_HR_Profile_DateTo.TranslateString(),
                                    };
                                }
                                @Html.VnrDatePickerFor(model => model.DateTo, dateTo)
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="commandToolBarWidge">
    <div style="float:left">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    </div>
    <div style="float:right">
        <script>
            function GetScreenName() {
                return {
                    screenName: '@screen'
                };
            }
        </script>
        <div class="FieldValue" style="margin-top: 0;">
            @{
                var screenName = new DropDownListBuilderInfo()
                {
                    Name = "ddlScreenName",
                    DataTextField = "ExportName",
                    DataValueField = "ID",
                    Url = @_hrm_Hr_Service + "Cat_GetData/GetScreenName",
                    Data = "GetScreenName",
                };
            }
            @Html.VnrDropDownList(screenName)
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport", Content = ConstantDisplay.HRM_Common_Export_Button.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateTemplate", Content = ConstantDisplay.HRM_Common_CreateTemplate_Button.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
        </div>
    </div>
    <div class="clear"></div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @{
        valueFields = new[]
            {
                Hre_VisaInfoModel.FieldNames.ProfileName,
                Hre_VisaInfoModel.FieldNames.VisaInfoName,
                Hre_VisaInfoModel.FieldNames.DateStart,
                Hre_VisaInfoModel.FieldNames.DateEnd,
                Hre_VisaInfoModel.FieldNames.Notes,
            };

        var sizeFields = new Dictionary<string, int>()
            {
                {Hre_VisaInfoModel.FieldNames.ProfileName,150},
                {Hre_VisaInfoModel.FieldNames.VisaInfoName,80},
                {Hre_VisaInfoModel.FieldNames.DateStart,100},
                {Hre_VisaInfoModel.FieldNames.DateEnd,100},
                {Hre_VisaInfoModel.FieldNames.Notes,300},
            };

        var filterable = new Dictionary<string, bool>()
            {
                {Hre_VisaInfoModel.FieldNames.ProfileName,true},
                {Hre_VisaInfoModel.FieldNames.VisaInfoName,true},
                {Hre_VisaInfoModel.FieldNames.DateStart,true},
                {Hre_VisaInfoModel.FieldNames.DateEnd,true},
                {Hre_VisaInfoModel.FieldNames.Notes,true},
                
            };

        var displayFields = new Dictionary<string, string>()
            {
                {Hre_VisaInfoModel.FieldNames.ProfileName,ConstantDisplay.HRM_HR_Profile_ProfileName},
                {Hre_VisaInfoModel.FieldNames.VisaInfoName,ConstantDisplay.HRM_HR_VisaInfo_Name},
                {Hre_VisaInfoModel.FieldNames.DateStart,ConstantDisplay.HRM_HR_VisaInfo_DateStart},
                {Hre_VisaInfoModel.FieldNames.DateEnd,ConstantDisplay.HRM_HR_VisaInfo_DateEnd},
                {Hre_VisaInfoModel.FieldNames.Notes,ConstantDisplay.HRM_HR_VisaInfo_Notes},
                
            };

        var grid = new GridBuilderInfo
        {
            Name = "gridHre_VisaInfo",
            ValueFields = valueFields,
            SizeFields = sizeFields,
            DisplayFields = displayFields,
            Filterable = filterable,
            //GetProfileIsBackList
            ReadActionUrl = hrm_Hr_Service + "Hre_GetData/GetDateEndInfoListss/",
            ReadData = "filterFieldInfo",
        };
    }
    @(Html.VnrGrid<Hre_VisaInfoModel>(grid))
</div>
@{
    var valueFields1 = string.Empty;
    for (int i = 0; i < valueFields.Count(); i++)
    {
        valueFields1 += "," + valueFields[i];
    }
}
@Html.Hidden("valueFieldsGrid", valueFields1)
