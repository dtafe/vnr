
@using HRM.Infrastructure.Utilities;
@model Can_ComputeBackPayModel
@{
    Layout = null;
    var _hrm_Can_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Can_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;




}
<script type="text/javascript">
    var checkedNodes = [];
     
    var data = SetCharacteFieldRequired();

    function checkedNodeIds(nodes, checkedNodes) {
        for (var i = 0; i < nodes.length; i++) {
            if (nodes[i].checked) {
                checkedNodes.push(nodes[i].id);
            }
            if (nodes[i].hasChildren) {
                checkedNodeIds(nodes[i].children.view(), checkedNodes);
            }
        }
    }

    //Data khi tìm kiếm
    function filterFieldInfo(isExportDDL) {
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        checkedNodes = [];
        checkedNodeIds(treeView.dataSource.view(), checkedNodes);
        
        //var treeView = $("#treeviewDropdown").data("kendoExtDropDownTreeView").treeview();
        //checkedNodeIds(treeView.dataSource.view(), checkedNodes);
        var _ProfileIDs = $('#SProfileID').val() != null ? $('#SProfileID').val().join(',') : $('#SProfileID').val();

        var elementPara = {
            ProfileIDs: _ProfileIDs,
            MonthYear: $('#@Html.FieldIdFor(model => model.MonthYear)').val(),
            //OrgStructureID: UpdateValueTreeDropdown().join(','),
            OrgStructureID: checkedNodes.join(','),
        };
        if (isExportDDL == true) {
            elementPara["ExportId"] = $('#ddlScreenName').val();
        }
        checkedNodes = [];
        return elementPara;
    }


    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        $("#btnSearch").click(function () {
            if (CheckValidate(data)) {
                var grid = $('#gridCan_ComputeBackPay').data("kendoGrid");
                grid.dataSource.read();
            }
        });
    });

    $(document).ready(function () {
        ShowHidePanel();
    });
</script>


<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            <div class="contendSearchWidge">
                <form id="form-search">
                    <div class="hrm_box">
                        <div id="div6">
                            <div class="FieldTitle">
                                @*@Html.VnrLabel(ConstantDisplay.HRM_Canteen_Can_ComputeBackPay_Month.TranslateString())*@

                                @Html.VnrLabelFor(model => model.MonthYear)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var WorkDate = new DatePickerBuilderInfo()
                                    {
                                        Name = "MonthYear",
                                        Placeholder = ConstantDisplay.HRM_Attendance_DateFrom.TranslateString(),
                                        Format = ConstantFormat.HRM_Format_MonthYear,
                                        StyleCss = "width:100px"
                                    };
                                }
                                @Html.VnrDatePicker(WorkDate)
                            </div>
                        </div>


                        <div id="div2">
                            <div class="FieldTitle">
                                @Html.VnrLabel(ConstantDisplay.HRM_HR_Profile_ProfileName.TranslateString())
                            </div>
                            <div class="FieldValue">
                                @{
                                    var multiSelectProfileID = new MultiSelectBuilderInfo()
                                    {
                                        Name = "SProfileID",
                                        DataTextField = "ProfileName",
                                        DataValueField = "Id",
                                        Url = @_hrm_Hr_Service + "HrMultiSelect/GetMultiProfile",
                                        Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                                        MaxSelectedItems = 10,
                                        Value = @Html.DisplayFor(mode => mode.ProfileId).ToString(),
                                      
                                    };
                                }
                                @(Html.VnrMultiSelect(multiSelectProfileID))
                            </div>
                        </div>

                        <div>
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.OrgStructureID)
                            </div>
                            <div class="FieldValue">
                                @Html.Partial("EditorTemplates/OrgStructureTreeViewDropdown")
                                @*@{
                                    var buildInfo = new VnrOrgStructureInfo()
                                    {

                                    };
                                }
                                @Html.VnrOrgStructure(buildInfo)*@                               
                            </div>
                        </div>
                    </div>

                    <div class="hrm_box">

                    </div>


                </form>
            </div>

        </div>
    </div>
</div>
<div class="commandToolBarWidge">
    <div style="float:left">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantDisplay.HRM_Canteen_Can_ComputeBackPay_Compute.TranslateString(), ImageUrl = ConstantPath.IconBtnCompute })
    </div>

    <div class="clear"></div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @using HRM.Presentation.Canteen.Models
    @using HRM.Presentation.UI.Controls.Kendo
    @{
        string[] valueFields = new string[]
        {
            Can_ComputeBackPayModel.FieldNames.ProfileName,
            Can_ComputeBackPayModel.FieldNames.MonthYear,
            Can_ComputeBackPayModel.FieldNames.Summary,
            Can_ComputeBackPayModel.FieldNames.Total,
            Can_ComputeBackPayModel.FieldNames.Amount,
            Can_ComputeBackPayModel.FieldNames.CountByFomular,
            Can_ComputeBackPayModel.FieldNames.AmountByFomular,
            //Can_ComputeBackPayModel.FieldNames.TotalSupport,
            Can_ComputeBackPayModel.FieldNames.Type,
            Can_ComputeBackPayModel.FieldNames.Note
        };
        Dictionary<string, int> sizeFields = new Dictionary<string, int>()
        {
           {Can_ComputeBackPayModel.FieldNames.ProfileName,150},
            {Can_ComputeBackPayModel.FieldNames.MonthYear,100},
            {Can_ComputeBackPayModel.FieldNames.Summary,100},
            {Can_ComputeBackPayModel.FieldNames.Type,150},
            {Can_ComputeBackPayModel.FieldNames.Total,200},
//{Can_ComputeBackPayModel.FieldNames.TotalSupport,200},
            {Can_ComputeBackPayModel.FieldNames.CountByFomular,200},
            {Can_ComputeBackPayModel.FieldNames.AmountByFomular,200},
            {Can_ComputeBackPayModel.FieldNames.Amount,100},
            {Can_ComputeBackPayModel.FieldNames.Note,300}
        };

        Dictionary<string, string> displayFields = new Dictionary<string, string>()
        {
            {Can_ComputeBackPayModel.FieldNames.ProfileName, ConstantDisplay.HRM_Canteen_MealRecordMissing_ProfileName},
            {Can_ComputeBackPayModel.FieldNames.MonthYear, ConstantDisplay.HRM_Canteen_Can_ComputeBackPay_Month},
            {Can_ComputeBackPayModel.FieldNames.Summary, ConstantDisplay.HRM_Canteen_Can_ComputeBackPay_Summary},
            {Can_ComputeBackPayModel.FieldNames.Total, ConstantDisplay.HRM_Canteen_Can_ComputeBackPay_Total},
            {Can_ComputeBackPayModel.FieldNames.Amount, ConstantDisplay.HRM_Canteen_Can_ComputeBackPay_Amount},
            {Can_ComputeBackPayModel.FieldNames.CountByFomular, ConstantDisplay.HRM_Canteen_BackPay_CountByFomular},
            {Can_ComputeBackPayModel.FieldNames.AmountByFomular, ConstantDisplay.HRM_Canteen_BackPay_AmountByFomular},
            //Can_ComputeBackPayModel.FieldNames.TotalSupport, ConstantDisplay.HRM_Canteen_Can_ComputeBackPay_TotalSupport},
            {Can_ComputeBackPayModel.FieldNames.Type,ConstantDisplay. HRM_Canteen_Can_ComputeBackPay_Type},
            {Can_ComputeBackPayModel.FieldNames.Note,ConstantDisplay. HRM_Canteen_BackPay_Note}

        };

        Dictionary<string, string> formatFields = new Dictionary<string, string>()
        {
            {Can_ComputeBackPayModel.FieldNames.Total,ConstantFormat.HRM_Format_Int},
            {Can_ComputeBackPayModel.FieldNames.TotalSupport, ConstantFormat.HRM_Format_Int}
        };

        var grid = new GridBuilderInfo
        {
            Name = "gridCan_ComputeBackPay",
            ValueFields = valueFields,
            FormatFields = formatFields,
            SizeFields = sizeFields,
            DisplayFields = displayFields,
            ShowEditIcon = false,
            ReadActionUrl = @_hrm_Can_Service + "Canteen_GetData/GetComputeBackPayList/",
            ReadData = "filterFieldInfo"
        };
    }
    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<Can_ComputeBackPayModel>(grid))
</div>
