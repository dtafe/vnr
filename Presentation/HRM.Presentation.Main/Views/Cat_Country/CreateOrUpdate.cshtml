@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@model HRM.Presentation.Category.Models.CatCountryModel

@{
    ViewBag.Title = ConstantDisplay.HRM_Category_Country.TranslateString();
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
}
<script>
    var data = SetCharacteFieldRequired();
    function checkDuplicationCode() {
        
        var _code = $("#Country_Code").val();
        var _id = '@lineId';
        var param = {
            tableName: 'Cat_Country',
            columnName: 'Code',
            keyword: _code,
            id: _id
        };

        var isduplicate = checkDuplicate('@_hrm_Sys_Service', 'Sys_GetData', 'CheckDuplicate', param, "Code");
        
        return isduplicate;
    }

    function onSave() {
       // if (CheckValidate(data)) {
       //     if (!checkDuplicationCode()) {
            onSaveAndContinue($('#form_Cat_Country'), '@_hrm_Hre_Service', 'api/CatCountry/', 'grid_Cat_Country', 'windowCatCountry');
          //  }

      //  }
        return false;
    }

    function onSaveClose() {
       // if (CheckValidate(data)) {
         //    if (!checkDuplicationCode()) {
            onSaveAndClose($('#form_Cat_Country'), '@_hrm_Hre_Service', 'api/CatCountry/', 'grid_Cat_Country', 'windowCatCountry');
          //  }

      //  }
        return false;
    }

    function onSaveDataPopUp() {
        
       // if (CheckValidate(data)) {
         //   if (!checkDuplicationCode()) {
                onlySave($('#form_Cat_Country'), '@_hrm_Hre_Service', 'api/CatCountry/', 'grid_Cat_Country'); return false;
          //  }
     //   }
    }
</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Cat_Country" }))
{
    @Html.HiddenFor(model => model.ID)
    
     <table>
        <tr>
            <td>

              
                <div id="div2">
                    <div class="FieldTitle150" style="width: 110px;">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">
                        @{
    var _CountryCode = new TextBoxBuilderInfo() { 
        Name = "Country_Code",
        CssStyle = "width:300px"
    };
    if(Model != null){
        _CountryCode.Value = Model == null ? string.Empty : Model.Code;
    }
                        }
                        @(Html.VnrTextBoxFor(model => model.Code, _CountryCode))
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div3">
                    <div class="FieldTitle150" style="width: 110px;">
                        @Html.VnrLabelFor(mode => mode.CountryName)
                    </div>
                    <div class="FieldValue">
                        @(Html.VnrTextBoxFor(model => model.CountryName, "width:300px"))
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div4">
                    <div class="FieldTitle150" style="width: 110px;">
                        @Html.VnrLabelFor(mode => mode.CountryNameES)
                    </div>
                    <div class="FieldValue">
                        @(Html.VnrTextBoxFor(model => model.CountryNameES, "width:300px"))
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div5">
                    <div class="FieldTitle150" style="width: 110px;">
                        @Html.VnrLabelFor(mode => mode.Notes)
                    </div>
                    <div class="FieldValue">
                        @(Html.VnrTextAreaFor(model => model.Notes, "width:500px;height:100px;"))
                    </div>
                    <div style="clear: both;"></div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150" style="width: 110px;">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-Country", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-catCountry", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-catCountry", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
 </table>
}

