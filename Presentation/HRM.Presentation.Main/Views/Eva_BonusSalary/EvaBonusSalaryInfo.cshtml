@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using System.Collections
@using HRM.Presentation.Evaluation.Models
@model Eva_BonusSalaryModel

@{
    Layout = null;
    var _Hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    string gridName = ConstantControlName.HRM_Evaluation_BonusSalary_Grid_Name;
    string windowName = ConstantControlName.HRM_Evaluation_BonusSalary_PopUp_Name;
    string formName = "form_Eva_BonusSalary";
    IEnumerable lstSalesType = null;
    if (Model != null)
    {
        lstSalesType = new[] { new { SalesTypeName = Model.SalesTypeName, ID = Model.SalesTypeID } };

    }
    IList<SelectListItem> bonusType = Enum.GetValues(typeof(EvaBonusType))
       .Cast<EvaBonusType>()
       .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
       .ToList();

    IList<SelectListItem> quarter = Enum.GetValues(typeof(Quarter))
   .Cast<Quarter>()
   .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
   .ToList();

    string orgStructureName = string.Empty;
    if (Model != null && !string.IsNullOrEmpty(Model.OrgStructureName))
    {
        orgStructureName = Model.OrgStructureName;
    }
}
<script>
    var gridName = '@gridName';
    var windowName = '@windowName';
    var formName = '@formName';
    SetFieldRequired();


    $(document).ready(function () {
        
        
        @*checkedNodes != null ? $('#@Html.FieldIdFor(model => model.OrgStructureID)').val(checkedNodes.join(',')) : null;*@
    });


    function Setvalue()
    {
        $("#Type1").val($("#TypeS").val()); 
        $("#SalesType1").val($("#SalesTypeS").val());

        var checkedNodes = [];
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes);
        $("#OrgStructureID").val(checkedNodes.join(","));

    }
    @*function onSave() {
        Setvalue();
        onSaveAndContinue($('#' + formName), '@_Hrm_Eva_Service', 'api/Eva_BonusSalary/', gridName, windowName);
        return false;
    }*@
    function onSaveClose() {
        Setvalue();
        @*onSaveAndClose($('#' + formName), '@_Hrm_Eva_Service', 'api/Eva_BonusSalary/', gridName, windowName);
        return false;*@
        
        ShowHre_ProgressBar();
        $.ajax({
            traditional: true,
            url: '@_Hrm_Hre_Service' + 'api/Eva_BonusSalary/',
            data: $('#' + formName).serialize(),
            type: 'POST',
            success: function (data) {
                CloseHre_ProgressBar();
                ReadGrid(gridName);
                if (data.ActionStatus != undefined) {
                    ShowNotificationProcessor(data.ActionStatus);
                    return;
                }
                ShowNotificationProcessor("Cập Nhật Thành Công");
                var window = $("#" + windowName).data("kendoWindow");
                window.refresh().close();
            },
            error: function (data) { }
        });
    }
    @*function onSaveDataPopUp() {
        Setvalue();
        onlySave($('#' + formName), '@_Hrm_Eva_Service', 'api/Eva_BonusSalary/', gridName); return false;
    }*@
    function selectBonusType()
    {
        var value = $('#TypeS').val();
        var quater = $("#Quarter").data("kendoDropDownList");
        var month = $("#Month").data("kendoDatePicker");
        if (value == "E_Month") {
            quater.enable(false);
            month.enable();
        }
        else
        {
            month.enable(false);
            month.value("");
            quater.enable();
        }
    }
</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = formName }))
{
    @Html.HiddenFor(model => model.ID)
    <div style="width:99%">
        <table>
            <tr>
                <td>
                    <div style="display:block; padding-top:10px;">
                        <fieldset>
                            <legend>
                                @ConstantDisplay.HRM_Evaluation_BonusSalary.TranslateString()
                            </legend>

                            <div style="float:left;">

                                <div id="dvType">
                                    <div class="FieldTitle150">
                                        @Html.HiddenFor(model => model.Type, new { id = "Type1" })
                                        @Html.HiddenFor(model => model.SalesTypeID, new { id = "SalesType1" })
                                        @Html.VnrLabelFor(mode => mode.Type)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                        var ddlBonusType = new DropDownListBuilderInfo()
                                        {
                                            Name="TypeS",
                                            DataTextField = "Text",
                                            DataValueField = "Value",
                                            BindTo = bonusType,
                                            OptionLabel = @ConstantDisplay.HRM_Evaluation_SaleBonus_ChooseType.TranslateString(),
                                            StyleCss = "width:300px",
                                            EventChange="selectBonusType",
                                            
                                        };
                                        }
                                        @(Html.VnrDropDownListFor(mode => mode.Type, ddlBonusType))
                                    </div>
                                </div>

                                <div id="dvOrgStructureID">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.OrgStructureID)
                                    </div>
                                    <div class="FieldValue">
                                        @Html.Partial("EditorTemplates/OrgStructureTreeViewDropdown")
                                        @Html.HiddenFor(m => m.OrgStructureID)
                                        @*@{
                                            var org = new TreeViewDropdDownBuilderInfo()
                                            {
                                                IsShowCheckBox = false,
                                                SetFieldName = "OrgStructureID",
                                                Value = orgStructureName
                                            };
                                        }
                                        @Html.Partial("EditorTemplates/OrgTreeViewDropDown", org)

                                        @Html.HiddenFor(m => m.OrgStructureID)*@
                                    </div>
                                </div>
                                <div id="dvMonth">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.Month)
                                    </div>
                                    <div class="FieldValue">
                                        @{
    var month = new DatePickerBuilderInfo()
    {
        StyleCss = "width:120px",
                                        };
                                        }
                                        @Html.VnrDatePickerFor(model => model.Month, month).Format(ConstantFormat.HRM_Format_MonthYear)


                                    </div>
                                </div>

                                <div id="dvQuarter">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.Quarter)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var ddlQuarter = new DropDownListBuilderInfo()
                                            {
                                                Name = "Quarter",
                                                DataTextField = "Text",
                                                DataValueField = "Value",
                                                StyleCss = "width:300px",
                                                BindTo = quarter,
                                                OptionLabel = "Chọn Quí",
                                            };
                                        }
                                        @(Html.VnrDropDownListFor(mode => mode.Quarter, ddlQuarter))
                                    </div>
                                </div>

                                <div >
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.SalesTypeID)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var SalesTypeID = new MultiSelectBuilderInfo()
                                            {
                                                Name="SalesTypeS",
                                                DataTextField = "SalesTypeName",
                                                DataValueField = "ID",
                                                Url = @_Hrm_Hre_Service + "Eva_GetData/GetMultiSalesType",
                                                Placeholder = ConstantDisplay.HRM_Evaluation_SalesType_Choose.TranslateString(),
                                                MaxSelectedItems = 1,
                                                Width = 300,
                                                Value = lstSalesType
                                            };
                                        }
                                        @Html.VnrMultiSelectFor(model => model.SalesTypeID, SalesTypeID)

                                    </div>
                                </div>


                            </div>

                        </fieldset>
                    </div>
                </td>

            </tr>
            <tr>
                <td style="padding-top:2px; padding-bottom:10px;">
                    <div class="LineFooterCommandEdit">
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div>
                        <div class="FieldTitle150">

                        </div>
                        <div class="FieldValue">
                            @*@Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-BonusSalary", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })*@
                            @*@Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-BonusSalary", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })*@
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-BonusSalary", Content = ConstantAction.HRM_Common_Calculate.TranslateString(), ImageUrl = ConstantPath.IconComputePath })
                        </div>




                    </div>
                </td>
            </tr>
        </table>
    </div>
}

