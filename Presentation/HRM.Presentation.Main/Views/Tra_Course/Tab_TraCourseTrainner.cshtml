@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.UI.Controls.Kendo.DropDownList
@using HRM.Presentation.UI.Controls.Kendo.MultiSelect

@using HRM.Infrastructure.Utilities
@using System.Collections;
@using HRM.Presentation.Training.Models;
@model Tra_CourseModel
@{

    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;

    IList<SelectListItem> listSaleTypes = Enum.GetValues(typeof(EnumDropDown.SalesType))
       .Cast<EnumDropDown.SalesType>()
       .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() })
       .ToList();

    string value = Model != null ? Model.OrgStructureTrainerName : "";

}
<script>
    //$("#IsAllRankTrainner").change(function () {
    //    debugger;
    //    var _RankRankTrainnerData = $("#Trainner_RankTrainnerID").data("kendoMultiSelect");
    //    if (this.checked) {
    //        var _RankRankTrainnerData = $("#Trainner_RankTrainnerID").data("kendoMultiSelect");
    //        _RankRankTrainnerData.dataSource.filter({});
    //        var _RankRankTrainnerIdList = [];
    //        for (var i = 0; i < _RankRankTrainnerData.dataSource._data.length; i++) {
    //            _RankRankTrainnerIdList.push(_RankRankTrainnerData.dataSource._data[i].Code);
    //        }
    //        _RankRankTrainnerData.value(_RankRankTrainnerIdList);
    //    }
    //    else {
    //        _RankRankTrainnerData.value(null);
    //    }
    //});
    $("#IsAllRankTrainner").change(function () {
        debugger;

        var _RankRankTrainnerData = $("#Trainner_RankTrainnerID").data("kendoMultiSelect");

        if (this.checked) {
            $("#Trainner_RankTrainnerID").val("");
            $.ajax({
                url: '@_hrm_Hr_Service' + "Cat_GetData/GetMultiSalaryClass",
                type: "POST",
                data: { text: "" },
                dataType: "json",
                success: function (data) {
                    debugger;
                    //var _RankListData = $("#Trainee_RankID").data("kendoMultiSelect");
                    _RankRankTrainnerData.dataSource.filter({});

                    var _RankRankTrainnerIdList = [];
                    var datasource = [];

                    for (var i = 0; i < data.length; i++) {

                        datasource.push(data[i]);
                    }
                    for (var i = 0; i < data.length; i++) {

                        _RankRankTrainnerIdList.push(data[i].Code);
                    }
                    _RankRankTrainnerData.setDataSource(datasource);
                    _RankRankTrainnerData.value(_RankRankTrainnerIdList);
                },
                error: function (data) {
                    _RankRankTrainnerData.value(null);
                }
            });

        }
        else {
            _RankRankTrainnerData.value(null);
        }

    });
    //$("#IsAllRank").change(function () {
    //    debugger;
    //    var _RankListData = $("#Trainee_RankID").data("kendoMultiSelect");
    //    if (this.checked) {
    //        var _RankListData = $("#Trainee_RankID").data("kendoMultiSelect");
    //        _RankListData.dataSource.filter({});
    //        var _rankidlist = [];
    //        for (var i = 0; i < _RankListData.dataSource._data.length; i++) {

    //            _rankidlist.push(_RankListData.dataSource._data[i].ID);
    //        }
    //        _RankListData.value(_rankidlist);
    //    }
    //    else {
    //        _RankListData.value(null);
    //    }
    //});

</script>
<div class="VnRMain">
    <table>
        <tbody>
            <tr><td colspan="3" style=""></td></tr>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                <td>
                    <div style="display: block; float: left ;padding-top: 10px; ">
                        <div style="float:left">
                            <div class="hrm_box">
                                @Html.HiddenFor(mode => mode.ID)
                                @Html.HiddenFor(mode => mode.Course_ID)
                                <div id="div1">
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(mode => mode.CourseTrainerID)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _CourseTrainerID = new MultiSelectBuilderInfo()
                                            {
                                                Name = "Trainner_CourseTrainerID",
                                                DataValueField = "Code",
                                                DataTextField = "CourseName",
                                                Url = _hrm_Hr_Service + "Tra_GetData/GetMultiTraCourse",
                                                //Value = Model == null ? string.Empty : Model.CourseID.ToString(),
                                                Width = 255
                                                //  MaxSelectedItems=1
                                            };
                                        }
                                        @Html.VnrMultiSelectFor(model => model.CourseTrainerID, _CourseTrainerID)
                                        @Html.HiddenFor(model => model.CourseListTrainerID)
                                    </div>
                                </div>
                                <div>
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(model => model.DurationMinTrainerCourse)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _DurationMinTrainerCourse = new NumericTextBoxBuilderInfo<double>()
                                           {
                                               Name = "TraCourseStandards_DurationMinTrainerCourse",
                                               StyleCss = "width:80px",
                                               Format = ConstantFormat.HRM_Format_Number_Double,

                                           };
                                        }
                                        @Html.VnrNumericTextBoxFor(model => model.DurationMinTrainerCourse, _DurationMinTrainerCourse) @ConstantDisplay.HRM_Tra_Course_Tab_TraCourseStandards_Month.TranslateString()
                                    </div>
                                </div>
                                <div>
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(mode => mode.OrgTrainerID)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var orgTreeViewTrainer = new TreeViewDropdDownBuilderInfo()
                                            {
                                                Name = "TabTraCourseTrainer_OrgTrainerID",
                                                Value = Model == null ? string.Empty : Model.OrgStructureTrainerName,
                                                SetFieldID = "OrgListTrainerCode",
                                                SetFieldName = "OrgListTrainerCode",
                                                //IsShowCheckBox = false,

                                            };
                                        }
                                        @Html.Partial("EditorTemplates/OrgTreeViewDropDown", orgTreeViewTrainer)
                                        @Html.HiddenFor(model => model.OrgListTrainerCode)
                                        @Html.HiddenFor(model => model.OrgStructureTrainerName)
                                        <div>
                                            @{
                                                if(Model != null)
                                                {
                                                <script>
                                            $(document).ready(function () {
                                                setTimeout(function () {
                                                    $("#TabTraCourseTrainer_OrgTrainerIDinput").val('@Html.Raw(value)');

                                                    var treeView = $("#TabTraCourseTrainer_OrgTrainerID").data("kendoTreeView");
                                                    CheckNodeByOrderNumber(treeView.dataSource.view(), '@Model.OrgListTrainerCode'.split(','));
                                                }, 7000);
                                            });
                                        </script>
                                                }
                                            }
                                        </div>
                                        

                                    </div>
                                </div>
                                <div>
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(model => model.JobTitleTrainerID)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _JobTitleTrainerID = new MultiSelectBuilderInfo()
                                            {
                                                Name = "TabCourseTrainner_JobTitleTrainerID",
                                                DataTextField = "JobTitleName",
                                                DataValueField = "Code",
                                                Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiJobTitle",
                                                Placeholder = ConstantDisplay.HRM_Category_SelectJobTitle.TranslateString(),
                                                Width = 255
                                            };
                                        }
                                        @Html.VnrMultiSelectFor(model => model.JobTitleTrainerID, _JobTitleTrainerID)
                                        @Html.HiddenFor(model => model.JobTitleListTrainerCode)
                                    </div>
                                </div>

                                <div id="div1">
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(mode => mode.SeniorityTrainer)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _SeniorityTrainer = new NumericTextBoxBuilderInfo<int>()
                                            {
                                                StyleCss = "width:80px",
                                                Placeholder = ConstantDisplay.HRM_Tra_Course_Min.ToString().TranslateString()
                                            };
                                        }
                                        @Html.VnrNumericTextBoxFor(model => model.SeniorityTrainer, _SeniorityTrainer) @ConstantDisplay.HRM_Tra_Course_Tab_TraCourseTrainner_Month.TranslateString()
                                        @{
                                            var _MaxSeniorityTrainer = new NumericTextBoxBuilderInfo<double>()
                                            {
                                                StyleCss = "width:80px",
                                                Placeholder = ConstantDisplay.HRM_Tra_Course_Max.ToString().TranslateString()
                                            };
                                        }
                                        @Html.VnrNumericTextBoxFor(model => model.MaxSeniorityTrainer, _MaxSeniorityTrainer) @ConstantDisplay.HRM_Tra_Course_Tab_TraCourseTrainner_Month.TranslateString()
                                    </div>
                                </div>
                                <div id="div1">
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(mode => mode.RankTrainnerID)
                                    </div>
                                    <div class="FieldValue">

                                        @{
                                            var _RankTrainnerID = new MultiSelectBuilderInfo()
                                            {
                                                Name = "Trainner_RankTrainnerID",
                                                DataValueField = "Code",
                                                DataTextField = "SalaryClassName",
                                                Url = _hrm_Hr_Service + "Cat_GetData/GetMultiSalaryClass",
                                                Autobind = true,
                                                //Value = valueRankList
                                                // Value = Model == null ? string.Empty : Model.RankID.ToString(),
                                                Width = 255
                                            };
                                        }
                                        @Html.VnrMultiSelectFor(model => model.RankTrainnerID, _RankTrainnerID)
                                        @Html.HiddenFor(mode => mode.RankTrainerListID)
                                        @Html.VnrCheckBoxFor(model => model.IsAllRankTrainner, new CheckBoxBuilderInfo() { Value = Model != null ? Model.IsAllRankTrainner != null ? (bool)Model.IsAllRankTrainner : false : false })
                                        @Html.VnrLabelFor(model => model.IsAllRankTrainner)
                                    </div>
                                </div>

                                <div id=" div1">
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(mode => mode.TimeOnCurrentRankTrainer)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _TimeOnCurrentRankTrainer = new NumericTextBoxBuilderInfo<int>()
                                            {
                                                StyleCss = "width:80px"
                                            };
                                        }
                                        @Html.VnrNumericTextBoxFor(mode => mode.TimeOnCurrentRankTrainer, _TimeOnCurrentRankTrainer) @ConstantDisplay.HRM_Tra_Course_Tab_TraCourseTrainner_Month.TranslateString()
                                    </div>
                                </div>

                            </div>
                        </div>

                    </div>

                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
            @*<tr>
                    <td class="Box_Bottom_Left"></td>
                    <td class="Box_Bottom_Mid"></td>
                    <td class="Box_Bottom_Right"></td>
                </tr>*@
        </tbody>
    </table>

</div>


<div>
    @{
        if (Model != null)
        {
            <script>
                $(document).ready(function () {

                    debugger;
                    var x = location.href.split('/');
                    var _courseID = x[x.length - 1];
                    $.ajax({
                        type: 'POST',
                        url: '@_hrm_Hr_Service' + 'Tra_GetData/GetDataByCourseID',
                        data: { CourseID: _courseID },
                        dataType: 'json',
                        success: function (returnValue) {
                            debugger;
                            if (returnValue.RankTrainerListID != null) {
                                var orgtructureType = $("#Trainner_RankTrainnerID").data("kendoMultiSelect");
                                orgtructureType.dataSource.filter({});
                                var IDs = returnValue.RankTrainerListID.split(",");
                                orgtructureType.value(IDs);
                            }
                            if (returnValue.CourseListTrainerID != null) {
                                var _CourseTrainerList = $("#Trainner_CourseTrainerID").data("kendoMultiSelect");
                                _CourseTrainerList.dataSource.filter({});
                                var _CourseTrainerIDs = returnValue.CourseListTrainerID.split(",");
                                _CourseTrainerList.value(_CourseTrainerIDs);
                            }
                            if (returnValue.JobTitleListTrainerCode != null) {
                                var _JobTitleTrainerList = $("#TabCourseTrainner_JobTitleTrainerID").data("kendoMultiSelect");
                                _JobTitleTrainerList.dataSource.filter({});
                                var _JobTitleListTrainerCodes = returnValue.JobTitleListTrainerCode.split(",");
                                _JobTitleTrainerList.value(_JobTitleListTrainerCodes);
                            }

                        }
                    });
                });
            </script>
        }

    }
</div>