@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Payroll.Models
@using HRM.Presentation.Training.Models

@model Tra_CourseModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;

    var _hrm_Cat_Service = ConstantPathWeb.Hrm_Hre_Service;
    IList<SelectListItem> listSaleTypes = Enum.GetValues(typeof(EnumDropDown.SalesType))
     .Cast<EnumDropDown.SalesType>()
     .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() })
     .ToList();

}

<script>
   // SetFieldRequired();

    function onSave() {
        onSaveAndContinue($('#form_Tra_Course'), '@_hrm_Hr_Service', 'api/Tra_Course/', 'gridTra_Course', 'windownTra_Course');
        return false;
    }

    function onSaveClose() {
        onSaveAndClose($('#form_Tra_Course'), '@_hrm_Hr_Service', 'api/Tra_Course/', 'gridTra_Course', 'windownTra_Course');
        return false;
    }

    function onSaveDataPopUp() {
        onlySave($('#form_Tra_Course'), '@_hrm_Hr_Service', 'api/Tra_Course/', 'gridTra_Course'); return false;
    }

</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Tra_Course" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div id="div1">
                    <div class="FieldTitle170">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.Code)
                    </div>
                </div>
                <div id="div1">
                    <div class="FieldTitle170">
                        @Html.VnrLabelFor(mode => mode.CourseName)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.CourseName)
                    </div>
                </div>
                <div id=" div1">
                    <div class="FieldTitle170">
                        @Html.VnrLabelFor(mode => mode.TrainCategoryID)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _TrainCategoryID = new ComboBoxBuilderInfo()
                            {
                                Name = "TraCourseInfo_TrainCategoryID",
                                DataTextField = "TrainCategoryName",
                                DataValueField = "ID",
                                Url = _hrm_Cat_Service + "Cat_GetData/GetMultiTrainCategory",
                                ServerFilter = true,
                                StyleCss="width:200px"
                            };
                        }
                        @(Html.VnrComboBoxFor(mode => mode.TrainCategoryID, _TrainCategoryID))
                    </div>
                </div>
                

                <div id="div1">
                    <div class="FieldTitle170">
                        @Html.VnrLabelFor(mode => mode.TrainningPlace)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.TrainningPlace)
                    </div>
                </div>
               
                <div id="div1">
                    <div class="FieldTitle170">
                        @Html.VnrLabelFor(mode => mode.SchoolFee)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.SchoolFee)
                    </div>
                </div>
               
                <div id=" div1">
                    <div class="FieldTitle170">
                        @Html.VnrLabelFor(mode => mode.RankingGroupID)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _RankingGroupID = new ComboBoxBuilderInfo()
                            {
                                Name = "TraCourseInfo_RankingGroupID",
                                DataTextField = "RankGroupName",
                                DataValueField = "ID",
                                Url = _hrm_Cat_Service + "Cat_GetData/GetMultiShop",
                                ServerFilter = true,
                                StyleCss = "width:200px"
                            };
                        }
                        @(Html.VnrComboBoxFor(mode => mode.RankingGroupID, _RankingGroupID))
                    </div>
                </div>
                <div id="div1">
                    <div class="FieldTitle170">
                        @Html.VnrLabelFor(mode => mode.MinimumScore)
                    </div>
                    <div class="FieldValue">
                        @{
                             var MinimumScore = new NumericTextBoxBuilderInfo<double>()
                                {
                                    Name = "TraCourseInfo_MinimumScore",
                                    StyleCss = "width:70px"
                                 //     Format = ConstantFormat.HRM_Format_Int,   
                                };
                        }
                        @(Html.VnrNumericTextBoxFor(model => model.MinimumScore, MinimumScore))
                        @Html.VnrLabelFor(mode => mode.MaximumScore)
                        @{
                         var MaximumScore = new NumericTextBoxBuilderInfo<double>()
                           {
                               Name = "TraCourseInfo_MaximumScore",
                               StyleCss = "width:70px"
                               //     Format = ConstantFormat.HRM_Format_Int,
                           };
                        }
                        @(Html.VnrNumericTextBoxFor(model => model.MaximumScore, MaximumScore))
                    </div>
                </div>
                <div id="div2">
                    <div class="FieldTitle170">
                        @Html.VnrLabel(ConstantDisplay.HRM_Tra_Class_Training_Title.TranslateString())
                    </div>
                    <div class="FieldValue">
                        @Html.VnrRadioButtonFor(mode => mode.IsNormal, "IsComplex")
                        @Html.VnrLabelFor(mode => mode.IsNormal)

                        @Html.VnrRadioButtonFor(mode => mode.IsComplex, "IsComplex")
                        @Html.VnrLabelFor(mode => mode.IsComplex)
                    </div>
                </div>
                <div id="contentTopic">

                </div>
                <div id=" div1">
                    <div class="FieldTitle170">
                        @Html.VnrLabelFor(mode => mode.Description)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Description)
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle170">

                    </div>

                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-TraCourse", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-TraCourse", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-TraCourse", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}
