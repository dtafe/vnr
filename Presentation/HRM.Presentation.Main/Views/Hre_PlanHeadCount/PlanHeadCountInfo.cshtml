@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Hr.Models
@using System.Collections
@model Hre_PlanHeadCountModel

@{
    ViewBag.Title = ConstantDisplay.HRM_Category_Country.TranslateString();
    Layout = null;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _Hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
}
<script>
    
    SetFieldRequired();
    function onSave() {
       
        onSaveAndContinue($('#form_Hre_PlanHeadCount'), '@_Hrm_Hre_Service', 'api/Hre_PlanHeadCount/', 'grid_PlanHeadCount', 'windowPlanHeadCount');
           

       
        return false;
    }

    function onSaveClose() {
       
        onSaveAndClose($('#form_Hre_PlanHeadCount'), '@_Hrm_Hre_Service', 'api/Hre_PlanHeadCount/', 'grid_PlanHeadCount', 'windowPlanHeadCount');
      
        return false;
    }

    function onSaveDataPopUp() {
        
     
        onlySave($('#form_Hre_PlanHeadCount'), '@_Hrm_Hre_Service', 'api/Hre_PlanHeadCount/', 'grid_PlanHeadCount'); return false;
        
    }
</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Hre_PlanHeadCount" }))
{
    @Html.HiddenFor(model => model.ID)
    
     <table>
        <tr>
            <td>

                <div id="div3">
                    <div class="FieldTitle150 150 ">
                        @Html.VnrLabelFor(mode => mode.PlanName)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(model => model.PlanName, "width: 300px")
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div class="DivContentTitleValue" id="div13">
                    <div class="FieldTitle150 ">
                        @Html.VnrLabelForNoneIcon(model => model.OrgStructureName)
                    </div>
                    <div class="FieldValue">
                        @*@Html.Partial("EditorTemplates/OrgStructureTreeViewNoCheckbox")*@
                        @Html.Partial("EditorTemplates/OrgStructureTreeViewDropdownForCreate")
                        @Html.HiddenFor(model => model.OrgStructureID, "width: 300px")
                        @Html.HiddenFor(model => model.OrgStructureName, "width: 300px")
                    </div>
                </div>
                <div class="DivContentTitleValue" id="div13">
                    <div class="FieldTitle150 ">
                        @Html.VnrLabelForNoneIcon(model => model.JobTitleName)
                    </div>
                    <div class="FieldValue">
                        <!--Xử lý gán trực tiếp dữ liệu cho Multi, không cần load dữ liệu từ database lên, giảm kết nối đến database khi edit-->
                        @{
    IEnumerable valuejobTitle = new string[] { };
    if (Model != null)
    {
        valuejobTitle = new[] { new { JobTitleName = Model.JobTitleName, ID = Model.JobTitleID } };
    }
                        }
                        @{
    var jobTitleID = new MultiSelectBuilderInfo
    {
        Width = 300,
        DataTextField = "JobTitleName",
        DataValueField = "ID",
        Url = _Hrm_Hre_Service + "Cat_GetData/GetMultiJobTitle",
        MaxSelectedItems = 1,
        Placeholder = ConstantDisplay.HRM_Category_SelectJobTitle.TranslateString(),
        Value = valuejobTitle
    };
                        }
                        @Html.VnrMultiSelectFor(mode => mode.JobTitleID, jobTitleID)
                    </div>
                </div>
                <div class="DivContentTitleValue" id="div13">
                    <div class="FieldTitle150">
                        @Html.VnrLabelForNoneIcon(model => model.PositionName)
                    </div>
                    <div class="FieldValue">
                        <!--Xử lý gán trực tiếp dữ liệu cho Multi, không cần load dữ liệu từ database lên, giảm kết nối đến database khi edit-->
                        @{
    IEnumerable valuePosition = new string[] { };
    if (Model != null)
    {
        valuePosition = new[] { new { PositionName = Model.PositionName, ID = Model.PostionID } };
    }
                        }
                        @{
    var positionID = new MultiSelectBuilderInfo()
    {
        DataTextField = "PositionName",
        DataValueField = "ID",
        Url = _Hrm_Hre_Service + "Cat_GetData/GetMultiPosition",
        Placeholder = ConstantDisplay.HRM_Category_SelectPosition.TranslateString(),
        MaxSelectedItems = 1,
        Value = valuePosition,
        Width = 300
    };
                        }
                        @(Html.VnrMultiSelectFor(mode => mode.PostionID, positionID))
                    </div>
                </div>

                <div class="DivContentTitleValue" id="div33">
                    <div class="FieldTitle150 ">
                        @Html.VnrLabelForNoneIcon(model => model.DateFrom)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _DateFrom = new DatePickerBuilderInfo()
                            {
                            StyleCss = "Width: 120px"  ,
                            Name = "PlanHeadCount_DateFrom"
                            };
                        }
                        @Html.VnrDatePickerFor(model => model.DateFrom, _DateFrom)

                        @{
                        var _DateTo = new DatePickerBuilderInfo()
                        {
                            StyleCss = "Width: 120px"  ,
                            Name = "PlanHeadCount_DateTo"
                        };
                        }
                        @Html.VnrDatePickerFor(model => model.DateTo, _DateTo)
                    </div>
                </div>

                <div class="DivContentTitleValue" id="div13">
                    <div class="FieldTitle150 ">
                        @Html.VnrLabelForNoneIcon(model => model.HrPlanHC)
                    </div>
                    <div class="FieldValue">
                        @{
    var _HrPlanHC = new NumericTextBoxBuilderInfo<int>()
    {
        StyleCss = "Width: 150px"  
    };
                        }
                        @Html.VnrNumericTextBoxFor(model => model.HrPlanHC, _HrPlanHC)
                    </div>
                </div>


               
                <div id="div5">
                    <div class="FieldTitle150 ">
                        @Html.VnrLabelFor(mode => mode.Note)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(model => model.Note, "width:500px;height:100px;")
                    </div>
                    <div style="clear: both;"></div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150 ">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-PlanHeadCount", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-PlanHeadCount", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-PlanHeadCount", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
 </table>
}

<!-- Gán giá trị cho cây phòng ban khi edit -->
@if (Model != null)
{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#TreeViewDropDownInput").val('@Model.OrgStructureName');
            $("#OrgStructureID").val('@Model.OrgStructureID');
            @*var treeview = $("#treeviewOrg").data("kendoTreeView");
            var getitem = treeview.dataSource.get('@Model.OrgStructureID');
            treeview.findByUid(getitem.uid);
            var selectitem = treeview.findByUid(getitem.uid);
            treeview.select(selectitem);*@
        });
        $('#@ConstantDisplay.HRM_HR_GeneralProfile_H_IdProfile').val('@Model.ID');

    </script>
}
