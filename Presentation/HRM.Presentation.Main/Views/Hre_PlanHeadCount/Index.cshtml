
@using HRM.Infrastructure.Utilities
@using HRM.Infrastructure.Security

@using HRM.Presentation.Hr.Models
@model HRM.Presentation.Hr.Models.Hre_PlanHeadCountSearchModel
@{
    //ViewBag.Title = Constant.TitleListCountry;
    Layout = null;
   
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    
}

@{
    var window = new WindowBuilderInfo
    {
        Name = "windowPlanHeadCount",
        Visible = false,
        Width = 700,
        LoadContentFrom = _hrm_Main_Web + "Hre_PlanHeadCount/PlanHeadCountInfo/",
    };
}
@(Html.VnrWindow(window))

<script type="text/javascript">
    var titleEditPopUp = '@Html.Raw(ConstantDisplay.HRM_HR_Profile_PlanHeadCount_Update_Title.TranslateString())';
    var titleCreatePopUp = '@Html.Raw(ConstantDisplay.HRM_HR_Profile_PlanHeadCount_Create_Title.TranslateString())';
     
    //Khởi tạo điều kiện tìm kiếm
    function filterFieldInfo() {
        return {
            PlanName: $('#SPlanName').val(),
           
        };
    }

    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        $("#btnSearch").click(function () {
            var grid = $('#grid_PlanHeadCount').data("kendoGrid");
            grid.dataSource.read();
        });
       
        //Xử lý Edit popup
        var url = '@_hrm_Main_Web' + "Hre_PlanHeadCount/PlanHeadCountInfo/";
        EditGridPopUp("grid_PlanHeadCount", "windowPlanHeadCount", url, '@ConstantPermission.Hre_PlanHeadCount', titleEditPopUp);
    });

    $("#btnCreate").click(function () {
        PopUpCreate("windowPlanHeadCount", titleCreatePopUp, '@ConstantPermission.Hre_PlanHeadCount');
    });

    $(document).ready(function () {
        //SHow Hide Panel
        ShowHidePanel();
        //Jump Anchor
        jumpAnchor("anchor");
    });


    //Xử Lý grid
    GridCheckbox("grid_PlanHeadCount");
    
    //Xử Lý button delete
    $('#btnDelete').click(function (e) {
        if (selectedIds == "") {
            DeleteFail();
            return;
        }
        e.preventDefault();
        DeleteSelected("grid_PlanHeadCount", '@_hrm_Main_Web' + "Hre_PlanHeadCount/RemoveSelected/", selectedIds, '@ConstantPermission.Hre_PlanHeadCount');
        return false;
    });

</script>



<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->

            <div class="contendSearchWidge">
                <form action="#" method="POST" id="form-search">
                    <div class="hrm_box">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(model => model.PlanName)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBox("SPlanName", "width:200px")
                        </div>
                    </div>

                </form>
            </div>

        </div>
    </div>
</div>
<div class="commandToolBarWidge" id="anchor">
    <div style="float:left">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreate", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    </div>
    <div style="float:right">
        <div class="HideExportCate">
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport", Content = ConstantAction.HRM_Common_Export.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
        </div>
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnChangeColumnPlanHeadCount", Content = ConstantDisplay.HRM_ChangeColumn.TranslateString(), ImageUrl = ConstantPath.Hrm_ChangeColumnIcon })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
    </div>
    <div class="clear"></div>
</div>

<div>
    <!--Khai báo các thông tin cho Grid-->
    @using HRM.Presentation.Category.Models
    @using HRM.Presentation.UI.Controls.Kendo
    @{
        var columnMode = string.Empty;
        var defaultColumnMode = string.Empty;
        var userId = Session[SessionObjects.UserId];
        //Lấy tên lưới cộng thêm tên của control và action để tránh trùng nhau
        var gridControlName = ConstantControlName.HRM_grid_PlanHeadCount_Grid_Name + "__Hre_PlanHeadCount_Index";
        HRM.Presentation.Main.Controllers.Sys_ColumnModeController control = new HRM.Presentation.Main.Controllers.Sys_ColumnModeController();
        //Get thông tin cấu hình trong database
        GridBuilderModel gridInfo = control.GetGridBuilderInfo(userId + "," + gridControlName);

        var grid = new GridBuilderInfo
        {
            Name = ConstantControlName.HRM_grid_PlanHeadCount_Grid_Name,
            ReadActionUrl = _hrm_Hr_Service + "Hre_GetData/GetPlanHeadCountList",
            ReadData = "filterFieldInfo",
        };

        if (gridInfo != null && gridInfo.ValueFields != null && gridInfo.ValueFields.Any())
        {
            grid.ValueFields = gridInfo.ValueFields;
            grid.SizeFields = gridInfo.SizeFields;
            grid.Filterable = gridInfo.FilterFields;
            grid.DisplayFields = gridInfo.DisplayFields;
            grid.LockedFields = gridInfo.LockedFields;
            grid.GroupFields = gridInfo.GroupFields;
            if (gridInfo.PageSize > 0)
            {
                grid.PageSize = gridInfo.PageSize;
            }
            columnMode = gridInfo.StringXml;
        }
        else
        {
            //Thông tin hiển column hiển thị
            grid.ValueFields = new string[]
            {

                Hre_PlanHeadCountModel.FieldNames.PlanName,
                Hre_PlanHeadCountModel.FieldNames.OrgStructureName,
                Hre_PlanHeadCountModel.FieldNames.JobTitleName,
                Hre_PlanHeadCountModel.FieldNames.DateFrom,
                Hre_PlanHeadCountModel.FieldNames.DateTo,
                Hre_PlanHeadCountModel.FieldNames.HrPlanHC,
                Hre_PlanHeadCountModel.FieldNames.Note,
            };

            //Set độ rộng cho từng column
            grid.SizeFields = new Dictionary<string, int>()
            {

                {Hre_PlanHeadCountModel.FieldNames.PlanName, 150},
                {Hre_PlanHeadCountModel.FieldNames.OrgStructureName, 120},
                {Hre_PlanHeadCountModel.FieldNames.JobTitleName, 110},
                {Hre_PlanHeadCountModel.FieldNames.DateFrom, 85},
                {Hre_PlanHeadCountModel.FieldNames.DateTo, 85},
                {Hre_PlanHeadCountModel.FieldNames.HrPlanHC, 90},
                {Hre_PlanHeadCountModel.FieldNames.Note, 150}
            };

            //Thông tin hiển thị được dịch
            grid.DisplayFields = new Dictionary<string, string>()
            {

                {Hre_PlanHeadCountModel.FieldNames.PlanName, ConstantDisplay.HRM_HR_Profile_PlanHeadCount_PlanName},
                {Hre_PlanHeadCountModel.FieldNames.OrgStructureName, ConstantDisplay.HRM_HR_Profile_OrgStructureName},
                {Hre_PlanHeadCountModel.FieldNames.JobTitleName, ConstantDisplay.HRM_Attendance_JobTitle},
                {Hre_PlanHeadCountModel.FieldNames.DateFrom, ConstantDisplay.HRM_HR_Profile_PlanHeadCount_DateFrom},
                {Hre_PlanHeadCountModel.FieldNames.DateTo, ConstantDisplay.HRM_HR_Profile_PlanHeadCount_DateTo},
                {Hre_PlanHeadCountModel.FieldNames.HrPlanHC, ConstantDisplay.HRM_HR_Profile_PlanHeadCount_HrPlanHC},
                {Hre_PlanHeadCountModel.FieldNames.Note, ConstantDisplay.HRM_HR_Profile_PlanHeadCount_Note},

            };
            defaultColumnMode = control.SetDefaultGridBuilderInfo(grid);
        }
        //var grid = new GridBuilderInfo
        //{
        //    Name = "grid_PlanHeadCount",
        //    ValueFields = valueFields,
        //    DisplayFields = displayFields,
        //    SizeFields = sizeFields,
        //    //ShowDeleteButton = true,
        //    //ShowCustomEdit = true,
        //    //EventCustomEdit = "onEditCountry",
        //    //DeleteActionUrl = _hrm_Main_Web + "/Cat_Country/Remove/",
        //    ReadActionUrl = _hrm_Hr_Service + "Hre_GetData/GetPlanHeadCountList",
        //    ReadData = "filterFieldInfo"
        //};
    }

    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<Hre_PlanHeadCountModel>(grid))
    <script>
        ClickButtonChangeColum("btnChangeColumnPlanHeadCount", "Hre_PlanHeadCountModel");
        $(document).ready(function () {
            $("#" + '@ConstantControlName.HRM_ChangeColum_Grid_Name').val('@gridControlName');
            $("#" + '@ConstantControlName.HRM_ChangeColum_ColumMode_Name').val('@Html.Raw(columnMode)');
            $("#" + '@ConstantControlName.HRM_ChangeColum_Default_ColumMode_Name').val('');
            $("#" + '@ConstantControlName.HRM_ChangeColum_Default_ColumMode_Name').val('@Html.Raw(defaultColumnMode)');
        });
    </script>
</div>
@{
    var listValueField = grid.ValueFields;
    var valueFields1 = string.Empty;
    if (listValueField != null)
    {
        for (int i = 0; i < listValueField.Count(); i++)
        {
            valueFields1 += "," + listValueField[i];
        }
    }
}
@Html.Hidden("valueFieldsGrid", valueFields1)