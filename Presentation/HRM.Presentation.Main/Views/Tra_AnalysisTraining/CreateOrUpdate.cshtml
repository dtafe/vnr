@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.UI.Controls.Kendo.DropDownList
@using HRM.Presentation.UI.Controls.Kendo.MultiSelect

@using HRM.Infrastructure.Utilities
@using System.Collections;
@using HRM.Presentation.Training.Models;
@using HRM.Presentation.Hr.Models;
@model Tra_RequirementTrainModel
@{

    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;


    IList<SelectListItem> lstStatus = Enum.GetValues(typeof(RequirementTrainStatus))
.Cast<RequirementTrainStatus>()
.Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
.ToList();

    var RequirementTrainID = Guid.Empty;
    if (Model != null)
    {
        RequirementTrainID = Model.ID;
    }
}
@{
    var window = new WindowBuilderInfo
    {
        Name = "windownTra_RequirementTrainDetail",
        Visible = false,
        LoadContentFrom = @_hrm_Main_Web + "Tra_RequirementTrainDetail/Tra_RequirementTrainDetailInfo/",
    };
}
@(Html.VnrWindow(window))


<script>
    SetFieldRequiredByScreenName('Tra_RequirementTrain_Tab');
    document.getElementById("TraRequirementTrain_StatusApprove3").readOnly = true;
    document.getElementById("TraRequirementTrain_StatusApprove").readOnly = true;
    document.getElementById("TraRequirementTrain_StatusApprove2").readOnly = true;

    var titleUpdatePopup = '@Html.Raw(ConstantDisplay.HRM_Tra_RequirementTrainDetail_Update_Title.TranslateString())';
    var titleCreatePopUp = '@Html.Raw(ConstantDisplay.HRM_Tra_RequirementTrainDetail_Create_Title.TranslateString())';
    SetFieldRequired();
    $("#btnCreateRequirementTrainDetail").click(function () {
        debugger;
        var x = $('#@Html.FieldIdFor(model => model.RequirementTrain_ID)').val();

        if (x == '') {
            ShowNotification('@ConstantMessages.Notification.TranslateString()', '@ConstantMessages.YouMustSaveFirst.TranslateString()', "k-block k-info-colored");
            return;
        }
        else {
            setTimeout(function () {
                PopUpCreate("windownTra_RequirementTrainDetail", titleCreatePopUp, '@HRM.Infrastructure.Security.ConstantPermission.Tra_RequirementTrainDetail')
            }, 1000)

            $("#RequirementTrain_ID").val($('#@Html.FieldIdFor(model => model.RequirementTrain_ID)').val());
        }
    });
    //Xử lý nút Delete
    $('#btnDelete').click(function (e) {

        if (selectedIds.length == 0) {
            DeleteFail();
            return;
        }
        DeleteSelected("grid_RequirementTrainDetail_info", '@_hrm_Main_Web' + "Tra_RequirementTrainDetail/RemoveSelected/", selectedIds, '@HRM.Infrastructure.Security.ConstantPermission.Tra_RequirementTrainDetail');
    });
    $(document).ready(function () {
        var url = '@_hrm_Main_Web' + "Tra_RequirementTrainDetail/Tra_RequirementTrainDetailInfo/";
        EditGridPopUp("grid_RequirementTrainDetail_info", "windownTra_RequirementTrainDetail", url, '@HRM.Infrastructure.Security.ConstantPermission.Tra_RequirementTrainDetail', titleUpdatePopup);
    });
    function filterFieldInfo() {
        debugger;
      
        var x = location.href.split('/');
        var arrCodeEmp = x[x.length - 1];
        var CodeEmp = arrCodeEmp.split('#');
        var _strCodeEmp = CodeEmp[0].split('&');
        var strSplit = _strCodeEmp[0].split('?');

        var strCodeEmp = strSplit[1].split('=');
        var strDateSeniority = strSplit[2].split('=');
        var dateSeniority = strDateSeniority[1].replaceAll("-","/");
        $("#DateSeniority").val(dateSeniority);
      
        $("#lstCodeEmp").val(strCodeEmp[1]);
        return {
            CodeEmp: strCodeEmp[1]
        };
    }

</script>
@Html.HiddenFor(mode => mode.DateSeniority)
<div class="VnRMain">
    @Html.HiddenFor(mode => mode.lstCodeEmp)
    @Html.HiddenFor(model=>model.isAnalysis)
    <table>
        <tbody>
            <tr><td colspan="3" style=""></td></tr>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                    <div style="display: block; float: left ;padding-top: 10px; ">
                        <div style="float:left">
                            <div class="hrm_box">
                                <div id="div7">
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(model=>model.PlanID)
                                        @Html.HiddenFor(mode => mode.RequirementTrain_ID)
                                        @Html.HiddenFor(mode => mode.ID)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _PlanID = new ComboBoxBuilderInfo()
                                            {
                                                DataTextField = "PlanName",
                                                DataValueField = "ID",
                                                Url = @_hrm_Hr_Service + "Tra_GetData/GetMultiPlanName",
                                                Value = @Html.DisplayFor(mode => mode.PlanID).ToString(),
                                                //OptionLabel = @ConstantDisplay.HRM_Attendance_SelectOvertimeType.TranslateString(),
                                                StyleCss = "width:200px"
                                            };
                                        }
                                        @(Html.VnrComboBoxFor(mode => mode.PlanID, _PlanID).Text(Model != null && Model.PlanName != null? Model.PlanName.ToString():string.Empty))
                                        @Html.ValidationMessageFor(model => model.PlanID)
                                    </div>
                                </div>
                                <div>
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(model => model.CourseID)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _CourseID = new ComboBoxBuilderInfo()
                                            {
                                                Name = "TraRequirementTrain_CourseID",
                                                DataTextField = "CourseName",
                                                DataValueField = "ID",
                                                Url = @_hrm_Hr_Service + "Tra_GetData/GetMultiTraCourse",
                                                Value = @Html.DisplayFor(mode => mode.CourseID).ToString(),
                                                Placeholder = @ConstantDisplay.HRM_Category_SelectCourse.TranslateString(),
                                                StyleCss = "width:200px",
                                                ServerFilter=true
                                            };
                                        }
                                        @Html.VnrComboBoxFor(mode => mode.CourseID, _CourseID)
                                    </div>
                                </div>
                                <div>
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(model => model.RequirementTrainName)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _RequirementTrainName = new TextBoxBuilderInfo()
                                            {
                                                //Name = "TraRequirementTrain_RequirementTrainName"
                                            };
                                        }
                                        @Html.VnrTextBoxFor(model => model.RequirementTrainName)
                                    </div>
                                </div>
                                <div>
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(model=>model.Code)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _Code = new TextBoxBuilderInfo()
                                            {

                                            };
                                        }
                                        @Html.VnrTextBoxFor(model=>model.Code)
                                    </div>
                                </div>
                                <div>
                                    <div class="FieldTitle170">
                                        @Html.Label(ConstantDisplay.HRM_Tra_RequirementTrain_RequetDateFrom.TranslateString())
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _DateFrom = new DatePickerBuilderInfo()
                                            {
                                                Name = "TraRequirementTrain_DateFrom",
                                                StyleCss = "width:97.5px",
                                            };
                                          
                                            @Html.VnrDatePickerFor(model => model.DateFrom, _DateFrom)
                                         
                                        }
                                        @{
                                            var _DateTo = new DatePickerBuilderInfo()
                                            {
                                                Name = "TraRequirementTrain_DateTo",
                                                StyleCss = "width:97.5px",
                                            };
                                             @Html.VnrDatePickerFor(model => model.DateTo, _DateTo)
                                        }

                                    </div>
                                </div>
                                <div>
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(model => model.IsTrainingOutside)
                                    </div>
                                    <div class="FieldValue">
                                        @Html.VnrRadioButtonFor(model => model.IsTrainingInside, "TraRequirementTrain_IsTrainingOutside")
                                        @Html.VnrLabelFor(model => model.IsTrainingInside)
                                        @Html.VnrRadioButtonFor(model => model.IsTrainingOutside, "TraRequirementTrain_IsTrainingOutside")
                                        @Html.VnrLabelFor(model => model.IsTrainingOutside)
                                    </div>
                                </div>

                                <div id="div13">
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(mode => mode.Status)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _Status = new DropDownListBuilderInfo()
                                            {
                                                Name = "TraRequirementTrain_Status",
                                                DataTextField = "Text",
                                                DataValueField = "Value",
                                                BindTo = lstStatus,
                                                OptionLabel = @ConstantDisplay.HRM_Category_SelectStatus.TranslateString(),
                                                StyleCss = "width:200px"
                                            };
                                        }
                                        @(Html.VnrDropDownListFor(mode => mode.Status, _Status))
                                        @Html.ValidationMessageFor(model => model.Status)
                                    </div>
                                </div>
                                <div id="div2">
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(mode => mode.Description)

                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _Description = new TextAreaBuilderInfo()
                                            {

                                            };
                                        }
                                        @Html.VnrTextAreaFor(model => model.Description)
                                    </div>
                                </div>
                                <div>
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(model => model.Target)
                                    </div>
                                    <div class="FieldValue">
                                        @Html.VnrTextAreaFor(model => model.Target)
                                    </div>
                                </div>
                                <div id="div2">
                                    <div class="FieldTitle170">

                                        @Html.VnrLabelFor(mode => mode.UserApproveID)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _UserApproveID = new ComboBoxBuilderInfo()
                                            {
                                                Name = "TraRequirementTrain_UserApproveID",
                                                DataTextField = "UserInfoName",
                                                DataValueField = "ID",
                                                Url = @_hrm_Hr_Service + "Sys_GetData/GetMultiUserApproved_" + ApproveType.E_TRA_REQUIREMENTTRAIN.ToString(),
                                                Placeholder = ConstantDisplay.HRM_System_SelectUserApprove.TranslateString(),
                                            };
                                        }
                                        @Html.VnrComboBoxFor(model => model.UserApproveID, _UserApproveID)
                                    </div>
                                </div>
                                <div id="div2">
                                    <div class="FieldTitle170">

                                        @Html.VnrLabelFor(mode => mode.UserApproveID2)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _UserApproveID2 = new ComboBoxBuilderInfo()
                                            {
                                                Name = "TraRequirementTrain_UserApproveID2",
                                                DataTextField = "UserInfoName",
                                                DataValueField = "ID",
                                                Url = @_hrm_Hr_Service + "Sys_GetData/GetMultiUserApproved_" + ApproveType.E_TRA_REQUIREMENTTRAIN.ToString(),
                                                Placeholder = ConstantDisplay.HRM_System_SelectUserApprove.TranslateString(),
                                            };
                                        }
                                        @Html.VnrComboBoxFor(model => model.UserApproveID2, _UserApproveID2)
                                    </div>
                                </div>
                                <div id="div2">
                                    <div class="FieldTitle170">

                                        @Html.VnrLabelFor(mode => mode.UserApproveID3)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _UserApproveID3 = new ComboBoxBuilderInfo()
                                            {
                                                Name = "TraRequirementTrain_UserApproveID3",
                                                DataTextField = "UserInfoName",
                                                DataValueField = "ID",
                                                Url = @_hrm_Hr_Service + "Sys_GetData/GetMultiUserApproved_" + ApproveType.E_TRA_REQUIREMENTTRAIN.ToString(),
                                                Placeholder = ConstantDisplay.HRM_System_SelectUserApprove.TranslateString(),
                                            };
                                        }
                                        @Html.VnrComboBoxFor(model => model.UserApproveID3, _UserApproveID3)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div style="float:left;">
                            <div class="hrm_box">
                                @*<div id="div3">
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(mode => mode.PersonRequirement)
                                    </div>
                                    <div class="FieldValue">
                                        @(Html.VnrTextBoxFor(mode => mode.PersonRequirement))
                                    </div>
                                </div>*@


                                <div id="div4" class="DivContentTitleValue">
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(mode => mode.PersonRequirement)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            IEnumerable valueProfile = new string[] { };
                                            if (Model != null)
                                            {
                                                valueProfile = new[] { new { ProfileName =Model.ProfileName, ID = Model.ProfileID } };
                                            }
                                        }
                                        @{
                                            var _profilename = new MultiSelectBuilderInfo()
                                             {
                                                 Name = "TraRequirementTrain_ProfileID",
                                                 DataTextField = "ProfileName",
                                                 DataValueField = "ID",
                                                 Url = @_hrm_Hr_Service + "HrMultiSelect/GetMultiProfile",
                                                 MaxSelectedItems = 1,
                                                 Width = 200,
                                                 Value = valueProfile
                                              
                                             };
                                        }
                                        @Html.VnrMultiSelectFor(mode => mode.ProfileID, _profilename)
                                    </div>

                                </div>
                                <div id="div3">

                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(mode => mode.TrainingDeptIdea)
                                    </div>
                                    <div class="FieldValue">
                                   
                                        @(Html.VnrTextAreaFor(mode => mode.TrainingDeptIdea))

                                    </div>
                                </div>
                                <div id="div3">

                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(mode => mode.ManagementDeptIdea)
                                    </div>
                                    <div class="FieldValue">
                                
                                        @(Html.VnrTextAreaFor(mode => mode.ManagementDeptIdea))

                                    </div>
                                </div>
                                <div id="div3">

                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(mode => mode.Notes)
                                    </div>
                                    <div class="FieldValue">
                                
                                        @(Html.VnrTextAreaFor(mode => mode.Notes))

                                    </div>
                                </div>
                                <div id="div3">

                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(mode => mode.ResultAchieved)
                                    </div>
                                    <div class="FieldValue">
                                 
                                        @(Html.VnrTextAreaFor(mode => mode.ResultAchieved))

                                    </div>
                                </div>
                                <div id="div3">

                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(mode => mode.StatusApprove)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _StatusApprove = new TextBoxBuilderInfo()
                                             {
                                                 Name = "TraRequirementTrain_StatusApprove",
                                                 CssStyle = "width:200px;background-color:WhiteSmoke"
                                             };
                                        }
                                        @(Html.VnrTextBoxFor(mode => mode.StatusApprove, _StatusApprove))
                                    </div>
                                </div>
                                <div id="div3">

                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(mode => mode.StatusApprove2)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _StatusApprove2 = new TextBoxBuilderInfo()
                                             {
                                                 Name = "TraRequirementTrain_StatusApprove2",
                                                 CssStyle = "width:200px;background-color:WhiteSmoke"
                                             };
                                        }
                                        @(Html.VnrTextBoxFor(mode => mode.StatusApprove2, _StatusApprove2))
                                    </div>
                                </div>
                                <div id="div3">

                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(mode => mode.StatusApprove3)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _StatusApprove3 = new TextBoxBuilderInfo()
                                             {
                                                 Name = "TraRequirementTrain_StatusApprove3",
                                                 CssStyle = "width:200px;background-color:WhiteSmoke"
                                             };
                                        }
                                        @(Html.VnrTextBoxFor(mode => mode.StatusApprove3, _StatusApprove3))
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
            <tr>
                <td class="Box_Bottom_Left"></td>
                <td class="Box_Bottom_Mid"></td>
                <td class="Box_Bottom_Right"></td>
            </tr>
        </tbody>
    </table>
    @Html.HiddenFor(mode => mode.ID)
</div>
<div class="commandToolBarWidge">
    <div class="GridTitle">
        @Html.VnrLabel(ConstantDisplay.HRM_Tra_RequirementTrainDetail_Title.TranslateString())
    </div>
    @*<div style="float:right">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateRequirementTrainDetail", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
    </div>*@
    <div class="clear"></div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @{

        
        var valueFieldsRequirementTrainDetail = new[]
                        {
                            Tra_TraineeModel.FieldNames.CodeEmp,
                            Tra_TraineeModel.FieldNames.ProfileName,
                            Tra_TraineeModel.FieldNames.CourseName,
                           
                        };

        var sizeFieldsRequirementTrainDetail = new Dictionary<string, int>()
                        {

                            {Tra_TraineeModel.FieldNames.ProfileName,140},
                            {Tra_TraineeModel.FieldNames.CodeEmp, 120},
                            {Tra_TraineeModel.FieldNames.CourseName, 120},
                           
                      

                        };

        var filterableRequirementTrainDetail = new Dictionary<string, bool>()
        {

        };

        var displayFieldsRequirementTrainDetail = new Dictionary<string, string>()
                        {

                            {Tra_TraineeModel.FieldNames.ProfileName, ConstantDisplay.HRM_Tra_RequirementTrainDetail_ProfileName},
                            {Tra_TraineeModel.FieldNames.CodeEmp, ConstantDisplay.HRM_HR_Profile_CodeEmp},
                            {Tra_TraineeModel.FieldNames.CourseName, ConstantDisplay.HRM_Tra_Class_CourseName},
                            
                        };

        var grid_RequirementTrainDetail = new GridBuilderInfo
        {

            Name = "grid_RequirementTrainDetail_AnalysisiInfo",
            ValueFields = valueFieldsRequirementTrainDetail,
            SizeFields = sizeFieldsRequirementTrainDetail,
            DisplayFields = displayFieldsRequirementTrainDetail,
            ReadActionUrl = _hrm_Hr_Service + "Tra_GetData/GetDataTraineeByCodeEmp",
            AutoBind = true,
            ShowDeleteButton = true,
            GridHeight = 220,
            ShowCheckAll = false,
            ReadData = "filterFieldInfo"
        };
    }
    @(Html.VnrGrid<Tra_TraineeModel>(grid_RequirementTrainDetail))
</div>
@*<div>
    <script>
        $(document).ready(function () {
            debugger;
            //var _CourseID = $('#CourseID').val();


            var x = location.href.split('/');
            var arrCodeEmp = x[x.length - 1];
            var _str = arrCodeEmp.split('#');
            var _strcode = _str[0].split('&');
            var _strCourseCode = _strcode[1].split('=');

            if (_strCourseCode.length>1) {
                //var _CourseMulti = $("#TraRequirementTrain_CourseID").data("kendoMultiSelect");
                //_CourseMulti.dataSource.filter({});
                //var _CourseCodes = _strCourseCode[1].split(",");
                //_CourseMulti.value(_CourseCodes);

                $.ajax({
                    type: 'POST',
                    url: '@_hrm_Hr_Service' + 'Tra_GetData/GetCourseByCode',
                    data: { courseCode: _strCourseCode[1] },
                    dataType: 'json',
                    async: false,
                    success: function (data) {
                        debugger;
                        var _CourseMulti = $("#TraRequirementTrain_CourseID").data("kendoMultiSelect");
                        _CourseMulti.setDataSource(data);
                        _CourseMulti.refresh();

                        _CourseMulti.dataSource.filter({});
                        //var _CourseCodes = _strCourseCode[1].split(",");
                        //_CourseMulti.value(_CourseCodes);

                        var _strCoursids="";
                        if(data != null && data.length>0)
                        {
                            for (var i = 0; i <data.length; i++) {
                                _strCoursids += data[i].ID+",";
                            }
                        }
                        if(_strCoursids!="")
                        {
                            var _CourseIds = _strCoursids.split(",");
                            _CourseMulti.value(_CourseIds);
                        }
                    }
                });
            }
        });
    </script>
</div>*@