@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@model HRM.Presentation.Category.Models.Cat_TAMScanReasonMissModel
@{
    ViewBag.Title = "Cat_TAMScanReasonMiss";
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var tamScanRecordId = Model == null ? Guid.Empty : Model.ID;
}

<script>

    SetFieldRequired();
    var data = SetCharacteFieldRequired();

    function onSaveDataPopUp() {
            onlySave($('#form_Cat_TAMScanReasonMiss'), '@_hrm_Hr_Service', 'api/Cat_TAMScanReasonMiss/', 'grid_Cat_TAMScanReasonMiss', 'windowCat_TAMScanReasonMiss');
            return false;
    }

    function onSave() {
        onSaveAndContinue($('#form_Cat_TAMScanReasonMiss'), '@_hrm_Hr_Service', 'api/Cat_TAMScanReasonMiss/', 'grid_Cat_TAMScanReasonMiss', 'windowCat_TAMScanReasonMiss');
        return false;
    }

    function onSaveClose() {
        onSaveAndClose($('#form_Cat_TAMScanReasonMiss'), '@_hrm_Hr_Service', 'api/Cat_TAMScanReasonMiss/', 'grid_Cat_TAMScanReasonMiss', 'windowCat_TAMScanReasonMiss');
        return false;
    }
</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Cat_TAMScanReasonMiss" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div>

                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.TAMScanReasonMissName)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.TAMScanReasonMissName, "width:300px")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.Code, "width:150px")
                    </div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.IsFullPay)
                    </div>
                    <div class="FieldValue">
                        @*@{
                             var _IsFullPay = new CheckBoxBuilderInfo() { };
                        }
                        @Html.VnrCheckBoxFor(mode => mode.IsFullPay, _IsFullPay)*@
                        @Html.VnrCheckBoxFor(mode => mode.IsFullPay)
                    </div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.MealAllowanceTypeSettingID)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _MealAllowanceTypeSettingName = new ComboBoxBuilderInfo()
                            {
                                DataTextField = "MealAllowanceTypeSettingName",
                                DataValueField = "ID",
                                Url = @_hrm_Hre_Service + "Canteen_GetData/GetMultiMealAllowanceTypeSetting",
                                StyleCss = "width:300px;",
                                //Value = Model == null ? string.Empty: Model.MealAllowanceTypeSettingName
                            };
                            if (Model != null)
                            {
                                _MealAllowanceTypeSettingName.Value = Model.MealAllowanceTypeSettingID == null ? string.Empty : Model.MealAllowanceTypeSettingID.ToString();
                                _MealAllowanceTypeSettingName.Autobind = true;
                            }
                        }
                        @Html.VnrComboBoxFor(mode => mode.MealAllowanceTypeSettingID, _MealAllowanceTypeSettingName)
                    </div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.Description)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Description)
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-Cat_TAMScanReasonMiss", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-Cat_TAMScanReasonMiss", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-Cat_TAMScanReasonMiss", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}

