@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Category.Models
@using HRM.Presentation.UI.Controls.Kendo

@model HRM.Presentation.Category.Models.Cat_KPIBonusModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
}

<script>
    //var Validator = CheckValidate();
    SetFieldRequired();

    function onSave() {
      //  if (CheckValidate(data)) {
        onSaveAndContinue($('#form_cat_CatKPIBonus'), '@_hrm_Hr_Service', 'api/Cat_KPIBonus/', '@ConstantControlName.HRM_Category_KPIBonus_Grid_Name', '@ConstantControlName.HRM_Category_KPIBonus_PopUp_Name');
        // }
        return false;
    }

    function onSaveClose() {
      //  if (CheckValidate(data)) {
        onSaveAndClose($('#form_cat_CatKPIBonus'), '@_hrm_Hr_Service', 'api/Cat_KPIBonus/', '@ConstantControlName.HRM_Category_KPIBonus_Grid_Name', '@ConstantControlName.HRM_Category_KPIBonus_PopUp_Name');
       // }
        return false;
    }
    function onSaveDataPopUp() {

        //    if (CheckValidate(data)) {
        //   if (!checkDuplicationCode()) {
        onlySave($('#form_cat_CatKPIBonus'), '@_hrm_Hr_Service', 'api/Cat_KPIBonus/', '@ConstantControlName.HRM_Category_KPIBonus_Grid_Name'); return false;
        //    }
        // }
    }

</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_cat_CatKPIBonus" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">
                        @{
    var _Code = new TextBoxBuilderInfo()
    {
        Width = 300,
        Name = "CatKPIBonusInfo_Code"
    };
    if (Model != null)
    {
        _Code.Value = Model == null ? string.Empty : Model.Code;
    }
                        }
                        @Html.VnrTextBoxFor(mode => mode.Code, _Code)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.KPIBonusName)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.KPIBonusName, "width: 300px")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.IsTotalRevenue)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrCheckBoxFor(mode => mode.IsTotalRevenue)
                    </div>
                </div>
                @*<div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Value)
                    </div>
                    <div class="FieldValue">
                        @{
    var _Value = new NumericTextBoxBuilderInfo<double>()
    {
        Name = "KPIBonusIfo_Value",
        //Format = ConstantFormat.HRM_Format_Number_Double.ToString(),
        Format = "#\\%",
        Min = 0,
        Max = 100
    };
                        }
                        @(Html.VnrNumericTextBoxFor(model => model.Value, _Value))
                    </div>
                </div>*@

                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.UnitID)
                    </div>
                    <div class="FieldValue">
                        @{
                        var Unit = new ComboBoxBuilderInfo()
                        {
                        Name = "KPIBonusIfo_UnitID",
                        DataTextField = "UnitName",
                        DataValueField = "ID",
                        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiUnit",
                        StyleCss = "width:300px;",
                        Value = Model == null ? string.Empty : Model.UnitID.ToString(),
                        };
                        }
                        @(Html.VnrComboBoxFor(mode => mode.UnitID, Unit).Text(Model == null ? string.Empty : Model.UnitName))
                    </div>
                </div>

                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Note)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Note, "width:500px;height:100px;")
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-catKPIBonus", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-catKPIBonus", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-catKPIBonus", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })

                    </div>
                </div>
            </td>
        </tr>
    </table>
}