@using HRM.Infrastructure.Utilities;
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.Category.Models;
@using HRM.Infrastructure.Security;

@model Cat_TopicSearchModel

@{
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    Layout = null;
}

@{
    var window = new WindowBuilderInfo
    {
        Name = "windowCat_Topic",
        Visible = false,
        Width = 700,
        LoadContentFrom = @_hrm_Main_Web + "Cat_Topic/CatTopicInfo/",
    };
}
@(Html.VnrWindow(window))

@{
    var windowError = new WindowBuilderInfo
    {
        Name = "windowErrorTopic",
        Visible = false,
        Height = 150,
        Width = 300,
        Title = ConstantDisplay.MessageError.TranslateString(),
        Content = ConstantDisplay.YouMustSaveTopicFirst.TranslateString()
    };
}
@(Html.VnrWindow(windowError))

<script>
    var gridName = '@ConstantControlName.HRM_Cat_Topic_Grid_Name';
    var popUpName = '@ConstantControlName.HRM_Cat_Topic_PopUp_Name';
    var titleEditTopicPopUp = '@Html.Raw(ConstantDisplay.HRM_Cat_Topic_Update_Title.TranslateString())';
    var titleCreateTopicPopUp = '@Html.Raw(ConstantDisplay.HRM_Cat_Topic_Create_Title.TranslateString())';


    //Data khi tìm kiếm
    @*function filterFieldInfo() {
        debugger;
        var fieldList = $('#valueFieldsGrid').val();
        var _TopicName = $('#TopicName1').val();
        var _TopicCode = $('#TopicCode1').val();
        var _MinimumScore = $('#@Html.FieldIdFor(model => model.MinimumScore)').val();
        var _MaximumScore=$('#@Html.FieldIdFor(model => model.MaximumScore)').val();
        return {
            TopicName: _TopicName,
            TopicCode: _TopicCode,
            MinimumScore: _MinimumScore,
            MaximumScore: _MaximumScore,
            IsExport: false,
            //ValueFields: $('#valueFieldsGrid').val()
            ValueFields: fieldList,
        };
    }*@

    function filterFieldInfo_Search(isExport) {
        debugger;
        return {
            TopicName: $('#TopicName1').val(),
            TopicCode: $('#TopicCode1').val(),
            MinimumScore: $('#@Html.FieldIdFor(model => model.MinimumScore)').val(),
            MaximumScore: $('#@Html.FieldIdFor(model => model.MaximumScore)').val(),
            IsExport: isExport,
            ValueFields: $('#valueFieldsGrid').val()
        };
    }

    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        //Show Hide Panel
        ShowHidePanel();
        //Jump Anchor
        jumpAnchor("anchor");
        $("#btnSearch").click(function () {
            ReadGrid(gridName);
        });

        //Xử lý Edit popup
        var url = '@_hrm_Main_Web' + "Cat_Topic/CatTopicInfo/";
        EditGridPopUp("@ConstantControlName.HRM_Cat_Topic_Grid_Name", "windowCat_Topic", url, '@ConstantPermission.Cat_Topic', titleEditTopicPopUp);
    });

    //Xử lý Create
    $("#btnCreateCatTopic").click(function () {
        var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Cat_Topic');
        if (!isAccess) {
            return;
        }
        PopUpCreate("windowCat_Topic", titleCreateTopicPopUp, '@ConstantPermission.Cat_Topic');
    });

    //Xử Lý grid
    GridCheckbox(gridName);

    //Xử Lý button delete
    $('#btnDelete').click(function (e) {
        if (selectedIds == "") {
            DeleteFail();
            return;
        }
        
        e.preventDefault();
        DeleteSelected(gridName, '@_hrm_Main_Web' + "Cat_Topic/RemoveSelected/", selectedIds.join(","), '@ConstantPermission.Cat_Topic');
        return false;
    });

    $(document).ready(function () {
        ShowHidePanel();
    });

    $("#btnExportAll").click(function () {
        debugger;
        var grid = $('#@ConstantControlName.HRM_Cat_Topic_Grid_Name').data("kendoGrid");
        if (grid.dataSource.total() == 0) {
            ExportAllFail();
            return;
        }
        var urlGetData = '@_hrm_Hre_Service' + "Cat_GetData/ExportTopicList/";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo_Search(true);
        ExportAll(urlGetData, dataParameter, urlDownload, '@ConstantPermission.Cat_Topic');
    });
</script>

<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            <div class="contendSearchWidge">
                <div class="hrm_box">
                    <div>
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(model => model.TopicCode)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBox("TopicCode1")
                        </div>
                    </div>
                    <div>
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(model => model.TopicName)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBox("TopicName1")
                        </div>
                    </div>
                    </div>
                    <div class="hrm_box">
                        <div>
                            <div class="FieldTitle">
                                @Html.VnrLabel(ConstantDisplay.HRM_Tra_Course_Score.TranslateString())
                            </div>
                            <div class="FieldValue">
                                @{
                                    var numbericmin = new NumericTextBoxBuilderInfo<double>()
                                    {
                                        StyleCss = "width:100px",
                                        Placeholder = ConstantDisplay.HRM_Tra_Course_Min.TranslateString()
                                    };
                                }
                                @Html.VnrNumericTextBoxFor(m => m.MinimumScore, numbericmin)
                                @{
                                    var numbericmax = new NumericTextBoxBuilderInfo<double>()
                                    {
                                        StyleCss = "width:100px",
                                        Placeholder = ConstantDisplay.HRM_Tra_Course_Max.TranslateString()
                                    };
                                }
                                @Html.VnrNumericTextBoxFor(m => m.MaximumScore, numbericmax)
                            </div>
                        </div>
                    </div>
                </div>
        </div>
    </div>
</div>
<div class="commandToolBarWidge" id="anchor">
    <div style="float:left">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateCatTopic", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    </div>
    <div style="float:right">
         @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExportAll", Content = ConstantAction.HRM_Common_ExportAll.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnChangeColumnTopic", Content = ConstantDisplay.HRM_ChangeColumn.TranslateString(), ImageUrl = ConstantPath.Hrm_ChangeColumnIcon })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
    </div>
    <div class="clear"></div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @{
        var columnMode = string.Empty;
        var defaultColumnMode = string.Empty;
        var userId = Session[SessionObjects.UserId];
        //Lấy tên lưới cộng thêm tên của control và action để tránh trùng nhau
        var gridControlName = ConstantControlName.HRM_Cat_Topic_Grid_Name + "__Cat_Topic_Index";
        HRM.Presentation.Main.Controllers.Sys_ColumnModeController control = new HRM.Presentation.Main.Controllers.Sys_ColumnModeController();
        //Get thông tin cấu hình trong database
        GridBuilderModel gridInfo = control.GetGridBuilderInfo(userId + "," + gridControlName);

        var grid = new GridBuilderInfo
        {
            Name = ConstantControlName.HRM_Cat_Topic_Grid_Name,
            ShowCommand = false,
            ReadActionUrl = _hrm_Hre_Service + "Cat_GetData/GetTopicList/",
            ReadData = "filterFieldInfo_Search",
        };

        if (gridInfo != null && gridInfo.ValueFields != null && gridInfo.ValueFields.Any())
        {
            grid.ValueFields = gridInfo.ValueFields;
            grid.SizeFields = gridInfo.SizeFields;
            grid.Filterable = gridInfo.FilterFields;
            grid.DisplayFields = gridInfo.DisplayFields;
            grid.LockedFields = gridInfo.LockedFields;
            grid.GroupFields = gridInfo.GroupFields;
            if (gridInfo.PageSize > 0)
            {
                grid.PageSize = gridInfo.PageSize;
            }
            columnMode = gridInfo.StringXml;
        }
        else
        {
            grid.ValueFields = new[]
            {
                Cat_TopicModel.FieldNames.Code,
                Cat_TopicModel.FieldNames.TopicName,
                Cat_TopicModel.FieldNames.CertificateName,
                Cat_TopicModel.FieldNames.MinimumScore,
                Cat_TopicModel.FieldNames.MaximumScore,
                Cat_TopicModel.FieldNames.ScoreType
            
            };

            grid.SizeFields = new Dictionary<string, int>()
            {
                {Cat_TopicModel.FieldNames.Code,100},
                {Cat_TopicModel.FieldNames.TopicName,130},
                {Cat_TopicModel.FieldNames.CertificateName,130},
                {Cat_TopicModel.FieldNames.MinimumScore,120},
                {Cat_TopicModel.FieldNames.MaximumScore,120},
                {Cat_TopicModel.FieldNames.ScoreType,120}
            };

            grid.Filterable = new Dictionary<string, bool>()
            {
                {Cat_TopicModel.FieldNames.TopicName,true},
            };

            var displayFields = new Dictionary<string, string>()
            {
                {Cat_TopicModel.FieldNames.Code,ConstantDisplay.HRM_Cat_Topic_Code},
                {Cat_TopicModel.FieldNames.TopicName,ConstantDisplay.HRM_Cat_Topic_TopicName},
                {Cat_TopicModel.FieldNames.CertificateName,ConstantDisplay.HRM_Cat_Topic_CertificateID},
                {Cat_TopicModel.FieldNames.MinimumScore,ConstantDisplay.HRM_Cat_Topic_MinimumScore},
                {Cat_TopicModel.FieldNames.MaximumScore,ConstantDisplay.HRM_Cat_Topic_MaximumScore},
                {Cat_TopicModel.FieldNames.ScoreType,ConstantDisplay.HRM_Cat_Topic_ScoreType},
            };
            defaultColumnMode = control.SetDefaultGridBuilderInfo(grid);
        }
    }

    @(Html.VnrGrid<Cat_TopicModel>(grid))
    <script>
        ClickButtonChangeColum("btnChangeColumnTopic", "Cat_TopicModel");
        $(document).ready(function () {
            $("#" + '@ConstantControlName.HRM_ChangeColum_Grid_Name').val('@gridControlName');
            $("#" + '@ConstantControlName.HRM_ChangeColum_ColumMode_Name').val('@Html.Raw(columnMode)');
            $("#" + '@ConstantControlName.HRM_ChangeColum_Default_ColumMode_Name').val('');
            $("#" + '@ConstantControlName.HRM_ChangeColum_Default_ColumMode_Name').val('@Html.Raw(defaultColumnMode)');
        });
    </script>
</div>
@{
    var listValueField = grid.ValueFields;
    var valueFields1 = string.Empty;
    if (listValueField != null)
    {
        for (int i = 0; i < listValueField.Count(); i++)
        {
            valueFields1 += "," + listValueField[i];
        }
    }
}
@Html.Hidden("valueFieldsGrid", valueFields1)