@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using System.Collections
@model HRM.Presentation.Canteen.Models.Can_MealRecordModel

@{
    Layout = null;
    var _hrm_Can_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var mealAllowanceTypeSettingId = Model == null ? Guid.Empty : Model.ID;
}
<script>
    var data = SetCharacteFieldRequired();

    @*function checkDuplicationMealAllowanceTypeSetting() {

        var code = $("#MealAllowanceTypeCode").val();
        var id = '@mealAllowanceTypeSettingId';
        var data = { code: code, id: id };

        var isduplicate = checkDuplicate('@_hrm_Can_Service', 'Canteen_GetData', 'CheckDuplicateMealAllowanceTypeSetting', data, "MealAllowanceTypeCode");
        return isduplicate;
    }*@

    function onSaveAndContinuePopUp() {

        if (CheckValidate(data)) {
            //  if (!checkDuplicationMealAllowanceTypeSetting()) {
            onSaveAndContinue($('#form_can_MealRecord'), '@_hrm_Can_Service', 'api/Can_MealRecord/', '@ConstantControlName.HRM_Canteen_MealRecord_Grid_Name', 'windowCanMealRecord'); return false;
            // }
        }
    }

    function onSaveClosePopUp() {

        if (CheckValidate(data)) {
            //  if (!checkDuplicationMealAllowanceTypeSetting()) {
            onSaveAndClose($('#form_can_MealRecord'), '@_hrm_Can_Service', 'api/Can_MealRecord/', '@ConstantControlName.HRM_Canteen_MealRecord_Grid_Name', 'windowCanMealRecord'); return false;
            // }
        }
    }

    function onSaveDataPopUp() {

        if (CheckValidate(data)) {
            //   if (!checkDuplicationLocation()) {
            onlySave($('#form_can_MealRecord'), '@_hrm_Can_Service', 'api/Can_MealRecord/', '@ConstantControlName.HRM_Canteen_MealRecord_Grid_Name'); return false;
            // }
        }
    }

    $(document).ready(function () {
        $("#MealRecordInfo_CateringID").prop("readonly", true);
        $("#MealRecordInfo_CanteenID").prop("readonly", true);
        document.getElementById("MealRecordInfo_Amount").readOnly = true;
	    document.getElementById("MachineCode").readOnly = true;
    });

    function eSelect() {
        
        var _line = $('#MealRecordInfo_LineID').data('kendoComboBox').value();

        $.ajax({
            url: '@_hrm_Can_Service' + 'Canteen_GetData/GetLineByID',
            type: 'POST',
            data: { ID: _line },
            success: function (strResponse) {
                
              //  var rs = strResponse.Data[0];
                $('#MealRecordInfo_CateringID').data('kendoComboBox').value(strResponse.CateringID);
                $('#MealRecordInfo_CanteenID').data('kendoComboBox').value(strResponse.CanteenID);
                $('#MachineCode').val(strResponse.MachineCode);
                $('#MealRecordInfo_Amount').data('kendoNumericTextBox').value(strResponse.Amount);
            },
        });
    };


</script>
@*<script>
        var data = SetCharacteFieldRequired();
        function onSaveNew() {

            if (CheckValidate(data)) {
                onSaveAndContinue($('#form_can_MealAllowance'), '@_hrm_Can_Service', 'api/Can_MealAllowanceTypeSetting/', '@ConstantControlName.HRM_Canteen_MealAllowanceTypeSetting_Grid_Name', '@ConstantControlName.HRM_Canteen_MealAllowanceTypeSetting_PopUp_Name'); return false;
            }
        }

        function onSaveClose() {
            if (CheckValidate(data)) {
                onSaveAndClose($('#form_can_MealAllowance'), '@_hrm_Can_Service', 'api/Can_MealAllowanceTypeSetting/', '@ConstantControlName.HRM_Canteen_MealAllowanceTypeSetting_Grid_Name', '@ConstantControlName.HRM_Canteen_MealAllowanceTypeSetting_PopUp_Name'); return false;
            }
        }


        //$("#CardCode").attr('readonly', true);
        @*function select(e) {
            var dataItem = $("#ProfileID").data("kendoMultiSelect");
            var rs = dataItem.value();
            $.ajax({
                url: '@_hrm_Hre_Service' + 'Hre_GetData/GetCardCodeByProfileID',
                data: { id: rs[0] },
                type: 'POST',
                success: function (data) {

                    $("#CardCode").val(data);
                }
            });

        };

    </script>*@
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_can_MealRecord" }))
{
    @Html.HiddenFor(model => model.ID)

    <table style="width:100%">
        <tbody>

            <tr>

                <td valign="top">
                    <div>
                        <div id="div1">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.ProfileID)
                                @Html.HiddenFor(model => model.ID)
                            </div>
                            <div class="FieldValue">
                                @{
    IEnumerable valueProfile = new string[] { };
    if (Model != null)
    {
        valueProfile = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
    }
                                }
                                @{
    var profile = new MultiSelectBuilderInfo()
    {
        Width = 300,
         DataTextField = "ProfileName",
         DataValueField = "ID",
         Url = @_hrm_Hre_Service + "HrMultiSelect/GetMultiProfile",
         Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
         MaxSelectedItems = 1,
         Value = valueProfile
     };
                                }
                                @(Html.VnrMultiSelectFor(mode => mode.ProfileID, profile))
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div2">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.WorkDay)
                            </div>
                            <div class="FieldValue">
                                @{
                                        var _workDate = new DatePickerBuilderInfo()
                                        {
                                            StyleCss = "width:120px",
                                            Name = "MealRecordInfo_WorkDay"
                                        };
                                }
                                @Html.VnrDatePickerFor(mode => mode.WorkDay, _workDate)
                            </div>
                        </div>

                        <div id="div2">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.TimeLog)
                            </div>
                            <div class="FieldValue">
                                @{
    var _time = new DateTimePickerBuilderInfo()
    {
        StyleCss = "width:120px",
                                        Name = "MealRecordInfo_TimeLog"
                                    };
                                }
                                @Html.VnrDateTimePickerFor(mode => mode.TimeLog, _time)
                            </div>
                        </div>
                        @*<div id="div7">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.MealAllowanceType)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var _MealAllowanceType = new ComboBoxBuilderInfo()
                                    {
                                        DataTextField = "MealAllowanceTypeName",
                                        DataValueField = "Id",
                                        Url = _hrm_Can_Service + "Canteen_GetData/GetMultiMealAllowanceTypeSetting",
                                        Placeholder = ConstantDisplay.HRM_Canteen_SelectMealAllowanceTypeName.TranslateString(),
                                        StyleCss = "width:200px",
                                        Name = "MealRecordInfo_MealAllowanceType"
        
                                    };
                                    if (Model != null)
                                    {
                                        _MealAllowanceType.Value = Model.MealAllowanceType == 0 ? string.Empty : Model.MealAllowanceType.ToString();
                                        _MealAllowanceType.Autobind = true;
                                    }
                                }
                                @Html.VnrComboBoxFor(mode => mode.MealAllowanceType, _MealAllowanceType)
                            </div>
                        </div>*@

                        <div id="div4">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.LineID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var _line = new ComboBoxBuilderInfo()
                                        {
                                            DataTextField = "LineName",
                                            DataValueField = "ID",
                                            Name = "MealRecordInfo_LineID",
                                            Url = _hrm_Can_Service + "Canteen_GetData/GetMultiLine",
                                            Placeholder = ConstantDisplay.HRM_Canteen_SelectLine.TranslateString(),
                                            StyleCss = "width:300px",
                                            EventChange = "eSelect"
                                        };
                                    if (Model != null)
                                    {
                                        _line.Value = Model.LineID == null ? string.Empty : Model.LineID.ToString();
                                        _line.Autobind = true;
                                    }
                                }
                                @Html.VnrComboBoxFor(mode => mode.LineID, _line)
                            </div>
                        </div>
                        <div id="div5">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.CateringID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var _catering = new ComboBoxBuilderInfo()
                                        {
                                            Name = "MealRecordInfo_CateringID",
                                            DataTextField = "CateringName",
                                            DataValueField = "ID",
                                            Url = _hrm_Can_Service + "Canteen_GetData/GetMultiCatering",
                                            Placeholder = ConstantDisplay.HRM_Canteen_SelectCatering.TranslateString(),
                                            StyleCss = "width:300px"
                                            
                                        };
                                    if (Model != null)
                                    {
                                        _catering.Value = Model.CateringID == null ? string.Empty : Model.CateringID.ToString();
                                        _catering.Autobind = true;
                                    }
                                }
                                @Html.VnrComboBoxFor(mode => mode.CateringID, _catering)
                            </div>
                        </div>
                        <div id="div6">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.CanteenID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var _canteen = new ComboBoxBuilderInfo()
                                        {
                                            Name = "MealRecordInfo_CanteenID",
                                            DataTextField = "CanteenName",
                                            DataValueField = "ID",
                                            Url = _hrm_Can_Service + "Canteen_GetData/GetMultiCanteen",
                                            Placeholder = ConstantDisplay.HRM_Canteen_SelectCanteen.TranslateString(),
                                            Value = Model == null ? string.Empty : Model.CanteenName,
                                            StyleCss = "width:300px; readonly: true; "
                                        };
                                    if (Model != null)
                                    {
                                        _canteen.Value = Model.CanteenID == null ? string.Empty : Model.CanteenID.ToString();
                                        _canteen.Autobind = true;
                                    }
                                }
                                @Html.VnrComboBoxFor(mode => mode.CanteenID, _canteen)
                            </div>
                        </div>

                        <div id="div8">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.MachineCode)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextBoxFor(mode => mode.MachineCode, "width: 300px")
                            </div>
                        </div>
                        <div id="div9">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.Amount)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var numericTextBoxAmount = new NumericTextBoxBuilderInfo<decimal>()
                                    {
                                        StyleCss = "width:300px; ",
                                        Format = "n0",
                                        Name = "MealRecordInfo_Amount"
                                       
                                    };
                                }
                                @Html.VnrNumericTextBoxFor(model => model.Amount, numericTextBoxAmount)
                            </div>

                        </div>
                    </div>
                </td>

            </tr>
            <tr>
                <td style="padding-top:2px; padding-bottom:10px;">
                    <div class="LineFooterCommandEdit">
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div>
                        <div class="FieldTitle150">

                        </div>
                        <div class="FieldValue">
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-MealRecordMissing", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveAndContinuePopUp", Name = "save-continue-MealRecordMissing", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClosePopUp", Name = "save-close-MealRecordMissing", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        </div>
                    </div>
                </td>
            </tr>
    </table>
}
