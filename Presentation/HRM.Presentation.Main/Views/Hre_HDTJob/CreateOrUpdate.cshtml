@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.UI.Controls.Kendo.MultiSelect
@using HRM.Presentation.UI.Controls.Kendo.DropDownList
@using HRM.Presentation.Hr.Models

@using HRM.Infrastructure.Utilities
@using System.Collections
@model HRM.Presentation.Hr.Models.Hre_HDTJobModel
@{
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
}
@{
    IList<SelectListItem> listType = Enum.GetValues(typeof(EnumDropDown.HDTJobType))
        .Cast<EnumDropDown.HDTJobType>()
        .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
        .ToList();

    SelectList data = new SelectList(listType, "Value", "Text");
}

<script>
    SetFieldRequired();
    var userLG = $('#UserLoginId').val();
    $('#@Html.FieldIdFor(model => model.UserLoginID)').val(userLG);
    function showInfo_Type(e) {

        var _HDTJobTypeID = $("#HDTJob1_HDTJobTypeID").val();
        $.ajax({
            type: 'POST',
            url: '@_hrm_Hr_Service' + "Cat_GetData/GetTypeHDTJobTypeID",
            data: { ID : _HDTJobTypeID[0] },
            dataType: 'json',
            async: false,
            success: function (data) {
                debugger;
                var comboType = $("#Type").data("kendoComboBox");
                comboType.value("");
                comboType.value(data[0].Value);
                comboType.text(data[0].Text);
                comboType.refresh();

                var multiHDTJob = $("#HDTJobGroupID").data("kendoMultiSelect");
                multiHDTJob.dataSource.filter({});
                multiHDTJob.value(data[0].GroupID);
            }
        });
    }

</script>

<div class="VnRMain">
    <table style="width:100%">
        <tbody>
            <tr><td colspan="3" style=""></td></tr>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                <td valign="top">

                    <div style="float:left; width:510px">
                        <div id="div1">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.ProfileID)
                                @Html.HiddenFor(mode => mode.ID)
                                @Html.HiddenFor(mode => mode.StatusOut)
                                @Html.HiddenFor(mode => mode.UserLoginID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    IEnumerable valueProfile = new string[] { };
                                    if (Model != null)
                                    {
                                        valueProfile = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
                                    }
                                }
                                @{
                                    var Profile = new MultiSelectBuilderInfo()
                                    {
                                        DataTextField = Hre_RewardModel.FieldNames.ProfileName,
                                        DataValueField = Hre_RewardModel.FieldNames.ID,
                                        Url = @_hrm_Hr_Service + "Hre_GetData/GetMultiProfile",
                                        Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                                        MaxSelectedItems = 1,
                                        Width = 250,
                                        Value = valueProfile
                                    };
                                }
                                @(Html.VnrMultiSelectFor(mode => mode.ProfileID, Profile))
                            </div>

                        </div>
                        <div id="div4">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.DateFrom)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var _dateFrom = new DatePickerBuilderInfo()
                                    {
                                        Name = "HDTJob_DateFrom",
                                        StyleCss = "width:100px"
                                    };
                                }
                                @Html.VnrDatePickerFor(model => model.DateFrom, _dateFrom)
                            </div>

                        </div>
                        <div id="div5">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.DateTo)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var _dateTo = new DatePickerBuilderInfo()
                                    {
                                        StyleCss = "width:100px"
                                    };
                                }
                                @Html.VnrDatePickerFor(model => model.DateTo, _dateTo)
                            </div>
                        </div>
                    </div>
                    <div style="display: block; float: left; width: 500px">
                        @*<div id="div8">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.HDTJobGroupID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var _HDTJobGroupID = new ComboBoxBuilderInfo()
                                     {
                                         DataTextField = "HDTJobGroupName",
                                         DataValueField = "ID",
                                         ServerFilter = true,
                                         FilterType = FilterType.Contains,
                                         Url = _hrm_Hr_Service + "Cat_GetData/GetMultiHDTJobGroup",
                                         Value = Model == null ? string.Empty : Model.HDTJobGroupID.ToString(),
                                         StyleCss = "width:200px",
                                     };
                                }
                                @(Html.VnrComboBoxFor(mode => mode.HDTJobGroupID, _HDTJobGroupID).Text(Model == null ? string.Empty : Model.HDTJobGroupName))
                            </div>
                        </div>*@

                    
                        <div id="div8">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.HDTJobTypeID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    IEnumerable HDTJobType = new string[] { };
                                    if (Model != null)
                                    {
                                        HDTJobType = new[] { new { HDTJobTypeName = Model.HDTJobTypeName, ID = Model.HDTJobTypeID } };
                                    }
                                }
                                @{
                                    var _HDTJobType = new MultiSelectBuilderInfo()
                                    {
                                        Name = "HDTJob1_HDTJobTypeID",
                                        DataTextField = "HDTJobTypeName",
                                        DataValueField = "ID",
                                        Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiHDTJob",
                                        MaxSelectedItems = 1,
                                        Value = HDTJobType,
                                        Width = 225,
                                        FilterType = FilterType.Contains,
                                        EventChange = "showInfo_Type"
                                    };
                                }
                                @(Html.VnrMultiSelectFor(mode => mode.HDTJobTypeID, _HDTJobType))
                              </div>
                        </div>

                        <div id="div1">
            <div class="FieldTitle170">
                @Html.VnrLabelFor(mode => mode.HDTJobGroupID)
            </div>
            <div class="FieldValue">

                @{
                    IEnumerable valueHDTJobGroup = new string[] { };
                    if (Model != null)
                    {
                        valueHDTJobGroup = new[] { new { HDTJobGroupName = Model.HDTJobGroupName, ID = Model.HDTJobGroupID } };
                    }
                }
                @{
                    var _HDTJobGroup = new MultiSelectBuilderInfo()
                    {
                        DataTextField = "HDTJobGroupName",
                        DataValueField = "ID",
                        Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiHDTJobGroup",
                        //Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                        MaxSelectedItems = 1,
                        Value = valueHDTJobGroup,
                        Width = 225,
                       // Autobind = true
                    };
                }
                @(Html.VnrMultiSelectFor(mode => mode.HDTJobGroupID, _HDTJobGroup))

            </div>

        </div>

                        <div id="div8">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.Type)
                            </div>
                            
                            <div class="FieldValue">
                                @{
                                    var _Type = new ComboBoxBuilderInfo()
                                    {
                                        DataTextField = "Text",
                                        DataValueField = "Value",
                                        BindTo = listType,
                                        Value = (Model == null) ? string.Empty : Model.Type == null ? string.Empty : Model.Type,
                                        StyleCss = "width:100px;background-color:WhiteSmoke"                                        
                                    };
                                }
                                @Html.VnrComboBoxFor(model => model.Type, _Type).Text((Model == null) ? string.Empty : Model.Type == null ? string.Empty : Model.Type.TranslateString())
                            </div>
                        </div>
                       
                    </div>
                        <div id="div2">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.Description)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextAreaFor(model => model.Description)
                            </div>
                        </div>
                        <div id="div3">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.Note)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextAreaFor(model => model.Note)
                            </div>
                        </div>
                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
            <tr>
                <td class="Box_Bottom_Left"></td>
                <td class="Box_Bottom_Mid"></td>
                <td class="Box_Bottom_Right"></td>
            </tr>
        </tbody>
    </table>
</div>

<script>
    var Hre_HDTJobGroup = $('#HDTJobGroupID').data("kendoMultiSelect");
    Hre_HDTJobGroup.readonly();
</script>
