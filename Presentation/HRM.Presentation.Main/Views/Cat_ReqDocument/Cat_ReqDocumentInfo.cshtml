@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@model HRM.Presentation.Category.Models.Cat_ReqDocumentModel

@{
    ViewBag.Title = "InsertCat_ReqDocument";
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;

    IList<SelectListItem> listReqDocumentType = Enum.GetValues(typeof(ReqDocumentType))
  .Cast<ReqDocumentType>()
  .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() }).OrderBy(p => p.Text)
  .ToList();
}

<script>
    SetFieldRequired();

    function onSave() {
        onSaveAndContinue($('#form_Cat_ReqDocument'), '@_hrm_Hre_Service', 'api/Cat_ReqDocument/', 'Cat_ReqDocument', 'window_Cat_ReqDocument');
        return false;
    }

    function onSaveClose() {
        onSaveAndClose($('#form_Cat_ReqDocument'), '@_hrm_Hre_Service', 'api/Cat_ReqDocument/', '@ConstantControlName.HRM_grid_Cat_ReqDocument_Name', 'window_Cat_ReqDocument'); return false;
        return false;
    }
    function onSaveDataPopUp() {

        onlySave($('#form_Cat_ReqDocument'), '@_hrm_Hre_Service', 'api/Cat_ReqDocument/', 'Cat_ReqDocument'); return false;
    }
</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Cat_ReqDocument" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">
                        @{
    var _ReqDocument = new TextBoxBuilderInfo()
    {

        Name = "ReqDocument_Code",
        CssStyle = "width:300px"
    };
    if (Model != null)
    {
        _ReqDocument.Value = Model.Code == null ? string.Empty : Model.Code;
    }
                        }
                        @Html.VnrTextBoxFor(mode => mode.Code, _ReqDocument)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.ReqDocumentName)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.ReqDocumentName, "width: 300px")
                    </div>
                </div>
                <div id="div13">
                    <div class="FieldTitle150">
                        @Html.VnrLabelForNoneIcon(model => model.TypeOfDocument)
                    </div>
                    <div class="FieldValue">
                        @{
    var _TypeOfDocument = new DropDownListBuilderInfo()
    {
        DataTextField = "Text",
        DataValueField = "Value",
        BindTo = listReqDocumentType,
    };
                        }
                        @Html.VnrDropDownListFor(model => model.TypeOfDocument, _TypeOfDocument)
                    </div>
                </div>
                <div id="div4">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.ResignReasonID)
                    </div>
                    <div class="FieldValue">
                        @{
    var _resignReasonID = new ComboBoxBuilderInfo()
    {
        DataTextField = "ResignReasonName",
        DataValueField = "ID",
        Url = @_hrm_Hre_Service + "Cat_GetData/GetMultiResignReason",
        Value = Model == null ? string.Empty : Model.ResignReasonID.ToString(),
        StyleCss = "width:200px"
    };
                        }
                        @Html.VnrComboBoxFor(mode => mode.ResignReasonID, _resignReasonID).Text(Model == null ? string.Empty : Model.ResignReasonName)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Note)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Note, "width:500px;height:100px;")
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>

                <div>
                    <div class="FieldTitle150" style="width: 95px;">
                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-ReqDocument", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-ReqDocument", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-ReqDocument", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}

