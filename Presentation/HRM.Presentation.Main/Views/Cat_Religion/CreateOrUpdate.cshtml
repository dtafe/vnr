@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@model HRM.Presentation.Category.Models.CatReligionModel

@{
    ViewBag.Title = ConstantDisplay.HRM_Category_Religion.TranslateString();
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineID = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
}
<script>

    SetFieldRequired();
    function checkDuplicationCode() {
        
        var _code = $("#Religion_Code").val();
        var _ID = '@lineID';
        var param = {
            tableName: 'Cat_Religion',
            columnName: 'Code',
            keyword: _code,
            ID: _ID
        };

        var isduplicate = checkDuplicate('@_hrm_Sys_Service', 'Sys_GetData', 'CheckDuplicate', param, "Code");
        
        return isduplicate;
    }
    function onSave() {
      //  if (CheckValidate(data)) {
           //  if (!checkDuplicationCode()) {
            onSaveAndContinue($('#form_Cat_Religion'), '@_hrm_Hre_Service', 'api/CatReligion/', 'grid_Cat_Religion', 'windowCatReligion'); return false;
           //  }

       // }
        return false;
    }

    function onSaveClose() {
       // if (CheckValidate(data)) {
         //     if (!checkDuplicationCode()) {
            onSaveAndClose($('#form_Cat_Religion'), '@_hrm_Hre_Service', 'api/CatReligion/', 'grid_Cat_Religion', 'windowCatReligion'); return false;
          //    }

       // }
        return false;
    }

    function onSaveDataPopUp() {
        
       // if (CheckValidate(data)) {
        //    if (!checkDuplicationCode()) {
                onlySave($('#form_Cat_Religion'), '@_hrm_Hre_Service', 'api/CatReligion/', 'grid_Cat_Religion'); return false;
         //   }
      //  }
    }
</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Cat_Religion" }))
{
    @Html.HiddenFor(model => model.ID)


     <table>
        <tr>
            <td>
                <div id="div3">
                    <div class="FieldTitle150" style="width: 100px;">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">
                        @{
    var _ReligionCode = new TextBoxBuilderInfo()
    {
        Name = "Religion_Code",
        CssStyle = "width:300px"
    };
    if (Model != null)
    {
        _ReligionCode.Value = Model.Code == null ? string.Empty : Model.Code;
    }
                        }
                        @(Html.VnrTextBoxFor(model => model.Code, _ReligionCode))
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div2">
                    <div class="FieldTitle150" style="width: 100px;">
                        @Html.VnrLabelFor(mode => mode.ReligionName)
                    </div>
                    <div class="FieldValue">
                        @(Html.VnrTextBoxFor(model => model.ReligionName, "width:300px"))
                    </div>
                    <div style="clear: both;"></div>
                </div>

                

            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>

                <div>
                    <div class="FieldTitle150" style="width: 100px;">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-Religion", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-catReligion", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-catReligion", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
 </table>
}

