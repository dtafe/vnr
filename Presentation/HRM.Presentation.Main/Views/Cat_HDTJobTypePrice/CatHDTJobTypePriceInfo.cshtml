@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@using System.Collections
@model HRM.Presentation.Category.Models.Cat_HDTJobTypePriceModel

@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
}
<script>

    SetFieldRequired();

    function onSaveClose() {
        onSaveAndClose($('#form_cat_HDTJobTypePrice'), '@_hrm_Hr_Service', 'api/Cat_HDTJobTypePrice/', '@ConstantControlName.HRM_Category_HDTJobTypePrice_Grid_Name', '@ConstantControlName.HRM_Category_HDTJobTypePrice_PopUp_Name'); return false;
    }

    function onSaveDataPopUp() {
        onlySave($('#form_cat_HDTJobTypePrice'), '@_hrm_Hr_Service', 'api/Cat_HDTJobTypePrice/', '@ConstantControlName.HRM_Category_HDTJobTypePrice_Grid_Name'); return false;
    }
    function HDTJobTypeSelect(e) {
        var dataItem = this.dataSource.view()[e.item.index()];

        $.ajax({
            url: '@_hrm_Hr_Service' + "Hre_GetData/GetDataByHDTJobTypeID",
            data: { HDTJobTypeID: dataItem.ID },
            type: 'POST',
            datatype: 'json',
            success: function (data) {
                var _HDTJobGroup = $("#HDTJobTypePriceinfo_HDTJobGroupID").data("kendoComboBox");
                debugger;
                if (data != null) {
                    _HDTJobGroup.dataSource.filter({ field: "HDTJobGroupName", operator: "contains", value: data.HDTJobGroupName })
                    _HDTJobGroup.select(_HDTJobGroup.ul.children().eq(0));
                }
            }

        });
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_cat_HDTJobTypePrice" }))
{
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.Status)
    <table>
        <tr>
            <td>
                <div class="FieldTitle150 ">
                    @Html.VnrLabelFor(mode => mode.HDTJobTypeID)
                </div>
                <div class="FieldValue">
                    <!--Xử lý gán trực tiếp dữ liệu cho Multi, không cần load dữ liệu từ database lên, giảm kết nối đến database khi edit-->
                    @{
    IEnumerable valueContractType = new string[] { };
    if (Model != null)
    {
        valueContractType = new[] { new { HDTJobTypeName = Model.HDTJobTypeName, ID = Model.HDTJobTypeID } };
    }
                    }
                    @{
    var HDTJobTypeID = new MultiSelectBuilderInfo
          {
              Name = "HDTJobType_HDTJobTypeID",
              DataTextField = "HDTJobTypeName",
              DataValueField = "ID",
              Url = _hrm_Hr_Service + "Cat_GetData/GetMultiHDTJob",
              MaxSelectedItems = 1,
              Value = valueContractType,
              Width = 300,
              EventSelect = "HDTJobTypeSelect"
          };
                    }
                    @Html.VnrMultiSelectFor(mode => mode.HDTJobTypeID, HDTJobTypeID)
                </div>
                <div>
                    <div class="FieldTitle150 ">
                        @Html.VnrLabelFor(mode => mode.HDTJobGroupID)
                    </div>
                    <div class="FieldValue">
                        @{
    var _HDTJobGroupID = new ComboBoxBuilderInfo()
    {
        StyleCss = "width:300px",
        Name = "HDTJobTypePriceinfo_HDTJobGroupID",
        ServerFilter = true,
        FilterType = FilterType.Contains,
        DataTextField = "HDTJobGroupName",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiHDTJobGroup",
        Autobind = true
    };
                        }
                        @(Html.VnrComboBoxFor(mode => mode.HDTJobGroupID, _HDTJobGroupID))
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150 ">
                        @Html.VnrLabelFor(mode => mode.Price)
                    </div>
                    <div class="FieldValue">
                        @{
    var _Price = new NumericTextBoxBuilderInfo<double>()
    {
        StyleCss = "width:150px",
        Name = "HDTJobTypePriceInfo_Price"
    };
                        }
                        @(Html.VnrNumericTextBoxFor(model => model.Price, _Price))
                        @Html.VnrLabel(ConstantDisplay.HRM_HR_VND.TranslateString())
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150 ">
                        @Html.VnrLabelFor(mode => mode.DateOfEffect)
                    </div>
                    <div class="FieldValue">
                        @{
    var _DateEffect = new DatePickerBuilderInfo()
    {
        StyleCss = "width:120px",
        Name = "HDTJobTypePriceInfo_DateOfEffect"
    };
                        }
                        @Html.VnrDatePickerFor(model => model.DateOfEffect, _DateEffect)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150 ">
                        @Html.VnrLabelFor(mode => mode.Description)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Description, "width:500px;height:100px;")
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150"></div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-HDTJobTypePrice", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-HDTJobTypePrice", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}
