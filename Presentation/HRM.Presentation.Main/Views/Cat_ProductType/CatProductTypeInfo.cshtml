@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@model HRM.Presentation.Category.Models.CatProductTypeModel

@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    
    
}
<script>
    SetFieldRequired();

    @*var data = SetCharacteFieldRequired();
    function checkDuplicationName() {
        
        var _code = $("#TypeName").val();
        var _id = '@lineId';
        var param = {
            tableName: 'Cat_ProductType',
            columnName: 'TypeName',
            keyword: _code,
            id: _id
        };

        var isduplicate = checkDuplicate('@_hrm_Sys_Service', 'Sys_GetData', 'CheckDuplicate', param, "TypeName");

        return isduplicate;
    }*@
    function onSaveNew() {
        //var dataCheck = data[''];

        //if (CheckValidate(data) && !checkDuplicationName()) {
        onSaveAndContinue($('#form_cat_ProductType'), '@_hrm_Hr_Service', 'api/CatProductType/', '@ConstantControlName.HRM_Category_ProductType_Grid_Name', '@ConstantControlName.HRM_Category_ProductType_PopUp_Name'); return false;

        //}
    }

    function onSaveClose() {
        //if (CheckValidate(data) && !checkDuplicationName()) {
        onSaveAndClose($('#form_cat_ProductType'), '@_hrm_Hr_Service', 'api/CatProductType/', '@ConstantControlName.HRM_Category_ProductType_Grid_Name', '@ConstantControlName.HRM_Category_ProductType_PopUp_Name'); return false;

        //}
    }
    function onSaveDataPopUp() {

        //if (CheckValidate(data)) {
        //    if (!checkDuplicationName()) {
        onlySave($('#form_cat_ProductType'), '@_hrm_Hr_Service', 'api/CatProductType/', '@ConstantControlName.HRM_Category_ProductType_Grid_Name'); return false;
        //    }
        //}
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_cat_ProductType" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150" style="width: 57px;">
                        @Html.VnrLabelFor(mode => mode.TypeName)
                    </div>
                    <div class="FieldValue">
                        @*@{
                    var txtBankName = new TextBoxBuilderInfo()
                    {
                        Width = 300,
                    };
                }*@
                        @Html.VnrTextBoxFor(mode => mode.TypeName, "width: 300px")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150" style="width: 57px;">
                        @Html.VnrLabelFor(mode => mode.Description)
                    </div>
                    <div class="FieldValue">

                        @Html.VnrTextAreaFor(mode => mode.Description, "width:500px;height:100px;")
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150" style="width: 57px;"></div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-ProductType", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveNew", Name = "save-New-catProductType", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-catProductType", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
   
    
}
