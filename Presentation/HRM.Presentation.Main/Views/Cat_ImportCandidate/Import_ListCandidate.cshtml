@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Infrastructure.Utilities
@model HRM.Presentation.Category.Models.CatImportModel
@{
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    IList<SelectListItem> list = Enum.GetValues(typeof(EnumDropDown.DuplicateData))
     .Cast<EnumDropDown.DuplicateData>()
     .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
     .ToList();
}

<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            <div class="contendSearchWidge">
                <form action="#" method="POST" id="form-search">
                    <div>
                        <div style="float:left; width:550px">
                            <div id="div7">
                                <div class="FieldTitle150">
                                    @Html.VnrLabel(ConstantDisplay.HRM_Category_DuplicateData.TranslateString())
                                </div>
                                <div class="FieldValue">
                                    @{
                                       var _DuplicateData = new DropDownListBuilderInfo()
                                        {
                                            Name = "ProcessDuplicateData",
                                            DataTextField = "Text",
                                            DataValueField = "Value",
                                            BindTo = list,
                                            OptionLabel = @ConstantDisplay.HRM_Category_SelectProcess.TranslateString(),
                                            StyleCss = "width:170px"
                                        };
                                    }
                                    @(Html.VnrDropDownListFor(mode=>mode.ProcessDuplicateData,_DuplicateData))
                                </div>
                                <div style="clear: both;"></div>
                            </div>
                        </div>
                        <div style="width:550px; display:block; float:left">
                            <div id="div3">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.TemplateFile)
                                </div>
                                <div class="FieldValue">
                                    <script>
                                        function onSuccess(e) {
                                            var responseTxt = jQuery.parseJSON(e.XMLHttpRequest.responseText);
                                            var status = responseTxt.Status;
                                            var srcValue = responseTxt.FileUrl;
                                            if (status == true) {
                                                //value null
                                                $("#TemplateFile").val('');
                                                //set value
                                                $("#TemplateFile").val(responseTxt.FileName);
                                            } else {
                                                $("#TemplateFile").val('');
                                            }
                                        }
                                    </script>
                                    @Html.HiddenFor(model => model.TemplateFile)
                                    <input type="file" name="files" id="UploadImportTemplateFile" />
                                    <script>
                                        var vnrUpload = VnrUploadBuilder;
                                        vnrUpload.Id = "UploadImportTemplateFile";
                                        vnrUpload.Host = '@_hrm_Main_Web';
                                        vnrUpload.Files = '@Html.DisplayFor(model => model.TemplateFile)';
                                        vnrUpload.Field = "TemplateFile";
                                        vnrUpload.AutoUpload = true;
                                        VnrUpload(vnrUpload);
                                    </script>
                                </div>
                                <div style="clear: both;"></div>
                            </div>
                            
                        </div>
                    </div>
                </form>
            </div>

        </div>
    </div>

    <div class="commandToolBarWidge">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnImport", Content = ConstantAction.HRM_Common_Import.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSave", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
    </div>
    @Html.Partial("Tab_Import")
</div>
