@using HRM.Infrastructure.Utilities
@using HRM.Infrastructure.Security
@using HRM.Presentation.Hr.Models
@using HRM.Presentation.UI.Controls.Kendo

@model Hre_CandidateGeneralSearchModel
@{
    ViewBag.Title = "CandidateGeneral Index";
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Att_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var controller = ViewContext.RouteData.Values["Controller"].ToString();
    var action = ViewContext.RouteData.Values["Action"].ToString();
    var screen = controller + "/" + action;
    Layout = null;
    string[] valueFields = null;
    IList<SelectListItem> listGender = Enum.GetValues(typeof(EnumDropDown.Gender))
  .Cast<EnumDropDown.Gender>()
  .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() })
  .ToList();
}
@Html.Hidden("Screen", screen)
<script>
    var checkedNodes = [];
    var isCreateTemplate = false;
    var isCreateTemplateForDynamicGrid = false;
    function filterFieldInfo(isExport) {
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        var dataParameter = {
            ProfileName: $('#@Html.FieldIdFor(model => model.ProfileName)').val(),
            CodeEmp: $('#@Html.FieldIdFor(model => model.CodeEmp)').val(),
            OrgStructureID: checkedNodes.join(','),
            Gender: $('#@Html.FieldIdFor(model => model.Gender)').val(),
            IDNo: $('#@Html.FieldIdFor(model => model.IDNo)').val(),
            GradePayrollID: $('#@Html.FieldIdFor(model => model.GradePayrollID)').val(),
            GradeAttendanceID: $('#@Html.FieldIdFor(model => model.GradeAttendanceID)').val(),
            RankRateID: $('#@Html.FieldIdFor(model => model.RankRateID)').val(),
            ValueFields: $('#valueFieldsGrid').val(),
            IsCreateTemplate: isCreateTemplate,
            IsCreateTemplateForDynamicGrid: isCreateTemplateForDynamicGrid
        };
        if (isExport == true) {
            dataParameter["ExportId"] = $('#ddlScreenName').val();
        }
        return dataParameter;
    }
    $(document).ready(function () {
        //Xử lý sự kiện click button tìm kiếm
        $("#btnSearch").click(function () {
            var treeView = $("#treeviewOrg").data("kendoTreeView");
            checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes)
            var grid = $('#gridHre_CandidateGeneral').data("kendoGrid");
            grid.dataSource.read();
            selectedIds = [];
            checkedNodes = [];
        });
        //Xử lý show hide form tìm kiếm
        ShowHidePanel();
    });
    GridCheckbox("gridHre_Pregnancy");
    $("#btnExport").click(function () {
        isCreateTemplate = false;
        isCreateTemplateForDynamicGrid = false;
        //showAjaxLoading()
        var isAccess = checkPermission(PrivilegeType.Export, '@ConstantPermission.Hre_CandidateGeneral');
        if (!isAccess) {
            return;
        }
        isCreateTemplate = false;
        isCreateTemplateForDynamicGrid = false;
        if ($('#ddlScreenName').val() == "") {
            ExportFail();
            return;
        }
        var urlGetData = '@hrm_Hr_Service' + "Hre_GetData/ExportCandidateGeneralListByTemplate/";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo(true);
        ExportAll(urlGetData, dataParameter, urlDownload);
        checkedNodes = [];
        //hideAjaxLoading()
    });
    $("#btnCreateTemplate").click(function () {
        isCreateTemplate = true;
        isCreateTemplateForDynamicGrid = false;
        CreateTemplate('@hrm_Hr_Service' + '/Hre_GetData/ExportCandidateGeneralListByTemplate', filterFieldInfo(true));

    });

    $("#btn_SaveAndApply").click(function () {
        if (selectedIds.length == 0) {
            return;
        }
        var grid = $('#gridHre_CandidateGeneral').data("kendoGrid");
        var selectedItem = grid.dataItem(grid.select());
        SaveAndApply("gridHre_CandidateGeneral", '@hrm_Hr_Service' + "Hre_GetData/ActionApplyCandidateGeneral/", selectedIds.join(","), '@ConstantPermission.Hre_CandidateGeneral');
        return false;
    });

</script>
<div id="grid_Demo"></div>
<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            <div class="contendSearchWidge">
                <form action="#" method="POST" id="form-search">
                    <div class="hrm_box">
                        <div>
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(model => model.ProfileName)
                            </div>
                            <div class="FieldValue" id="test">
                                @Html.VnrTextBoxFor(model => model.ProfileName)
                            </div>
                        </div>
                        <div>
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.CodeEmp)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextBoxFor(model => model.CodeEmp)
                            </div>
                        </div>
                        <div>
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.OrgStructureID)
                            </div>
                            <div class="FieldValue">
                                @Html.Partial("EditorTemplates/OrgStructureTreeViewDropdown")
                            </div>
                        </div>
                    </div>
                    <div class="hrm_box">
                        <div>
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(model => model.RankRateID)
                            </div>
                            <div class="FieldValue" id="test">
                                @{
                                    var RankRateID = new DropDownListBuilderInfo()
                                    {
                                        DataTextField = "SalaryRankName",
                                        DataValueField = "ID",
                                        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiSalaryRank",
                                        Autobind = false
                                    };
                                }
                                @(Html.VnrDropDownListFor(mode => mode.RankRateID, RankRateID))
                            </div>
                        </div>
                        <div>
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(model => model.GradeAttendanceID)
                            </div>
                            <div class="FieldValue" id="test">
                                @{
                                    var GradeAttendanceID = new DropDownListBuilderInfo()
                                    {
                                        DataTextField = "GradeAttendanceName",
                                        DataValueField = "ID",
                                        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiGradeAttendance",
                                        Autobind = false
                                    };
                                }
                                @(Html.VnrDropDownListFor(mode => mode.GradeAttendanceID, GradeAttendanceID))
                            </div>
                        </div>
                        <div>
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.GradePayrollID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var GradePayrollID = new DropDownListBuilderInfo()
                                    {
                                        DataTextField = "GradeCfgName",
                                        DataValueField = "ID",
                                        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiGradePayroll",
                                        Autobind = false
                                    };
                                }
                                @(Html.VnrDropDownListFor(mode => mode.GradePayrollID, GradePayrollID))
                            </div>
                        </div>
                    </div>
                    <div class="hrm_box">
                        <div>
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(model => model.IDNo)
                            </div>
                            <div class="FieldValue" id="test">
                                @Html.VnrTextBoxFor(mode => mode.IDNo)
                            </div>
                        </div>
                        <div>
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.Gender)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var gender = new DropDownListBuilderInfo()
                                    {
                                        DataTextField = "Text",
                                        DataValueField = "Value",
                                        BindTo = listGender,
                                        OptionLabel = ConstantDisplay.HRM_Category_SelectGender.TranslateString(),
                                    };
                                }
                                @Html.VnrDropDownListFor(model => model.Gender, gender)
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="commandToolBarWidge">
    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    <div style="float:right">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btn_SaveAndApply", Content = ConstantAction.HRM_Common_SaveAndApply.TranslateString(), ImageUrl = ConstantPath.IconApprovePath })
        <script>
            function GetScreenName() {
                return {
                    screenName: '@screen'
                };
            }
        </script>
            @{
                var screenName = new DropDownListBuilderInfo()
                {
                    Name = "ddlScreenName",
                    DataTextField = "ExportName",
                    DataValueField = "ID",
                    Url = @_hrm_Hr_Service + "Cat_GetData/GetScreenName",
                    Data = "GetScreenName",
                };
            }
            @Html.VnrDropDownList(screenName)
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport", Content = ConstantDisplay.HRM_Common_Export_Button.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateTemplate", Content = ConstantDisplay.HRM_Common_CreateTemplate_Button.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnChangeColumnCandidateGeneral", Content = ConstantDisplay.HRM_ChangeColumn.TranslateString(), ImageUrl = ConstantPath.Hrm_ChangeColumnIcon })
    </div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @{
        var columnMode = string.Empty;
        var defaultColumnMode = string.Empty;
        var userId = Session[SessionObjects.UserId];
        //Lấy tên lưới cộng thêm tên của control và action để tránh trùng nhau
        var gridControlName = ConstantControlName.HRM_gridHre_CandidateGeneral_Grid_Name + "__Hre_CandidateGeneral_Index";
        HRM.Presentation.Main.Controllers.Sys_ColumnModeController control = new HRM.Presentation.Main.Controllers.Sys_ColumnModeController();
        //Get thông tin cấu hình trong database
        GridBuilderModel gridInfo = control.GetGridBuilderInfo(userId + "," + gridControlName);

        var grid = new GridBuilderInfo
        {
            Name = ConstantControlName.HRM_gridHre_CandidateGeneral_Grid_Name,
            ShowEditIcon = false,
            ReadActionUrl = hrm_Hr_Service + "Hre_GetData/GetCandidateGeneralList/",
            ReadData = "filterFieldInfo",
        };

        if (gridInfo != null && gridInfo.ValueFields != null && gridInfo.ValueFields.Any())
        {
            grid.ValueFields = gridInfo.ValueFields;
            grid.SizeFields = gridInfo.SizeFields;
            grid.Filterable = gridInfo.FilterFields;
            grid.DisplayFields = gridInfo.DisplayFields;
            grid.LockedFields = gridInfo.LockedFields;
            grid.GroupFields = gridInfo.GroupFields;
            if (gridInfo.PageSize > 0)
            {
                grid.PageSize = gridInfo.PageSize;
            }
            columnMode = gridInfo.StringXml;
        }
        else
        {
            grid.ValueFields = new string[]
                {
                    Hre_CandidateGeneralModel.FieldNames.CodeEmp,
                    Hre_CandidateGeneralModel.FieldNames.ProfileName,
                                  Hre_CandidateGeneralModel.FieldNames.E_UNIT,
                       Hre_CandidateGeneralModel.FieldNames.E_DIVISION,
                Hre_CandidateGeneralModel.FieldNames.E_DEPARTMENT,
                 Hre_CandidateGeneralModel.FieldNames.E_TEAM,
                Hre_CandidateGeneralModel.FieldNames.E_SECTION,

                    Hre_CandidateGeneralModel.FieldNames.RankRateName,
                    Hre_CandidateGeneralModel.FieldNames.SalaryClassName,
                    Hre_CandidateGeneralModel.FieldNames.BasicSalary,
                    Hre_CandidateGeneralModel.FieldNames.ContractTypeName,
                    Hre_CandidateGeneralModel.FieldNames.EnteringDate,
       

                    Hre_CandidateGeneralModel.FieldNames.GradeAttendanceName,
                    Hre_CandidateGeneralModel.FieldNames.GradePayrollName,
                };

            grid.SizeFields = new Dictionary<string, int>()
                {
                    {Hre_CandidateGeneralModel.FieldNames.CodeEmp,80},
                    {Hre_CandidateGeneralModel.FieldNames.ProfileName,130},
                                  {Hre_CandidateGeneralModel.FieldNames.E_UNIT,135},
                {Hre_CandidateGeneralModel.FieldNames.E_DIVISION,135},

                {Hre_CandidateGeneralModel.FieldNames.E_TEAM,135},
                {Hre_CandidateGeneralModel.FieldNames.E_DEPARTMENT,135},
                {Hre_CandidateGeneralModel.FieldNames.E_SECTION,135},

                    {Hre_CandidateGeneralModel.FieldNames.RankRateName,130},
                    {Hre_CandidateGeneralModel.FieldNames.SalaryClassName,130},
                    {Hre_CandidateGeneralModel.FieldNames.BasicSalary,110},
                    {Hre_CandidateGeneralModel.FieldNames.ContractTypeName,120},
                    {Hre_CandidateGeneralModel.FieldNames.EnteringDate,110},
        

                    {Hre_CandidateGeneralModel.FieldNames.GradeAttendanceName,125},
                    {Hre_CandidateGeneralModel.FieldNames.GradePayrollName,150},
                };

            grid.DisplayFields = new Dictionary<string, string>()
                {
                    {Hre_CandidateGeneralModel.FieldNames.CodeEmp,ConstantDisplay.HRM_HR_Profile_CodeEmp},
                    {Hre_CandidateGeneralModel.FieldNames.ProfileName,ConstantDisplay.HRM_HR_Profile_ProfileName},
                                    {Hre_CandidateGeneralModel.FieldNames.E_UNIT, ConstantDisplay.HRM_Hre_Report_E_UNIT},
                {Hre_CandidateGeneralModel.FieldNames.E_DIVISION, ConstantDisplay.HRM_Hre_Report_E_DIVISION},
                {Hre_CandidateGeneralModel.FieldNames.E_DEPARTMENT, ConstantDisplay.HRM_Hre_Report_E_DEPARTMENT},
                {Hre_CandidateGeneralModel.FieldNames.E_SECTION, ConstantDisplay.HRM_Hre_Report_E_SECTION},
                {Hre_CandidateGeneralModel.FieldNames.E_TEAM, ConstantDisplay.HRM_Hre_Report_E_TEAM},

                    {Hre_CandidateGeneralModel.FieldNames.RankRateName,ConstantDisplay.HRM_Hre_CandidateGeneral_RankRateID},
                    {Hre_CandidateGeneralModel.FieldNames.SalaryClassName,ConstantDisplay.HRM_Hre_CandidateGeneral_SalaryClassID},
                    {Hre_CandidateGeneralModel.FieldNames.BasicSalary,ConstantDisplay.HRM_Hre_CandidateGeneral_BasicSalary},
                    {Hre_CandidateGeneralModel.FieldNames.ContractTypeName,ConstantDisplay.HRM_Hre_CandidateGeneral_ContractTypeID},
                    {Hre_CandidateGeneralModel.FieldNames.EnteringDate,ConstantDisplay.HRM_Hre_CandidateGeneral_EnteringDate},
                                 

                    {Hre_CandidateGeneralModel.FieldNames.GradeAttendanceName,ConstantDisplay.HRM_Hre_CandidateGeneral_GradeAttendanceID},
                    {Hre_CandidateGeneralModel.FieldNames.GradePayrollName,ConstantDisplay.HRM_Hre_CandidateGeneral_GradePayrollID},
                };
            defaultColumnMode = control.SetDefaultGridBuilderInfo(grid);
        }
        //var grid = new GridBuilderInfo
        //{
        //    Name = "gridHre_CandidateGeneral",
        //    ValueFields = valueFields,
        //    SizeFields = sizeFields,
        //    DisplayFields = displayFields,
        //    ShowEditIcon = false,
        //    ReadActionUrl = hrm_Hr_Service + "Hre_GetData/GetCandidateGeneralList/",
        //    ReadData = "filterFieldInfo",
        //};
    }
    @(Html.VnrGrid<Hre_CandidateGeneralModel>(grid))
    <script>
        ClickButtonChangeColum("btnChangeColumnCandidateGeneral", "Hre_CandidateGeneralModel");
        $(document).ready(function () {
            $("#" + '@ConstantControlName.HRM_ChangeColum_Grid_Name').val('@gridControlName');
            $("#" + '@ConstantControlName.HRM_ChangeColum_ColumMode_Name').val('@Html.Raw(columnMode)');
            $("#" + '@ConstantControlName.HRM_ChangeColum_Default_ColumMode_Name').val('');
            $("#" + '@ConstantControlName.HRM_ChangeColum_Default_ColumMode_Name').val('@Html.Raw(defaultColumnMode)');
        });
    </script>
</div>
@{
    var listValueField = grid.ValueFields;
    var valueFields1 = string.Empty;
    if (listValueField != null)
    {
        for (int i = 0; i < listValueField.Count(); i++)
        {
            valueFields1 += "," + listValueField[i];
        }
    }
}
@Html.Hidden("valueFieldsGrid", valueFields1)