@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Category.Models
@using HRM.Presentation.UI.Controls.Kendo
@model HRM.Presentation.Category.Models.Cat_KPIBonusItemModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
}

<script>
    //var Validator = CheckValidate();
    SetFieldRequired();

    function onSave() {
      //  if (CheckValidate(data)) {
        onSaveAndContinue($('#form_cat_CatKPIBonusItem'), '@_hrm_Hr_Service', 'api/Cat_KPIBonusItem/', '@ConstantControlName.HRM_Category_KPIBonusItem_Grid_Name', '@ConstantControlName.HRM_Category_KPIBonusItem_PopUp_Name');
        // }
        return false;
    }

    function onSaveClose() {
      //  if (CheckValidate(data)) {
        onSaveAndClose($('#form_cat_CatKPIBonusItem'), '@_hrm_Hr_Service', 'api/Cat_KPIBonusItem/', '@ConstantControlName.HRM_Category_KPIBonusItem_Grid_Name', '@ConstantControlName.HRM_Category_KPIBonusItem_PopUp_Name');
       // }
        return false;
    }
    function onSaveDataPopUp() {

        //    if (CheckValidate(data)) {
        //   if (!checkDuplicationCode()) {
        onlySave($('#form_cat_CatKPIBonusItem'), '@_hrm_Hr_Service', 'api/Cat_KPIBonusItem/', '@ConstantControlName.HRM_Category_KPIBonusItem_Grid_Name'); return false;
        //    }
        // }
    }

</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_cat_CatKPIBonusItem" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150" style="width: 120px;">
                        @Html.VnrLabelFor(mode => mode.ShopID)
                    </div>
                    <div class="FieldValue">
                        @{
                        var _ShopID = new ComboBoxBuilderInfo()
                        {
                            StyleCss = "width:300px",
                                Name = "CatShop_ShopID",
                                DataTextField = "ShopName",
                                DataValueField = "ID",
                                Url = _hrm_Hr_Service + "Cat_GetData/GetMultiShop",
                                Value=Model!=null?Model.ShopID.ToString():"",
                                Autobind=true,
                                ServerFilter = true,
                            };
                        }
                        @(Html.VnrComboBoxFor(mode => mode.ShopID, _ShopID))
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150" style="width: 120px;">
                        @Html.VnrLabelFor(mode => mode.KPIBonusID)
                    </div>
                    <div class="FieldValue">
                        @{
                        var _KPIBonusID = new DropDownListBuilderInfo()
                        {
                            StyleCss = "width:300px",
                            Name = "CatKPI_KPIBonusID",
                            DataTextField = "KPIBonusName",
                            DataValueField = "ID",
                            Url = _hrm_Hr_Service + "Cat_GetData/GetMultiKPIBonus",
                            Value = Model != null ? Model.KPIBonusID.ToString() : "",
                        };
                        }
                        @Html.VnrDropDownListFor(model => model.KPIBonusID, _KPIBonusID)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150" style="width: 120px;">
                        @Html.VnrLabelFor(mode => mode.Value)
                    </div>
                                    <div class="FieldValue">
                                        @{
                    var _Value = new NumericTextBoxBuilderInfo<double>()
                    {
                        StyleCss = "width:150px",
                        Name = "KPIBonusIfo_Value",
                        //Format = ConstantFormat.HRM_Format_Number_Double.ToString(),
                        Format = "#\\%",
                        Min = 0,
                        Max = 100
                    };
                                        }
                                        @(Html.VnrNumericTextBoxFor(model => model.Value, _Value))
                                    </div>
                                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150" style="width: 120px;">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-catKPIBonusItem", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-catKPIBonusItem", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-catKPIBonusItem", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })

                    </div>
                </div>
            </td>
        </tr>
    </table>
}