@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@using System.Collections
@using HRM.Presentation.Hr.Models
@model FIN_ClaimItemModel

@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _Hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _Hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    Guid ClaimID = Guid.Empty;
    if (ViewData["ClaimID"] != null)
    {
        ClaimID = Guid.Parse(ViewData["ClaimID"].ToString());
    }
}

@if(1!=1)
{
<script src="~/Scripts/VnrJsFramework.js"></script>
}

<script>
  //  SetFieldRequiredByScreenName('FIN_ClaimItem');
    function SetValue()
    {
        
        if ($("#ClaimID").val() == '') {
            $("#ClaimID").val('@ClaimID');
        }

        $("#Amount1").val($("#ClaimItem_Amount").val());
    }
    
    $(document).ready(function () {

        $("#ClaimID").val($("#Claim_ID").val());


    });

    function onSave() {
        
        
     //   SetValue();
        onSaveAndContinue($('#form_FIN_ClaimItem'), '@_Hrm_Hre_Service', 'api/FIN_ClaimItem/', 'grid_ClaimItem', 'windowClaimItem');
    }

    function onSaveClose() {
     
        
        //SetValue();
        onSaveAndClose($('#form_FIN_ClaimItem'), '@_Hrm_Hre_Service', 'api/FIN_ClaimItem/', 'grid_ClaimItem', 'windowClaimItem');
    }

    function onSaveDataPopUp() {
        
       // SetValue();
        onlySave($('#form_FIN_ClaimItem'), '@_Hrm_Hre_Service', 'api/FIN_ClaimItem/', 'grid_ClaimItem');
    }

    function DataBoundCurrency() {
        
        @if (Model == null)
                {
                    <text>

                    var combobox = $("#ClaimItem_CurrencyID").data("kendoComboBox");

                    combobox.select(function (dataItem) {
                        return dataItem['CurrencyName'] === "VND";
                    });

                    </text>
                }
    
    };

</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_FIN_ClaimItem" }))
{
    @Html.HiddenFor(model => model.ID)
 //    @Html.HiddenFor(model => model.Amount, new { id="Amount1"})
    @Html.HiddenFor(model => model.ClaimID)
     if (Model != null)
    {
        @Html.HiddenFor(mode => mode.ClaimID)
    }
    else
    {
        @Html.HiddenFor(mode => mode.ClaimID, ClaimID)
    }
    
   
    <table>
        <tr>
            <td>
                <div style="display:block">
                    <div>
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.ClaimItemName)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(mode => mode.ClaimItemName)
                        </div>
                    </div>
                    <div>
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.DocumentNumber)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(mode => mode.DocumentNumber)
                        </div>
                    </div>
                    <div>
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.Date)
                        </div>
                        <div class="FieldValue">
                            @{
                            var Date = new DatePickerBuilderInfo()
                            {
                                Format=ConstantFormat.HRM_Format_DayMonthYear,
                                Name="ClaimItem_Date"
                            };
                            }
                            @Html.VnrDatePickerFor(mode => mode.Date,Date)
                        </div>
                    </div>
                    <div>
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.Amount)
                        </div>
                        <div class="FieldValue">
                            @{
                                var Amount = new NumericTextBoxBuilderInfo<double>()
                                {
                                    Name="ClaimItem_Amount",
                                    Format = ConstantFormat.HRM_Format_Money
                                };
                            }
                            @Html.VnrNumericTextBoxFor(model => model.Amount, Amount)
                            @{
                                var CurrencyName = new ComboBoxBuilderInfo()
                                 {
                                     Name = "ClaimItem_CurrencyID",
                                     DataTextField = "CurrencyName",
                                     DataValueField = "ID",
                                     Url = _hrm_Hr_Service + "Cat_GetData/GetMultiCurrency",
                                     StyleCss = "width:60px;",
     Autobind=true,
                                     Value = Model != null ? Model.CurrencyID.ToString() : string.Empty,
                                     EventDataBound="DataBoundCurrency",
                                 };
                            }
                            @(Html.VnrComboBoxFor(mode => mode.CurrencyID, CurrencyName))
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div>
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.Description)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextAreaFor(mode=>mode.Description)
                        </div>
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-FIN_ClaimItem", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-FIN_ClaimItem", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-FIN_ClaimItem", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>

                </div>
            </td>
        </tr>
    </table>
}

