@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.UI.Controls.Kendo.DropDownList
@using HRM.Presentation.UI.Controls.Kendo.MultiSelect
@using HRM.Presentation.Hr.Models
@using HRM.Infrastructure.Utilities

@using System.Collections


@model Hre_DependantModel
@{
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
}

@{
    IList<SelectListItem> list = Enum.GetValues(typeof(EnumDropDown.Gender))
        .Cast<EnumDropDown.Gender>()
        .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
        .ToList();

    SelectList data = new SelectList(list, "Value", "Text");
}
<script>
    SetFieldRequired();
</script>
<div class="VnRMain">
    <table style="width:100%">
        <tbody>
            @*<tr>
                <td class="Box_Top_Left"></td>
                <td valign="middle" class="Box_Top_Mid"></td>
                <td class="Box_Top_Right"></td>
            </tr>*@
            <tr><td colspan="3" style=""></td></tr>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                <td valign="top">
                    <div id="div2">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.ProfileID)
                            @Html.HiddenFor(mode => mode.ID)
                        </div>
                        <div class="FieldValue">
                            @{
                                IEnumerable valueProfile = new string[] { };
                                if (Model != null)
                                {
                                    valueProfile = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
                                }
                            }
                            @{
                                var Profile = new MultiSelectBuilderInfo()
                                 {
                                     DataTextField = Hre_ContractModel.FieldNames.ProfileName,
                                     DataValueField = Hre_ContractModel.FieldNames.ID,
                                     Url = @_hrm_Hr_Service + "Hre_GetData/GetMultiProfile",
                                     Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                                     MaxSelectedItems = 1,
                                     Value = valueProfile
                                 };
                            }
                            @(Html.VnrMultiSelectFor(mode => mode.ProfileID, Profile))
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div3">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.DependantName)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(model => model.DependantName)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div>
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.IDNo)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(model => model.IDNo)
                        </div>
                    </div>
                    <div id="div4">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.DateOfBirth)
                        </div>
                        <div class="FieldValue">
                            @{
                                var dateOfBirth = new DatePickerBuilderInfo()
                                {
                                    StyleCss = "width:100px"
                                };
                            }
                            @Html.VnrDatePickerFor(model => model.DateOfBirth, dateOfBirth)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div5">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.Gender)
                        </div>
                        <div class="FieldValue">
                            @{
                                var gender = new DropDownListBuilderInfo()
                                {
                                    BindTo = list,
                                    DataTextField = "Text",
                                    DataValueField = "Value"
                                };
                            }
                            @Html.VnrDropDownListFor(model => model.Gender,gender)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div6">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.RelationID)
                        </div>
                        <div class="FieldValue">
                           @{
    var _RelativeTypeName = new ComboBoxBuilderInfo()
     {
         DataTextField = "RelativeTypeName",
         DataValueField = "ID",
         Url = _hrm_Hr_Service + "Cat_GetData/GetMultiRelativeType",
         StyleCss = "width:200px;",
         Value = Model == null ? string.Empty : Model.RelationID.ToString(),
     };
}
@(Html.VnrComboBoxFor(mode => mode.RelationID, _RelativeTypeName).Text(Model == null ? string.Empty : Model.RelativeTypeName))
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div7">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.MonthOfEffect)
                        </div>
                        <div class="FieldValue">
                            @{
                                var monthOfEffect = new DatePickerBuilderInfo()
                                {
                                    //Format = ConstantFormat.HRM_Format_MonthYear
                                    StyleCss="width:100px"
                                };
                            }
                           
                            @Html.VnrDatePickerFor(model => model.MonthOfEffect,monthOfEffect)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div8">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.MonthOfExpiry)
                        </div>
                        <div class="FieldValue">
                            @{
                                var monthOfExpiry = new DatePickerBuilderInfo()
                                {
                                    //Format = ConstantFormat.HRM_Format_MonthYear
                                    StyleCss = "width:100px"
                                };
                            }
                            @Html.VnrDatePickerFor(model => model.MonthOfExpiry, monthOfExpiry)
                        </div>
                        <div style="clear: both;"></div>
                    </div>

                    <div id="div8">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.CompleteDate)
                        </div>
                        <div class="FieldValue">
                            @{
                                var CompleteDate = new DatePickerBuilderInfo()
                                {
                                    //Format = ConstantFormat.HRM_Format_MonthYear
                                    StyleCss = "width:100px"
                                };
                            }
                            @Html.VnrDatePickerFor(model => model.CompleteDate, CompleteDate)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
            <tr>
                <td class="Box_Bottom_Left"></td>
                <td class="Box_Bottom_Mid"></td>
                <td class="Box_Bottom_Right"></td>
            </tr>
        </tbody>
    </table>
</div>
