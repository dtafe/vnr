@using HRM.Infrastructure.Utilities;
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Laundry.Models;
@using HRM.Infrastructure.Security;

@model Lau_MarkerModel

@{
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    Layout = null;
}
@{
    var window = new WindowBuilderInfo
    {
        Name = "windowLauMarker",
        Visible = false,
        Width=700,
        LoadContentFrom = @_hrm_Main_Web + "Lau_Marker/MarkerInfo/00000000-0000-0000-0000-000000000000",
    };
}
@(Html.VnrWindow(window))

<script>
    var titleEditPopUp = '@Html.Raw(ConstantDisplay.HRM_Laundry_Marker_Update_Title.TranslateString())';
    var titleCreatePopUp = '@Html.Raw(ConstantDisplay.HRM_Laundry_Marker_Create_Title.TranslateString())';
     

    //Data khi tìm kiếm
    function filterFieldInfo() {
        
        return {
            Code: $('#Code1').val(),
            MarkerName: $('#SMarkerName').val(),
        };
    }
    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        $("#btnSearch").click(function () {
            
            var grid = $('#grid_Lau_Marker').data("kendoGrid");
            grid.dataSource.read();
            selectedIds = [];
        });
        //Xử lý Edit popup
        var url = '@_hrm_Main_Web' + "Lau_Marker/MarkerInfo/";
        EditGridPopUp("grid_Lau_Marker", "windowLauMarker", url, '@ConstantPermission.Lau_Marker', titleEditPopUp);
    });

    //Xử lý Create
    $("#btnCreate").click(function () {
        PopUpCreate("windowLauMarker",titleCreatePopUp, '@ConstantPermission.Lau_Marker' );
    });
    
    //Xử Lý grid
    GridCheckbox("grid_Lau_Marker");

    //Xử Lý button delete
    $('#btnDelete').click(function (e) {
        e.preventDefault();
        DeleteSelected("grid_Lau_Marker", '@_hrm_Main_Web' + "Lau_Marker/RemoveSelected/", selectedIds.join(","), '@ConstantPermission.Lau_Marker');
        return false;
    });


    $(document).ready(function () {
        ShowHidePanel();
    });
</script>


<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            <div class="contendSearchWidge">
                <div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(model => model.MarkerName)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBox("SMarkerName", "width:300px;")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(model => model.Code)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBox("Code1")
                    </div>
                </div>
                
            </div>
        </div>
    </div>
</div>
<div class="commandToolBarWidge">
    <div style="float:left">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreate", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    </div>
    <div style="float:right">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
    </div>
    <div class="clear"></div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @{
        string[] valueFields = new[]
        {
            Lau_MarkerModel.FieldNames.Code,
            Lau_MarkerModel.FieldNames.MarkerName,
            Lau_MarkerModel.FieldNames.Note,
            
        };

        var sizeFields = new Dictionary<string, int>()
        {
            {Lau_MarkerModel.FieldNames.Code,180},
            {Lau_MarkerModel.FieldNames.MarkerName,160},
            {Lau_MarkerModel.FieldNames.Note,250},

        };

   

        var displayFields = new Dictionary<string, string>()
        {
            {Lau_MarkerModel.FieldNames.Code,ConstantDisplay.HRM_Laundry_Marker_Code},
            {Lau_MarkerModel.FieldNames.MarkerName,ConstantDisplay.HRM_Laundry_Marker_MarkerName},
            {Lau_MarkerModel.FieldNames.Note,ConstantDisplay.HRM_Laundry_Marker_Notes}
        };

        var grid = new GridBuilderInfo
        {
            Name = "grid_Lau_Marker",
            ValueFields = valueFields,
            SizeFields = sizeFields,
            DisplayFields = displayFields,
            ShowCommand = false,
            ReadActionUrl = _hrm_Hre_Service + "Lau_GetData/GetMarkerList/",
            ReadData = "filterFieldInfo",
        };
    }

    @(Html.VnrGrid<Lau_MarkerModel>(grid))
</div>
