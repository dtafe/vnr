@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Attendance.Models;
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Infrastructure.Security
@model Att_ReportCountLateInOutModel
@{
    ViewBag.Title = "Index";
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var controller = ViewContext.RouteData.Values["Controller"].ToString();
    var action = ViewContext.RouteData.Values["Action"].ToString();
    var screen = controller + "/" + action;
    
    IList<SelectListItem> listSrcType = Enum.GetValues(typeof(EnumDropDown.TamScanLogSrcType))
    .Cast<EnumDropDown.TamScanLogSrcType>()
    .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
    .ToList();

}
@Html.Hidden("Screen", screen)

<script>
    var checkedNodes = [];
    var isCreateTemplate = false;
    var isCreateTemplateForDynamicGrid = false;
    SetFieldRequired();
    function filterFieldInfo(isExportDDL) {
        checkedNodes = [];
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes);
        var _profileID = $('#@Html.FieldIdFor(model => model.ProfileID)').val() != null ? $('#@Html.FieldIdFor(model => model.ProfileID)').val().join(',') : $('#@Html.FieldIdFor(model => model.ProfileID)').val();
        
        var _ShiftIDs = $('#@Html.FieldIdFor(model=>model.ShiftIDs)').val() != null ? $('#@Html.FieldIdFor(model=>model.ShiftIDs)').val().join(',') : $('#@Html.FieldIdFor(model=>model.ShiftIDs)').val();
        var elementPara = {
            IsIncludeQuitEmp: document.getElementById('@Html.FieldIdFor(model => model.IsIncludeQuitEmp)').checked,
            IsNoteAllowZero: document.getElementById('@Html.FieldIdFor(model => model.IsNoteAllowZero)').checked,
            ProfileID: _profileID,
            OrgStructureID: checkedNodes.join(','),
            ShiftIDs: _ShiftIDs,
            DateFrom: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateFrom").val()),
            DateTo: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateTo").val()),
            IsCreateTemplate: isCreateTemplate,
            IsCreateTemplateForDynamicGrid: isCreateTemplateForDynamicGrid,
            UserExport: $('#UserLoginName').val()
        };
        if (isExportDDL == true) {
            elementPara["ExportId"] = $('#ddlScreenName').val();
        }
        return elementPara;
    }

    //var data = SetCharacteFieldRequired();
    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        //Show Hide Panel
        ShowHidePanel();
        $("#btnSearch").click(function () {
 
            var grid = $('#gridAtt_ReportCountLateInOut').data("kendoGrid");
            grid.dataSource.read();
        });
       
    });

    $("#btnExport").click(function () {
        
        var isAccess = checkPermission(PrivilegeType.Export, '@ConstantPermission.Att_ReportCountLateInOut');
        if (!isAccess) {
            return;
        }
        if ($('#ddlScreenName').val() == "") {
            ExportFail();
            return;
        }
        var urlGetData = '@_hrm_Hr_Service' + "Att_GetData/GetReportCountLateInOut/";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo(true);
        ExportAll(urlGetData, dataParameter, urlDownload);
        checkedNodes = [];
    });

    $("#btnCreateTemplate").click(function () {
        
        isCreateTemplate = true;
        isCreateTemplateForDynamicGrid = false;
        CreateTemplate('@_hrm_Hr_Service' + '/Att_GetData/GetReportCountLateInOut', filterFieldInfo(true));
    });

    function checkedNodeIds(nodes, checkedNodes) {
        for (var i = 0; i < nodes.length; i++) {
            if (nodes[i].checked) {
                checkedNodes.push(nodes[i].id);
            }

            if (nodes[i].hasChildren) {
                checkedNodeIds(nodes[i].children.view(), checkedNodes);
            }
        }
    }



</script>

<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            <div class="contendSearchWidge">
                <div style="float: left; width:450px">
                    <div id="div4">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(m => m.DateFrom)
                            @Html.HiddenFor(m => m.UserExport)
                        </div>
                        <div class="FieldValue">
                            @{
                                var DateStart = new DatePickerBuilderInfo()
                                {
                                    Value = DateTime.Today.ToShortDateString(),
                                    Placeholder = ConstantDisplay.HRM_Attendance_DateFrom.TranslateString(),
                                    StyleCss = "width:100px"
                                };
                            }
                            @Html.VnrDatePickerFor(model => model.DateFrom, DateStart)

                            @{
                                var DateEnd = new DatePickerBuilderInfo()
                                {
                                    Value = DateTime.Today.ToShortDateString(),
                                    Placeholder = ConstantDisplay.HRM_Attendance_DateTo.TranslateString(),
                                    StyleCss = "width:100px"
                                };
                            }
                            @Html.VnrDatePickerFor(model => model.DateTo, DateEnd)
                        </div>
                    </div>
                    <div id="div2">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.ProfileID)
                        </div>
                        <div class="FieldValue">
                            @{
                                var mtsProfile = new MultiSelectBuilderInfo()
                                {
                                    DataTextField = "ProfileName",
                                    DataValueField = "ID",
                                    Url = @_hrm_Hr_Service + "HrMultiSelect/GetMultiProfile",
                                    Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                                    Value = new string[] { @Html.DisplayFor(mode => mode.ProfileID).ToString() }
                                };

                                if (Model != null)
                                {
                                    if (Model.ID != Guid.Empty)
                                    {
                                        mtsProfile.MaxSelectedItems = 1;
                                    }
                                }
                            }
                            @(Html.VnrMultiSelectFor(mode => mode.ProfileID, mtsProfile))
                        </div>
                    </div>

                    <div id="div6">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.OrgStructureID)
                        </div>
                        <div class="FieldValue">
                            @Html.Partial("EditorTemplates/OrgStructureTreeViewDropdown")
                        </div>
                    </div>
                </div>
                <div style="float: left">
                    <div id="div2">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(model => model.ShiftIDs)
                        </div>
                        <div class="FieldValue">
                            @{
                                var _Shift = new MultiSelectBuilderInfo()
                                {
                                    DataTextField = "ShiftName",
                                    DataValueField = "ID",
                                    Url = _hrm_Hr_Service + "Cat_GetData/GetMultiShift",
                                    Placeholder = ConstantDisplay.HRM_Att_SelectShift.TranslateString(),
                                };
                            }
                            @Html.VnrMultiSelectFor(mode => mode.ShiftIDs, _Shift)
                        </div>
                    </div>
                    <div id="div6">
                        <div class="FieldTitle">
                           
                        </div>
                        <div class="FieldValue">
                            @{
                                var _IsNoteAllowZero = new CheckBoxBuilderInfo() { };
                            }
                            @Html.VnrCheckBoxFor(model => model.IsNoteAllowZero, _IsNoteAllowZero) @Html.VnrLabelFor(mode => mode.IsNoteAllowZero)
                        </div>
                        <div style="clear: both;"></div>
                    </div>

                    <div id="div6">
                        <div class="FieldTitle">
                           
                        </div>
                        <div class="FieldValue">
                            <div class="FieldValue">
                                @{
                                    var _IsIncludeQuitEmp = new CheckBoxBuilderInfo() { };
                                }
                                @Html.VnrCheckBoxFor(model => model.IsIncludeQuitEmp, _IsIncludeQuitEmp) @Html.VnrLabelFor(mode => mode.IsIncludeQuitEmp)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="commandToolBarWidge">

    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    <div style="float:right">
        <script>
            function GetScreenName() {
                return {
                    screenName: '@screen'
                };
            }
        </script>
        <div class="FieldValue" style="margin-top: 0;">
            @{
                var screenName = new DropDownListBuilderInfo()
                {
                    Name = "ddlScreenName",
                    DataTextField = "ExportName",
                    DataValueField = "ID",
                    Url = @_hrm_Hr_Service + "Cat_GetData/GetScreenName",
                    Data = "GetScreenName",
                };
            }
            @Html.VnrDropDownList(screenName)
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport", Content = ConstantAction.HRM_Common_ExportReport.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateTemplate", Content = ConstantAction.HRM_Common_CreateTemplate.TranslateString() , ImageUrl = ConstantPath.IconExportPath })
         </div>
    </div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @{
        string[] valueFields = new string[]
                            {
                                Att_ReportCountLateInOutModel.FieldNames.CodeEmp,
                                Att_ReportCountLateInOutModel.FieldNames.ProfileName,
                                Att_ReportCountLateInOutModel.FieldNames.CodeOrg,
                                Att_ReportCountLateInOutModel.FieldNames.EarlyDurationMore2,
                                Att_ReportCountLateInOutModel.FieldNames.EarlyDurationLess2,
                                Att_ReportCountLateInOutModel.FieldNames.CountForget,
                                Att_ReportCountLateInOutModel.FieldNames.DateFrom,
                                Att_ReportCountLateInOutModel.FieldNames.DateTo,
                                Att_ReportCountLateInOutModel.FieldNames.UserExport,
                                Att_ReportCountLateInOutModel.FieldNames.DateExport,
                            };
        Dictionary<string, int> sizeFields = new Dictionary<string, int>()
                            {
                                {Att_ReportCountLateInOutModel.FieldNames.CodeEmp,100},
                                {Att_ReportCountLateInOutModel.FieldNames.ProfileName,150},
                                {Att_ReportCountLateInOutModel.FieldNames.CodeOrg,99},
                                {Att_ReportCountLateInOutModel.FieldNames.EarlyDurationMore2,118},
                                {Att_ReportCountLateInOutModel.FieldNames.EarlyDurationLess2,120},
                                {Att_ReportCountLateInOutModel.FieldNames.CountForget,150},
                                {Att_ReportCountLateInOutModel.FieldNames.DateFrom,99},
                                {Att_ReportCountLateInOutModel.FieldNames.DateTo,118},
                                {Att_ReportCountLateInOutModel.FieldNames.UserExport,120},
                                {Att_ReportCountLateInOutModel.FieldNames.DateExport,150},
                            };

        Dictionary<string, string> displayFields = new Dictionary<string, string>()
                            {
                                {Att_ReportCountLateInOutModel.FieldNames.CodeEmp,ConstantDisplay.HRM_HR_Profile_CodeEmp},
                                {Att_ReportCountLateInOutModel.FieldNames.ProfileName,ConstantDisplay.HRM_HR_Profile_ProfileName},
                                {Att_ReportCountLateInOutModel.FieldNames.CodeOrg,ConstantDisplay.HRM_Att_Report_CodeOrg},
                                {Att_ReportCountLateInOutModel.FieldNames.EarlyDurationMore2,ConstantDisplay.HRM_Att_Report_EarlyDurationMore2},
                                {Att_ReportCountLateInOutModel.FieldNames.EarlyDurationLess2,ConstantDisplay.HRM_Att_Report_EarlyDurationLess2},
                                {Att_ReportCountLateInOutModel.FieldNames.CountForget,ConstantDisplay.HRM_Att_Report_CountForget},
                                {Att_ReportCountLateInOutModel.FieldNames.DateFrom,ConstantDisplay.HRM_Attendance_DateFrom},
                                {Att_ReportCountLateInOutModel.FieldNames.DateTo,ConstantDisplay.HRM_Attendance_DateTo},
                                {Att_ReportCountLateInOutModel.FieldNames.UserExport,ConstantDisplay.HRM_Att_Report_UserExport},
                                {Att_ReportCountLateInOutModel.FieldNames.DateExport,ConstantDisplay.HRM_Attendance_DateExport}
                            };
        
        string[] hiddenFields = new string[]
        {
                 Att_ReportCountLateInOutModel.FieldNames.DateFrom,
                Att_ReportCountLateInOutModel.FieldNames.DateTo,
                Att_ReportCountLateInOutModel.FieldNames.UserExport,
                Att_ReportCountLateInOutModel.FieldNames.DateExport,
        };
        var grid = new GridBuilderInfo
        {
            Name = "gridAtt_ReportCountLateInOut",
            ValueFields = valueFields,
            SizeFields = sizeFields,
            DisplayFields = displayFields,
            ReadActionUrl = _hrm_Hr_Service + "Att_GetData/GetReportCountLateInOut",
            ReadData = "filterFieldInfo",
            ShowEditIcon = false,
            ShowCheckbox = false,
            HiddenFields=hiddenFields
        };
    }

    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<Att_ReportCountLateInOutModel>(grid))
</div>

@{
    var valueFields1 = string.Empty;
    for (int i = 0; i < valueFields.Count(); i++)
    {
        valueFields1 += "," + valueFields[i];
    }
}
@Html.Hidden("valueFieldsGrid", valueFields1)
