@using HRM.Infrastructure.Utilities
@using System.Collections
@using HRM.Infrastructure.Security
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Hr.Models
@using HRM.Presentation.UI.Controls.Kendo

@model FIN_ClaimModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _Hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _Hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    //IList<SelectListItem> lstStatus = Enum.GetValues(typeof(StatusFIN_Claimaire))
    //    .Cast<StatusFIN_Claimaire>()
    //    .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
    //    .ToList();
    Guid TravelRequestID = Guid.Empty;
    Guid ProfileID = Guid.Empty;
    if (ViewData["ProfileID"] != null)
    {
        ProfileID = Guid.Parse(ViewData["ProfileID"].ToString());
    }
    if (ViewData["TravelRequestID"] != null)
    {
        TravelRequestID = Guid.Parse(ViewData["TravelRequestID"].ToString());
    }
  

}
@{
    var windowClaimItem = new WindowBuilderInfo
    {
        Name = "windowClaimItem",
        Visible = false,
        LoadContentFrom = @_Hrm_Main_Web + "FIN_TravelRequest/FIN_ClaimItemInfo/",
    };
}
@(Html.VnrWindow(windowClaimItem))
<script>
    
    function SetValue1()
    {
        
        if ($("#ProfileID").val() == '')
        {
            $("#ProfileofClaim").val('@ProfileID');
        }
        
        if ($("#TravelRequestID").val() == '')
        {
            $("#TravelRequestID").val('@TravelRequestID');
        }
    }
    var titleEditPopUpFIN_Claim = '@Html.Raw(ConstantDisplay.HRM_FIN_ClaimItem_PopUp_Edit_Title.TranslateString())';
    SetFieldRequiredByScreenName('FIN_Claim');
   
    $(document).ready(function () {

        //Xử lý Edit
        var url = '@_Hrm_Main_Web' + "FIN_TravelRequest/FIN_ClaimItemInfo/";
        EditGridPopUp("gridFIN_ClaimItem", "windowClaimItem", url, '@ConstantPermission.FIN_ClaimItem', titleEditPopUpFIN_Claim);
    })
    //Truyền nhiều id trên lưới
    function PopData(idWindow, url, parameter, titlePopUp) {
        
        var window = $("#" + idWindow).data("kendoWindow");
        window.refresh({
            url: url,
            data: { ClaimID: parameter }
        }).center().open().title(titlePopUp);
    }
    $("#btnCreateClaimItem").click(function () {
        
        var ClaimID="";
        if ($("#Claim_ID").val() != '') {
            ClaimID = $("#Claim_ID").val();
        }
        //else {
        //    ClaimID = $("#ID").val();
        //}
        if (ClaimID == '@Guid.Empty' || ClaimID=='') {
            ShowNotificationProcessor("Vui lòng Lưu Trước Khi Thêm.");
            return;
        }

        else {
            PopData("windowClaimItem", '@_Hrm_Main_Web' + 'FIN_TravelRequest/FIN_ClaimItemInfo/', ClaimID, '@Html.Raw(ConstantDisplay.HRM_FIN_ClaimItem_PopUp_Create_Title.TranslateString())');
        }
    });
    function filterFieldInfo() {
        
        var ClaimID = "";
        if ($("#Claim_ID").val() != '') {
            ClaimID = $("#Claim_ID").val();
        }
        //else {
        //    ClaimID = $("#ID").val();
        //}
        return {
            ClaimID: ClaimID
        };
    }
    var gridName = "gridFIN_ClaimItem";
    //Xử lý delete
    $('#btnDeleteFIN_ClaimItem').click(function (e) {
        if (selectedIds == "") {
            DeleteFail();
            return;
        }
        e.preventDefault();
        DeleteSelected(gridName, '@_Hrm_Main_Web' + "FIN_TravelRequest/RemoveFIN_ClaimItemSelected/", selectedIds.join(","), '@ConstantPermission.FIN_ClaimItem');
        return false;
    });

    function onSave2() {
        
        SetValue1();
        onSaveAndContinue($('#form_Hre_FIN_Claim'), '@_Hrm_Hre_Service', 'api/FIN_Claim/', 'gridClaim', 'windowClaim');
    }

    function onSaveClose2() {
        
        SetValue1();
        onSaveAndClose($('#form_Hre_FIN_Claim'), '@_Hrm_Hre_Service', 'api/FIN_Claim/', 'gridClaim', 'windowClaim');
    }

    function onSaveDataPopUp2() {
        
        SetValue1();
        onlySave($('#form_Hre_FIN_Claim'), '@_Hrm_Hre_Service', 'api/FIN_Claim/', 'gridClaim');
        $("#Claim_ID").val($("#ID").val());
    }
</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Hre_FIN_Claim" }))
{
    

    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.Claim_ID)
    @Html.HiddenFor(model => model.TravelRequestID)
    @Html.HiddenFor(model => model.ProfileID, new { id="ProfileofClaim"})
    <table>
        <tr>
            <td>
                <div style="display:block; padding-top:10px;">
                    
                    <div>
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.ClaimCode)
                        </div>
                        <div class="FieldValue">

                            @Html.VnrTextBoxFor(mode => mode.ClaimCode)
                        </div>
                        <div class="clear"></div>
                    </div>
                    
                    <div>
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.ClaimName)
                        </div>
                        <div class="FieldValue">

                            @Html.VnrTextBoxFor(mode => mode.ClaimName)
                        </div>
                        <div class="clear"></div>
                    </div>
                    <div>
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.AccountCode)
                        </div>
                        <div class="FieldValue">

                            @Html.VnrTextBoxFor(mode => mode.AccountCode)
                        </div>
                        <div class="clear"></div>
                    </div>
                    
                    <div style="width:850px;display: block">
                        <fieldset>
                            <legend>
                                @ConstantDisplay.HRM_FIN_ClaimItem.TranslateString()
                            </legend>


                            <div class="commandToolBarWidge" id="anchor">
                                <div style="float:left">

                                    <div style="float:left;padding-left:5px;" id="dvPerformanceTypeID">
                                        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateClaimItem", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
                                    </div>

                                </div>

                                <div style="float:right">
                                    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDeleteFIN_ClaimItem", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
                                </div>
                                <div class="clear"></div>
                            </div>

                            <div>
                                <!--Khai báo các thông tin cho Grid-->
                                @{
                string[] valueFields = new[]
                    {
                        FIN_ClaimItemModel.FieldNames.Amount,
                        FIN_ClaimItemModel.FieldNames.Date,
                        FIN_ClaimItemModel.FieldNames.Description,
                    };

    var sizeFields = new Dictionary<string, int>()
                    {
                        {FIN_ClaimItemModel.FieldNames.Amount,100},
                        {FIN_ClaimItemModel.FieldNames.Date,60},
                        {FIN_ClaimItemModel.FieldNames.Description,110},
                    };

    var filterable = new Dictionary<string, bool>()
                    {
                        {FIN_ClaimItemModel.FieldNames.Amount,true},
                        {FIN_ClaimItemModel.FieldNames.Date,true},
                        {FIN_ClaimItemModel.FieldNames.Description,true},
                    };

    var displayFields = new Dictionary<string, string>()
                    {
                        {FIN_ClaimItemModel.FieldNames.Amount,ConstantDisplay.FIN_ClaimItem_Amount},
                        {FIN_ClaimItemModel.FieldNames.Date,ConstantDisplay.FIN_ClaimItem_Date},
                        {FIN_ClaimItemModel.FieldNames.Description,ConstantDisplay.FIN_ClaimItem_Description},
                    };

    var grid = new GridBuilderInfo
    {
        Name = "gridFIN_ClaimItem",
        ValueFields = valueFields,
        SizeFields = sizeFields,
        DisplayFields = displayFields,
        Filterable = filterable,
        AutoBind = true,
        ShowEditButton=true,
        ShowEditIcon=true,
        GridHeight=350,
        ReadActionUrl = _Hrm_Hre_Service + "Hre_GetData/GetClaimItemByClaimID/",
        ReadData = "filterFieldInfo",
    };
                                }

                                @(Html.VnrGrid<FIN_ClaimItemModel>(grid))
                            </div>
                        </fieldset>
                    </div>





                    



                </div>

            </td>

        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp2", Name = "save-FIN_Claim", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave2", Name = "save-continue-FIN_Claim", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose2", Name = "save-close-FIN_Claim", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>

                </div>
            </td>
        </tr>
    </table>
}

