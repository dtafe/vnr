@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Hr.Models
@using System.Collections
@model Hre_AppendixContractModel
@{
    ViewBag.Title = ConstantDisplay.HRM_Category_ExportItem.TranslateString();
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    Guid ContractIDForAppend = Guid.Empty;
    string aaa = ViewBag.contractID;
    if (!string.IsNullOrEmpty(aaa))
    {
        ContractIDForAppend = Common.ConvertToGuid(aaa.ToString());
    }
    var userId = Session[SessionObjects.UserId];
}

<script>
    SetFieldRequiredByScreenName('Hre_AppenContract_Tab');
    $(document).ready(function () {
        document.getElementById("ContractNo1").disabled = true;
        document.getElementById("ProfileName1").disabled = true;
        $("#ContractNo1").val($("#ContractNo").val());
        $("#ProfileName1").val($("#ProfileName").val());
        $("#ContractID").val($("#Contract_ID").val());
    });

    function onSaveDataPopUp() {
        $("#ContractID").val($("#Contract_ID").val());
        $("#UserID").val('@userId');
        debugger;
        var profileMulti = $("#ProfileID").data("kendoMultiSelect");
        $("#AppendixProfileID").val(profileMulti._dataItems[0].ID);
        var _CreateBasicSalary = document.getElementById("AppendixCreateBasicSalary");
        if (_CreateBasicSalary != null && _CreateBasicSalary.checked) {
            $("#AppendixCreateBasicSalary").val("true");
        } else {
            $("#AppendixCreateBasicSalary").val("false");
        }
        onlySave($('#form_Hre_AppendixContract'), '@_hrm_Hr_Service', 'api/Hre_AppendixContract/', 'grid_AppendixContract');
    }

    function onSaveClose() {
        $("#ContractID").val($("#Contract_ID").val());
        $("#UserID").val('@userId');
        debugger;
        var profileMulti = $("#ProfileID").data("kendoMultiSelect");
        $("#AppendixProfileID").val(profileMulti._dataItems[0].ID);
        var _CreateBasicSalary = document.getElementById("AppendixCreateBasicSalary");
        if (_CreateBasicSalary != null && _CreateBasicSalary.checked) {
            $("#AppendixCreateBasicSalary").val("true");
        } else {
            $("#AppendixCreateBasicSalary").val("false");
        }
        onSaveAndClose($('#form_Hre_AppendixContract'), '@_hrm_Hr_Service', 'api/Hre_AppendixContract/', 'grid_AppendixContract', 'windowAppendixContract');
    }

    function onChanged(e) {
        debugger
        $.ajax({
            url: '@_hrm_Hr_Service' + "Hre_GetData/GetDataBySalaryRankID",
            data: { rankID: e.sender._old },
            type: 'POST',
            datatype: 'json',
            success: function (data) {
                debugger;
                var salary = $("#AppendixContractInfo_Salary").data("kendoNumericTextBox");
                salary.value(data.SalaryStandard);
                var InsuranceAmount = $("#AppendixContractInfo_InsuranceAmount").data("kendoNumericTextBox");
                InsuranceAmount.value(data.SalaryStandard);
            }
        });
    }

   
</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Hre_AppendixContract" }))
{
    @Html.HiddenFor(mode => mode.UserID)
    @Html.HiddenFor(mode => mode.AppendixProfileID)
    @Html.HiddenFor(model => model.AppendixContract_ID)
    if (Model != null)
    {
        @Html.HiddenFor(mode => mode.ContractID)
    }
    else
    {
        @Html.HiddenFor(mode => mode.ContractID, ContractIDForAppend)
    }
    <table>
        <tbody>
            <tr>
                <td valign="top">
                    <fieldset style="width:100%">
                        <legend>
                            @ConstantDisplay.HRM_HR_ContractCondition.TranslateString()
                        </legend>
                        <div class="hrm_box">
                            <div id="div4">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.ProfileName)
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrTextBox("ProfileName1", "width:300px")
                                </div>
                                <div style="clear: both;"></div>
                            </div>
                            <div id="div4">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.ContractNo)
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrTextBox("ContractNo1", "width: 300px")
                                </div>
                                <div style="clear: both;"></div>
                            </div>
                            <div id="div5" class="DivContentTitleValue">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.JobTitleID)
                                </div>
                                <div class="FieldValue">
                                    <!--Xử lý gán trực tiếp dữ liệu cho Multi, không cần load dữ liệu từ database lên, giảm kết nối đến database khi edit-->
                                    @{
    IEnumerable valuejobTitle = new string[] { };
    if (Model != null)
    {
        valuejobTitle = new[] { new { JobTitleName = Model.JobTitleName, ID = Model.JobTitleID } };
    }
                                    }
                                    @{
    var jobTitleID = new MultiSelectBuilderInfo
    {
        Name = "AppendixContractInfo_JobTitleID",
        DataTextField = "JobTitleName",
        DataValueField = "ID",
        Width = 300,
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiJobTitle",
        MaxSelectedItems = 1,
        Placeholder = ConstantDisplay.HRM_Category_SelectJobTitle.TranslateString(),
        Value = valuejobTitle
    };
                                    }
                                    @Html.VnrMultiSelectFor(mode => mode.JobTitleID, jobTitleID)
                                </div>
                            </div>
                            <div id="div4">
                                <div class="FieldTitle150">

                                    @Html.VnrLabelFor(mode => mode.Code)
                                </div>
                                <div class="FieldValue">
                                    @(Html.VnrTextBoxFor(model => model.Code, "width: 300px"))
                                </div>
                                <div style="clear: both;"></div>
                            </div>

                            <div id="div6">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.DateofEffect)
                                </div>
                                <div class="FieldValue">
                                    @{
    var dateofEffect = new DatePickerBuilderInfo()
    {
        StyleCss = "width:120px",
        Name = "AppendContractInfo_DateofEffect"
    };
                                    }
                                    @Html.VnrDatePickerFor(model => model.DateofEffect, dateofEffect)
                                </div>
                                <div style="clear: both;"></div>
                            </div>
                            <div id="div6">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.DateEndAppendixContract)
                                </div>
                                <div class="FieldValue">
                                    @{
    var dateEndAppendixContract = new DatePickerBuilderInfo()
    {
        StyleCss = "width:120px",
        Name = "AppendixContractInfo_DateEndAppendixContract"
    };
                                    }
                                    @Html.VnrDatePickerFor(model => model.DateEndAppendixContract, dateEndAppendixContract)
                                </div>
                                <div style="clear: both;"></div>
                            </div>
                            <div id="div10" class="DivContentTitleValue">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.DateAuthorize)
                                </div>
                                <div class="FieldValue">
                                    @{
    var DateAuthorize = new DatePickerBuilderInfo()
    {
        StyleCss = "width:120px",
        Name = "AppendixContractInfo_DateAuthorize"
    };
                                    }
                                    @Html.VnrDatePickerFor(model => model.DateAuthorize, DateAuthorize)
                                </div>
                            </div>


                        </div>
                        <div class="hrm_box">
                            <div id="div5">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.AppendixContractTypeID)
                                </div>
                                <div class="FieldValue">
                                    <!--Xử lý gán trực tiếp dữ liệu cho Multi, không cần load dữ liệu từ database lên, giảm kết nối đến database khi edit-->
                                    @{
    var ContractType = new MultiSelectBuilderInfo()
    {
        Name = "AppendContractInfo_AppendixContractTypeID",
        DataTextField = "AppendixContractName",
        DataValueField = "ID",
        Autobind = true,
        Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiAppendixContractType",
        ServerFiltering = true,
        MaxSelectedItems = 1,
        MinLength = 2,
        Width = 300,
        //Value = valueContratTypeID
        Value = new string[] { @Html.DisplayFor(mode => mode.AppendixContractTypeID).ToString() }
    };
                                    }
                                    @(Html.VnrMultiSelectFor(mode => mode.AppendixContractTypeID, ContractType))
                                </div>
                                <div style="clear: both;"></div>
                            </div>
                            <div id="div11" class="DivContentTitleValue">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.PositionID)
                                </div>
                                <div class="FieldValue">
                                    @{
    IEnumerable valuePosition = new string[] { };
    if (Model != null)
    {
        valuePosition = new[] { new { PositionName = Model.PositionName, ID = Model.PositionID } };
    }
                                    }
                                    @{
    var positionID = new MultiSelectBuilderInfo()
    {
        Name = "AppendixContractInfo_PositionID",
        DataTextField = "PositionName",
        DataValueField = "ID",
        Width = 300,
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiPosition",
        Placeholder = ConstantDisplay.HRM_Category_SelectPosition.TranslateString(),
        MaxSelectedItems = 1,
        Value = valuePosition
    };
                                    }
                                    @(Html.VnrMultiSelectFor(mode => mode.PositionID, positionID))
                                </div>
                            </div>
                            <div id="div6">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.DateSignedAppendixContract)
                                </div>
                                <div class="FieldValue">
                                    @{
    var dateSignedAppendixContract = new DatePickerBuilderInfo()
    {

        StyleCss = "width:120px",
        Name = "AppendixContractInfo_DateSignedAppendixContract"
    };
                                    }
                                    @Html.VnrDatePickerFor(model => model.DateSignedAppendixContract, dateSignedAppendixContract)
                                </div>
                                <div style="clear: both;"></div>
                            </div>

                            <div id="div3" class="DivContentTitleValue">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.HourWorkInMonth)
                                </div>
                                <div class="FieldValue">
                                    @{
    var HourWorkInMonth = new NumericTextBoxBuilderInfo<double>()
    {
        Name = "AppendixContractInfo_HourWorkInMonth",
        StyleCss = "width:150px",
        Format = ConstantFormat.HRM_Format_Number_Double
    };
                                    }
                                    @Html.VnrNumericTextBoxFor(model => model.HourWorkInMonth, HourWorkInMonth)
                                </div>
                            </div>
                            <div id="div4">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.KPI)
                                </div>
                                <div class="FieldValue">
                                    @(Html.VnrTextBoxFor(model => model.KPI, "width: 300px"))
                                </div>
                            </div>
                            <div id="div3" class="DivContentTitleValue">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.WorkPlaceID)
                                </div>
                                <div class="FieldValue">
                                    @{
    var _workplaceName = new ComboBoxBuilderInfo()
    {
        Name = "AppendixContractInfo_WorkPlaceID",
        DataTextField = "WorkPlaceName",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiWorkPlace",
        StyleCss = "width:300px;",
        Value = Model == null ? string.Empty : Model.WorkPlaceID.ToString(),
    };
                                    }
                                    @(Html.VnrComboBoxFor(mode => mode.WorkPlaceID, _workplaceName).Text(Model == null ? string.Empty : Model.WorkPlaceName))
                                </div>
                            </div>
                        </div>
                    </fieldset>
                </td>
            </tr>
            <tr>
                <td>
                    <fieldset style="width:100%">
                        <legend>
                            @ConstantDisplay.HRM_HR_SalaryContractInformation.TranslateString()
                        </legend>
                        <div class="hrm_box">
                            <div id="Div_RankAppendix" class="DivContentTitleValue">
                                <div id="div3" class="DivContentTitleValue">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.RankID)
                                    </div>
                                    <div class="FieldValue">
                                        <div>
                                            @{
    var _RankID = new ComboBoxBuilderInfo()
    {
        DataTextField = "SalaryClassName",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiSalaryClass",
        StyleCss = "width:300px;",
        Value = Model == null ? string.Empty : Model.RankID.ToString(),
    };
                                            }
                                            @(Html.VnrComboBoxFor(mode => mode.RankID, _RankID).Text(Model == null ? string.Empty : Model.RankName))
                                        </div>
                                    </div>
                                </div>
                                <div id="div3" class="DivContentTitleValue">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.RankDetailID)
                                    </div>
                                    <div class="FieldValue">
                                        <div>
                                            @{
    var _RankDetailID = new ComboBoxBuilderInfo()
    {
        DataTextField = "SalaryRankName",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiSalaryRank",
        StyleCss = "width:300px;",
        Value = Model == null ? string.Empty : Model.RankDetailID.ToString(),
        EventChange = "onChanged"
    };
                                            }
                                            @(Html.VnrComboBoxFor(mode => mode.RankDetailID, _RankDetailID).Text(Model == null ? string.Empty : Model.RankDetailName))

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="div3" class="DivContentTitleValue">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.Salary)
                                </div>
                                <div class="FieldValue">
                                    <div style="float:left">
                                        @{
    var Salary = new NumericTextBoxBuilderInfo<double>()
    {
        Name = "AppendixContractInfo_Salary",
        StyleCss = "width:150px",
        Format = ConstantFormat.HRM_Format_Money
    };
                                        }
                                        @Html.VnrNumericTextBoxFor(model => model.Salary, Salary)
                                    </div>
                                </div>
                                <div style="float: left; padding-left: 2px">
                                    @{
    string valueCurr = string.Empty;
    if (Model == null || Model.CurenncyID == null)
    {
        valueCurr = "VND";
    }
                                    }
                                    @{
    var CurrencyName = new ComboBoxBuilderInfo()
    {
        Name = "AppendixContractInfo_CurenncyID",
        DataTextField = "CurrencyName",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiCurrency",
        StyleCss = "width:60px;",
        Value = valueCurr,
        Autobind = true
    };
                                    }
                                    @(Html.VnrComboBoxFor(mode => mode.CurenncyID, CurrencyName).Text(Model == null ? string.Empty : Model.CurrencySalName))
                                </div>
                            </div>
                            <div id="div3" class="DivContentTitleValue">
                                <div class="FieldTitle150">
                                </div>
                                <div class="FieldValue">
                                    @{
    var AppendixCreateBasicSalary = new CheckBoxBuilderInfo()
    {

    };
    if (Model != null)
    {
        if (Model.AppendixCreateBasicSalary == true)
        {
            AppendixCreateBasicSalary.Value = true;
        }
        else
        {
            AppendixCreateBasicSalary.Value = false;
        }
    }
                                    }
                                    @Html.VnrCheckBoxFor(model => model.AppendixCreateBasicSalary, AppendixCreateBasicSalary)
                                    @Html.VnrLabel(ConstantDisplay.HRM_HR_Contract_CreateBasicSalary.TranslateString())
                                </div>
                            </div>
                            <div id="div3" class="DivContentTitleValue">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.InsuranceAmount)
                                </div>
                                <div class="FieldValue">
                                    <div style="float:left">
                                        @{
    var InsuranceAmount = new NumericTextBoxBuilderInfo<double>()
    {
        Name = "AppendixContractInfo_InsuranceAmount",
        StyleCss = "width:150px",
        Format = ConstantFormat.HRM_Format_Money
    };
                                        }
                                        @Html.VnrNumericTextBoxFor(model => model.InsuranceAmount, InsuranceAmount)
                                    </div>
                                    <div style="float: left; padding-left: 2px">
                                        @{
    var CurenncyInsName = new ComboBoxBuilderInfo()
    {
        Name = "AppendixContractInfo_CurenncyID1",
        DataTextField = "CurrencyName",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiCurrency",
        StyleCss = "width:60px;",
        Value = Model == null ? string.Empty : Model.CurenncyID1.ToString(),
        Autobind = true
    };
                                        }
                                        @(Html.VnrComboBoxFor(mode => mode.CurenncyID1, CurenncyInsName).Text(Model == null ? string.Empty : Model.CurenncyInsName))
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="hrm_box">
                            <div id="div3" class="DivContentTitleValue">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.Allowance1)
                                </div>
                                <div class="FieldValue">
                                    <div style="float:left">
                                        @{
    var AllowanceID1Name = new ComboBoxBuilderInfo()
    {
        Name = "AppendixContractInfo_AllowanceID1",
        DataTextField = "UsualAllowanceName",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiUsualAllowance",
        StyleCss = "width:150px;",
        Value = Model == null ? string.Empty : Model.AllowanceID1.ToString(),
    };
                                        }
                                        @(Html.VnrComboBoxFor(mode => mode.AllowanceID1, AllowanceID1Name).Text(Model == null ? string.Empty : Model.AllowanceID1Name))
                                    </div>
                                    <div style="float: left; padding-left: 2px">
                                        @{
    var Allowance1 = new NumericTextBoxBuilderInfo<double>()
    {
        Name = "AppendixContractInfo_Allowance1",
        StyleCss = "width:150px",
        Format = ConstantFormat.HRM_Format_Money
    };
                                        }
                                        @Html.VnrNumericTextBoxFor(model => model.Allowance1, Allowance1)
                                    </div>
                                    <div style="float: left; padding-left: 2px">
                                        @{
    var CurenncyID2Name = new ComboBoxBuilderInfo()
    {
        Name = "AppendixContractInfo_CurenncyID2",
        DataTextField = "CurrencyName",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiCurrency",
        StyleCss = "width:60px;",
        Value = Model == null ? string.Empty : Model.CurenncyID2.ToString(),
    };
                                        }
                                        @(Html.VnrComboBoxFor(mode => mode.CurenncyID2, CurenncyID2Name).Text(Model == null ? string.Empty : Model.CurenncyAllowance1Name))
                                    </div>
                                </div>
                            </div>
                            <div id="div3" class="DivContentTitleValue">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.Allowance2)
                                </div>
                                <div class="FieldValue">
                                    <div>
                                        <div style="float:left">
                                            @{
    var AllowanceID2Name = new ComboBoxBuilderInfo()
    {
        Name = "AppendixContractInfo_AllowanceID2",
        DataTextField = "UsualAllowanceName",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiUsualAllowance",
        StyleCss = "width:150px;",
        Value = Model == null ? string.Empty : Model.AllowanceID2.ToString(),
    };
                                            }
                                            @(Html.VnrComboBoxFor(mode => mode.AllowanceID2, AllowanceID2Name).Text(Model == null ? string.Empty : Model.AllowanceID2Name))
                                        </div>
                                        <div style="float: left; padding-left: 2px">
                                            @{
    var Allowance2 = new NumericTextBoxBuilderInfo<double>()
    {
        Name = "AppendixContractInfo_Allowance2",
        StyleCss = "width:150px",
        Format = ConstantFormat.HRM_Format_Money
    };
                                            }
                                            @Html.VnrNumericTextBoxFor(model => model.Allowance2, Allowance2)
                                        </div>
                                        <div style="float: left; padding-left: 2px">
                                            @{
    var CurenncyAllowance2Name = new ComboBoxBuilderInfo()
    {
        Name = "AppendixContractInfo_CurenncyID3",
        DataTextField = "CurrencyName",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiCurrency",
        StyleCss = "width:60px;",
        Value = Model == null ? string.Empty : Model.CurenncyID3.ToString(),
    };
                                            }
                                            @(Html.VnrComboBoxFor(mode => mode.CurenncyID3, CurenncyAllowance2Name).Text(Model == null ? string.Empty : Model.CurenncyAllowance2Name))
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="div3" class="DivContentTitleValue">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.Allowance3)
                                </div>
                                <div class="FieldValue">
                                    <div>
                                        <div>
                                            <div style="float:left">
                                                @{
    var AllowanceID3Name = new ComboBoxBuilderInfo()
    {
        Name = "AppendixContractInfo_AllowanceID3",
        DataTextField = "UsualAllowanceName",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiUsualAllowance",
        StyleCss = "width:150px;",
        Value = Model == null ? string.Empty : Model.AllowanceID3.ToString(),
    };
                                                }
                                                @(Html.VnrComboBoxFor(mode => mode.AllowanceID3, AllowanceID3Name).Text(Model == null ? string.Empty : Model.AllowanceID3Name))
                                            </div>
                                            <div style="float: left; padding-left: 2px">
                                                @{
    var Allowance3 = new NumericTextBoxBuilderInfo<double>()
    {
        Name = "AppendixContractInfo_Allowance3",
        StyleCss = "width:150px",
        Format = ConstantFormat.HRM_Format_Money
    };
                                                }
                                                @Html.VnrNumericTextBoxFor(model => model.Allowance3, Allowance3)
                                            </div>
                                            <div style="float: left; padding-left: 2px">
                                                @{
    var CurenncyAllowance3Name = new ComboBoxBuilderInfo()
    {
        Name = "AppendixContractInfo_CurenncyIDSalary",
        DataTextField = "CurrencyName",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiCurrency",
        StyleCss = "width:60px;",
        Value = Model == null ? string.Empty : Model.CurenncyIDSalary.ToString(),
    };
                                                }
                                                @(Html.VnrComboBoxFor(mode => mode.CurenncyIDSalary, CurenncyAllowance3Name).Text(Model == null ? string.Empty : Model.CurenncyAllowance3Name))
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="div3" class="DivContentTitleValue">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.Allowance4)
                                </div>
                                <div class="FieldValue">
                                    <div>
                                        <div style="float:left">
                                            @{
    var AllowanceID4Name = new ComboBoxBuilderInfo()
    {
        Name = "AppendixContractInfo_AllowanceID4",
        DataTextField = "UsualAllowanceName",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiUsualAllowance",
        StyleCss = "width:150px;",
        Value = Model == null ? string.Empty : Model.AllowanceID4.ToString(),
    };
                                            }
                                            @(Html.VnrComboBoxFor(mode => mode.AllowanceID4, AllowanceID4Name).Text(Model == null ? string.Empty : Model.AllowanceID4Name))
                                        </div>
                                        <div style="float: left; padding-left: 2px">
                                            @{
    var Allowance4 = new NumericTextBoxBuilderInfo<double>()
    {
        Name = "AppendixContractInfo_Allowance4",
        StyleCss = "width:150px",
        Format = ConstantFormat.HRM_Format_Money
    };
                                            }
                                            @Html.VnrNumericTextBoxFor(model => model.Allowance4, Allowance4)
                                        </div>
                                        <div style="float: left; padding-left: 2px">
                                            @{
    var CurenncyAllowance4Name = new ComboBoxBuilderInfo()
    {
        Name = "AppendixContractInfo_CurenncyID4",
        DataTextField = "CurrencyName",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiCurrency",
        StyleCss = "width:60px;",
        Value = Model == null ? string.Empty : Model.CurenncyID4.ToString(),
    };
                                            }
                                            @(Html.VnrComboBoxFor(mode => mode.CurenncyID4, CurenncyAllowance4Name).Text(Model == null ? string.Empty : Model.CurenncyAllowance4Name))
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="div3" class="DivContentTitleValue">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.Allowance)
                                </div>
                                <div class="FieldValue">
                                    <div>

                                        <div style="float:left">
                                            @{
    var Allowance = new NumericTextBoxBuilderInfo<double>()
    {
        Name = "AppendixContractInfo_Allowance",
        StyleCss = "width:150px",
        Format = ConstantFormat.HRM_Format_Money
    };
                                            }
                                            @Html.VnrNumericTextBoxFor(model => model.Allowance, Allowance)
                                        </div>
                                        <div style="float: left; padding-left: 2px">
                                            @{
    var CurenncyOAllowanceName = new ComboBoxBuilderInfo()
    {
        Name = "AppendixContractInfo_CurenncyID5",
        DataTextField = "CurrencyName",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiCurrency",
        StyleCss = "width:60px;",
        Value = Model == null ? string.Empty : Model.CurenncyID5.ToString(),
    };
                                            }
                                            @(Html.VnrComboBoxFor(mode => mode.CurenncyID5, CurenncyOAllowanceName).Text(Model == null ? string.Empty : Model.CurenncyOAllowanceName))
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </fieldset>
                </td>
            </tr>
            <tr>
                <td>
                    <hr class="LineFooterCommandEdit" />
                    <br />
                    <div id="div10">
                        <div class="FieldTitle150"></div>
                        <div class="FieldValue">
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-hre_appendixcontract", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "saveandclose-hre_appendixcontract", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        </div>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
}


<script>
    $(document).ready(function () {
        debugger;
        $.ajax({
            type: 'POST',
            url: '@_hrm_Hr_Service' + "Hre_GetData/IsInputGeneralCandidateManual/",
            dataType: 'json',
            async: false,
            success: function (returnValue) {
                debugger;
                if (returnValue == true) {
                    $("#Div_RankAppendix").hide();
                }
                else {
                    $("#Div_RankAppendix").show();
                }
            },
        });
    });
</script>
