@using HRM.Infrastructure.Security
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Hr.Models
@using HRM.Presentation.UI.Controls.Kendo

@{
    ViewBag.Title = "Profiles Index";
    var hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    Layout = null;
    string[] valueFields = null;
}

<script>
    
    var checkedNodes = [];

    //get ordernumber
    function GetOrdernumber(nodes, checkedNodes1) {
        
        for (var i = 0; i < nodes.length; i++) {
            checkedNodes1.push(nodes[i].OrderNumber);
            if (nodes[i].hasChildren) {
                GetOrdernumber(nodes[i].children.view(), checkedNodes1);
            }
        }
    };

    function filterFieldInfo(isExport) {
        return {
            OrgStructureID: checkedNodes,
            IsExport: isExport,
            ValueFields: $('#valueFieldsGrid').val()
        }
    };

    function ExportAllFieldInfo(isExport) {
        debugger;
        var checkedNodes1 = [];
        var tv = $('#treeviewOrg_SumProfiles').data('kendoTreeView');
        
        var select = tv.select();
        var item = tv.dataItem(select);
        if (item != undefined) {
            checkedNodes.push(item.OrderNumber);
            GetOrdernumber(item.children.view(), checkedNodes1);
        }
        return {
            OrgStructureID: checkedNodes1.join(",") + ","+checkedNodes[0],
            //tạm thời dùm field tạm để luu ID của phòng ban
            //JobTitleID: $("#OrgID").val(),
            IsExport: isExport,
            ValueFields: $('#valueFieldsGrid').val()
        }
    };



    //Xử lý nút Create
    $("#btnCreate").click(function () {
        KendoRouteMapping('#Hrm_Main_Web/Hre_Profile/Create/', 'Hrm_Main_Web', '@_hrm_Main_Web');
    });
    //Xử lý nút Edit
    EditGridNewPage("gridHre_Profile", '#Hrm_Main_Web/Hre_Profile/Edit/', 'Hrm_Main_Web', '@_hrm_Main_Web');
    //Xử lý nút Delete
    DeleteGrid("gridHre_Profile", '@_hrm_Main_Web' + "Hre_Profile/Remove/");
    //var Validator = CheckValidate();

    GridCheckbox("gridHre_Profile");
    //"Delete (selected)" button
    $('#btnDelete').click(function (e) {
        if (selectedIds.length == 0) {
            DeleteFail();
            return;
        }
        var grid = $('#gridHre_Profile').data("kendoGrid");
        var selectedItem = grid.dataItem(grid.select());
        DeleteSelected("gridHre_Profile", '@_hrm_Main_Web' + "Hre_Profile/RemoveSelected/", selectedIds, '@ConstantPermission.Hre_Profile');
        return false;
    });

    $("#btnExportAll").click(function () {
        checkedNodes = [];
        var grid = $('#gridHre_Profile').data("kendoGrid");
        var count = grid.dataSource._data.toJSON().length;
        if (count == 0) {
            ExportAllFail();
            return;
        }
        var urlGetData = '@hrm_Hr_Service' + "Hre_GetData/ExportProfileList/";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = ExportAllFieldInfo(true);
        //var dataParameter = filterFieldInfo(true);
        ExportAll(urlGetData, dataParameter, urlDownload, '@ConstantPermission.Hre_Profile');
    });

    $("#btnExportSelected").click(function () {
        checkedNodes = [];
        var urlGetData = '@hrm_Hr_Service' + "Hre_GetData/ExportSelected/";
        var urlDownload = '@_hrm_Main_Web';
        var listIds = selectedIds.join(",");
        var listFields = $('#valueFieldsGrid').val();
        ExportSelected(urlGetData, listIds, listFields, urlDownload, '@ConstantPermission.Hre_Profile');
    });

    function onDataBoundGrid() {
        CheckedGrid("gridHre_Profile", selectedIds.join(","));
    }
</script>


@*@Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")*@

<div class="commandToolBarWidge" style="margin-top:3px">
    <div style="float:left">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreate", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
        @*@Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })*@
    </div>
    <div style="float:right">
        <div class="btn-group">
            <button type="button" class="k-button btn-default dropdown-toggle" data-toggle="dropdown" >
                <img src="@ConstantPath.IconExportPath" width="15" height="15" />
                @ConstantDisplay.HRM_Common_ExportDropdown_Title.TranslateString()
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu pull-right" role="menu">
                <li>@Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExportSelected", Content = ConstantAction.HRM_Common_ExportSelected.TranslateString(), ImageUrl = ConstantPath.IconExportPath, CssStyle = "border:0" })</li>
                <li>@Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExportAll", Content = ConstantAction.HRM_Common_ExportAll.TranslateString(), ImageUrl = ConstantPath.IconExportPath, CssStyle = "border:0" })</li>
            </ul>
        </div>
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnChangeColumnOrgStructureDetails", Content = ConstantDisplay.HRM_ChangeColumn.TranslateString(), ImageUrl = ConstantPath.Hrm_ChangeColumnIcon })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
    </div>
    <div class="clear"></div>
</div>
<script>
    function clickProfile(id) {
        KendoRouteMapping('#Hrm_Main_Web/GeneralProfile/Index/' + id, 'Hrm_Main_Web', '@_hrm_Main_Web');
    }
</script>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @{
        var columnMode = string.Empty;
        var defaultColumnMode = string.Empty;
        var userId = Session[SessionObjects.UserId];
        //Lấy tên lưới cộng thêm tên của control và action để tránh trùng nhau
        var gridControlName = ConstantControlName.HRM_gridHre_Profile_Name + "__Hre_OrgStructureDetails_Index";
        HRM.Presentation.Main.Controllers.Sys_ColumnModeController control = new HRM.Presentation.Main.Controllers.Sys_ColumnModeController();
        //Get thông tin cấu hình trong database
        GridBuilderModel gridInfo = control.GetGridBuilderInfo(userId + "," + gridControlName);

        var grid = new GridBuilderInfo
        {
            Name = ConstantControlName.HRM_gridHre_Profile_Name,
            ReadActionUrl = hrm_Hr_Service + "Hre_GetData/GetProfileListForDropdownNoCheckbox/",
            ReadData = "filterFieldInfo",
            
        };

        if (gridInfo != null && gridInfo.ValueFields != null && gridInfo.ValueFields.Any())
        {
            grid.ValueFields = gridInfo.ValueFields;
            grid.SizeFields = gridInfo.SizeFields;
            grid.Filterable = gridInfo.FilterFields;
            grid.DisplayFields = gridInfo.DisplayFields;
            grid.LockedFields = gridInfo.LockedFields;
            grid.GroupFields = gridInfo.GroupFields;
            
            if (gridInfo.PageSize > 0)
            {
                grid.PageSize = gridInfo.PageSize;
            }
            columnMode = gridInfo.StringXml;
        }
        else
        {
            grid.ValueFields = new[]
                {
                    Hre_ProfileModel.FieldNames.CodeEmp,
                    Hre_ProfileModel.FieldNames.ProfileName,

              Hre_ProfileModel.FieldNames.E_UNIT,
                       Hre_ProfileModel.FieldNames.E_DIVISION,
                Hre_ProfileModel.FieldNames.E_DEPARTMENT,
                 Hre_ProfileModel.FieldNames.E_TEAM,
                Hre_ProfileModel.FieldNames.E_SECTION,

                
                    Hre_ProfileModel.FieldNames.JobTitleName,
                    Hre_ProfileModel.FieldNames.PositionName,
                    Hre_ProfileModel.FieldNames.DateHire,
                    Hre_ProfileModel.FieldNames.IDNo,
                    //Hre_ProfileModel.FieldNames.Gender,
                    //Hre_ProfileModel.FieldNames.EmployeeTypeName,
                    Hre_ProfileModel.FieldNames.DateUpdate,
                };

            grid.SizeFields = new Dictionary<string, int>()
            {
                {Hre_ProfileModel.FieldNames.ProfileName,140},
                {Hre_ProfileModel.FieldNames.CodeEmp,80},
               {Hre_ProfileModel.FieldNames.E_DEPARTMENT,135},
                {Hre_ProfileModel.FieldNames.E_DIVISION,135},
                {Hre_ProfileModel.FieldNames.E_SECTION,135},
                {Hre_ProfileModel.FieldNames.E_TEAM,135},
                {Hre_ProfileModel.FieldNames.E_UNIT,135},

                {Hre_ProfileModel.FieldNames.JobTitleName,105},
                {Hre_ProfileModel.FieldNames.PositionName,105},
                {Hre_ProfileModel.FieldNames.DateHire,100},
                {Hre_ProfileModel.FieldNames.IDNo,80},
                //{Hre_ProfileModel.FieldNames.Gender,100},
                //{Hre_ProfileModel.FieldNames.EmployeeTypeName,100},
                {Hre_ProfileModel.FieldNames.DateUpdate,110},
            };

            grid.Filterable = new Dictionary<string, bool>()
            {
                {Hre_ProfileModel.FieldNames.ProfileName,true},
                {Hre_ProfileModel.FieldNames.CodeEmp,true},
                        {Hre_ProfileModel.FieldNames.E_DEPARTMENT,true},
                {Hre_ProfileModel.FieldNames.E_DIVISION,true},
                {Hre_ProfileModel.FieldNames.E_SECTION,true},
                {Hre_ProfileModel.FieldNames.E_TEAM,true},
                {Hre_ProfileModel.FieldNames.E_UNIT,true},
                {Hre_ProfileModel.FieldNames.JobTitleName,true},
                {Hre_ProfileModel.FieldNames.PositionName,true},
                {Hre_ProfileModel.FieldNames.DateHire,false},
                {Hre_ProfileModel.FieldNames.IDNo,false},
                //{Hre_ProfileModel.FieldNames.Gender,false},
                //{Hre_ProfileModel.FieldNames.EmployeeTypeName,false},
                {Hre_ProfileModel.FieldNames.DateUpdate,false},
            };

            grid.DisplayFields = new Dictionary<string, string>()
            {
                {Hre_ProfileModel.FieldNames.ProfileName,ConstantDisplay.HRM_HR_Profile_ProfileName},
                {Hre_ProfileModel.FieldNames.CodeEmp,ConstantDisplay.HRM_HR_Profile_CodeEmp},
               
          
                {Hre_ProfileModel.FieldNames.E_DEPARTMENT, ConstantDisplay.HRM_Hre_Report_E_DEPARTMENT},
                      {Hre_ProfileModel.FieldNames.E_DIVISION, ConstantDisplay.HRM_Hre_Report_E_DIVISION},
                {Hre_ProfileModel.FieldNames.E_SECTION, ConstantDisplay.HRM_Hre_Report_E_SECTION},
                {Hre_ProfileModel.FieldNames.E_TEAM, ConstantDisplay.HRM_Hre_Report_E_TEAM},
                 {Hre_ProfileModel.FieldNames.E_UNIT, ConstantDisplay.HRM_Hre_Report_E_UNIT},

                {Hre_ProfileModel.FieldNames.JobTitleName,ConstantDisplay.HRM_HR_Profile_JobTitleName},
                {Hre_ProfileModel.FieldNames.PositionName,ConstantDisplay.HRM_HR_Profile_PositionName},
                {Hre_ProfileModel.FieldNames.DateHire,ConstantDisplay.HRM_HR_Profile_DateHire},
                {Hre_ProfileModel.FieldNames.IDNo,ConstantDisplay.HRM_HR_Profile_IDNo},
                //{Hre_ProfileModel.FieldNames.Gender,ConstantDisplay.HRM_HR_Profile_Gender},
                //{Hre_ProfileModel.FieldNames.EmployeeTypeName,ConstantDisplay.HRM_HR_Profile_EmployeeTypeName},
                {Hre_ProfileModel.FieldNames.DateUpdate,ConstantDisplay.HRM_HR_Profile_DateUpdate},
            };
            grid.HyperlinkFields = new Dictionary<string, string>()
            {
                {Hre_ProfileModel.FieldNames.ProfileName,"clickProfile"},
            };
            defaultColumnMode = control.SetDefaultGridBuilderInfo(grid);
        }
    //var grid = new GridBuilderInfo
    //{
    //    Name = "gridHre_Profile",
    //    ValueFields = valueFields,
    //    SizeFields = sizeFields,
    //    DisplayFields = displayFields,
    //    Filterable = filterable,
    //    ReadActionUrl = hrm_Hr_Service + "Hre_GetData/GetProfileListForDropdownNoCheckbox/",
    //    ReadData = "filterFieldInfo",
    //    HyperlinkFields = hyperlinkFields
    //    //EventDataBound = "onDataBoundGrid"
        //};
        grid.GridWidth = Common.ScreenWidth - 310;
        grid.GridHeight = 650;
    }
   
    @(Html.VnrGrid<Hre_ProfileModel>(grid))
    <script>
        ClickButtonChangeColum("btnChangeColumnOrgStructureDetails", "Hre_ProfileModel");
        $(document).ready(function () {
            $("#" + '@ConstantControlName.HRM_ChangeColum_Grid_Name').val('@gridControlName');
            $("#" + '@ConstantControlName.HRM_ChangeColum_ColumMode_Name').val('@Html.Raw(columnMode)');
            $("#" + '@ConstantControlName.HRM_ChangeColum_Default_ColumMode_Name').val('');
            $("#" + '@ConstantControlName.HRM_ChangeColum_Default_ColumMode_Name').val('@Html.Raw(defaultColumnMode)');
        });
    </script>
</div>
@{
    var listValueField = grid.ValueFields;
    var valueFields1 = string.Empty;
    if (listValueField != null)
    {
        for (int i = 0; i < listValueField.Count(); i++)
        {
            valueFields1 += "," + listValueField[i];
        }
    }
}
@Html.Hidden("valueFieldsGrid", valueFields1)

<script type="text/javascript">
    $(document).ready(function () {
        $(".k-grid-content").height("549px");
    });
</script>


