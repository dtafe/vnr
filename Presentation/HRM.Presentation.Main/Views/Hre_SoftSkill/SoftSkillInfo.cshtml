@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.UI.Controls.Kendo.DropDownList
@using HRM.Presentation.UI.Controls.Kendo.MultiSelect
@using HRM.Presentation.Hr.Models
@using HRM.Infrastructure.Utilities

@using System.Collections;

@model Hre_SoftSkillModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
}

<script>
    SetFieldRequired();


    function onSave() {
        onSaveAndContinue($('#form_SoftSkillInfo'), '@_hrm_Hr_Service', 'api/Hre_SoftSkill/', '@ConstantControlName.HRM_gridHre_SoftSkill_Grid_Name', '@ConstantControlName.HRM_gridHre_SoftSkill_PopUp_Name');
        return false;
    }

    function onSaveClose() {
        onSaveAndClose($('#form_SoftSkillInfo'), '@_hrm_Hr_Service', 'api/Hre_SoftSkill/', '@ConstantControlName.HRM_gridHre_SoftSkill_Grid_Name', '@ConstantControlName.HRM_gridHre_SoftSkill_PopUp_Name');
        return false;
    }

    function onSaveDataPopUp() {

        onlySave($('#form_SoftSkillInfo'), '@_hrm_Hr_Service', 'api/Hre_SoftSkill/', '@ConstantControlName.HRM_gridHre_SoftSkill_Grid_Name');
        return false;
    }
</script>
<style>
    label {
        min-width: 100px;
    }
</style>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_SoftSkillInfo" }))
{

    <table style="width:100%">
        <tr>
            <td>
                <div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.ProfileID)
                        @Html.HiddenFor(mode => mode.ID)
                    </div>
                    <div class="FieldValue">
                        @{
                                IEnumerable valueProfile = new string[] { };
                                if (Model != null)
                                {
                                    valueProfile = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
                                }
                        }
                        @{
                                var Profile = new MultiSelectBuilderInfo()
                                 {
                                     DataTextField = Hre_SoftSkillModel.FieldNames.ProfileName,
                                     DataValueField = Hre_SoftSkillModel.FieldNames.ID,
                                     Url = @_hrm_Hr_Service + "Hre_GetData/GetMultiProfile",
                                     Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                                     Width = 300,
                                     MaxSelectedItems = 1,
                                     Value = valueProfile
                                 };
                        }
                        @(Html.VnrMultiSelectFor(mode => mode.ProfileID, Profile))
                    </div>

                    <div style="clear: both;"></div>
                </div>
                <div id="div3">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.SoftSkillName)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(model => model.SoftSkillName, "width: 300px")
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div6">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.SoftSkillType)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(model => model.SoftSkillType, "width: 300px")
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div6">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.SoftSkillLevel)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(model => model.SoftSkillLevel, "width: 300px")
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div6">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.TrainingPlace)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(model => model.TrainingPlace, "width: 300px")
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div7">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.TrainingFrom)
                    </div>
                    <div class="FieldValue">
                        @{
                                var TrainingFrom = new DatePickerBuilderInfo()
                                {
                                    StyleCss = "width:120px"
                                };
                        }
                        @(Html.VnrDatePickerFor(model => model.TrainingFrom, TrainingFrom))
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div8">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.TrainingTo)
                    </div>
                    <div class="FieldValue">
                        @{
                                var TrainingTo = new DatePickerBuilderInfo()
                                {
                                    StyleCss = "width:120px"
                                };
                        }
                        @(Html.VnrDatePickerFor(model => model.TrainingTo, TrainingTo))
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div10">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Certificate)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(model => model.Certificate, "width: 300px")
                    </div>
                    <div style="clear: both;"></div>
                </div>
       </div>
                    
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-RecruitmentCampaign", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-RecruitmentCampaign", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-RecruitmentCampaign", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>

                </div>
            </td>
        </tr>

    </table>
}