@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Payroll.Models

@model Sal_ProductCapacityModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;

    var _hrm_Cat_Service = ConstantPathWeb.Hrm_Hre_Service;
}

<script>
    SetFieldRequired();

    function onSave() {
        onSaveAndContinue($('#form_Sal_ProductCapacityInfo'), '@_hrm_Hr_Service', 'api/Sal_ProductCapacity/', '@ConstantControlName.HRM_gridSal_ProductCapacity_Name', 'windowSal_ProductCapacity');
        return false;
    }

    function onSaveClose() {
        onSaveAndClose($('#form_Sal_ProductCapacityInfo'), '@_hrm_Hr_Service', 'api/Sal_ProductCapacity/', '@ConstantControlName.HRM_gridSal_ProductCapacity_Name', 'windowSal_ProductCapacity');
        return false;
    }

    function onSaveDataPopUp() {
        onlySave($('#form_Sal_ProductCapacityInfo'), '@_hrm_Hr_Service', 'api/Sal_ProductCapacity/', '@ConstantControlName.HRM_gridSal_ProductCapacity_Name');
        return false;
    }

</script>

@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Sal_ProductCapacityInfo" }))
{
    @Html.HiddenFor(model => model.ID)

    <table style="width:100%">
        <tbody>
            <tr><td colspan="3" style=""></td></tr>
            <tr>
                <td valign="top">
                    <div style="overflow: hidden;">
                        <div style="float:left; width:100%">
                            <div style="float:left; width:50%">
                                <div id="div5">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(model => model.DepartmentID)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _org = new TreeViewDropdDownBuilderInfo()
                                            {
                                                SetFieldID = "DepartmentID",
                                                SetFieldName = "DepartmentID",
                                                IsShowCheckBox = false,
                                                Value = Model != null && Model.OrgStructureName != null ? Model.OrgStructureName : "",
                                            };
                                        }
                                        @Html.Partial("EditorTemplates/OrgTreeViewDropDown", _org)
                                        @Html.HiddenFor(m => m.DepartmentID)
                                    </div>
                                </div>
                            </div>
                            <div style="float:left; width:50%">

                            </div>
                        </div>
                        <div style="float:left; width:100%">
                            <div style="float:left; width:50%">
                                <div id=" div1">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.ProductID)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                        var _ProductID = new ComboBoxBuilderInfo()
                                        {
                                            Name = "ProductCapacityInfo_ProductID",
                                            DataTextField = "ProductName",
                                            DataValueField = "ID",
                                            Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiProduct",
                                            //Placeholder = ConstantDisplay.HRM_Category_Product_SelectProductType.TranslateString(),
                                            Autobind = true,
                                            ServerFilter = true,
                                            Value = (Model != null && Model.ProductID != null) ? Model.ProductID.ToString() : "",
                                            StyleCss="width:300px"
                                        };
                                        }
                                        @Html.VnrComboBoxFor(model => model.ProductID, _ProductID)
                                    </div>
                                </div>
                                <div id="div10">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.MinCapacity)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                        var _MinCapacity = new NumericTextBoxBuilderInfo<double>()
                                       {
                                           Name = "ProductCapacityInfo_MinCapacity",
                                           StyleCss = "width:150px",
                                           Format = ConstantFormat.HRM_Format_Number_Double
                                       };
                                        }
                                        @Html.VnrNumericTextBoxFor(model => model.MinCapacity, _MinCapacity)
                                    </div>
                                </div>
                                <div id=" div1">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.DateFrom)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                        var _DateFrom = new DatePickerBuilderInfo()
                                        {
                                            Name = "ProductCapacityInfo_DateFrom",
                                            Value = @Html.DisplayFor(mode => mode.DateFrom).ToString(),
                                            StyleCss = "width:120px;",
                                            Placeholder = ConstantDisplay.HRM_HR_Profile_DateFrom.TranslateString(),
                                        };
                                                                            }
                                                                            @Html.VnrDatePickerFor(model => model.DateFrom, _DateFrom)

                                                                            @{
                                        var _DateTo = new DatePickerBuilderInfo()
                                        {
                                            Name = "ProductCapacityInfo_DateTo",
                                            Value = @Html.DisplayFor(mode => mode.DateTo).ToString(),
                                            StyleCss = "width:120px;",
                                            Placeholder = ConstantDisplay.HRM_HR_Profile_DateTo.TranslateString(),
                                        };
                                        }
                                        @Html.VnrDatePickerFor(model => model.DateTo, _DateTo)
                                    </div>
                                </div>
                            </div>
                            <div style="float:left; width:50%">
                                <div id=" div1">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.ProductItemID)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var ProductItemID = new ComboBoxBuilderInfo()
                                            {
                                                Name = "ProductCapacityInfo_ProductItemID",
                                                DataTextField = "ProductItemName",
                                                DataValueField = "ID",
                                                Url = _hrm_Hr_Service + "Cat_GetData/GetFieldterProductITemMulti",
                                                //CascadeFrom = "ProductTive_ProductID",
                                                //Data = "filterProduct",
                                                ServerFilter = true,
                                                Autobind = true,
                                                Value = (Model != null && Model.ProductItemID != null) ? Model.ProductItemID.ToString() : "",
                                                StyleCss = "width:300px"
                                            };
                                        }
                                        @Html.VnrComboBoxFor(m => m.ProductItemID, ProductItemID)
                                    </div>
                                </div>
                                <div id="div10">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.MaxCapacity)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                        var _MaxCapacity = new NumericTextBoxBuilderInfo<double>()
                                       {
                                           Name = "ProductCapacityInfo_MaxCapacity",
                                           StyleCss = "width:150px",
                                           Format = ConstantFormat.HRM_Format_Number_Double
                                       };
                                        }
                                        @Html.VnrNumericTextBoxFor(model => model.MaxCapacity, _MaxCapacity)
                                    </div>
                                </div>
                                <div id="div10">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.Rate)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                        var _Rate = new NumericTextBoxBuilderInfo<double>()
                                       {
                                           Name = "ProductCapacityInfo_Rate",
                                           StyleCss = "width:150px",
                                           Format = ConstantFormat.HRM_Format_Number_Double
                                       };
                                        }
                                        @Html.VnrNumericTextBoxFor(model => model.Rate, _Rate)
                                    </div>
                                </div>

                            </div>
                         </div>
                        <div style="float:left; width:100%">
                                <div style="float: left; width: 100%">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.Formula)
                                    </div>
                                    <div class="FieldValue">
                                        @Html.VnrTextAreaFor(model => model.Formula, "width:800px;height:100px;")
                                    </div>
                                </div>
                                <div style="float: left; width: 100%">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.Notes)
                                    </div>
                                    <div class="FieldValue">
                                        @Html.VnrTextAreaFor(model => model.Notes, "width:800px;height:100px;")
                                    </div>
                                </div>
                            </div>
                     </div>
                </td>
            </tr>
            <tr>
                <td style="padding-top:2px; padding-bottom:10px;">
                    <div class="LineFooterCommandEdit">
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div>
                        <div class="FieldTitle150">
                        </div>
                        <div class="FieldValue">
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-ProductCapacityInfo", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-ProductCapacityInfo", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-ProductCapacityInfo", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        </div>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
}