@using HRM.Infrastructure.Utilities;
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.Category.Models;
@using HRM.Infrastructure.Security;
@using HRM.Presentation.Category.Models;

@model Cat_PurchaseItemsSearchModel

@{
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    Layout = null;
}

@{
    var window = new WindowBuilderInfo
    {
        Name = "windowCatPurchaseItems",
        Visible = false,
        Width = 700,
        LoadContentFrom = @_hrm_Main_Web + "Cat_PurchaseItems/Cat_PurchaseItemsInfo/",
    };
}
@(Html.VnrWindow(window))

<script>
    var gridName = '@ConstantControlName.HRM_Category_Brand_Grid_Name';
    var popUpName = '@ConstantControlName.HRM_Category_Brand_PopUp_Name';
    var titleEditPopUp = '@Html.Raw(ConstantDisplay.HRM_Category_PurchaseItem_Update_Title.TranslateString())';
    var titleCreatePopUp = '@Html.Raw(ConstantDisplay.HRM_Category_PurchaseItem_Create_Title.TranslateString())';


    //Data khi tìm kiếm
    function filterFieldInfo() {
        return {
            PurchaseItemName: $('#SPurchaseItemName').val(),
            IsExport: false,
            ValueFields: $('#valueFieldsGrid').val()
        };
    }
    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        //Show Hide Panel
        ShowHidePanel();
        //Jump Anchor
        jumpAnchor("anchor");
        $("#btnSearch").click(function () {
            ReadGrid('grid_PurchaseItems');
        });

        //Xử lý Edit popup
        var url = '@_hrm_Main_Web' + "Cat_PurchaseItems/Cat_PurchaseItemsInfo/";
        EditGridPopUp("grid_PurchaseItems", "windowCatPurchaseItems", url, '@ConstantPermission.Cat_PurchaseItems', titleEditPopUp);
    });

    //Xử lý Create
    $("#btnCreateCatPerchaseItems").click(function () {
        var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Cat_PurchaseItems');
        if (!isAccess) {
            return;
        }
        PopUpCreate("windowCatPurchaseItems", titleCreatePopUp, '@ConstantPermission.Cat_PurchaseItems');
    });

    //Xử Lý grid
    GridCheckbox(gridName);

    //Xử Lý button delete
    $('#btnDelete').click(function (e) {
        if (selectedIds == "") {
            DeleteFail();
            return;
        }
        
        e.preventDefault();
        DeleteSelected('grid_PurchaseItems', '@_hrm_Main_Web' + "Cat_PurchaseItems/RemoveSelected/", selectedIds, '@ConstantPermission.Cat_Supplier');
        return false;
    });

    $(document).ready(function () {
        ShowHidePanel();
    });

    $("#btnExportSelected").click(function () {

        if (selectedIds == "") {
            ExportSelectedFail();
            return;
        }
        var urlGetData = '@_hrm_Hre_Service' + "Cat_GetData/ExportPurchaseItemsSelected/";
        var urlDownload = '@_hrm_Main_Web';
        var listIds = selectedIds.join(",");
        var listFields = $('#valueFieldsGrid').val();
        ExportSelected(urlGetData, listIds, listFields, urlDownload, '@ConstantPermission.Cat_PurchaseItems');
    });

    $("#btnExportAll").click(function () {
      @*var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Hre_ProfileQuit');
        if (!isAccess) {
            return;
        }*@
        var grid = $('#grid_PurchaseItems').data("kendoGrid");
        if (grid.dataSource.total() == 0) {
            ExportAllFail();
            return;
        }
        var urlGetData = '@_hrm_Hre_Service' + "Cat_GetData/ExportAllPurchaseItems/";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo(true);
        ExportAll(urlGetData, dataParameter, urlDownload, '@ConstantPermission.Cat_PurchaseItems');
    });
</script>

<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            <div class="contendSearchWidge">
                <div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(model => model.PurchaseItemName)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBox("SPurchaseItemName", "width:200px;")
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
<div class="commandToolBarWidge" id="anchor">
    <div style="float:left">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateCatPerchaseItems", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    </div>
    <div style="float:right">
        <div class="btn-group">
            <button type="button" class="k-button btn-default dropdown-toggle" data-toggle="dropdown">
                <img src="@ConstantPath.IconExportPath" width="15" height="15" />
                @ConstantDisplay.HRM_Common_ExportDropdown_Title.TranslateString()
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu pull-right" role="menu">
                <li>@Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExportSelected", Content = ConstantAction.HRM_Common_ExportSelected.TranslateString(), ImageUrl = ConstantPath.IconExportPath, CssStyle = "border:0" })</li>
                <li>@Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExportAll", Content = ConstantAction.HRM_Common_ExportAll.TranslateString(), ImageUrl = ConstantPath.IconExportPath, CssStyle = "border:0" })</li>
            </ul>
        </div>
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnChangeColumnPurchaseItems", Content = ConstantDisplay.HRM_ChangeColumn.TranslateString(), ImageUrl = ConstantPath.Hrm_ChangeColumnIcon })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
    </div>
    <div class="clear"></div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @{
        var columnMode = string.Empty;
        var defaultColumnMode = string.Empty;
        var userId = Session[SessionObjects.UserId];
        //Lấy tên lưới cộng thêm tên của control và action để tránh trùng nhau
        var gridControlName = ConstantControlName.HRM_grid_Cat_PurchaseItems_Name + "__Cat_PurchaseItems_Index";
        HRM.Presentation.Main.Controllers.Sys_ColumnModeController control = new HRM.Presentation.Main.Controllers.Sys_ColumnModeController();
        //Get thông tin cấu hình trong database
        GridBuilderModel gridInfo = control.GetGridBuilderInfo(userId + "," + gridControlName);

        var grid = new GridBuilderInfo
        {
            Name = ConstantControlName.HRM_grid_Cat_PurchaseItems_Name,
            ShowCommand = false,
            ReadActionUrl = _hrm_Hre_Service + "Cat_GetData/GetPurchaseItemsList/",
            ReadData = "filterFieldInfo",
        };

        if (gridInfo != null && gridInfo.ValueFields != null && gridInfo.ValueFields.Any())
        {
            grid.ValueFields = gridInfo.ValueFields;
            grid.SizeFields = gridInfo.SizeFields;
            grid.Filterable = gridInfo.FilterFields;
            grid.DisplayFields = gridInfo.DisplayFields;
            grid.LockedFields = gridInfo.LockedFields;
            grid.GroupFields = gridInfo.GroupFields;
            if (gridInfo.PageSize > 0)
            {
                grid.PageSize = gridInfo.PageSize;
            }
            columnMode = gridInfo.StringXml;
        }
        else
        {
            grid.ValueFields = new[]
            {
                Cat_PurchaseItemsModel.FieldNames.PurchaseItemCode,
                Cat_PurchaseItemsModel.FieldNames.PurchaseItemName,
                Cat_PurchaseItemsModel.FieldNames.PurchaseItemCost,
                Cat_PurchaseItemsModel.FieldNames.OwnerName
            };

            grid.SizeFields = new Dictionary<string, int>()
            {
                {Cat_PurchaseItemsModel.FieldNames.PurchaseItemCode,140},
                {Cat_PurchaseItemsModel.FieldNames.PurchaseItemName,115},
                { Cat_PurchaseItemsModel.FieldNames.PurchaseItemCost,200},
                { Cat_PurchaseItemsModel.FieldNames.OwnerName,200},
            };



            grid.DisplayFields = new Dictionary<string, string>()
            {
                {Cat_PurchaseItemsModel.FieldNames.PurchaseItemCode,ConstantDisplay.HRM_Category_PurchaseItem_PurchaseItemCode},
                {Cat_PurchaseItemsModel.FieldNames.PurchaseItemName,ConstantDisplay.HRM_Category_PurchaseItem_PurchaseItemName},
                {Cat_PurchaseItemsModel.FieldNames.PurchaseItemCost,ConstantDisplay.HRM_Category_PurchaseItem_PurchaseItemCost},  
                {Cat_PurchaseItemsModel.FieldNames.OwnerName,ConstantDisplay.HRM_Category_PurchaseItem_OwnerName},        
            };
            defaultColumnMode = control.SetDefaultGridBuilderInfo(grid);
        }
        //var grid = new GridBuilderInfo
        //{
        //    Name = "grid_PurchaseItems",
        //    ValueFields = valueFields,
        //    SizeFields = sizeFields,
        //    DisplayFields = displayFields,
        //  //  Filterable = filterable,
        //    ShowCommand = false,
        //    ReadActionUrl = _hrm_Hre_Service + "Cat_GetData/GetPurchaseItemsList/",
        //    ReadData = "filterFieldInfo",
        //};
    }

    @(Html.VnrGrid<Cat_PurchaseItemsModel>(grid))
    <script>
        ClickButtonChangeColum("btnChangeColumnPurchaseItems", "Cat_PurchaseItemsModel");
        $(document).ready(function () {
            $("#" + '@ConstantControlName.HRM_ChangeColum_Grid_Name').val('@gridControlName');
            $("#" + '@ConstantControlName.HRM_ChangeColum_ColumMode_Name').val('@Html.Raw(columnMode)');
            $("#" + '@ConstantControlName.HRM_ChangeColum_Default_ColumMode_Name').val('');
            $("#" + '@ConstantControlName.HRM_ChangeColum_Default_ColumMode_Name').val('@Html.Raw(defaultColumnMode)');
        });
    </script>
</div>
@{
    var listValueField = grid.ValueFields;
    var valueFields1 = string.Empty;
    if (listValueField != null)
    {
        for (int i = 0; i < listValueField.Count(); i++)
        {
            valueFields1 += "," + listValueField[i];
        }
    }
}
@Html.Hidden("valueFieldsGrid", valueFields1)