@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.UI.Controls.Kendo.MultiSelect
@using HRM.Presentation.UI.Controls.Kendo.DropDownList
@using HRM.Presentation.Hr.Models
@using HRM.Infrastructure.Utilities
@using HRM.Infrastructure.Security

@using System.Collections
@model Hre_WorkHistoryModel
@{
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;


    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;

    IList<SelectListItem> listLaborType = Enum.GetValues(typeof(EnumDropDown.LaborType))
      .Cast<EnumDropDown.LaborType>()
      .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() }).OrderBy(p => p.Text)
      .ToList();

    IList<SelectListItem> listJRType = Enum.GetValues(typeof(EnumDropDown.JRType))
   .Cast<EnumDropDown.JRType>()
   .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() }).OrderBy(p => p.Text)
   .ToList();

    IList<SelectListItem> listStatus = Enum.GetValues(typeof(WorkHistoryStatus))
   .Cast<WorkHistoryStatus>()
   .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() }).OrderBy(p => p.Text)
   .ToList();

    IList<SelectListItem> listFormType = Enum.GetValues(typeof(EnumDropDown.FormType))
.Cast<EnumDropDown.FormType>()
.Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() }).OrderBy(p => p.Text)
.ToList();
}
<script>
    SetFieldRequired();

    function ProfileSelect(e) {
        debugger;
        var _jobtitle = $("#JobTitleID").data("kendoMultiSelect");
        var _position = $("#PositionID").data("kendoMultiSelect");
        var _dateEffective = $("#WorkHistory_DateEffective").data("kendoDatePicker");
        var _CostCentreID = $("#CostCentreID").data("kendoMultiSelect");
        var _employeeTypeID = $("#EmployeeTypeID").data("kendoComboBox");
        var _workLocation = $("#WorkLocation").data("kendoComboBox");
        var _supervisor = $("#Supervisor").data("kendoComboBox");
        var _salaryClassID = $("#SalaryClassID").data("kendoComboBox");
        // var _OrganizationStructureID = $("#OrganizationStructureID").data("OrgStructureTreeViewDropdownForCreate");
        var dataItem = this.dataSource.view()[e.item.index()];

        $.ajax({
            url: '@_hrm_Hr_Service' + "Hre_GetData/GetDataByProfileID",
            data: { ProfileID: dataItem.ID },
            type: 'POST',
            datatype: 'json',
            success: function (data) {
                if (data != null) {
                    debugger;
                    $("#PositionOld").val(data.JobTitleName);
                    $("#JobTitleOld").val(data.PositionName);
                    _jobtitle.value(data.JobTitleID);
                    _position.value(data.PositionID);
                    _dateEffective.value(data.DateOfEffect);
                    $("#OrganizationStructureID").val(data.OrgStructureID);
                    $("#OrgStructureTreeViewinput").val(data.OrgStructureName);
                    _CostCentreID.value(data.CostCentreID);
                    _employeeTypeID.value(data.EmpTypeID);
                    _workLocation.value(data.WorkPlaceName);
                    _supervisor.value(data.SupervisorName);
                    _salaryClassID.value(data.SalaryClassID);
                }
            }
        });
    }

    $("#Duration").change(function (e) {
        debugger;
        var monthAdd = $("#Duration").val();
        var _dateEffective = $("#WorkHistory_DateEffective").data("kendoDatePicker");
        var _dateComeBack = $("#WorkHistory_DateComeBack").data("kendoDatePicker");
        var _dateEffectiveParser = kendo.parseDate(_dateEffective._value, "dd/MM/yyyy");
        var month = _dateEffectiveParser.getMonth();
        var year = _dateEffectiveParser.getFullYear();
        var day = _dateEffectiveParser.getDate();
        var newMonth = month + parseFloat(monthAdd);

        var newDate = new Date(year, month, day);
        newDate.setMonth(parseFloat(newMonth));
        var _dateComeBackParser = kendo.parseDate(newDate, "dd/MM/yyyy");
        _dateComeBack.value(_dateComeBackParser);

    });

   
</script>
<div class="VnRMain">
    <table style="width:100%">
        <tbody>
            <tr><td colspan="3" style=""></td></tr>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                <td valign="top">
                    <div style="display: block; float: left; width: 500px">
                        <div id="div2">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.ProfileID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    IEnumerable valueProfile = new string[] { };
                                    if (Model != null)
                                    {
                                        valueProfile = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
                                    }
                                }
                                @{
                                    var Profile = new MultiSelectBuilderInfo()
                                     {
                                         DataTextField = Hre_WorkHistoryModel.FieldNames.ProfileName,
                                         DataValueField = Hre_WorkHistoryModel.FieldNames.ID,
                                         Url = @_hrm_Hr_Service + "Hre_GetData/GetMultiProfile",
                                         Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                                         MaxSelectedItems = 1,
                                         EventSelect = "ProfileSelect",
                                         Value = valueProfile
                                     };
                                }
                                @(Html.VnrMultiSelectFor(mode => mode.ProfileID, Profile))
                            </div>
                        </div>
                        <div id="div7">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.OrganizationStructureID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var org = new TreeViewDropdDownBuilderInfo()
                                    {
                                        Name = "OrgStructureTreeView",
                                        SetFieldID = "OrganizationStructureID",
                                        SetFieldName = "OrganizationStructureID",
                                        IsShowCheckBox = false,
                                    };
                                }
                                @Html.Partial("EditorTemplates/OrgTreeViewDropDown", org)
                                @Html.HiddenFor(model => model.OrganizationStructureID)
                                @Html.HiddenFor(model => model.OrgStructureName)
                            </div>
                        </div>
                        <div id="div5">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.JobTitleID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    IEnumerable valuejobTitle = new string[] { };
                                    if (Model != null)
                                    {
                                        valuejobTitle = new[] { new { JobTitleName = Model.JobTitleName, ID = Model.JobTitleID } };
                                    }
                                }
                                @{
                                    var jobTitleID = new MultiSelectBuilderInfo
                                    {
                                        DataTextField = "JobTitleName",
                                        DataValueField = "ID",
                                        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiJobTitle",
                                        MaxSelectedItems = 1,
                                        Placeholder = ConstantDisplay.HRM_Category_SelectJobTitle.TranslateString(),
                                        Value = valuejobTitle
                                    };
                                }
                                @Html.VnrMultiSelectFor(mode => mode.JobTitleID, jobTitleID)
                            </div>
                        </div>
                        <div id="div3">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.PositionID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    IEnumerable valuePosition = new string[] { };
                                    if (Model != null)
                                    {
                                        valuePosition = new[] { new { PositionName = Model.PositionName, ID = Model.PositionID } };
                                    }
                                }
                                @{
                                    var positionID = new MultiSelectBuilderInfo()
                                    {
                                        DataTextField = "PositionName",
                                        DataValueField = "ID",
                                        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiPosition",
                                        Placeholder = ConstantDisplay.HRM_Category_SelectPosition.TranslateString(),
                                        MaxSelectedItems = 1,
                                        Value = valuePosition
                                    };
                                }
                                @(Html.VnrMultiSelectFor(mode => mode.PositionID, positionID))
                            </div>
                        </div>
                        <div id="div6">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.DateEffective)
                                @Html.HiddenFor(model => model.DateEffectiveOld)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var dateEffective = new DatePickerBuilderInfo()
                                    {
                                        StyleCss = "width:100px",
                                        Name = "WorkHistory_DateEffective"
                                    };
                                }
                                @Html.VnrDatePickerFor(model => model.DateEffective, dateEffective)
                            </div>
                        </div>

                        <div id="div13">
                            <div class="FieldTitle" style="width:150px;">
                                @Html.VnrLabelForNoneIcon(model => model.TypeOfTransferID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var _TypeOfTransferID = new ComboBoxBuilderInfo()
                                     {
                                         DataTextField = "NameEntityName",
                                         StyleCss = "Width: 200px",
                                         DataValueField = "ID",
                                         Url = _hrm_Hr_Service + "Cat_GetData/GetMultiTypeOfTransfer",
                                         Value = Model == null ? string.Empty : Model.TypeOfTransferName,
                                         // EventChange = "onChanged"
                                     };
                                }
                                @Html.VnrComboBoxFor(model => model.TypeOfTransferID, _TypeOfTransferID).Text(Model == null ? string.Empty : Model.TypeOfTransferName)
                            </div>
                        </div>
                        <div id="div6">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.DateNotice)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var DateNotice = new DatePickerBuilderInfo()
                                    {
                                        StyleCss = "width:100px",
                                        Name = "WorkHistory_DateNotice"
                                    };
                                }
                                @Html.VnrDatePickerFor(model => model.DateNotice, DateNotice)
                            </div>
                        </div>
                        <div id="div6">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.DateComeBack)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var DateComeBack = new DatePickerBuilderInfo()
                                    {
                                        StyleCss = "width:100px",
                                        Name = "WorkHistory_DateComeBack"
                                    };
                                }
                                @Html.VnrDatePickerFor(model => model.DateComeBack, DateComeBack)
                            </div>
                        </div>
                        <div id="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.RequirCondit)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextAreaFor(mode => mode.RequirCondit)
                            </div>
                        </div>
                        <div id="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.Description)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextAreaFor(mode => mode.Description)
                            </div>
                        </div>
                        
                    </div>
                    <div style="display: block; float: left; width: 500px">
                        <div id="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelForNoneIcon(model => model.Status)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var ddlStatus = new DropDownListBuilderInfo()
                                    {
                                        DataTextField = "Text",
                                        DataValueField = "Value",
                                        BindTo = listStatus,
                                    };
                                }
                                @Html.VnrDropDownListFor(model => model.Status, ddlStatus)
                            </div>
                        </div>
                        <div class="DivContentTitleValue" id="div13">
                            <div class="FieldTitle" style="width:150px;">
                                @Html.VnrLabelForNoneIcon(model => model.CostCentreID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    IEnumerable valueCostCentre = new string[] { };
                                    if (Model != null)
                                    {
                                        valueCostCentre = new[] { new { CostCentreName = Model.CostCentreName, ID = Model.CostCentreID } };
                                    }
                                }
                                @{
                                    var costCentreID = new MultiSelectBuilderInfo
                                    {
                                        DataTextField = "CostCentreName",
                                        DataValueField = "ID",
                                        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiCostCentre",
                                        MaxSelectedItems = 1,
                                        Placeholder = ConstantDisplay.HRM_Category_SelectCostCentre.TranslateString(),
                                        Value = valueCostCentre
                                    };
                                }
                                @Html.VnrMultiSelectFor(mode => mode.CostCentreID, costCentreID)
                            </div>
                        </div>
                        <div id="div13">
                            <div class="FieldTitle" style="width:150px;">
                                @Html.VnrLabelForNoneIcon(model => model.LaborType)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var ddlLaborType = new DropDownListBuilderInfo()
                                    {
                                        DataTextField = "Text",
                                        DataValueField = "Value",
                                        BindTo = listLaborType
                                    };
                                }
                                @Html.VnrDropDownListFor(model => model.LaborType, ddlLaborType)
                            </div>
                        </div>
                        <div id="div13">
                            <div class="FieldTitle" style="width:150px;">
                                @Html.VnrLabelForNoneIcon(model => model.EmployeeTypeName)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var _EmployeeType = new ComboBoxBuilderInfo()
                                     {
                                         DataTextField = "EmployeeTypeName",
                                         DataValueField = "ID",
                                         Url = _hrm_Hr_Service + "Cat_GetData/GetMultiEmployeeType",
                                         StyleCss = "width:200px;",
                                         Value = Model == null ? string.Empty : Model.EmployeeTypeID.ToString(),
                                     };
                                }
                                @(Html.VnrComboBoxFor(mode => mode.EmployeeTypeID, _EmployeeType).Text(Model == null ? string.Empty : Model.EmployeeTypeName))
                            </div>
                        </div>
                        <div id="div4">
                            <div class="FieldTitle" style="width:150px;">
                                @Html.VnrLabelFor(mode => mode.WorkLocation)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var _workplaceName = new ComboBoxBuilderInfo()
                                     {
                                         DataTextField = "WorkPlaceName",
                                         DataValueField = "WorkPlaceName",
                                         Url = _hrm_Hr_Service + "Cat_GetData/GetMultiWorkPlace",
                                         StyleCss = "width:200px;",
                                         Value = Model == null ? string.Empty : Model.WorkLocation,
                                     };
                                }
                                @(Html.VnrComboBoxFor(mode => mode.WorkLocation, _workplaceName).Text(Model == null ? string.Empty : Model.WorkLocation))
                            </div>
                        </div>
                        <div id="div13">
                            <div class="FieldTitle" style="width:150px;">
                                @Html.VnrLabelForNoneIcon(model => model.Supervisor)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var _Supervisor = new ComboBoxBuilderInfo()
                                     {
                                         DataTextField = "ProfileName",
                                         StyleCss = "Width: 200px",
                                         DataValueField = "ProfileName",
                                         Url = _hrm_Hr_Service + "Hre_GetData/GetMultiProfile",
                                         Value = Model == null ? string.Empty : Model.Supervisor
                                     };
                                }
                                @Html.VnrComboBoxFor(model => model.Supervisor, _Supervisor).Text(Model == null ? string.Empty : Model.Supervisor)
                            </div>
                        </div>
                        <div id="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelForNoneIcon(model => model.HighSupervisor)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var _HighSupervisorCode = new MultiSelectBuilderInfo()
                                    {
                                        Name = "Worhistory_HighSupervisor",
                                        DataTextField = "ProfileName",
                                        DataValueField = "CodeEmp",
                                        MaxSelectedItems = 1,
                                        Url = @_hrm_Hr_Service + "Hre_GetData/GetMultiProfile",
                                        Value = (Model != null && Model.HighSupervisor != null) ? Model.HighSupervisor.Split(',').ToList() : new List<string>(),

                                    };
                                }
                                @Html.VnrMultiSelectFor(mode => mode.HighSupervisorCode, _HighSupervisorCode)
                                @Html.HiddenFor(model => model.HighSupervisor)
                            </div>
                        </div>
                        <div id="div13">
                            <div class="FieldTitle" style="width:150px;">
                                @Html.VnrLabelForNoneIcon(model => model.SalaryClassID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var _SalaryClassName = new ComboBoxBuilderInfo()
                                     {
                                         DataTextField = "SalaryClassName",
                                         DataValueField = "ID",
                                         Url = _hrm_Hr_Service + "Cat_GetData/GetMultiSalaryClass",
                                         StyleCss = "width:200px",
                                         Value = Model == null ? string.Empty : Model.SalaryClassID.ToString(),
                                     };
                                }
                                @(Html.VnrComboBoxFor(mode => mode.SalaryClassID, _SalaryClassName).Text(Model == null ? string.Empty : Model.SalaryClassName))
                            </div>
                        </div>
                        <div id="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.Role)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextAreaFor(mode => mode.Role)
                            </div>
                        </div>
                        <div id="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.Rromotion)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextAreaFor(mode => mode.Rromotion)
                            </div>
                        </div>
                    </div>
                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
        </tbody>
    </table>
    @Html.HiddenFor(mode => mode.ID)
    @Html.HiddenFor(mode => mode.PositionOld)
    @Html.HiddenFor(mode => mode.JobTitleOld)
</div>

<script type="text/javascript">
    $(document).ready(function () {
        var status = $('#Status').data("kendoDropDownList");
        status.readonly();

        var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Hre_ApprovedWorkingHistory', false);
        if (isAccess) {
            status.value('E_APPROVED')
        }
        else
        {
            status.value('E_WAITAPPROVE')
        }

        @{
          if (Model != null)
        {
          <text>
        $("#OrgStructureTreeViewinput").val('@Model.OrgStructureName');
        $("#OrganizationStructureID").val('@Model.OrganizationStructureID');
        </text>
        }
        }
    });

</script>
<div>
    @{
        if (Model != null && Model.HighSupervisor != null)
        {
            <script>
                $(document).ready(function () {
                    debugger;
                    var _codeEmps='@Model.HighSupervisor';
                    if(_codeEmps !='')
                    {
                        $.ajax({
                            type: 'POST',
                            url: '@_hrm_Hr_Service' + 'Hre_GetData/GetProfileByCodeEmps',
                            data: { codeemps: _codeEmps },
                            dataType: 'json',
                            async: false,
                            success: function(data)
                            {
                                debugger;
                                var multiselectHighSupervisor = $("#Worhistory_HighSupervisor").data("kendoMultiSelect");
                                multiselectHighSupervisor.setDataSource(data);
                                multiselectHighSupervisor.refresh();
                            }
                        });
                    }
                });

            </script>
        }
    }
</div>