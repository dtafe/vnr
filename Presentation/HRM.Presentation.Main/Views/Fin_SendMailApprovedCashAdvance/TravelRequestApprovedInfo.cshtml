@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@model HRM.Presentation.Hr.Models.FIN_TravelRequestModel

@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var rcID = Guid.Empty;
    if (Model != null)
    {
        rcID = Model.ID;
    }
}
<script>
    SetFieldRequired();


    function onApproved() {
        
        $.ajax({
            type: 'POST',
            url: '@_hrm_Sys_Service' + 'Sys_GetData/ProcessApprovedTravel',
            data: {
                host: '@_hrm_Main_Web',
                _loginID: $("#UserLoginId").val(),
                _userApprovedID: $("#TravelApprovedInfo").val(),
                _recordID: '@rcID',
                type: '@ApproveType.E_FIN_TravelRequest.ToString()'
            },
            dataType: 'json',
            async: false,
            success: function (data) {
                
                if (data.Status == '@DataErrorCode.Success.ToString()') {
                    ShowNotificationProcessor('Gửi Yêu Cầu Duyệt Chi Phí Công Tác Thành Công');
                }
                else if (data.Status == '@DataErrorCode.Error_Reject.ToString()') {
                    ShowNotificationProcessor('Chi Phí Công Tác Đã Từ Chối Không Được Phép Thay Đổi');
                }
                else if (data.Status == '@DataErrorCode.Error_SendRequest.ToString()') {
                    ShowNotificationProcessor('Chi Phí Công Tác Đã Được Gửi Yêu Cầu Duyệt');
                }
                else if (data.Status == '@DataErrorCode.NoPermission.ToString()') {
                    ShowNotificationProcessor('Tài Khoản Không Có Quyền Duyệt Chi Phí Công Tác Này');
                }
                else if (data.Status == '@DataErrorCode.Locked.ToString()') {
                    ShowNotificationProcessor('Đối Tượng Này Đã Bị Khóa');
                }
                else {
                    ShowNotificationProcessor('Gửi Yêu Cầu Duyệt Thất Bại');
                }

            }
        });
    }

</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_cat_TravleRequestApproved" }))
{
    @Html.HiddenFor(model => model.ID)
    <table style="width:350px">
        <tr>
            <td>
                <div>
                    <div class="FieldValue">
                        <div style="float:left">
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onApproved", Name = "btnApprovedTravel", Content = ConstantDisplay.HRM_Common_Approve_Button.TranslateString(), ImageUrl = ConstantPath.IconApprovePath })
                        </div>
                        <div style="float:left;margin-left : 5px">

                            <script>
                                function userApprovedTravelApprovedInfo(e) {
                    
                    return {
                        text: $("#TravelApprovedInfo").data("kendoComboBox")._prev + "|" + '@rcID'
                    };
                }
                            </script>
                            @{
    var multiSelectUserApproveID1 = new ComboBoxBuilderInfo()
    {
        Name = "TravelApprovedInfo",
        DataTextField = "UserApproveName",
        DataValueField = "ID",
        Url = @_hrm_Sys_Service + "Sys_GetData/GetUserApproved_Multilevel_E_FIN_TravelRequest",
        Placeholder = ConstantDisplay.HRM_System_SelectUserApprove.TranslateString(),
        Data = "userApprovedTravelApprovedInfo",
    };
                            }
                            @Html.VnrComboBox(multiSelectUserApproveID1)
                        </div>

                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150" style="width:150px">
                        @Html.VnrLabelForNoneIcon(mode => mode.ProfileName)
                    </div>
                    <div class="FieldValue">
                        @Html.DisplayFor(mode => mode.ProfileName)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150" style="width:150px">
                        @Html.VnrLabelForNoneIcon(mode => mode.AccountCode)
                    </div>
                    <div class="FieldValue">
                        @Html.DisplayFor(mode => mode.AccountCode)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150" style="width:150px">
                        @Html.VnrLabelForNoneIcon(mode => mode.TravelRequestName)
                    </div>
                    <div class="FieldValue">
                        @Html.DisplayFor(mode => mode.TravelRequestName)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150" style="width:150px">
                        @Html.VnrLabelForNoneIcon(mode => mode.TravelRequestCode)
                    </div>
                    <div class="FieldValue">
                        @Html.DisplayFor(mode => mode.TravelRequestCode)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150" style="width:150px">
                        @Html.VnrLabelForNoneIcon(mode => mode.Status)
                    </div>
                    <div class="FieldValue">
                        @Html.DisplayFor(mode => mode.Status)
                    </div>
                </div>
            </td>
        </tr>


    </table>


}
