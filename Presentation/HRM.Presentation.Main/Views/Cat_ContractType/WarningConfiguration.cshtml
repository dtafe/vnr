@using HRM.Infrastructure.Utilities;
@using HRM.Presentation.UI.Controls.Kendo;
@using HRM.Presentation.HrmSystem.Models;
@using System.Collections
@model HRM.Presentation.Category.Models.CatContractTypeModel
@{
    ViewBag.Title = "Contract Type";
    Layout = null;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    
    var _NumericTextBoxBuilder = new NumericTextBoxBuilderInfo<int>()
    {
        Format = ConstantFormat.HRM_Format_Number_Double.ToString(),
        StyleCss = "width:70px"
    };

    IList<SelectListItem> lstDay = Common.Day();
    IList<SelectListItem> lstMonth = Common.Month();
}
<div class="VnRMain">
    <table style="width: 100%;">
        <tbody>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                <td valign="top" style="background-color: #ffffff;">
                    <div style="display:block; padding-top:10px;">
                        <fieldset>
                            <legend>
                                @ConstantDisplay.HRM_HR_Category_ContractType_WarningCycle.TranslateString()
                            </legend>
                            <div class="DivContentTitleValue">
                                <div class="FieldTitleConfig300">
                                    @Html.VnrLabelIcon(ConstantDisplay.HRM_Category_ContractType_ExpiryContractLoop.TranslateString())
                                </div>
                                <div class="FieldValueConfig">
                                    @Html.VnrNumericTextBoxFor(m => m.ExpiryContractLoop, _NumericTextBoxBuilder)
                                </div>
                            </div>
                            <div class="DivContentTitleValue">
                                <div class="FieldTitleConfig300">
                                    @Html.VnrLabelIcon(ConstantDisplay.HRM_HR_Category_ContractType_WarningCycleInMonth.TranslateString())
                                </div>
                                <div class="FieldValueConfig">
                                    @{
                                            var ddlDay = new DropDownListBuilderInfo()
                                            {
                                                Name = "DayInMonthLoop1",
                                                DataTextField = "Text",
                                                DataValueField = "Value",
                                                //  FilterType = FilterType.Contains,
                                                StyleCss = "width:45px",
                                                BindTo = lstDay,
                                                OptionLabel = string.Empty,
                                                Value = Model == null ? string.Empty : Model.DayInMonthLoop1.ToString()
                                            };
                                        }
                                        @Html.VnrDropDownListFor(model => model.DayInMonthLoop1, ddlDay)
                                        @{
                                            var ddlMonth = new DropDownListBuilderInfo()
                                            {
                                                Name = "DayInMonthLoop2",
                                                DataTextField = "Text",
                                                DataValueField = "Value",
                                                // FilterType = FilterType.Contains,
                                                StyleCss = "width:45px",
                                                BindTo = lstDay,
                                                OptionLabel = string.Empty,
                                                Value = Model == null ? string.Empty : Model.DayInMonthLoop2.ToString()
                                            };
                                        }

                                        @Html.VnrDropDownListFor(model => model.DayInMonthLoop2, ddlMonth)
                                    @{
                                        var ddlYear = new DropDownListBuilderInfo()
                                        {
                                            Name = "DayInMonthLoop3",
                                            DataTextField = "Text",
                                            DataValueField = "Value",
                                            // FilterType = FilterType.Contains,
                                            StyleCss = "width:45px",
                                            BindTo = lstDay,
                                            OptionLabel = string.Empty,
                                            Value = Model == null ? string.Empty : Model.DayInMonthLoop3.ToString()
                                        };
                                    }

                                    @Html.VnrDropDownListFor(model => model.DayInMonthLoop3, ddlYear)
                                </div>
                            </div>
                        </fieldset>
                        <fieldset>
                            <legend>
                                @ConstantDisplay.HRM_HR_Category_ContractType_WarningDay.TranslateString()
                            </legend>
                            <div class="DivContentTitleValue">
                                <div class="FieldTitleConfig300">
                                    @Html.VnrLabelIcon(ConstantDisplay.HRM_Category_ContractType_ExpiryContractDayByDay.TranslateString())
                                </div>
                                <div class="FieldValueConfig">
                                    @Html.VnrNumericTextBoxFor(m => m.ExpiryContractDayByDay, _NumericTextBoxBuilder)
                                </div>
                            </div>
                            <div class="DivContentTitleValue">
                                <div class="FieldValueConfig">
                                    <div id="div2">
                                        <div class="FieldTitleConfig300">
                                            @Html.VnrLabelIcon(ConstantDisplay.HRM_Category_ContractType_EmailToList.TranslateString())
                                        </div>
                                        <div class="FieldValue">
                                            @{
                                                IEnumerable valueOrgStructureType = new string[] { };
                                                if (Model != null)
                                                {
                                                    valueOrgStructureType = new[] { new { OrgStructureTypeName = Model.OrgStructureTypeName, ID = Model.OrgStructureTypeCode } };
                                                }
                                            }
                                            @{
                                                var orgStructureType = new MultiSelectBuilderInfo()
                                                {
                                                   // Name = "ContractType_ORGSTRUCTURETYPEID",
                                                    DataTextField = "OrgStructureTypeName",
                                                    DataValueField = "OrgStructureTypeCode",
                                                    Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiOrgStructureType",
                                                    Placeholder = ConstantDisplay.HRM_Category_SelectOrgStructureType.TranslateString(),
                                                   // MaxSelectedItems = 1,
                                                    Value = valueOrgStructureType,
                                                    Autobind = true
                                                };
                                            }
                                            @(Html.VnrMultiSelectFor(mode => mode.ORGSTRUCTURETYPEID, orgStructureType))
                                            @Html.HiddenFor(mode => mode.EmailToList)
                                        </div>
                                        <div style="clear: both;"></div>
                                    </div>
                                    <div id="DivContentTitleValue">
                                        <div class="FieldTitleConfig300">
                                            @Html.VnrLabelIconFor(mode => mode.EmailOther)
                                        </div>
                                        <div class="FieldValueConfig">
                                            @Html.VnrTextAreaFor(mode => mode.EmailOther, "min-Width: 250px")
                                        </div>
                                        <div style="clear: both;"></div>
                                    </div>
                                    @*@Html.VnrTextAreaFor(mode => mode.EmailToList, "min-Width: 250px")*@
                                </div>
                            </div>
                        </fieldset>
                    </div>
                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
        </tbody>
    </table>
</div>
<div>
    @{
        if(Model != null)
        {
        <script>
                $(document).ready(function () {
                    debugger;
                    var x = location.href.split('/');
                    var _contractTypeID = x[x.length - 1];
                    $.ajax({
                        type: 'POST',
                        url: '@_hrm_Hr_Service' + 'Hre_GetData/GetDataByContractTypeID',
                        data: { contractTypeID: _contractTypeID },
                        dataType: 'json',
                        success: function (returnValue) {
                            debugger;
                            var orgtructureType = $("#ORGSTRUCTURETYPEID").data("kendoMultiSelect");
                            orgtructureType.dataSource.filter({});
                            var IDs = returnValue.EmailToList.split(",");
                            orgtructureType.value(IDs);

                        }
                    });

                });
            </script>
        }
        
    }
</div>