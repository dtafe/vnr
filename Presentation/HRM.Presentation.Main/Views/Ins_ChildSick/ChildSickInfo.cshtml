@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using System.Collections
@using HRM.Presentation.Insurance.Models
@model Ins_ChildSickModel

@{
    Layout = null;
 //   var _Hrm_Ins_Web = ConstantPathWeb.Hrm_Ins_Web;
    var _Hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
   // var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
  //  var _hrm_Hr_Service = ConstantPathWeb.Hrm_Att_Service;
    
    IList<SelectListItem> ilGender = Enum.GetValues(typeof(Gender))
       .Cast<Gender>()
       .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
       .ToList();
       bool EnableProfile=true;
       if(Model!=null&&Model.ID!=Guid.Empty)
       {
           EnableProfile=false;
           
       }
}
<script>
    SetFieldRequiredByScreenName('Ins_ChildSick');
    $(document).ready(function () {
        
    });
    function Setvalue()
    {
        var profileid = $("#ProfileIDs").data("kendoMultiSelect").value();
       // alert(profileid);
        $("#ProfileID").val(profileid);
      //  alert($("#ProfileID").val());

    }
    
    function onSave() {
       // Setvalue();
        onSaveAndContinue($('#form_Ins_ChildSick'), '@_Hrm_Hre_Service', 'api/Ins_ChildSick/', '@ConstantControlName.HRM_Insurance_InsuranceRecord_Grid_Name', '@ConstantControlName.HRM_Insurance_ChildSick_PopUp_Name');
        return false;
    }
    function onSaveClose() {
        //Setvalue();
        onSaveAndClose($('#form_Ins_ChildSick'), '@_Hrm_Hre_Service', 'api/Ins_ChildSick/', '@ConstantControlName.HRM_Insurance_InsuranceRecord_Grid_Name', '@ConstantControlName.HRM_Insurance_ChildSick_PopUp_Name');
        return false;
    }
    function onSaveDataPopUp() {
        //Setvalue();
        onlySave($('#form_Ins_ChildSick'), '@_Hrm_Hre_Service', 'api/Ins_ChildSick/', '@ConstantControlName.HRM_Insurance_ChildSick_PopUp_Name'  ); return false;
    }
</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Ins_ChildSick" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div style="display:block; padding-top:10px;">
                    <fieldset>
                        <legend>
                            @ConstantDisplay.HRM_Insurance_InsuranceRecord.TranslateString()
                        </legend>
                       
                             

                                    <div id="div2">
                                        <div class="FieldTitle150">
                                            @ConstantDisplay.HRM_HR_Profile_ProfileName.TranslateString()
                                            @*@Html.HiddenFor(mode => mode.ProfileID)*@
                                            @Html.Hidden("ProfileID")
                                            @Html.HiddenFor(mode => mode.ID)
                                        </div>
                                        <div class="FieldValue">
                                            @{
                                            IEnumerable valuePro = new string[] { };
                                            if (Model != null)
                                            {
                                                valuePro = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
                                            }
                                                                                    }
                                                                                    @{
                                            var ProfileIDs= new MultiSelectBuilderInfo()
                                            {
                                                Name = "ProfileIDs",
                                                DataTextField = "ProfileName",
                                                DataValueField = "ID",
                                                Url = @_Hrm_Hre_Service + "HrMultiSelect/GetMultiProfile",
                                                Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                                                Value = valuePro,
                                                MaxSelectedItems=1,
                                                Enable = EnableProfile
                                                
                                            };
                                            }
                                            @(Html.VnrMultiSelectFor(model => model.ProfileID, ProfileIDs))
                                            
                                        </div>
                                        <br />
                                    </div>

                                    <div>
                                        <div class="FieldTitle150">
                                            @Html.VnrLabelFor(mode => mode.ChildSickName)
                                        </div>
                                        <div class="FieldValue">
                                            
                                            @Html.VnrTextBoxFor(mode => mode.ChildSickName)
                                        </div>
                                    </div>


                        <div>
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.Gender)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var Gender = new ComboBoxBuilderInfo()
                                {
                                    DataTextField = "Text",
                                    DataValueField = "Value",
                                    BindTo = ilGender,
                                    Placeholder = ConstantDisplay.HRM_Category_SelectGender.TranslateString(),

                                };
                                }
                                @Html.VnrComboBoxFor(mode => mode.Gender, Gender)
                            </div>
                        </div>



                                   

                                    <div id="div3">
                                        <div class="FieldTitle150">
                                            @Html.VnrLabelFor(mode => mode.DateOfBirth)
                                        </div>
                                        <div class="FieldValue">
                                            @{
                                            var DateOfBirth = new DatePickerBuilderInfo()

                                                {
                                                    Format = ConstantFormat.HRM_Format_DayMonthYear
                                                };
                                            }
                                            @Html.VnrDatePickerFor(mode => mode.DateOfBirth, DateOfBirth)
                                        </div>
                                        <div style="clear: both;"></div>
                                    </div>
                                   
</fieldset>
                    
                </div>
               



            </td>

        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle">

                    </div>
                    <div class="FieldValue" style="float:right">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-ChildSick", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-ChildSick", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-ChildSick", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>

                </div>
            </td>
        </tr>
    </table>
}

