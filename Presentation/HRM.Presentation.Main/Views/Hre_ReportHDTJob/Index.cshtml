@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Hr.Models
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Infrastructure.Security

@model HRM.Presentation.Hr.Models.Hre_ReportHDTJobModel

@{
    ViewBag.Title = "Index";
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var controller = ViewContext.RouteData.Values["Controller"].ToString();
    var action = ViewContext.RouteData.Values["Action"].ToString();
    var screen = controller + "/" + action;
}
@Html.Hidden("Screen", screen)
@*@{
    var window = new WindowBuilderInfo
    {
        Name = "PopUpCreateTemplate",
        Visible = false,

        LoadContentFrom = _hrm_Main_Web + "Hre_ReportHCGender/CreateTemplate"
    };
}
@(Html.VnrWindow(window))*@
<script>
    var checkedNodes = [];
    //SetFieldRequired();
    var isCreateTemplate = false;
    var isCreateTemplateForDynamicGrid = false;

    function filterFieldInfo(isExport) {
        
        var elementPara = {
            @*DateFrom: $('#@Html.FieldIdFor(model => model.DateFrom)').val(),
            DateTo: $('#@Html.FieldIdFor(model => model.DateTo)').val(),*@
            DateFrom: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateFrom").val()),
            DateTo: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateTo").val()),
            OrgStructureID: checkedNodes.join(','),
            IsCreateTemplate: isCreateTemplate,
            IsCreateTemplateForDynamicGrid: isCreateTemplateForDynamicGrid,
        };
        if (isExport == true) {
            elementPara["ExportId"] = $('#ddlScreenName').val();
            @*elementPara["ExportType"] = '@ExportFileType.PDF';*@
        }
        return elementPara;
    }
    function CheckEmpty() {
        
        var datefrom = $("#DateFrom").val();
        var dateto = $("#DateTo").val();
        if (datefrom == "") {
            ShowNotificationProcessor("Error,Ngày Áp Dụng Từ Ngày Không Được Rỗng !");
            return;
        }
        if (dateto == "") {
            ShowNotificationProcessor("Error,Ngày Áp Dụng Đến Ngày Không Được Rỗng !"); return;
        }
    }

    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        //Show Hide Panel
        ShowHidePanel();
        $("#btnSearch").click(function () {
            
            CheckEmpty();
            var treeView = $("#treeviewOrg").data("kendoTreeView");
            //checkedNodeIds(treeView.dataSource.view(), checkedNodes);
            checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes)
            var grid = $('#gridHre_ReportHDTJob').data("kendoGrid");
            
            grid.dataSource.read();
            checkedNodes = [];
        });
    });


    $("#btnExport").click(function () {
        CheckEmpty();
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        //checkedNodeIds(treeView.dataSource.view(), checkedNodes);
        checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes)
        var isAccess = checkPermission(PrivilegeType.Export, '@ConstantPermission.Hre_ReportHDTJob');
        if (!isAccess) {
            return;
        }
         isCreateTemplate = false;
         isCreateTemplateForDynamicGrid = false;

        if ($('#ddlScreenName').val() == "") {
            ExportFail();
            return;
        }
        var urlGetData = '@_hrm_Hre_Service' + "Hre_GetData/GetReportHDTJob";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo(true);
        ExportAll(urlGetData, dataParameter, urlDownload);
        checkedNodes = [];
    });

    $("#btnCreateTemplate").click(function () {
        isCreateTemplate = true;
        isCreateTemplateForDynamicGrid = false;
        CreateTemplate('@_hrm_Hre_Service' + "Hre_GetData/GetReportHDTJob", filterFieldInfo(true));
        @*
        var isAccess = checkPermission(PrivilegeType.Export, '@ConstantPermission.Hre_ReportHDTJob');
        if (!isAccess) {
            return;
        }
        isCreateTemplate = true;
        isCreateTemplateForDynamicGrid = true;
        var window12 = window;
        $.ajax({
            type: 'POST',
            url: '@_hrm_Hre_Service' + "Hre_GetData/GetReportHDTJob",
            data: filterFieldInfo(true),
            dataType: 'json',
            success: function (returnValue) {
                
                var index = returnValue.indexOf(',');
                var status = "";
                var fullPath = "";
                if (index > 0) {
                    status = returnValue.substring(0, index);
                    if (status == "Success") {
                        fullPath = returnValue.substring(index + 1, returnValue.length);
                        window12.location = '@_hrm_Main_Web' + fullPath;
                        ShowNotificationProcessor(status);
                        $.when(kendo.ui.ExtOkCancelDialog.show({
                            title: "Thông Báo",
                            message: "Bạn có muốn tải template vừa tạo lên không?",
                            icon: "k-ext-warning"
                        })
                        ).done(function (response) {
                            if (response.button == "OK") {
                                var window2 = $("#PopUpCreateTemplate").data("kendoWindow");
                                window2.center().open().title("Tạo mới mẫu template");
                            }
                        });
                    }
                } else {
                    ShowNotificationProcessor(returnValue);
                }
            }
        });*@
    });

</script>

<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            <div class="contendSearchWidge" style="overflow:visible">
                <div id="div2">
                    <div class="FieldTitle150">
                        @Html.Label(@ConstantDisplay.HRM_Attendance_RosterGroup_DateFromTo.TranslateString())
                    </div>
                    <div class="FieldValue">
                        @{
                            var DateFrom = new DatePickerBuilderInfo()
                            {
                                Value = @Html.DisplayFor(mode => mode.DateFrom).ToString(),
                                StyleCss = "width:100px;",
                                Placeholder = ConstantDisplay.HRM_HR_Profile_DateFrom.TranslateString()
                            };

                        }
                        @Html.VnrDatePickerFor(mode => mode.DateFrom, DateFrom)<span style="color:#ff0000">*</span>
                        @{
                            var DateTo = new DatePickerBuilderInfo()
                            {
                                Value = @Html.DisplayFor(mode => mode.DateTo).ToString(),
                                StyleCss = "width:100px;",
                                Placeholder = ConstantDisplay.HRM_HR_Profile_DateTo.TranslateString()
                            };

                        }
                        @Html.VnrDatePickerFor(mode => mode.DateTo, DateTo)<span style="color:#ff0000">*</span>
                    </div>
                    <div id="div14">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.OrgStructureID)
                        </div>
                        <div class="FieldValue">
                            <div class="FieldValue">
                                @Html.Partial("EditorTemplates/OrgStructureTreeViewDropdown")
                            </div>

                        </div>
                    </div>
                    <div style="clear: both;"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="commandToolBarWidge">

    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    <div style="float:right">
        <script>
            function GetScreenName() {
                return {
                    screenName: '@screen'
                };
            }
        </script>
        <div class="FieldValue" style="margin-top: 0;">
            @{
                var screenName = new DropDownListBuilderInfo()
                {
                    Name = "ddlScreenName",
                    DataTextField = "ExportName",
                    DataValueField = "ID",
                    Url = @_hrm_Hr_Service + "Cat_GetData/GetScreenName",
                    StyleCss = "width:200px;",
                    Data = "GetScreenName",
                };
            }
            @Html.VnrDropDownList(screenName)

            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport", Content = ConstantDisplay.HRM_Common_Export_Button.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateTemplate", Content = ConstantDisplay.HRM_Common_CreateTemplate_Button.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
        </div>
    </div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @using HRM.Presentation.UI.Controls.Kendo
    @{
        string[] valueFields = new string[]
        {
           Hre_ReportHDTJobModel.FieldNames.CodeEmp,
           Hre_ReportHDTJobModel.FieldNames.ProfileName,
              Hre_ReportHDTJobModel.FieldNames.E_UNIT,
                       Hre_ReportHDTJobModel.FieldNames.E_DIVISION,
                Hre_ReportHDTJobModel.FieldNames.E_DEPARTMENT,
                 Hre_ReportHDTJobModel.FieldNames.E_TEAM,
                Hre_ReportHDTJobModel.FieldNames.E_SECTION,


           Hre_ReportHDTJobModel.FieldNames.HDTType,
           Hre_ReportHDTJobModel.FieldNames.DateFrom,
           Hre_ReportHDTJobModel.FieldNames.DateTo

        };
        Dictionary<string, int> sizeFields = new Dictionary<string, int>()
        {

            {Hre_ReportHDTJobModel.FieldNames.CodeEmp,80},
            {Hre_ReportHDTJobModel.FieldNames.ProfileName,140},
            {Hre_ReportHDTJobModel.FieldNames.E_DEPARTMENT,135},
                {Hre_ReportHDTJobModel.FieldNames.E_DIVISION,135},
                {Hre_ReportHDTJobModel.FieldNames.E_SECTION,135},
                {Hre_ReportHDTJobModel.FieldNames.E_TEAM,135},
                {Hre_ReportHDTJobModel.FieldNames.E_UNIT,135},

            {Hre_ReportHDTJobModel.FieldNames.HDTType,200},
            {Hre_ReportHDTJobModel.FieldNames.DateFrom,120},
            {Hre_ReportHDTJobModel.FieldNames.DateTo,120}
    };

        Dictionary<string, string>
            displayFields = new Dictionary<string, string>
                ()
            {
            {Hre_ReportHDTJobModel.FieldNames.CodeEmp,ConstantDisplay.HRM_HR_Profile_CodeEmp},
            {Hre_ReportHDTJobModel.FieldNames.ProfileName,ConstantDisplay.HRM_HR_ReportBirthday_ProfileName},
                          {Hre_ReportHDTJobModel.FieldNames.E_UNIT, ConstantDisplay.HRM_Hre_Report_E_UNIT},
                {Hre_ReportHDTJobModel.FieldNames.E_DIVISION, ConstantDisplay.HRM_Hre_Report_E_DIVISION},
                {Hre_ReportHDTJobModel.FieldNames.E_DEPARTMENT, ConstantDisplay.HRM_Hre_Report_E_DEPARTMENT},
                {Hre_ReportHDTJobModel.FieldNames.E_SECTION, ConstantDisplay.HRM_Hre_Report_E_SECTION},
                {Hre_ReportHDTJobModel.FieldNames.E_TEAM, ConstantDisplay.HRM_Hre_Report_E_TEAM},

            {Hre_ReportHDTJobModel.FieldNames.HDTType,ConstantDisplay.HRM_HR_HDTJob_HDTType},
            {Hre_ReportHDTJobModel.FieldNames.DateFrom,ConstantDisplay.HRM_HR_HDTJob_DateFrom},
            {Hre_ReportHDTJobModel.FieldNames.DateTo,ConstantDisplay.HRM_HR_HDTJob_DateTo}
            };


        var grid = new GridBuilderInfo
        {
            ShowCheckbox = false,
            ShowEditIcon = false,
            Name = "gridHre_ReportHDTJob",
            ValueFields = valueFields,
            SizeFields = sizeFields,
            DisplayFields = displayFields,
            ReadActionUrl = _hrm_Hre_Service + "Hre_GetData/GetReportHDTJob",
            ReadData = "filterFieldInfo"
        };
    }
    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<Hre_ReportHDTJobModel>(grid))
</div>

