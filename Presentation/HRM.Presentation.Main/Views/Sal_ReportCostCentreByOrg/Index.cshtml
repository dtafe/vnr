@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Hr.Models
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Payroll.Models
@model HRM.Presentation.Payroll.Models.Sal_ReportCostCentreByOrgModel
@{
    ViewBag.Title = "Index";
    Layout = null;
    var _hrm_Cat_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
 
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
  
    var controller = ViewContext.RouteData.Values["Controller"].ToString();
    var action = ViewContext.RouteData.Values["Action"].ToString();
    var screen = controller + "/" + action;
    IList<SelectListItem> listCompareType = Enum.GetValues(typeof(EnumDropDown.CompareType))
        .Cast<EnumDropDown.CompareType>()
        .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() })
        .ToList();
    
}
@Html.Hidden("Screen", screen)
@*@{
    var window = new WindowBuilderInfo
    {
        Name = "PopUpCreateTemplate",
        Visible = false,

        LoadContentFrom = _hrm_Main_Web + "Hre_ReportHCGender/CreateTemplate"
    };
}
@(Html.VnrWindow(window))*@

@{
    var window1 = new WindowBuilderInfo
    {
        Name = "windowConfigElementForRptCostCentre",
        Visible = false,
        LoadContentFrom = @_hrm_Main_Web + "Sal_ReportCostCentreByOrg/Sal_ConfigElementForRptCostcentreInfo/",
    };
}
@(Html.VnrWindow(window1))
<style>
    #btnConfigElement {
        border:none;
        background-color:transparent;
    }
    #btnConfigElement img {
        max-width:20px;
    }

</style>
<script type="text/javascript">

    SetFieldRequired();
    var titleCreatePopUpItemForShop = '@Html.Raw(ConstantDisplay.HRM_Sal_ItemForShop_PopUp_Create_Title.TranslateString())';
    var isCreateTemplate = false;
    var isCreateTemplateForDynamicGrid = false;
    function filterFieldInfo(isExport) {
        
        var checkedNodes = [];
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes);
        var _cutOff = $('#@Html.FieldIdFor(model => model.CutOffDurationIDs)').val() != null ? $('#@Html.FieldIdFor(model => model.CutOffDurationIDs)').val().join(',') : $('#@Html.FieldIdFor(model => model.CutOffDurationIDs)').val();
        var _element = $('#@Html.FieldIdFor(model => model.ElementIDs)').val() != null ? $('#@Html.FieldIdFor(model => model.ElementIDs)').val().join(',') : $('#@Html.FieldIdFor(model => model.ElementIDs)').val();
        var elementPara = {
            CutOffDurationIDs: _cutOff,
            ElementIDs: _element,
            OrgStructureID: checkedNodes.join(','),
          
            IsCreateTemplate: isCreateTemplate,
            IsCreateTemplateForDynamicGrid: isCreateTemplateForDynamicGrid,
            UserID: '@Session[SessionObjects.ProfileID]',
        };
        if (isExport == true) {
            elementPara["ExportId"] = $('#ddlScreenName').val();
        }
        return elementPara;
    }

    $("#btnSearch").click(function () {
        isCreateTemplate = false;
        isCreateTemplateForDynamicGrid = false;
        ShowHre_ProgressBar();
        $.ajax({
            type: 'POST',
            url: '@_hrm_Hr_Service' + 'Sal_GetData/ReportCostcentreByOrgValiedate',
            data: filterFieldInfo(false),
            dataType: 'json',
            async: false,
            success: function (data) {
                if (data[0] == "error") {
                    CloseHre_ProgressBar();
                    ShowNotificationProcessor(data[1]);
                } else {
                    $.ajax({
                        url: '@_hrm_Hr_Service' + "Sal_GetData/GetReportCostCentreByOrg",
                        type: 'POST',
                        data: filterFieldInfo(false),
                        datatype: 'json',
                        success: function (data) {
                            CloseHre_ProgressBar();
                            
                            var grid = VnrGridDynamic;
                            grid.GridName = "grid_ReportCostCentreByOrgTable";
                            grid.DataSource = data.Data;
                            VnrGridDynamicControl(grid);
                           
                           
                        }
                    });
                }
            },
            error: function myfunction() {
                CloseHre_ProgressBar();
            }
        });

        
    });

    $("#btnExport").click(function () {
        

        isCreateTemplate = false;
        isCreateTemplateForDynamicGrid = true;
        var isAccess = checkPermission(PrivilegeType.Export, '@HRM.Infrastructure.Security.ConstantPermission.Hre_ReportHCSeniority');
        if (!isAccess) {
            return;
        }
        if ($('#ddlScreenName').val() == "") {
            ExportFail();
            return;
        }
        $.ajax({
            type: 'POST',
            url: '@_hrm_Hr_Service' + '/Sal_GetData/GetReportCostCentreByOrg',
            data: filterFieldInfo(true),
            dataType: 'json',
            success: function (returnValue) {
                
                var strSplit = returnValue.indexOf(',');
                var status = "";
                var fullPath = "";
                if (strSplit > 0) {
                    status = returnValue.substring(0, strSplit);
                    if (status == "Success") {
                        fullPath = returnValue.substring(strSplit + 1, returnValue.length);
                        window.location = '@_hrm_Main_Web' + fullPath;
                        ShowNotificationProcessor(status);
                    }
                } else {
                    ShowNotificationProcessor(returnValue);
                }
                @*var url = '@_hrm_Main_Web' + returnValue;
                window.location = url;*@
            }
        });
    });

    $("#btnCreateTemplate").click(function () {
        
        isCreateTemplate = true;
        isCreateTemplateForDynamicGrid = true;
        CreateTemplate('@_hrm_Hr_Service' + '/Sal_GetData/GetReportCostCentreByOrg', filterFieldInfo(true));
        @*var window12 = window;
        $.ajax({
            type: 'POST',
            url: '@_hrm_Hr_Service' + "Sal_GetData/ComparePayroll",
            data: filterFieldInfo(true),
            dataType: 'json',
            success: function (returnValue) {
                
                var index = returnValue.indexOf(',');
                var status = "";
                var fullPath = "";
                if (index > 0) {
                    status = returnValue.substring(0, index);
                    if (status == "Success") {
                        fullPath = returnValue.substring(index + 1, returnValue.length);
                        window12.location = '@_hrm_Main_Web' + fullPath;
                        ShowNotificationProcessor(status);
                        $.when(kendo.ui.ExtOkCancelDialog.show({
                            title: '@ConstantDisplay.HRM_CreateTemplate_Title.TranslateString()',
                            message: '@ConstantDisplay.HRM_CreateTemplate_Message.TranslateString()',
                            icon: "k-ext-warning"
                        })
                        ).done(function (response) {
                            if (response.button == "OK") {
                                var window2 = $("#PopUpCreateTemplate").data("kendoWindow");
                                window2.center().open().title('@ConstantDisplay.HRM_CreateTemplate_Popup_Title.TranslateString()');
                            }
                        });
                    }
                } else {
                    ShowNotificationProcessor(returnValue);
                }
            }
        });*@
    });
    function onChange(e) {
        var checkboxByOrg = document.getElementById("ShowChart");
        
        if (e.sender._old == 'E_ORGSTRUCTURE') {
            $('#divOrgStructureType').show();
        } else {
            $('#divOrgStructureType').hide();
        }

        if (e.sender._old == 'E_PROFILE') {
            $('#divShowChartByProfile').show();
            checkboxByOrg.checked = false;
        } else {
            $('#divShowChartByProfile').hide();
        }
        if (e.sender._old == '') {
            $('#divShowChartByProfile').show();
            checkboxByOrg.checked = false;
        }
    }

    //Xử lý tạo mới
    $("#btnConfigElement").click(function () {
        var _key = "HRM_SAL_PAYROLL_CONFIGELEMENTFORRPTCOSTCENTRE";
        $.ajax({
            type: 'POST',
            url: '@_hrm_Hr_Service' + "Sal_GetData/GetConfigElement",
            data: {Key : _key},
            dataType: 'json',
            success: function (returnValue) {
                
                $("#ValueKey").val(returnValue[0].Name);
                $("#ValueConfig").val(returnValue[0].Value1);
                $("#ConfigID").val(returnValue[0].ID);
               
                setTimeout(function () {
                    PopUpCreate("windowConfigElementForRptCostCentre", "Cấu Hình Phần Tử", '@HRM.Infrastructure.Security.ConstantPermission.Sal_ItemForShop');
                },1000);
            }
        });

        @*PopUpCreate("windowConfigElement", titleCreatePopUpItemForShop, '@HRM.Infrastructure.Security.ConstantPermission.Sal_ItemForShop');*@
    });

    $(document).ready(function () {
        var _key = "HRM_SAL_PAYROLL_CONFIGELEMENTFORRPTCOSTCENTRE";
        $.ajax({
            type: 'POST',
            url: '@_hrm_Hr_Service' + "Sal_GetData/GetConfigElement",
            data: { Key: _key },
            dataType: 'json',
            success: function (returnValue) {
                
                var elementConfiged = $("#ElementIDs").data("kendoMultiSelect");
                elementConfiged.dataSource.filter({});
                elementConfiged.value(returnValue[0].Value1.split(","));
              
            }
        });
    });


</script>


@Html.Hidden("valueFields")
@Html.Hidden("ValueKey")
@Html.Hidden("ValueConfig")
@Html.Hidden("ConfigID")
<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            <div class="contendSearchWidge" style="overflow:visible">
               <div style="float:left;width:500px">
                   <div>
                       <div class="FieldTitle">
                           @Html.VnrLabelFor(mode => mode.CutOffDurationIDs)
                       </div>
                       <div class="FieldValue">
                           @{
                               var _CutOffDurationIDs = new MultiSelectBuilderInfo
                               {
                                   
                                   DataTextField = "CutOffDurationName",
                                   DataValueField = "ID",
                                   Url = @_hrm_Hr_Service + "Att_GetData/GetMultiCutOffDuration",
                                   MaxSelectedItems = 1,
                                   Placeholder = ConstantDisplay.HRM_Payroll_CutOffDurationID_Select.TranslateString(),
                               };
                           }
                           @Html.VnrMultiSelectFor(mode => mode.CutOffDurationIDs, _CutOffDurationIDs)
                       </div>
                   </div>
                   <div>
                       <div class="FieldTitle">
                           @Html.VnrLabelFor(mode => mode.ElementIDs)
                       </div>
                       <div class="FieldValue">
                          
                           @{
                               var _ElementName = new MultiSelectBuilderInfo
                               {
                                  
                                   DataTextField = "ElementName",
                                   DataValueField = "ID",
                                   Url = @_hrm_Cat_Service + "Cat_GetData/GetElementType",
                                  // MaxSelectedItems = 1,
                                   Placeholder = ConstantDisplay.HRM_Category_SelectElementType.TranslateString(),
                               };
                           }
                           @Html.VnrMultiSelectFor(mode => mode.ElementIDs, _ElementName)
                          
                           @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnConfigElement", ImageUrl = "/Content/images/icons/submenu/menu/Config-icon.png", CssStyle = "margin-left: 5px" })
                                                    
                       </div>
                   </div>
                   <div id="div4">
                       <div class="FieldTitle">
                           @Html.VnrLabelFor(mode => mode.OrgStructureID)
                       </div>
                       <div class="FieldValue">
                           @Html.Partial("EditorTemplates/OrgStructureTreeViewDropdown")
                       </div>
                   </div>
               </div>
            </div>
        </div>
    </div>
</div>
<div class="commandToolBarWidge">
    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    <div style="float:right">
            <script>
                function GetScreenName() {
                    return {
                        screenName: '@screen'
                    };
                }
            </script>
            <div class="FieldValue" style="margin-top: 0;">
                @{
                    var screenName = new DropDownListBuilderInfo()
                    {
                        Name = "ddlScreenName",
                        DataTextField = "ExportName",
                        DataValueField = "ID",
                        Url = @_hrm_Cat_Service + "Cat_GetData/GetScreenName",
                        StyleCss = "width:200px;",
                        Data = "GetScreenName",
                    };
                }
                @Html.VnrDropDownList(screenName)

                @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport", Content = ConstantDisplay.HRM_Common_Export_Button.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
                @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateTemplate", Content = ConstantDisplay.HRM_Common_CreateTemplate_Button.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
            </div>
        </div>
</div>

<div id="grid_ReportCostCentreByOrgTable">

</div>





