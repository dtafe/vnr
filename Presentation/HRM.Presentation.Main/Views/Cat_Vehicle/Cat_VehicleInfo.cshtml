@using HRM.Infrastructure.Utilities;
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Infrastructure.Security;
@using HRM.Presentation.Category.Models;
@using HRM.Presentation.Evaluation.Models

@model Cat_NameEntityModel

@{
    Layout = null;

    var _Hrm_Eva_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _Hrm_Eva_Web = ConstantPathWeb.Hrm_Eva_Web;

    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
}

<script type="text/javascript">

    SetFieldRequiredByScreenName("Cat_NameEntity_VehicleInfo");
    function Setvalue() {
        $('#@Html.FieldIdFor(model=>model.NameEntityType)').val('E_VEHICLE');
        $('#@Html.FieldIdFor(model=>model.EnumType)').val('E_VEHICLE');
    }
    function onSaveDataPopUpVehicle() {
        onlySave($('#form_Cat_Vehicle'), '@_hrm_Hr_Service', 'api/Cat_NameEntity/', '@ConstantControlName.HRM_Category_Vehicle_Grid'); return false;
        };

    function onSaveVehicle() {
        onSaveAndContinue($('#form_Cat_Vehicle'), '@_hrm_Hr_Service', 'api/Cat_NameEntity/', '@ConstantControlName.HRM_Category_Vehicle_Grid', 'windowCatVehicle');
        return false;
    };

    function onSaveCloseVehicle() {
        onSaveAndClose($('#form_Cat_Vehicle'), '@_hrm_Hr_Service', 'api/Cat_NameEntity/', '@ConstantControlName.HRM_Category_Vehicle_Grid', 'windowCatVehicle');
        return false;
    };

</script>

@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Cat_Vehicle" }))
{
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(m => m.NameEntityType, new { @Value = EnumDropDown.EntityType.E_VEHICLE.ToString() })
    <table>
        <tr>
            <td>
                <div id="div2">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">
                        @(Html.VnrTextBoxFor(model => model.Code, "width: 300px"))
                    </div>
                </div>
                <div id="div2">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.VehicleName)
                    </div>
                    <div class="FieldValue">
                        @(Html.VnrTextBoxFor(model => model.VehicleName, "width: 300px"))
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Description)
                    </div>
                    <div class="FieldValue">

                        @Html.VnrTextAreaFor(mode => mode.Description, "width:500px;height:100px;")
                    </div>
                </div>

            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUpVehicle", Name = "save-Vehicle", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveVehicle", Name = "save-continue-Vehicle", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveCloseVehicle", Name = "save-close-Vehicle", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}