@using HRM.Infrastructure.Utilities
@using System.Collections
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.Category.Models;
@model Cat_SalaryClassModel

@{
    Layout = null;
    var ID = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
}
<script>
    SetFieldRequired();

    function onSaveNew() {
        //  if (!checkDuplicationCode()) {
        onSaveAndContinue($('#form_Cat_SalaryClass'), '@_hrm_Hr_Service', 'api/Cat_SalaryClass/', '@ConstantControlName.HRM_Category_SalaryClass_Grid_Name', '@ConstantControlName.HRM_Category_SalaryClass_PopUp_Name'); return false;
        //}
    }

    function onSaveClose() {
        //if (!checkDuplicationCode()) {
        onSaveAndClose($('#form_Cat_SalaryClass'), '@_hrm_Hr_Service', 'api/Cat_SalaryClass/', '@ConstantControlName.HRM_Category_SalaryClass_Grid_Name', '@ConstantControlName.HRM_Category_SalaryClass_PopUp_Name'); return false;
        //}
    }
    function onSaveDataPopUp() {
        // if (!checkDuplicationCode()) {
        onlySave($('#form_Cat_SalaryClass'), '@_hrm_Hr_Service', 'api/Cat_SalaryClass/', '@ConstantControlName.HRM_Category_SalaryClass_Grid_Name'); return false;
        //}
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Cat_SalaryClass" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">
                        @{
    var _Code = new TextBoxBuilderInfo()
    {
        Width = 300,
        Name = "CatSalaryClassInfo_Code"
    };
    if (Model != null)
    {
        _Code.Value = Model == null ? string.Empty : Model.Code;
    }
                        }
                        @Html.VnrTextBoxFor(mode => mode.Code, _Code)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.SalaryClassName)
                    </div>
                    <div class="FieldValue">

                        @Html.VnrTextBoxFor(mode => mode.SalaryClassName, "width: 300px")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelForNoneIcon(model => model.SalaryClassTypeID)
                    </div>
                    <div class="FieldValue">
                        @{
    IEnumerable valueSalaryClassType = new string[] { };
    if (Model != null)
    {
        valueSalaryClassType = new[] { new { valueSalaryClassType = Model.SalaryClassTypeName, ID = Model.SalaryClassTypeID } };
    }
                        }
                        @{
    var _SalaryClassTypeID = new MultiSelectBuilderInfo()
    {
        Name = "SalaryClassInfo_SalaryClassTypeID",
        DataTextField = "SalaryClassTypeName",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiSalaryClassType",
        Placeholder = ConstantDisplay.HRM_Category_SalaryClassType_SelectSalaryClassType.TranslateString(),
        MaxSelectedItems = 1,
        Width = 300,
        Autobind = true,
        Value = valueSalaryClassType
    };
                        }
                        @Html.VnrMultiSelectFor(model => model.SalaryClassTypeID, _SalaryClassTypeID)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150 ">
                        @Html.VnrLabelFor(mode => mode.AbilityTitleID)
                    </div>
                    <div class="FieldValue">
                        @{
    var _SalaryClassName = new ComboBoxBuilderInfo()
     {
         Name = "SalaryClassInfo_AbilityTitleID",
         DataTextField = "Code",
         DataValueField = "ID",
         Url = _hrm_Hr_Service + "Cat_GetData/GetMultiAbilityTile",
         StyleCss = "width:300px",
         Value = Model == null ? string.Empty : Model.AbilityTitleID.ToString(),
     };
                        }
                        @(Html.VnrComboBoxFor(mode => mode.AbilityTitleID, _SalaryClassName).Text(Model == null ? string.Empty : Model.AbilityTitleCode))
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Description)
                    </div>
                    <div class="FieldValue">

                        @Html.VnrTextAreaFor(mode => mode.Description, "width:500px;height:100px;")
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150"></div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-SalaryClass", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveNew", Name = "save-New-SalaryClass", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-SalaryClass", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>


}
