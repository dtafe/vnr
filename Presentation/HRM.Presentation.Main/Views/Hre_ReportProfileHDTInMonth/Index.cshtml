@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Hr.Models
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Infrastructure.Security

@model HRM.Presentation.Hr.Models.Hre_ReportProfileHDTInMonthModel

@{
    ViewBag.Title = "Index";
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var controller = ViewContext.RouteData.Values["Controller"].ToString();
    var action = ViewContext.RouteData.Values["Action"].ToString();
    var screen = controller + "/" + action;
}
@Html.Hidden("Screen", screen)

<script>
    SetFieldRequired();
    var checkedNodes = [];
    var isCreateTemplate = false;
    var isCreateTemplateForDynamicGrid = false;

    function filterFieldInfo(isExport) {
        var _u = $('#@Html.FieldIdFor(model => model.Unit)').val() != null ? $('#@Html.FieldIdFor(model => model.Unit)').val() : null;
        var _d = $('#@Html.FieldIdFor(model => model.Dept)').val() != null ? $('#@Html.FieldIdFor(model => model.Dept)').val() : null;
        var _p = $('#@Html.FieldIdFor(model => model.Part)').val() != null ? $('#@Html.FieldIdFor(model => model.Part)').val() : null;
        var elementPara = {
            Month: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#Month").val()),
            OrgStructureIDs: checkedNodes.join(','),
            IsCreateTemplate: isCreateTemplate,
            Unit: _u,
            Dept: _d,
            Part: _p,
            IsCreateTemplateForDynamicGrid: isCreateTemplateForDynamicGrid,
        };
        if (isExport == true) {
            elementPara["ExportID"] = $('#ddlScreenName').val();
        }
        return elementPara;
    }

    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        //Show Hide Panel
        ShowHidePanel();
        $("#btnSearch").click(function () {
            ShowHre_ProgressBar();
            var treeView = $("#OrgStructureTreeView").data("kendoTreeView");
            checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes)
            $.ajax({
                type: 'POST',
                url: '@_hrm_Hr_Service' + 'Hre_GetData/GetReportProfileHDTInMonth',
                data: filterFieldInfo(),
                dataType: 'json',
                async: false,
                success: function (data) {
                    debugger;
                    if (data[0] == "error" && data[1] != "") {
                        ShowNotificationProcessor(data[1]);
                        CloseHre_ProgressBar();
                    }
                    else {
                        var grid = VnrGridDynamic;
                        grid.gridName = 'gridHre_ReportProfileHDTInMonth';
                        grid.DataSource = data.Data;
                        grid.PageSize = 50;
                        VnrGridDynamicControl(grid);
                        CloseHre_ProgressBar();
                        return false;
                    }
                },
                error: function () {
                    CloseHre_ProgressBar();
                }
            });
            checkedNodes = [];
            return false;
        });
    });


    $("#btnExport").click(function () {
        var isAccess = checkPermission(PrivilegeType.Export, '@ConstantPermission.Hre_ReportProfileHDTInMonth');
        if (!isAccess) {
            return;
        }
        isCreateTemplate = false;
        isCreateTemplateForDynamicGrid = false;
        if ($('#ddlScreenName').val() == "") {
            ExportFail();
            return;
        }
        var urlGetData = '@_hrm_Hre_Service' + "Hre_GetData/GetReportProfileHDTInMonth";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo(true);
        ExportAll(urlGetData, dataParameter, urlDownload);
        checkedNodes = [];
    });

    $("#btnCreateTemplate").click(function () {
        isCreateTemplate = true;
        isCreateTemplateForDynamicGrid = true;
        CreateTemplate('@_hrm_Hre_Service' + 'Hre_GetData/GetReportProfileHDTInMonth', filterFieldInfo(true));
    });
</script>

<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            <div class="contendSearchWidge" style="overflow:visible">
                <div class="hrm_box" style="padding-right:30px">
                    <div id="div2">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(model => model.Month)
                        </div>
                        <div class="FieldValue">
                            @{
                                var _Month = new DatePickerBuilderInfo()
                                {
                                    StyleCss = "width:100px;",
                                    Format = ConstantFormat.HRM_Format_MonthYear.ToString(),
                                    Value = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day).ToShortDateString(),
                                };
                            }
                            @Html.VnrDatePickerFor(mode => mode.Month, _Month)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div14">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.OrgStructureIDs)
                        </div>
                        <div class="FieldValue">
                            @{
                                var org = new TreeViewDropdDownBuilderInfo()
                                {
                                    Name = "OrgStructureTreeView",
                                    WidthTreeView = "350px",
                                    Width = "200px"
                                };
                            }
                            @Html.Partial("EditorTemplates/OrgTreeViewDropDown", org)
                        </div>
                    </div>
                </div>
                <div class="hrm_box">
                    <div id="div5">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.Unit)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(mode => mode.Unit)
                        </div>
                    </div>
                    <div id="div6">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.Dept)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(mode => mode.Dept)
                        </div>
                    </div>
                    <div id="div6">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.Part)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(mode => mode.Part)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="commandToolBarWidge">

    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    <div style="float:right">
        <script>
            function GetScreenName() {
                return {
                    screenName: '@screen'
                };
            }
        </script>
        <div class="FieldValue" style="margin-top: 0;">
            @{
                var screenName = new DropDownListBuilderInfo()
                {
                    Name = "ddlScreenName",
                    DataTextField = "ExportName",
                    DataValueField = "ID",
                    Url = @_hrm_Hr_Service + "Cat_GetData/GetScreenName",
                    StyleCss = "width:200px;",
                    Data = "GetScreenName",
                };
            }
            @Html.VnrDropDownList(screenName)

            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport", Content = ConstantDisplay.HRM_Common_Export_Button.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateTemplate", Content = ConstantDisplay.HRM_Common_CreateTemplate_Button.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
        </div>
    </div>
</div>
<div id="gridHre_ReportProfileHDTInMonth">

</div>