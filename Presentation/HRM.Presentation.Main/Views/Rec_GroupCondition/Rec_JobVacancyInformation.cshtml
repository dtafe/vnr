@using System.Collections
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.Recruitment.Models
@using HRM.Infrastructure.Security
@model Rec_JobVacancyModel
@{
    Layout = null;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    string orgStructureName = string.Empty;
    IEnumerable lstPosition = null;
    IEnumerable lstJobTitle = null;
    IEnumerable lstRecruitmentCampaign = null;
    IEnumerable lstSourceAdsID = null;
    IList<SelectListItem> lstType = Enum.GetValues(typeof(JobVacancyType))
       .Cast<JobVacancyType>()
       .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
       .ToList();
    
    if (Model != null)
    {
        lstSourceAdsID = new[] { new { ID = Model.SourceAdsID, SourceAdsName = Model.SourceAdsName } };
        lstRecruitmentCampaign = new[] { new { ID = Model.RecruitmentCampaignID, RecruitmentCampaignName = Model.RecruitmentCampaignName } };
        lstJobTitle = new[] { new { ID = Model.JobTitleID, JobTitleName = Model.JobTitleName } };
        lstPosition = new[] { new { ID = Model.PositionID, PositionName = Model.PositionName } };
    }
    if (Model != null && !string.IsNullOrEmpty(Model.OrgStructureName))
    {
        orgStructureName = Model.OrgStructureName;
    }
    IList<SelectListItem> lstStatus = Enum.GetValues(typeof(JobVacancyStatus))
      .Cast<JobVacancyStatus>()
      .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
      .ToList();
}
<style>
    label {
        min-width: 100px;
    }
</style>
<script>
    SetFieldRequired();
    

</script>
<div class="VnRMain">
    <table>
        <tbody>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                <td valign="top">
                    <div style="display: block; float: left ;padding-top: 10px; ">
                        <fieldset>
                            <legend>
                                @ConstantDisplay.HRM_Rec_JobVacancy_Information.TranslateString()
                            </legend>
                        </fieldset>
                        <div style=" display: block;float: left; width: 450px;">
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle">
                                    @Html.HiddenFor(mode => mode.JobConditionIDs)
                                    @Html.HiddenFor(model => model.ID)
                                    @Html.HiddenFor(model => model.JobVacancyID)
                                    @Html.VnrLabelForNoneIcon(model => model.Code)
                                </div>
                                <div class="FieldValue">

                                    @Html.VnrTextBoxFor(model => model.Code)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle">
                                    @Html.VnrLabelForNoneIcon(model => model.JobVacancyName)
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrTextBoxFor(model => model.JobVacancyName)
                                </div>
                            </div>

                            <div class="DivContentTitleValue" id="div33">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(model => model.JobTitleID)
                                </div>

                                <div class="FieldValue">
                                    @{
                                        var JobTitleName = new MultiSelectBuilderInfo
                                        {
                                            DataTextField = "JobTitleName",
                                            DataValueField = "ID",
                                            Url = @_hrm_Hre_Service + "Cat_GetData/GetMultiJobTitle",
                                            MaxSelectedItems = 1,
                                            Placeholder = ConstantDisplay.HRM_Category_SelectJobTitle.TranslateString(),
                                            Value = lstJobTitle,
                                            Width = 200
                                        };
                                    }
                                    @Html.VnrMultiSelectFor(mode => mode.JobTitleID, JobTitleName)

                                </div>
                            </div>


                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle">
                                    @Html.VnrLabelForNoneIcon(model => model.Workplace)
                                </div>
                                <div class="FieldValue">

                                    @Html.VnrTextBoxFor(mode => mode.Workplace)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle">
                                    @Html.VnrLabelForNoneIcon(model => model.Quantity)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var Quantity = new NumericTextBoxBuilderInfo<int>()
                                        {

                                        };

                                    }

                                    @Html.VnrNumericTextBoxFor(mode => mode.Quantity, Quantity)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle">
                                    @Html.VnrLabelForNoneIcon(model => model.JobLevel)
                                </div>
                                <div class="FieldValue">


                                    @Html.VnrTextBoxFor(mode => mode.JobLevel)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle">
                                    @Html.VnrLabelForNoneIcon(model => model.PayrollNumber)
                                </div>
                                <div class="FieldValue">

                                    @Html.VnrTextBoxFor(mode => mode.PayrollNumber)
                                </div>
                            </div>


                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle">
                                    @Html.VnrLabelForNoneIcon(model => model.RecruitmentCampaignID)
                                </div>
                                <div class="FieldValue">
                                    @{

                                        var RecruitmentCampaignID = new MultiSelectBuilderInfo
                                {
                                    DataTextField = "RecruitmentCampaignName",
                                    DataValueField = "ID",
                                    Url = @_hrm_Hre_Service + "Rec_GetData/GetMultiRecruitmentCampaign",
                                    MaxSelectedItems = 1,
                                    Placeholder = ConstantDisplay.HRM_Recruitment_SelectRecruitmentCampaign.TranslateString(),
                                    Value = lstRecruitmentCampaign,
                                    Width = 200
                                };
                                    }
                                    @Html.VnrMultiSelectFor(mode => mode.RecruitmentCampaignID, RecruitmentCampaignID)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle">
                                    @Html.VnrLabelForNoneIcon(model => model.IsRevaluation)
                                </div>
                                <div class="FieldValue">

                                    @{
                                        var IsRevaluation = new CheckBoxBuilderInfo()
                                        {
                                            Value = Model != null && Model.IsRevaluation.HasValue ? Model.IsRevaluation.Value : false,
                                        };
                                    }
                                    @Html.VnrCheckBoxFor(mode => mode.IsRevaluation)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle">
                                    @Html.VnrLabelForNoneIcon(model => model.NoLevelInterview)
                                </div>
                                <div class="FieldValue">
                                    @{ 
                                        var _NoLevelInterview = new NumericTextBoxBuilderInfo<int>()
                                        {
                                        };

                                    }
                                    @Html.VnrNumericTextBoxFor(mode => mode.NoLevelInterview, _NoLevelInterview)
                                </div>
                            </div>
                            <div class="DivContentTitleValue">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.Type)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var Type = new DropDownListBuilderInfo()
                                        {
                                            DataTextField = "Text",
                                            DataValueField = "Value",
                                            BindTo = lstType,
                                            OptionLabel = ConstantDisplay.HRM_Category_SelectType.TranslateString(),
                                            Value=Model!=null?Model.Type:null

                                        };
                                    }
                                    @Html.VnrDropDownListFor(mode => mode.Type, Type)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle">
                                    @Html.VnrLabelForNoneIcon(model => model.NoPost)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var _NoPost = new NumericTextBoxBuilderInfo<int>()
                                        {
                                        };

                                    }
                                    @Html.VnrNumericTextBoxFor(mode => mode.NoPost, _NoPost)
                                </div>
                            </div>
                        </div>
                        <div style=" display: block; padding-top: 10px; float: left">
                            <div class="DivContentTitleValue" id="div13">
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle">
                                        @Html.VnrLabelForNoneIcon(model => model.IsFilterCV)
                                    </div>
                                    <div class="FieldValue">

                                        @{
                                            var IsFilterCV = new CheckBoxBuilderInfo()
                                            {
                                                Value = Model != null && Model.IsFilterCV.HasValue ? Model.IsFilterCV.Value : false,
                                            };
                                        }
                                        @Html.VnrCheckBoxFor(mode => mode.IsFilterCV)
                                    </div>
                                </div>
                                <div class="FieldTitle">
                                    @Html.VnrLabelForNoneIcon(model => model.OrgStructureID)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var org = new TreeViewDropdDownBuilderInfo()
                                        {
                                            Name = "TreeViewDropDownInput",
                                            IsShowCheckBox = false,
                                            SetFieldName = "OrgStructureID",
                                            Value = orgStructureName
                                        };
                                    }
                                    @Html.Partial("EditorTemplates/OrgTreeViewDropDown", org)

                                    @Html.HiddenFor(m => m.OrgStructureID)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle">
                                    @Html.VnrLabelForNoneIcon(model => model.PositionName)
                                </div>
                                <div class="FieldValue">
                                    <!--Xử lý gán trực tiếp dữ liệu cho Multi, không cần load dữ liệu từ database lên, giảm kết nối đến database khi edit-->
                                    @{
                                        var positionID = new MultiSelectBuilderInfo()
                                        {
                                            DataTextField = "PositionName",
                                            DataValueField = "ID",
                                            Url = _hrm_Hre_Service + "Cat_GetData/GetMultiPosition",
                                            Placeholder = ConstantDisplay.HRM_Category_SelectPosition.TranslateString(),
                                            MaxSelectedItems = 1,
                                            Value = lstPosition,
                                            Width = 200
                                        };
                                    }
                                    @(Html.VnrMultiSelectFor(mode => mode.PositionID, positionID))
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div131">
                                <div class="FieldTitle">
                                    @Html.VnrLabelForNoneIcon(model => model.TotalEmpPosition)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var TotalEmpPosition = new NumericTextBoxBuilderInfo<int>()
                                        {
                                            Format = ConstantFormat.HRM_Format_Int,
                                        };
                                    }
                                    @Html.VnrNumericTextBoxFor(model => model.TotalEmpPosition, TotalEmpPosition)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div131">
                                <div class="FieldTitle">
                                    @Html.VnrLabelForNoneIcon(model => model.FemaleRequestedNo)
                                </div>
                                <div class="FieldValue">

                                    @{
                                        var FemaleRequestedNo = new NumericTextBoxBuilderInfo<int>()
                                                    {
                                                        Format = ConstantFormat.HRM_Format_Int,
                                                    };
                                    }
                                    @Html.VnrNumericTextBoxFor(model => model.FemaleRequestedNo, FemaleRequestedNo)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(model => model.DateProposal)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var DateProposal = new DatePickerBuilderInfo()
                                        {
                                            Format = ConstantFormat.HRM_Format_DayMonthYear,
                                            StyleCss="width:100px"
                                        };
                                    }
                                    @Html.VnrDatePickerFor(mode => mode.DateProposal, DateProposal)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(model => model.DateStart)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var DateStart = new DatePickerBuilderInfo()
                                        {
                                            Format = ConstantFormat.HRM_Format_DayMonthYear,
                                            StyleCss = "width:100px"
                                        };
                                    }
                                    @Html.VnrDatePickerFor(mode => mode.DateStart, DateStart)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(model => model.DateEnd)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var DateEnd = new DatePickerBuilderInfo()
                                        {
                                            Format = ConstantFormat.HRM_Format_DayMonthYear,
                                            StyleCss = "width:100px"
                                        };

                                    }

                                    @Html.VnrDatePickerFor(mode => mode.DateEnd, DateEnd)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(model => model.Status)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var Status = new DropDownListBuilderInfo()
                                         {
                                             DataTextField = "Text",
                                             DataValueField = "Value",
                                             StyleCss = "width:200px;",
                                             BindTo = lstStatus,
                                             Value = Model != null && !string.IsNullOrEmpty(Model.Status) ? Model.Status : null
                                         };
                                    }
                                    @Html.VnrDropDownListFor(mode => mode.Status, Status)
                                </div>
                            </div>
                            <div>
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.SourceAdsID)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var SourceAdsID = new DropDownListBuilderInfo()
                                        {
                                            DataTextField = "SourceAdsName",
                                            DataValueField = "ID",
                                            Url = _hrm_Hre_Service + "Rec_GetData/GetMultiSourceAds",
                                            OptionLabel = ConstantDisplay.HRM_Recruitment_SelectSourceAds.TranslateString(),
                                            Value=Model!=null?Model.SourceAdsName:null
                                        };
                                    }
                                    @Html.VnrDropDownListFor(mode => mode.SourceAdsID, SourceAdsID)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(model => model.DateCheck)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var DateCheck = new DatePickerBuilderInfo()
                                        {
                                            Format = ConstantFormat.HRM_Format_DayMonthYear,
                                            StyleCss = "width:100px"
                                        };
                                    }
                                    @Html.VnrDatePickerFor(mode => mode.DateCheck, DateCheck)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(model => model.DateInterview)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var DateInterview = new DatePickerBuilderInfo()
                                        {
                                            Format = ConstantFormat.HRM_Format_DayMonthYear,
                                            StyleCss = "width:100px"
                                        };
                                    }
                                    @Html.VnrDatePickerFor(mode => mode.DateInterview, DateInterview)
                                </div>
                            </div>
                        </div>
                        <div class="DivContentTitleValue" id="div13">
                            <div class="FieldTitle">
                                @Html.VnrLabelForNoneIcon(model => model.JobDescription)
                            </div>
                            <div class="FieldValue">

                                @Html.VnrTextAreaFor(m => m.JobDescription, "width:500px")
                            </div>
                        </div>
                        <div class="DivContentTitleValue" id="div13">
                            <div class="FieldTitle">
                                @Html.VnrLabelForNoneIcon(model => model.Requirement)
                            </div>
                            <div class="FieldValue">

                                @Html.VnrTextAreaFor(m => m.Requirement, "width:500px")
                            </div>
                        </div>
                        <div class="DivContentTitleValue" id="div13">
                            <div class="FieldTitle">
                                @Html.VnrLabelForNoneIcon(model => model.FileAttachment)
                            </div>
                            <div class="FieldValue">
                                @Html.HiddenFor(model => model.FileAttachment)
                                <input type="file" name="files" id="UploadAttachFile" />
                                <script>
                                    var vnrUpload = VnrUploadBuilder;
                                    vnrUpload.Id = "UploadAttachFile";
                                    vnrUpload.Host = '@_hrm_Main_Web';
                                    vnrUpload.Multiple = true,
                                    vnrUpload.Field = "FileAttachment",
                                    vnrUpload.FileType = "*.xls*.xlsx*.txt*.pdf*.doc*.docx*.jpg",
                                    vnrUpload.Files = '@Html.DisplayFor(model => model.FileAttachment)';
                                    vnrUpload.AutoUpload = true;
                                    vnrUpload.AutoReNameFile = true;
                                    vnrUpload.Enable = true;
                                    VnrUpload(vnrUpload);
                                </script>
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div class="DivContentTitleValue" id="div13">
                            <div class="FieldTitle">
                                @Html.VnrLabelForNoneIcon(model => model.Notes)
                            </div>
                            <div class="FieldValue">

                                @Html.VnrTextAreaFor(m => m.Notes, "width:500px")
                            </div>
                        </div>
                    </div>
                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
        </tbody>
    </table>
</div>
<!-- Gán giá trị cho cây phòng ban khi edit -->
@if (Model != null)
{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#TreeViewDropDownInput").val('@Model.OrgStructureName');
            $("#OrgStructureID").val('@Model.OrgStructureID');

        });

    </script>
}











