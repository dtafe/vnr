@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@model HRM.Presentation.Canteen.Models.Can_MealRecordMissingModel

@{
    ViewBag.Title = "Canteen";
    Layout = null;

    var _hrm_Can_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Cat_Service = ConstantPathWeb.Hrm_Hre_Service;

    IList<SelectListItem> listWorkdaySrcType = Enum.GetValues(typeof(WorkdaySrcType))
       .Cast<WorkdaySrcType>()
       .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) }).OrderBy(p=>p.Text)
       .ToList();

    IList<SelectListItem> listStatus = Enum.GetValues(typeof(AttendanceDataStatus))
     .Cast<AttendanceDataStatus>()
     .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) }).OrderBy(p=>p.Text)
     .ToList();
}

<script>

    var data = SetCharacteFieldRequired();
    function onSave() {
        var result = false;
        if (CheckValidate(data)) {
            var _IsFullPay = document.getElementById("IsFullPay");
            if (_IsFullPay.checked) {
                $("#IsFullPay").val("true");
            } else {
                $("#IsFullPay").val("false");
            }
            onSaveAndContinue($('#form_can_RecordMissing'), '@_hrm_Can_Service', 'api/Can_MealRecordMissing/', 'gridCan_RecordMissing', 'windowRecordMissing'); result = true;
        }
        return result;
    }
    function onSaveClose() {

        
        if (CheckValidate(data)) {
            
            var _IsFullPay = document.getElementById("IsFullPay");
            if (_IsFullPay.checked) {
                $("#IsFullPay").val("true");
            } else {
                $("#IsFullPay").val("false");
            }
            onSaveAndClose($('#form_can_RecordMissing'), '@_hrm_Can_Service', 'api/Can_MealRecordMissing/', 'gridCan_RecordMissing', 'windowRecordMissing'); return false;
        }
    }

    function onSaveDataPopUp() {
        
        if (CheckValidate(data)) {
            
            var _IsFullPay = document.getElementById("IsFullPay");
            if (_IsFullPay.checked) {
                $("#IsFullPay").val("true");
            } else {
                $("#IsFullPay").val("false");
            }
            onlySave($('#form_can_RecordMissing'), '@_hrm_Can_Service', 'api/Can_MealRecordMissing/', 'gridCan_RecordMissing'); return false;
        }
    }
    $(document).ready(function () {
        
        document.getElementById("MealRecordMissingInfo_MealAllowanceTypeSettingID").readOnly = true;
        document.getElementById("MealRecordMissingInfo_Amount").readOnly = true;
        document.getElementById("RecordMissingInfo_Type").value = '@WorkdaySrcType.E_NORMAL.ToString()';
        document.getElementById("RecordMissingInfo_Status").value = '@AttendanceDataStatus.E_SUBMIT';
      
    });

    function onDataBound() {

        var _TamScanReasonMissID = $("#RecordMissingInfo_TamScanReasonMissID").val();
        $.ajax({
            url: '@_hrm_Cat_Service' + 'Cat_GetData/GetTAMScanReasonMiss_ById',
            type: 'POST',
            data: { id: _TamScanReasonMissID },
            success: function (strResponse) {
                
                //var rs = strResponse[0];
                $('#MealRecordMissingInfo_MealAllowanceTypeSettingID').data('kendoComboBox').value(strResponse.MealAllowanceTypeSettingID);
                $('#MealRecordMissingInfo_Amount').data('kendoNumericTextBox').value(strResponse.Amount);
            },
        });
    };
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_can_RecordMissing" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div id="div2">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.ProfileID)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _ProfileName = new MultiSelectBuilderInfo
                            {
                              Width=300,
                                DataTextField = "ProfileName",
                                DataValueField = "ID",
                                Url = @_hrm_Hr_Service + "HrMultiSelect/GetMultiProfile",
                                Autobind = true,
                                Value = new string[] { @Html.DisplayFor(mode => mode.ProfileID).ToString() },
                                Name = "RecordMissingInfo_ProfileID",
                            };
                        }
                        @Html.VnrMultiSelectFor(mode => mode.ProfileID, _ProfileName)
                    </div>
                </div>
                @*<div>
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.OrgStructureName)
                        </div>
                        <div class="FieldValue">
                            @Html.Partial("EditorTemplates/OrgStructureTreeViewNoCheckbox")
                        </div>
                    </div>*@
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.IsFullPay)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _IsFullPay = new CheckBoxBuilderInfo()
                            {
                            };
                       
                        }
                        
                        @Html.VnrCheckBoxFor(mode => mode.IsFullPay, _IsFullPay)
                    </div>
                </div>
                <div id="div3">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(model => model.TamScanReasonMissID)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _tamScanReasonMissName = new ComboBoxBuilderInfo()
                             {
                                 StyleCss = "width:300px",
                                 DataTextField = "TAMScanReasonMissName",
                                 DataValueField = "ID",
                                 Url = _hrm_Cat_Service + "Cat_GetData/GetMultiTamScanReasonMiss",
                                 //MaxSelectedItems = 1,
                                 EventChange = "onDataBound",
                                 Name = "RecordMissingInfo_TamScanReasonMissID"
                             };
                            if (Model != null)
                            {
                                _tamScanReasonMissName.Value = Model.TamScanReasonMissID == null? string.Empty : Model.TamScanReasonMissID.ToString();
                                _tamScanReasonMissName.Autobind = true;
                            }
                        }
                        @*@(Html.VnrMultiSelectFor(mode => mode.TamScanReasonMissID, _tamScanReasonMissID))*@
                        @(Html.VnrComboBoxFor(mode => mode.TamScanReasonMissID, _tamScanReasonMissName))
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.MealAllowanceTypeSettingID)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _MealAllowanceTypeSettingName = new ComboBoxBuilderInfo()
                            {
                                DataTextField = "MealAllowanceTypeSettingName",
                                DataValueField = "ID",
                                Url = @_hrm_Can_Service + "Canteen_GetData/GetMultiMealAllowanceTypeSetting",
                                StyleCss = "width:300px;",
                                Name = "MealRecordMissingInfo_MealAllowanceTypeSettingID"

                            };
                        }
                        @Html.VnrComboBoxFor(mode => mode.MealAllowanceTypeSettingID, _MealAllowanceTypeSettingName)

                    </div>
                </div>
                <div id="div4">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Amount)
                    </div>
                    <div class="FieldValue">
                        @{
                            var numericTextBoxAmount = new NumericTextBoxBuilderInfo<decimal>()
                            {
                                StyleCss = "width:150px;",
                                Format = "n0",
                                Name = "MealRecordMissingInfo_Amount"
                            };
                        }
                        @Html.VnrNumericTextBoxFor(model => model.Amount, numericTextBoxAmount)
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.WorkDate)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _Workday = new DatePickerBuilderInfo()
                            {
                                StyleCss = "width:120px",
                                Name = "RecordMissingInfo_WorkDate"
                            };
                        }
                        @Html.VnrDatePickerFor(model => model.WorkDate, _Workday)
                    </div>
                </div>
                <div id="div3">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(model => model.Type)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _dropdownTamScanLogStatus = new DropDownListBuilderInfo()
                            {
                                DataTextField = "Text",
                                DataValueField = "Value",
                                BindTo = listWorkdaySrcType,
                                StyleCss = "Width:300px;",
                                Name = "RecordMissingInfo_Type"
                            };
                        }
                        @(Html.VnrDropDownListFor(mode => mode.Type, _dropdownTamScanLogStatus))
                    </div>
                </div>

                <div id="div3">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(model => model.Status)
                    </div>
                    <div class="FieldValue">
                        @{
                            var dropdownProfileStatus = new DropDownListBuilderInfo()
                            {
                                DataTextField = "Text",
                                DataValueField = "Value",
                                OptionLabel = @ConstantDisplay.HRM_Category_SelectStatus.TranslateString(),
                                BindTo = listStatus,
                                StyleCss = "Width:300px;",
                                Name = "RecordMissingInfo_Status",
                            };
                        }
                        @(Html.VnrDropDownListFor(model => model.Status, dropdownProfileStatus))
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-RecordMissing", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-RecordMissing", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-RecordMissing", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}

