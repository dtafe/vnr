@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.UI.Controls.Kendo.DropDownList
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Canteen.Models

@using System.Collections
@model HRM.Presentation.Canteen.Models.Can_MealRecordMissingModel

@{
    ViewBag.Title = "Canteen";
    Layout = null;
    
    var _hrm_Can_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Hr_Service= ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Cat_Service = ConstantPathWeb.Hrm_Hre_Service;

    IList<SelectListItem> listTAMStatus = Enum.GetValues(typeof(HRM.Infrastructure.Utilities.EnumDropDown.WorkdaySrcType))
       .Cast<HRM.Infrastructure.Utilities.EnumDropDown.WorkdaySrcType>()
       .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
       .ToList();

      IList<SelectListItem> listStatus = Enum.GetValues(typeof(AttendanceDataStatus))
       .Cast<AttendanceDataStatus>()
       .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
       .ToList();  
}
<script>
    $(document).ready(function () {
        document.getElementById("MealAllowanceTypeSettingID").readOnly = true;
        document.getElementById("Amount").readOnly = true;       
    });
    function onDataBound() {
         
        var _TamScanReasonMissID = $("#TamScanReasonMissID").val();
        $.ajax({
            url: '@_hrm_Cat_Service' + 'Cat_GetData/GetTAMScanReasonMiss_ById',
            type: 'POST',
            data: { id: _TamScanReasonMissID },
            success: function (strResponse) {
                 
                var rs = strResponse[0];
                $('#MealAllowanceTypeSettingID').data('kendoComboBox').value(rs.MealAllowanceTypeSettingID);
                $('#Amount').data('kendoNumericTextBox').value(rs.Amount);
            },
        });
    };
</script>
@*<script>

    var data = SetCharacteFieldRequired();
    function onSave() {

        if (CheckValidate(data)) {
           
             
            onCreate($('#form_can_RecordMissing'), '@_hrm_Can_Service', 'api/Can_MealRecordMissing/', 'gridCan_MealRecordMissing', 'windowMealRecordMissing'); return false;
        }
    }
    function onSaveClose() {
      
         
        if (CheckValidate(data)) {
            onSaveAndClose($('#form_can_RecordMissing'), '@_hrm_Can_Service', 'api/Can_MealRecordMissing/', 'gridCan_MealRecordMissing', 'windowMealRecordMissing'); return false;
        }
    }

    
</script>*@
<!--Form dùng cho edit và update-->


<div class="VnRMain">
    <table style="width:100%">
        @Html.HiddenFor(model => model.ID)
        <tbody>
            <tr>
                <td colspan="3" style=""></td>
            </tr>
            <tr>
                <td class="Box_Top_Left"></td>
                <td valign="middle" class="Box_Top_Mid"></td>
                <td class="Box_Top_Right"></td>
            </tr>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                <td valign="top">
                    <div id="div2">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.ProfileID)
                        </div>
                        <div class="FieldValue">
                            @{
                                IEnumerable valueProfile = new string[] { };
                                if (Model != null)
                                {
                                    valueProfile = new[] { new { ProfileName = Model.ProfileName, Id = Model.ProfileID } };
                                }
                            }
                            @{
                                var _ProfileName = new MultiSelectBuilderInfo
                                {
                                    DataTextField = "ProfileName",
                                    DataValueField = "Id",
                                    Url = @_hrm_Hr_Service + "HrMultiSelect/GetMultiProfile",
                                    Autobind = true,
                                    Value = valueProfile
                                };
                            }
                            @Html.VnrMultiSelectFor(mode => mode.ProfileID, _ProfileName)
                        </div>
                    </div>

                    @*<div>
            <div class="FieldTitle">
                @Html.VnrLabelFor(mode => mode.OrgStructureName)
            </div>
            <div class="FieldValue">
                @Html.Partial("EditorTemplates/OrgStructureTreeViewNoCheckbox")
            </div>
        </div>*@
                    <div>
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.IsFullPay)
                        </div>
                        <div class="FieldValue">
                          
                            @Html.VnrCheckBoxFor(mode => mode.IsFullPay)
                        </div>
                    </div>
                    <div id="div3">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(model => model.TamScanReasonMissID)
                        </div>
                        <div class="FieldValue">
                            @{
                                var _tamScanReasonMissName = new ComboBoxBuilderInfo()
                                 {
                                     DataTextField = "TAMScanReasonMissName",
                                     DataValueField = "Id",
                                     Url = _hrm_Cat_Service + "Cat_GetData/GetMultiTamScanReasonMiss",
                                    // Autobind = true,
                                     StyleCss = "width:300px;",
                                     Value =Model ==null? string.Empty:Model.TamScanReasonMissName,
                                     EventChange = "onDataBound"
                                 };
                                 if(Model != null){
                                     _tamScanReasonMissName.Value = Model.TamScanReasonMissID == Guid.Empty ? string.Empty : Model.TamScanReasonMissID.ToString();
                                     _tamScanReasonMissName.Autobind = true;
                                 }
                            }
                            @*@(Html.VnrMultiSelectFor(mode => mode.TamScanReasonMissID, _tamScanReasonMissID))*@
                            @(Html.VnrComboBoxFor(mode => mode.TamScanReasonMissID, _tamScanReasonMissName))
                        </div>
                    </div>
                    <div>
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.MealAllowanceTypeSettingID)
                        </div>
                        <div class="FieldValue">

                            @{
                                var _MealAllowanceTypeSettingName = new ComboBoxBuilderInfo()
                                {
                                    DataTextField = Can_MealAllowanceTypeSettingModel.FieldNames.MealAllowanceTypeSettingName,
                                    DataValueField = Can_MealAllowanceTypeSettingModel.FieldNames.ID,
                                   // Autobind = true,
                                    Url = @_hrm_Can_Service + "Canteen_GetData/GetMultiMealAllowanceTypeSetting",
                                    StyleCss = "width:300px;",
                                    Value = Model ==  null? string.Empty:Model.MealAllowanceTypeSettingName
                                };
                                if(Model != null){
                                    _MealAllowanceTypeSettingName.Value = Model.MealAllowanceTypeSettingID != null ? Model.MealAllowanceTypeSettingID.ToString() : string.Empty;
                                    _MealAllowanceTypeSettingName.Autobind = true;
                                }
                            }
                            @Html.VnrComboBoxFor(mode => mode.MealAllowanceTypeSettingID, _MealAllowanceTypeSettingName)

                        </div>
                    </div>

                    <div id="div4">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.Amount)
                        </div>
                        <div class="FieldValue">
                            @{
                                var numericTextBoxAmount = new NumericTextBoxBuilderInfo<decimal>()
                                {
                                    StyleCss = "width:170px;",
                                    Format="n0"
                                };
                            }
                            @Html.VnrNumericTextBoxFor(model => model.Amount, numericTextBoxAmount)
                        </div>
                        <div style="clear: both;"></div>
                    </div>


                    <div>
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.WorkDate)
                        </div>
                        <div class="FieldValue">
                            @{
                                var _Workday = new DatePickerBuilderInfo()
                                {
                                    StyleCss = "width:100px"
                                };
                            }
                            @Html.VnrDatePickerFor(model => model.WorkDate, _Workday)
                        </div>
                    </div>

                    <div id="div3">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(model => model.Type)
                        </div>
                        <div class="FieldValue">
                            @{
                                var _dropdownTamScanLogStatus = new DropDownListBuilderInfo()
                                {
                                    DataTextField = "Text",
                                    DataValueField = "Value",
                                    BindTo = listTAMStatus,
                                    StyleCss = "Width:200px;",
                                };
                            }
                            @(Html.VnrDropDownListFor(mode => mode.Type, _dropdownTamScanLogStatus))
                        </div>
                    </div>

                    <div id="div3">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(model => model.Status)
                        </div>
                        <div class="FieldValue">
                            @{
                                var dropdownProfileStatus = new DropDownListBuilderInfo()
                                {
                                    DataTextField = "Text",
                                    DataValueField = "Value",
                                    OptionLabel = @ConstantDisplay.HRM_Category_SelectStatus.TranslateString(),
                                    BindTo = listStatus,
                                    StyleCss = "Width:200px;"
                                };
                            }
                            @(Html.VnrDropDownListFor(model => model.Status, dropdownProfileStatus))
                        </div>
                    </div>

                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
              
            </tr>
            <tr>
                <td class="Box_Bottom_Left"></td>
                <td class="Box_Bottom_Mid"></td>
                <td class="Box_Bottom_Right"></td>
            </tr>
        </tbody>
    </table>
</div>

