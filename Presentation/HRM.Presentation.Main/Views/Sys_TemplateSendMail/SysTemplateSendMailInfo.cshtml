@using System.Collections
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@model HRM.Presentation.HrmSystem.Models.Sys_TemplateSendMailModel

@{
    ViewBag.Title = "Sys_TemplateSendMail";
    Layout = null;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var userApproveId = Model == null ? Guid.Empty : Model.ID;
    var formName = "form_sys_TemplateSendMail";
    var gridName = "gridTemplateSendMail";
    var windowName = "windowTemplateSendMail";

    IList<SelectListItem> listType = Enum.GetValues(typeof(EnumDropDown.EmailType))
    .Cast<EnumDropDown.EmailType>()
    .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() }).OrderBy(p=>p.Text)
    .ToList();
}

<script>
    var data = SetCharacteFieldRequired();
    var formName = '@formName';
    var gridName = '@gridName';
    var windowName = '@windowName';


    $(document).ready(function () {

    });

    function validateType() {
        //var approveType = $("#Type").val();
        //var currentStatus = $("#CurrentStatus").val();
        //var userRequest = $("#UserRequestID").val();
   
        return true;
    }

    function onSave() {
        //luu
        if (validateType()) {
            onlySave($('#' + formName), '@_hrm_Sys_Service', 'api/Sys_TemplateSendMail/', gridName, windowName); return false;
        }
    }

    function onSaveDataPopUp() {
        //luu va tao moi
        if (validateType()) {
            onSaveAndContinue($('#' + formName), '@_hrm_Sys_Service', 'api/Sys_TemplateSendMail/', gridName, windowName); return false;
        }
    }

    function onSaveClose() {
        //luu va dong
        if (validateType()) {
            onSaveAndClose($('#' + formName), '@_hrm_Sys_Service', 'api/Sys_TemplateSendMail/', gridName, windowName); return false;
        }
    }


</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = formName }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.TemplateName)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.TemplateName, "width: 300px")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Description)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Description, "width:500px;height:100px;")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Type)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _type = new DropDownListBuilderInfo()
                            {
                                DataTextField = "Text",
                                DataValueField = "Value",
                                BindTo = listType,
                                StyleCss = "Width:300px",
                            };
                        }
                        @Html.VnrDropDownListFor(mode => mode.Type, _type)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Subject)
                    </div>
                    <div class="FieldValue">

                        @Html.VnrTextBoxFor(mode => mode.Subject, "width:400px")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Content)
                    </div>
                    <div class="FieldValue">
                        @{
                            var editor = new VnrEditorBuilderInfo()
                            {
                                Name = "Content",
                                Width = 700,
                                Height = 300,
                            };
                            if (Model != null)
                            {
                                editor.Value = Html.Raw(HttpUtility.HtmlDecode(Model.Content)).ToString();
                            }
                        }
                        @Html.VnrEditor(editor)
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-Sys_TemplateSendMail", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-continue-Sys_TemplateSendMail", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-Sys_TemplateSendMail", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })

                    </div>
                </div>
            </td>
        </tr>
    </table>
}

