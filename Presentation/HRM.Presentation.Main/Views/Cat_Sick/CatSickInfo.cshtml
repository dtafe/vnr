@using HRM.Infrastructure.Utilities
@using System.Collections
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.Category.Models;
@model Cat_NameEntityModel

@{
    Layout = null;
    var ID = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    IList<SelectListItem> ilType = Enum.GetValues(typeof(EnumDropDown.EntityType))
        .Cast<EnumDropDown.EntityType>()
        .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
        .ToList();
}
<script>
    SetFieldRequiredByScreenName("Cat_NameEntity_Sick");
    function SetValue()
    {
        $("#NameEntityType_Sick").val('@EnumDropDown.EntityType.E_SICK_REC.ToString()');
        $("#EnumType_Sick").val('@EnumDropDown.EntityType.E_SICK_REC.ToString()');
    }
    function onSaveNew() {
        SetValue();
        onSaveAndContinue($('#form_Cat_Sick'), '@_hrm_Hr_Service', 'api/Cat_LevelGeneral/', '@ConstantControlName.HRM_Category_Sick_Grid_Name', '@ConstantControlName.HRM_Category_Sick_PopUp_Name'); return false;
    }

    function onSaveClose() {
        SetValue();
        onSaveAndClose($('#form_Cat_Sick'), '@_hrm_Hr_Service', 'api/Cat_LevelGeneral/', '@ConstantControlName.HRM_Category_Sick_Grid_Name', '@ConstantControlName.HRM_Category_Sick_PopUp_Name'); return false;
    }
    function onSaveDataPopUp() {
        SetValue();
        onlySave($('#form_Cat_Sick'), '@_hrm_Hr_Service', 'api/Cat_LevelGeneral/', '@ConstantControlName.HRM_Category_Sick_Grid_Name'); return false;
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Cat_Sick" }))
{
      @Html.HiddenFor(model => model.ID)
   @Html.HiddenFor(model => model.NameEntityType, new { id = "NameEntityType_Sick" })
   @Html.HiddenFor(model => model.EnumType, new { id = "EnumType_Sick" })
  
      <table>
        <tr>
            <td>
       <div>
           <div class="FieldTitle150 " style="width: 70px;">
               @Html.VnrLabelFor(mode => mode.Code)
           </div>
        <div class="FieldValue">
           
            @{
    var Code = new TextBoxBuilderInfo()
    {
        Width = 300,
        Name = "SickInfo_Code"
    };
    if (Model != null)
    {
        Code.Value = Model == null ? string.Empty : Model.Code;
    }
            }

            @Html.VnrTextBoxFor(mode => mode.Code, Code)
        </div>
    </div>
    <div>
        <div class="FieldTitle150 " style="width: 70px;">
            @Html.VnrLabelFor(mode => mode.NameEntityName)
        </div>
        <div class="FieldValue">
            @{
    var NameEntityName = new TextBoxBuilderInfo()
    {
        Width = 300,
        Name = "SickInfo_NameEntityName"
    };
    if (Model != null)
    {
        NameEntityName.Value = Model == null ? string.Empty : Model.NameEntityName;
    }
            }
            @Html.VnrTextBoxFor(mode => mode.NameEntityName, NameEntityName)
        </div>
    </div>
     
   
     <div>
         <div class="FieldTitle150 " style="width: 70px;">
             @Html.VnrLabelFor(mode => mode.Description)
         </div>
        <div class="FieldValue">
          
            @Html.VnrTextAreaFor(mode => mode.Description, "width:500px;height:100px;")
        </div>
    </div>
             </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
    <div>
        <div class="FieldTitle150 " style="width: 70px;"></div>
        <div class="FieldValue">
            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-Sick", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveNew", Name = "save-New-Sick", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-Sick", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
        </div>
    </div>
          </td>
        </tr>
    </table>
}
