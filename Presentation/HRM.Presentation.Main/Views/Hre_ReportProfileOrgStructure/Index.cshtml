@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Category.Models
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Infrastructure.Security

@model HRM.Presentation.Category.Models.CatOrgStructureModel
@{
    ViewBag.Title = "Index";
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var controller = ViewContext.RouteData.Values["Controller"].ToString();
    var action = ViewContext.RouteData.Values["Action"].ToString();
    var screen = controller + "/" + action;
}
@Html.Hidden("Screen", screen)
<script>
    var checkedNodes = [];
    var isCreateTemplate = false;
    var isCreateTemplateForDynamicGrid = false;
    function filterFieldInfo(isExport) {
        var elementPara = {
            OrgStructureID: checkedNodes.join(','),
            ValueFields: $('#valueFieldsGrid').val(),
            IsCreateTemplate: isCreateTemplate,
            IsCreateTemplateForDynamicGrid: isCreateTemplateForDynamicGrid
        };
        if (isExport == true) {
            elementPara["ExportId"] = $('#ddlScreenName').val();
        }
        return elementPara;
    }
    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        //Show Hide Panel
        ShowHidePanel();
        $("#btnSearch").click(function () {
            var treeView = $("#treeviewOrg").data("kendoTreeView");
            checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes)
            var grid = $('#gridCat_ReportOrgProfile').data("kendoGrid");
            grid.dataSource.read();
            selectedIds = [];
            checkedNodes = [];
        });
    });

    $("#btnExport").click(function () {
        var isAccess = checkPermission(PrivilegeType.Export, '@HRM.Infrastructure.Security.ConstantPermission.Hre_ReportProfileOrgStructure');
        if (!isAccess) {
            return;
        }
        if ($('#ddlScreenName').val() == "") {
            ExportFail();
            return;
        }
        var urlGetData = '@_hrm_Hre_Service' + "Hre_GetData/GetReportOrgProfle";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo(true);
        ExportAll(urlGetData, dataParameter, urlDownload);
        checkedNodes = [];
    });

    $("#btnCreateTemplate").click(function () {
        isCreateTemplate = true;
        isCreateTemplateForDynamicGrid = false;
        CreateTemplate('@_hrm_Hre_Service' + '/Hre_GetData/GetReportOrgProfle', filterFieldInfo(true));
    });

</script>

<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            <div class="contendSearchWidge" style="overflow:visible">
                <div id="div14">
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.OrgStructureName)
                    </div>
                    <div class="FieldValue">
                        <div class="FieldValue">
                            @Html.Partial("EditorTemplates/OrgStructureTreeViewDropdown")
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="commandToolBarWidge">
    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    <div style="float:right">
        <script>
            function GetScreenName() {
                return {
                    screenName: '@screen'
                };
            }
        </script>
        <div class="FieldValue" style="margin-top: 0;">
            @{
                var screenName = new DropDownListBuilderInfo()
                {
                    Name = "ddlScreenName",
                    DataTextField = "ExportName",
                    DataValueField = "ID",
                    Url = @_hrm_Hr_Service + "Cat_GetData/GetScreenName",
                    Data = "GetScreenName",
                };
            }
            @Html.VnrDropDownList(screenName)

            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport", Content = ConstantDisplay.HRM_Common_Export_Button.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateTemplate", Content = ConstantDisplay.HRM_Common_CreateTemplate_Button.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
        </div>
    </div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @{
        string[] valueFields = new string[]
                            {
                                CatOrgStructureModel.FieldNames.OrgStructureName,
                                CatOrgStructureModel.FieldNames.ProfileCount,
                                CatOrgStructureModel.FieldNames.HrPlanHC,
                                CatOrgStructureModel.FieldNames.MALE,
                                CatOrgStructureModel.FieldNames.FEMALE,
                            };
        Dictionary<string, int> sizeFields = new Dictionary<string, int>()
                            {
                                {CatOrgStructureModel.FieldNames.OrgStructureName,150},
                                {CatOrgStructureModel.FieldNames.ProfileCount,100},
                                {CatOrgStructureModel.FieldNames.HrPlanHC,100},
                                {CatOrgStructureModel.FieldNames.MALE,70},
                                {CatOrgStructureModel.FieldNames.FEMALE,70},
                            };

        Dictionary<string, string> displayFields = new Dictionary<string, string>()
                            {
                                {CatOrgStructureModel.FieldNames.OrgStructureName,ConstantDisplay.HRM_Category_OrgStructure_OrgStructureName},
                                {CatOrgStructureModel.FieldNames.ProfileCount,ConstantDisplay.HRM_Category_OrgStructure_ProfileCount},
                                {CatOrgStructureModel.FieldNames.HrPlanHC,ConstantDisplay.HRM_HR_Profile_PlanHeadCount_HrPlanHC},
                                {CatOrgStructureModel.FieldNames.FEMALE,ConstantDisplay.HRM_Category_OrgStructure_FEMALE},
                                {CatOrgStructureModel.FieldNames.MALE,ConstantDisplay.HRM_Category_OrgStructure_MALE},
                            };
        var grid = new GridBuilderInfo
        {
            Name = "gridCat_ReportOrgProfile",
            ValueFields = valueFields,
            SizeFields = sizeFields,
            DisplayFields = displayFields,
            ShowNextPrevious = true,
            PageSize = 20,
            ShowEditButton = false,
            ShowEditIcon = false,
            ShowPageNumber = true,
            ReadActionUrl = _hrm_Hre_Service + "Hre_GetData/GetReportOrgProfle",
            ReadData = "filterFieldInfo",
        };
    }
    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<CatOrgStructureModel>(grid))
</div>

