
@using HRM.Infrastructure.Utilities
@using HRM.Infrastructure.Security
@using HRM.Presentation.Attendance.Models
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Infrastructure.Security
@model HRM.Presentation.Attendance.Models.Att_ReportDetailForgetCardModel

@{
    ViewBag.Title = "Index";
    Layout = null;

    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var controller = ViewContext.RouteData.Values["Controller"].ToString();
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var action = ViewContext.RouteData.Values["Action"].ToString();
    var screen = controller + "/" + action;
}
@Html.Hidden("Screen", screen)
<script>
    var checkedNodes = [];
    SetFieldRequired();
    var isCreateTemplate = false;
    var isCreateTemplateForDynamicGrid = false;
    function filterFieldInfo(isExportDDL) {
        checkedNodes = [];
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes);
        var elementPara = {
            DateFrom: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateFrom").val()),
            DateTo: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateTo").val()),
            ShiftIDs: $("#SShift").val(),
            OrgStructureID: checkedNodes.join(','),
            UserExport:$('#UserLoginName').val(),
            ValueFields: $('#valueFieldsGrid').val(),
            IsCreateTemplate: isCreateTemplate,
            IsCreateTemplateForDynamicGrid: isCreateTemplateForDynamicGrid
        };
        if (isExportDDL == true) {
            elementPara["ExportId"] = $('#ddlScreenName').val();
        }
        return elementPara;
    }

    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        //Show hide panel
        ShowHidePanel();
        //
        $("#btnSearch").click(function () {
            $.ajax({
                type: 'POST',
                url: '@_hrm_Hr_Service' + 'Att_GetData/GetReportDetailForgetCardValidate',
                data: filterFieldInfo(),
                dataType: 'json',
                async: false,
                success: function (data) {
                    
                    if (data[0] == "error") {
                        ShowNotificationProcessor(data[1]);
                    }
                    else {
                        var grid = $('#gridAtt_ReportDetailForgetCard').data("kendoGrid");
                        grid.dataSource.read();
                    }
                }
            });
            return false;
        });

        $("#btnExport").click(function () {
            if ($('#ddlScreenName').val() == "") {
                ExportFail();
                return;
            }
            var urlGetData = '@_hrm_Hr_Service' + '/Att_GetData/GetReportDetailForgetCard';
            var urlDownload = '@_hrm_Main_Web';
            var dataParameter = filterFieldInfo(true);
            ExportAll(urlGetData, dataParameter, urlDownload,'@ConstantPermission.Att_ReportDetailForgetCard');
        });
    });

    $("#btnCreateTemplate").click(function () {
        
        isCreateTemplate = true;
        isCreateTemplateForDynamicGrid = true;
        CreateTemplate('@_hrm_Hr_Service' + '/Att_GetData/GetReportDetailForgetCard', filterFieldInfo(true));
    });

</script>


<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            <div class="contendSearchWidge">
                <div id="div2">
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(m => m.DateFrom)
                        @Html.HiddenFor(m => m.UserExport)
                    </div>
                    <div class="FieldValue">
                        @{
                            var DateFrom = new DatePickerBuilderInfo()
                            {
                                Value = DateTime.Today.ToShortDateString(),
                                StyleCss = "width:100px;",
                                Placeholder = ConstantDisplay.HRM_HR_Profile_DateFrom.TranslateString()
                            };

                        }
                        @Html.VnrDatePickerFor(mode => mode.DateFrom, DateFrom)
                       
                        @{
                            var DateTo = new DatePickerBuilderInfo()
                            {
                                Value = DateTime.Today.ToShortDateString(),
                                StyleCss = "width:100px;",
                                Placeholder = ConstantDisplay.HRM_HR_Profile_DateTo.TranslateString()
                            };

                        }
                        @Html.VnrDatePickerFor(mode => mode.DateTo, DateTo)
                    </div>
                </div>
                         
                <div id="div6">
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.OrgStructureID)
                    </div>
                    <div class="FieldValue">
                        @Html.Partial("EditorTemplates/OrgStructureTreeViewDropdown")
                    </div>

                </div>
                <div id="div7">
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.ShiftIDs)
                    </div>
                    <div class="FieldValue">
                        <div class="FieldValue">
                            @{
                                var dropdownMonShiftID = new DropDownListBuilderInfo()
                                {
                                    Name = "SShift",
                                    DataTextField = "ShiftName",
                                    DataValueField = "ID",
                                    Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiShift",
                                    Value = @Html.DisplayFor(mode => mode.ShiftID).ToString(),
                                    Enable = true,
                                    StyleCss = "width:200px",
                                    OptionLabel = @ConstantDisplay.HRM_Category_SelectShift.TranslateString()
                                };
                            }
                            @(Html.VnrDropDownListFor(mode => mode.ShiftIDs, dropdownMonShiftID))
                        </div>
                    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<div class="commandToolBarWidge">
    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    <div style="float:right">
        <script>
            function GetScreenName() {
                return {
                    screenName: '@screen'
                };
            }
        </script>
        <div class="FieldValue" style="margin-top: 0;">
            @{
                var screenName = new DropDownListBuilderInfo()
                {
                    Name = "ddlScreenName",
                    DataTextField = "ExportName",
                    DataValueField = "ID",
                    Url = @_hrm_Hr_Service + "Cat_GetData/GetScreenName",
                    Data = "GetScreenName",
                };
            }
            @Html.VnrDropDownList(screenName)
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport", Content = ConstantAction.HRM_Common_ExportReport.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateTemplate", Content = ConstantAction.HRM_Common_CreateTemplate.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
        </div>
</div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @using HRM.Presentation.UI.Controls.Kendo
    @{
        IList<SelectListItem> lstWorkdayType = Enum.GetValues(typeof(EnumDropDown.WorkdayType))
        .Cast<EnumDropDown.WorkdayType>()
        .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
        .ToList();

        Dictionary<object, object[]> foreignKey = new Dictionary<object, object[]>()
        {

            {Att_ReportDetailForgetCardModel.FieldNames.ScanType,new object[]
               { "Value", "Text", lstWorkdayType, ConstantDisplay.HRM_Attendance_ScanType,""}},
        };



        string[] valueFields = new string[]
        {
           Att_ReportDetailForgetCardModel.FieldNames.CodeEmp,
           Att_ReportDetailForgetCardModel.FieldNames.ProfileName,
           Att_ReportDetailForgetCardModel.FieldNames.GroupCode,
           Att_ReportDetailForgetCardModel.FieldNames.SectionCode,
           Att_ReportDetailForgetCardModel.FieldNames.DepartmentName,
           Att_ReportDetailForgetCardModel.FieldNames.Division,
           Att_ReportDetailForgetCardModel.FieldNames.Date,
           Att_ReportDetailForgetCardModel.FieldNames.ShiftName,
           Att_ReportDetailForgetCardModel.FieldNames.InTime,
           Att_ReportDetailForgetCardModel.FieldNames.OutTime,
           Att_ReportDetailForgetCardModel.FieldNames.ScanType,
           Att_ReportDetailForgetCardModel.FieldNames.DateFrom,
           Att_ReportDetailForgetCardModel.FieldNames.DateTo,
           Att_ReportDetailForgetCardModel.FieldNames.UserExport,
           Att_ReportDetailForgetCardModel.FieldNames.DateExport

        };
        Dictionary<string, int> sizeFields = new Dictionary<string, int>()
        {

            {Att_ReportDetailForgetCardModel.FieldNames.CodeEmp,80},
            {Att_ReportDetailForgetCardModel.FieldNames.ProfileName,140},
            {Att_ReportDetailForgetCardModel.FieldNames.GroupCode,95},
            {Att_ReportDetailForgetCardModel.FieldNames.SectionCode,70},
            {Att_ReportDetailForgetCardModel.FieldNames.DepartmentName,100},
            {Att_ReportDetailForgetCardModel.FieldNames.Division,90},
            {Att_ReportDetailForgetCardModel.FieldNames.Date,90},
            {Att_ReportDetailForgetCardModel.FieldNames.ShiftName,90},
            {Att_ReportDetailForgetCardModel.FieldNames.InTime,65},
            {Att_ReportDetailForgetCardModel.FieldNames.OutTime,65},
            {Att_ReportDetailForgetCardModel.FieldNames.ScanType,120},
            {Att_ReportDetailForgetCardModel.FieldNames.DateFrom,90},
            {Att_ReportDetailForgetCardModel.FieldNames.DateTo,65},
            {Att_ReportDetailForgetCardModel.FieldNames.UserExport,60},
            {Att_ReportDetailForgetCardModel.FieldNames.DateExport,120}

    };

        Dictionary<string, string>
            displayFields = new Dictionary<string, string>
                ()
            {
            {Att_ReportDetailForgetCardModel.FieldNames.CodeEmp,ConstantDisplay.HRM_Attendance_CodeEmp},
            {Att_ReportDetailForgetCardModel.FieldNames.ProfileName,ConstantDisplay.HRM_Attendance_ProfileName},
            {Att_ReportDetailForgetCardModel.FieldNames.GroupCode,ConstantDisplay.HRM_Attendance_BranchCode},
            {Att_ReportDetailForgetCardModel.FieldNames.SectionCode,ConstantDisplay.HRM_Attendance_SectionCode},
            {Att_ReportDetailForgetCardModel.FieldNames.DepartmentName,ConstantDisplay.HRM_Attendance_DepartmentCode},
            {Att_ReportDetailForgetCardModel.FieldNames.Division,ConstantDisplay.HRM_Attendance_TeamCode},
            {Att_ReportDetailForgetCardModel.FieldNames.Date,ConstantDisplay.HRM_Attendance_Date},
            {Att_ReportDetailForgetCardModel.FieldNames.ShiftName,ConstantDisplay.HRM_Attendance_ShiftId},
            {Att_ReportDetailForgetCardModel.FieldNames.InTime,ConstantDisplay.HRM_Attendance_InTime},
            {Att_ReportDetailForgetCardModel.FieldNames.OutTime,ConstantDisplay.HRM_Attendance_OutTime},
            {Att_ReportDetailForgetCardModel.FieldNames.ScanType,ConstantDisplay.HRM_Attendance_ScanType},
            {Att_ReportDetailForgetCardModel.FieldNames.DateFrom,ConstantDisplay.HRM_Attendance_DateFrom},
            {Att_ReportDetailForgetCardModel.FieldNames.DateTo,ConstantDisplay.HRM_Attendance_DateTo},
            {Att_ReportDetailForgetCardModel.FieldNames.UserExport,ConstantDisplay.HRM_Att_Report_UserExport},
            {Att_ReportDetailForgetCardModel.FieldNames.DateExport,ConstantDisplay.HRM_Attendance_DateExport},
            };

        Dictionary<string, string>
            formatFields = new Dictionary<string, string>
                ()
                    {
                    {Att_ReportDetailForgetCardModel.FieldNames.InTime,"{0:hh:mm:ss}"},
                    {Att_ReportDetailForgetCardModel.FieldNames.OutTime, "{0:hh:mm:ss}" }
                    };
        string[] hiddenFields = new string[]
                    {
                        Att_ReportDetailForgetCardModel.FieldNames.DateFrom,
                        Att_ReportDetailForgetCardModel.FieldNames.DateTo,
                        Att_ReportDetailForgetCardModel.FieldNames.UserExport,
                        Att_ReportDetailForgetCardModel.FieldNames.DateExport
                    };
        var grid = new GridBuilderInfo
        {
            Name = "gridAtt_ReportDetailForgetCard",
            ValueFields = valueFields,
            SizeFields = sizeFields,
            DisplayFields = displayFields,
            FormatFields = formatFields,
            ReadActionUrl = _hrm_Hr_Service + "Att_GetData/GetReportDetailForgetCard",
            ReadData = "filterFieldInfo",
            PageSize = 50,
            HiddenFields = hiddenFields,
            ShowEditIcon = false,
            ShowCheckbox = false,
            ForeignKey = foreignKey

        };
    }
    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<Att_ReportDetailForgetCardModel>(grid))
</div>
@{
    var valueFields1 = string.Empty;
    for (int i = 0; i < valueFields.Count(); i++)
    {
        valueFields1 += "," + valueFields[i];
    }
}
@Html.Hidden("valueFieldsGrid", valueFields1)
