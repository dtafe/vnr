@using HRM.Infrastructure.Utilities
@using HRM.Infrastructure.Security
@using HRM.Presentation.Attendance.Models
@using HRM.Presentation.UI.Controls.Kendo

@model HRM.Presentation.Attendance.Models.Att_CutOffDurationSearchModel

@{
    ViewBag.Title = HRM.Infrastructure.Utilities.ConstantDisplay.HRM_Att_Sal_CutOffDuration.TranslateString();
    Layout = null;
    //string[] valueFields = null;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;

    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var controller = ViewContext.RouteData.Values["Controller"].ToString();

       
    var action = ViewContext.RouteData.Values["Action"].ToString();
    var screen = controller + "/" + action;
}
@Html.Hidden("Screen", screen)
@{
    var window = new WindowBuilderInfo
    {
        Name = ConstantControlName.HRM_gridAtt_CutOffDuration_PopUp_Name,
        Visible = false,
        Width = 700,
        LoadContentFrom = @_hrm_Main_Web + "Att_CutOffDuration/CreateOrUpdate/",
    };
}
@(Html.VnrWindow(window))
<script type="text/javascript">
    var titleCreate = '@Html.Raw(ConstantDisplay.HRM_Attendance_Sal_CutOffDuration_Create.TranslateString())';
    var titleUpdate = '@Html.Raw(ConstantDisplay.HRM_Attendance_Sal_CutOffDuration_Update.TranslateString())';
    //Khởi tạo điều kiện tìm kiếm

    function filterFieldInfo(isExport) {
        return {
            //cutOffDurationName: $('#@Html.FieldIdFor(model => model.CutOffDurationName)').val(),
            CutOffDurationName: $('#CutOffDurationName1').val(),
            IsExport: isExport,
            ValueFields: $('#valueFieldsGrid').val()
        };
    }

    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        //Show Hide Panel
        ShowHidePanel();

        //
        $("#btnSearch").click(function () {
            ReadGrid('gridAtt_CutOffDuration');
        });
        //Xử lý nút Edit
        var url = '@_hrm_Main_Web' + "Att_CutOffDuration/CreateOrUpdate/";
        EditGridPopUp("gridAtt_CutOffDuration", '@ConstantControlName.HRM_gridAtt_CutOffDuration_PopUp_Name', url, '@ConstantPermission.Att_CutOffDuration', titleUpdate);
    });
    //Xử lý nút Create
    $("#btnCreate").click(function () {
        @*KendoRouteMapping('#Hrm_Main_Web/Hre_StopWorking/Create/', 'Hrm_Main_Web', '@_hrm_Main_Web');*@
        PopUpCreate('@ConstantControlName.HRM_gridAtt_CutOffDuration_PopUp_Name', titleCreate, '@ConstantPermission.Cat_Unit');
    });
    ////Xử Lý Grid
    //GridCheckbox("gridAtt_CutOffDuration");

    //Xử lý nút Delete
    $('#btnDelete').click(function (e) {

        if (selectedIds == "") {
            DeleteFail();
            return;
        }

        e.preventDefault();
        DeleteSelectedConfirm("gridAtt_CutOffDuration", '@_hrm_Main_Web' + "Att_CutOffDuration/RemoveSelected/", selectedIds, '@ConstantPermission.Att_CutOffDuration');
        return false;
    });
    $("#btnExportAll").click(function () {
        var grid = $('#gridAtt_CutOffDuration').data("kendoGrid");
        if (grid.dataSource.total() == 0) {
            ExportAllFail();
            return;
        }
        var urlGetData = '@_hrm_Hr_Service' + "Att_GetData/ExportCutOffDurationList/";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo(true);
        ExportAll(urlGetData, dataParameter, urlDownload, '@ConstantPermission.Att_CutOffDuration');
    });

    $("#btnExportSelected").click(function () {
        if (selectedIds == "") {
            ExportSelectedFail();
            return;
        }
        var urlGetData = '@_hrm_Hr_Service' + "Att_GetData/ExportCutOffDurationSelected/";
        var urlDownload = '@_hrm_Main_Web';
        var listIds = selectedIds.join(',');
        var listFields = $('#valueFieldsGrid').val();
        ExportSelected(urlGetData, listIds, listFields, urlDownload, '@ConstantPermission.Att_CutOffDuration');
    });


</script>



<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->

            <div class="contendSearchWidge">
                <form action="#" method="POST" id="form-search">
                    <div id="div2">
                        <div class="FieldTitle150">
                            @*@Html.VnrLabelFor(model => model.CutOffDurationName)*@
                            @Html.Label(@ConstantDisplay.HRM_Attendance_Sal_CutOffDuration_CutOffDurationName.TranslateString())
                        </div>
                        <div class="FieldValue">
                            @*@Html.VnrTextBoxFor(model => model.CutOffDurationName, "width:200px")*@
                            @Html.VnrTextBox("CutOffDurationName1", "width:200px;")
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="commandToolBarWidge">
    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreate", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    <div style="float: right">
        <div class="btn-group">
            <button type="button" class="k-button btn-default dropdown-toggle" data-toggle="dropdown">
                <img src="@ConstantPath.IconExportPath" width="15" height="15" />
                @ConstantDisplay.HRM_Common_ExportDropdown_Title.TranslateString()
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu pull-right" role="menu">
                <li>@Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExportSelected", Content = ConstantAction.HRM_Common_ExportSelected.TranslateString(), ImageUrl = ConstantPath.IconExportPath, CssStyle = "border:0" })</li>
                <li>@Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExportAll", Content = ConstantAction.HRM_Common_ExportAll.TranslateString(), ImageUrl = ConstantPath.IconExportPath, CssStyle = "border:0" })</li>
            </ul>
        </div>
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnChangeCutOffDuration", Content = ConstantDisplay.HRM_ChangeColumn.TranslateString(), ImageUrl = ConstantPath.Hrm_ChangeColumnIcon })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
    </div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @{
            var columnMode = string.Empty;
            var defaultColumnMode = string.Empty;
            var userId = Session[SessionObjects.UserId];
            //Lấy tên lưới cộng thêm tên của control và action để tránh trùng nhau
            var gridControlName = ConstantControlName.HRM_gridAtt_CutOffDuration_Grid_Name + "__Att_CutOffDuration_Index";
            HRM.Presentation.Main.Controllers.Sys_ColumnModeController control = new HRM.Presentation.Main.Controllers.Sys_ColumnModeController();
            //Get thông tin cấu hình trong database
            GridBuilderModel gridInfo = control.GetGridBuilderInfo(userId + "," + gridControlName);
            var grid = new GridBuilderInfo
            {
                Name = ConstantControlName.HRM_gridAtt_CutOffDuration_Grid_Name,
                ReadActionUrl = @_hrm_Hr_Service + "Att_GetData/GetCutOffDurationList/",
                ShowCommand = false,
                ReadData = "filterFieldInfo",
            };

            if (gridInfo != null && gridInfo.ValueFields != null && gridInfo.ValueFields.Any())
            {
                grid.ValueFields = gridInfo.ValueFields;
                grid.SizeFields = gridInfo.SizeFields;
                grid.Filterable = gridInfo.FilterFields;
                grid.DisplayFields = gridInfo.DisplayFields;
                grid.LockedFields = gridInfo.LockedFields;
                grid.GroupFields = gridInfo.GroupFields;
                if (gridInfo.PageSize > 0)
                {
                    grid.PageSize = gridInfo.PageSize;
                }
                columnMode = gridInfo.StringXml;
            }
            else
            {
                grid.ValueFields = new string[]
                {
                    Att_CutOffDurationModel.FieldNames.CutOffDurationName,
                    Att_CutOffDurationModel.FieldNames.MonthYear,
                    Att_CutOffDurationModel.FieldNames.DateStart,
                    Att_CutOffDurationModel.FieldNames.DateEnd,
                    Att_CutOffDurationModel.FieldNames.DurationType,
                    Att_CutOffDurationModel.FieldNames.IsInsuranceSocial
                };
                grid.SizeFields = new Dictionary<string, int>()
                {
                    {Att_CutOffDurationModel.FieldNames.CutOffDurationName, 130},
                    {Att_CutOffDurationModel.FieldNames.MonthYear, 82},
                    {Att_CutOffDurationModel.FieldNames.DateStart, 95},
                    {Att_CutOffDurationModel.FieldNames.DateEnd, 100},
                    {Att_CutOffDurationModel.FieldNames.DurationType, 120},
                    {Att_CutOffDurationModel.FieldNames.IsInsuranceSocial, 125}
                };

                grid.DisplayFields = new Dictionary<string, string>()
                {
                    {Att_CutOffDurationModel.FieldNames.CutOffDurationName, ConstantDisplay.HRM_Attendance_Sal_CutOffDuration_CutOffDurationName},
                    {Att_CutOffDurationModel.FieldNames.MonthYear, ConstantDisplay.HRM_Attendance_CutOffDuration_MonthYear},
                    {Att_CutOffDurationModel.FieldNames.DateStart, ConstantDisplay.HRM_Attendance_CutOffDuration_DateStart},
                    {Att_CutOffDurationModel.FieldNames.DateEnd, ConstantDisplay.HRM_Attendance_CutOffDuration_DateEnd},
                    {Att_CutOffDurationModel.FieldNames.DurationType, ConstantDisplay.HRM_Attendance_CutOffDuration_DurationType},
                    {Att_CutOffDurationModel.FieldNames.IsInsuranceSocial, ConstantDisplay.HRM_Attendance_CutOffDuration_IsInsuranceSocial}
                };

                grid.FormatFields = new Dictionary<string, string>()
                {
                    {Att_CutOffDurationModel.FieldNames.MonthYear, ConstantFormat.HRM_Format_MonthYear}
                };
                defaultColumnMode = control.SetDefaultGridBuilderInfo(grid);
            }
            //var grid = new GridBuilderInfo
            //{
            //    Name = "gridAtt_CutOffDuration",
            //    ValueFields = valueFields,
            //    SizeFields = sizeFields,
            //    DisplayFields = displayFields,
            //    FormatFields = formatFields,
            //    ReadActionUrl = @_hrm_Hr_Service + "Att_GetData/GetCutOffDurationList/",
            //    ShowCommand = false,
            //    ReadData = "filterFieldInfo"
            //};
    }

    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<Att_CutOffDurationModel>(grid))
    <script>
        ClickButtonChangeColum("btnChangeCutOffDuration", "Att_CutOffDurationModel");
        $(document).ready(function () {
            $("#" + '@ConstantControlName.HRM_ChangeColum_Grid_Name').val('@gridControlName');
            $("#" + '@ConstantControlName.HRM_ChangeColum_ColumMode_Name').val('@Html.Raw(columnMode)');
            $("#" + '@ConstantControlName.HRM_ChangeColum_Default_ColumMode_Name').val('');
            $("#" + '@ConstantControlName.HRM_ChangeColum_Default_ColumMode_Name').val('@Html.Raw(defaultColumnMode)');
        });
    </script>
</div>
@{
    
    var listValueField = grid.ValueFields;
    var valueFields1 = string.Empty;
    if (listValueField != null)
    {
        for (int i = 0; i < listValueField.Count(); i++)
        {
            valueFields1 += "," + listValueField[i];
        }
    }
}
@Html.Hidden("valueFieldsGrid", valueFields1)


