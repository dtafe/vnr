@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.UI.Controls.Kendo.DropDownList
@using HRM.Presentation.UI.Controls.Kendo.MultiSelect

@using HRM.Infrastructure.Utilities
@using System.Collections;
@using HRM.Presentation.Category.Models;
@model Cat_DataGroupModel
@{

    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;

    var DataGroupID = Guid.Empty;
    if (Model != null)
    {
        DataGroupID = Model.ID;
    }
}

@{
    var window = new WindowBuilderInfo
    {
        Name = "windownCat_DataGroupDetail",
        Visible = false,
        LoadContentFrom = @_hrm_Main_Web + "Cat_DataGroupDetail/Cat_DataGroupDetailInfo/",
    };
}
@(Html.VnrWindow(window))

<script>
    var titleUpdatePopup = '@Html.Raw(ConstantDisplay.HRM_Cat_DataGroup_Update.TranslateString())';
    var titleCreatePopUp = '@Html.Raw(ConstantDisplay.HRM_Cat_DataGroup_AddNew.TranslateString())';

    SetFieldRequired();
    $("#btnCreateDataGroupDetail").click(function () {

        debugger;
         var x = $('#@Html.FieldIdFor(model=>model.DataGroup_ID)').val();
        if (x == '') {
                 ShowNotification('@ConstantMessages.Notification.TranslateString()', '@ConstantMessages.YouMustSaveFirst.TranslateString()', "k-block k-info-colored");
                  return;
        }

        else {
            var profileMulti = $("#ProfileID").data("kendoMultiSelect");
            setTimeout(function () {
                PopUpCreate("windownCat_DataGroupDetail", titleCreatePopUp, '@HRM.Infrastructure.Security.ConstantPermission.Cat_DataGroupDetail')
            }, 1000)

            $("#DataGroup_ID").val($('#@Html.FieldIdFor(model => model.DataGroup_ID)').val());
        }
    });
    //Xử lý nút Delete
    $('#btnDelete').click(function (e) {

        if (selectedIds.length == 0) {
            DeleteFail();
            return;
        }
        //  e.preventDefault();
        DeleteSelected("grid_DataGroupDetail_info", '@_hrm_Main_Web' + "Cat_DataGroupDetail/RemoveSelected/", selectedIds, '@HRM.Infrastructure.Security.ConstantPermission.Cat_DataGroupDetail');
        //selectedIds = [];
    });
    $(document).ready(function () {
        var url = '@_hrm_Main_Web' + "Cat_DataGroupDetail/Cat_DataGroupDetailInfo/";
        EditGridPopUp("grid_DataGroupDetail_info", "windownCat_DataGroupDetail", url, '@HRM.Infrastructure.Security.ConstantPermission.Cat_DataGroupDetail', titleUpdatePopup);
    });

    function filterFieldInfo() {
        return {
            DataGroupID: $("#DataGroup_ID").val()
        };
    }
</script>
<div class="VnRMain">
    <table style="width:100%">
        <tbody>
            <tr><td colspan="3" style=""></td></tr>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                <div style="display: block; float: left ;padding-top: 10px; ">
                    <div style="float:left">
                        <div class="hrm_box">
                            @Html.HiddenFor(mode => mode.DataGroup_ID)
                            <div>
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(model => model.DataGroupName)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var _DataGroupName = new TextBoxBuilderInfo()
                                        {

                                        };
                                    }
                                    @Html.VnrTextBoxFor(model => model.DataGroupName)
                                </div>
                            </div>
                            <div>
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(model => model.OrderNumber)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var _OrderNumber = new NumericTextBoxBuilderInfo<int>()
                                        {
                                            Name = "CatDataGroupDetail_OrderNumber",
                                            StyleCss = "width:120px",
                                            Format = ConstantFormat.HRM_Format_Int
                                        };
                                    }
                                    @Html.VnrNumericTextBoxFor(model => model.OrderNumber, _OrderNumber)
                                </div>
                            </div>
                           
                            <div id="div2">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.Notes)

                                </div>
                                <div class="FieldValue">
                                    @{
                                        var _Description = new TextAreaBuilderInfo()
                                        {

                                        };
                                    }
                                    @Html.VnrTextAreaFor(model => model.Notes)
                                </div>
                            </div>
                          
                            
                        </div>
                    </div>
                </div>

                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
            @*<tr>
                    <td class="Box_Bottom_Left"></td>
                    <td class="Box_Bottom_Mid"></td>
                    <td class="Box_Bottom_Right"></td>
                </tr>*@
        </tbody>
    </table>
    @Html.HiddenFor(mode => mode.ID)
</div>

<div class="commandToolBarWidge">
    <div class="GridTitle">
        @Html.VnrLabel(ConstantDisplay.HRM_Cat_DataGroup_List.TranslateString())

    </div>
    <div style="float:right">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateDataGroupDetail", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
    </div>
    <div class="clear"></div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @{

      
        var valueFieldsDataGroupDetail = new[]
                        {

                            Cat_DataGroupDetailModel.FieldNames.ObjectName,
                            Cat_DataGroupDetailModel.FieldNames.FieldName,
                            Cat_DataGroupDetailModel.FieldNames.ChildFieldName,
                            Cat_DataGroupDetailModel.FieldNames.ChildFieldName1,
                            Cat_DataGroupDetailModel.FieldNames.Value,
                            Cat_DataGroupDetailModel.FieldNames.Exclusions,
                        };

        var sizeFieldsDataGroupDetail = new Dictionary<string, int>()
                        {

                            {Cat_DataGroupDetailModel.FieldNames.ObjectName, 140},
                            {Cat_DataGroupDetailModel.FieldNames.FieldName, 100},
                            {Cat_DataGroupDetailModel.FieldNames.ChildFieldName, 100},
                            {Cat_DataGroupDetailModel.FieldNames.ChildFieldName1, 100},
                            {Cat_DataGroupDetailModel.FieldNames.Value, 108},
                            {Cat_DataGroupDetailModel.FieldNames.Exclusions, 100},

                        };

        var filterableDataGroupDetail = new Dictionary<string, bool>()
        {

        };

        var displayFieldsDataGroupDetail = new Dictionary<string, string>()
                        {

                            {Cat_DataGroupDetailModel.FieldNames.ObjectName, ConstantDisplay.HRM_Category_DataGroupDetai_ObjectName},
                            {Cat_DataGroupDetailModel.FieldNames.FieldName, ConstantDisplay.HRM_Category_DataGroupDetai_FieldName},
                            {Cat_DataGroupDetailModel.FieldNames.ChildFieldName, ConstantDisplay.HRM_Category_DataGroupDetai_ChildFieldName},
                            {Cat_DataGroupDetailModel.FieldNames.ChildFieldName1, ConstantDisplay.HRM_Category_DataGroupDetai_ChildFieldName1},
                            {Cat_DataGroupDetailModel.FieldNames.Value, ConstantDisplay.HRM_Category_DataGroupDetai_Value},
                            {Cat_DataGroupDetailModel.FieldNames.Exclusions, ConstantDisplay.HRM_Category_DataGroupDetai_Exclusions},
                        };

        var grid_DataGroupDetail = new GridBuilderInfo
        {

            Name = "grid_DataGroupDetail_info",
            ValueFields = valueFieldsDataGroupDetail,
            SizeFields = sizeFieldsDataGroupDetail,
            DisplayFields = displayFieldsDataGroupDetail,
            ReadActionUrl = _hrm_Hr_Service + "Cat_GetData/GetDataGroupDetailByDataGroupID",
            ReadData = "filterFieldInfo",
            AutoBind = true,
            ShowDeleteButton = true,
            GridHeight = 470,
        };
    }
    @(Html.VnrGrid<Cat_DataGroupDetailModel>(grid_DataGroupDetail))
</div>


