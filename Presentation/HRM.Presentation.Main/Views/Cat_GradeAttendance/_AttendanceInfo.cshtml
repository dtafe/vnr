@using HRM.Presentation.UI.Controls.Kendo;
@using HRM.Presentation.UI.Controls.Kendo.DropDownList;
@using HRM.Infrastructure.Utilities;
@using HRM.Presentation.Category.Models;

@model HRM.Presentation.Category.Models.Cat_GradeAttendanceModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;

    IList<SelectListItem> listDurationType = Enum.GetValues(typeof(EnumDropDown.DurationType))
                                .Cast<EnumDropDown.DurationType>()
                                .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
                                .ToList();
    
}

<script type="text/javascript">
    var _lateEarly = document.getElementById("LateEarly");
    var _round = document.getElementById("Round");
    $("#IsReceiveOvertimeBonus").change(function () {
        if (this.checked) {
            $("#ReceiveOvertimeBonus").show();
        }
        else {
            $("#ReceiveOvertimeBonus").hide();
        }
    });
    $("#IsDeductInLateOutEarly").change(function () {
        if (this.checked) {
            
            $("#DeductInLateOutEarly").show();
            _lateEarly.checked = true;
        }
        else {
            $("#DeductInLateOutEarly").hide();
            _lateEarly.checked = true;
        }
    });
    $("#LateEarly").change(function () {
        if (this.checked) {
            _round.checked = false;
            $("#LateEarlyRuleGrid").hide();
        }
    });

    $("#Round").change(function () {
        if (this.checked) {
            _lateEarly.checked = false;
            $("#LateEarlyRuleGrid").show();
        }
        else {
            $("#LateEarlyRuleGrid").hide();
        }
    });
    //$("input[type=radio]").change(function (e) {
    //    
    //    if (e.currentTarget.checked) {
    //        $("#" + e.currentTarget.id).val("true");
    //        alert($("#" + e.currentTarget.id).val());
    //    }
    //    else {
    //        $("#" + e.currentTarget.id).val("true");
    //        alert($("#" + e.currentTarget.id).val());
    //    }
    //});
    //$("#AttendanceMethod").change(function ()
    //{
    //    if (this.valueOf() == "E_TAM") {
    //        $("#E_TAM").show();
    //    }
    //    else {
    //        $("#E_TAM").hide();
    //    }
    //})

    function changeAttendenceMethod(e) {

        if (e.sender._old == "E_TAM") {
            $("#E_TAM").show();
        }
        else {
            $("#E_TAM").hide();
        }
    };
    
    function changeMinWorkDay(e) {
        if (e.sender._old == "E_SUBTRACT") {
            $("#E_SUBTRACT").show();
        }
        else {
            $("#E_SUBTRACT").hide();
        }

    }
    $("input[type=radio][name=DeductInLateOutEarly]").change(function () {
        
        if ($("#LateEarly")[0].checked) {
            $("#LateEarlyRuleGrid").hide();
        }
        else {
            $("#LateEarlyRuleGrid").show();
        }
    });


</script>
<div class="VnRMain">
    <table style="width:100%">
        <tbody>
            <tr>
                <td class="Box_Top_Left"></td>
                <td valign="middle" class="Box_Top_Mid"></td>
                <td class="Box_Top_Right"></td>
            </tr>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                <td valign="top">
                    <div id="div2">
                        <div class="FieldTitle200">
                            @Html.VnrLabelFor(mode => mode.LeaveWorkdayFormula)
                        </div>
                        <div class="FieldValue" style="width:1000px">
                            @Html.VnrTextAreaFor(m => m.LeaveWorkdayFormula, "width:975px;height:30px")
                            <br />
                            @Html.VnrLabel(ConstantDisplay.ConfigFormula.TranslateString()) 
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div>
                        <div class="FieldTitle200" >
                            @Html.VnrLabelFor(mode => mode.DurationType)
                        </div>
                        <div class="FieldValue">
                            @{
                                DropDownListBuilderInfo _DurationType = new DropDownListBuilderInfo()
                            {
                            DataTextField = "Text",
                            DataValueField = "Value",
                            BindTo = listDurationType,
                            Value = @Html.DisplayFor(mode => mode.DurationType).ToString()
                            };
                            }
                            @Html.VnrDropDownListFor(m => m.DurationType, _DurationType)
                        </div>
                    </div>
                    <div id="div2">
                        <div class="FieldTitle200">
                            @Html.VnrLabelFor(mode => mode.HourOnWorkDate)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrNumericTextBoxFor(model => model.HourOnWorkDate, new NumericTextBoxBuilderInfo<Int32>())
                        </div>
                        <div style="clear: both;"></div>
                        
                    </div>
                    <div id="div2">
                        <div class="FieldTitle200">
                            @Html.VnrLabelFor(mode => mode.ExpHourPerDay)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrNumericTextBoxFor(model => model.ExpHourPerDay, new NumericTextBoxBuilderInfo<Int32>())
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div2">
                        <div class="FieldTitle200" >
                            @Html.VnrLabelFor(mode => mode.EDType)
                        </div>
                        <div class="FieldValue">
                            @{
                                IList<SelectListItem> listMethodPayrollCompute = Enum.GetValues(typeof(PayrollComputeMethod))
                                 .Cast<PayrollComputeMethod>()
                                 .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
                                 .ToList();
                                DropDownListBuilderInfo _edtype = new DropDownListBuilderInfo()
                                {
                                    DataTextField = "Text",
                                    DataValueField = "Value",
                                    BindTo = listMethodPayrollCompute,
                                    Value = @Html.DisplayFor(mode => mode.EDType).ToString(),
                                    EventChange = "changeMinWorkDay"
                                };
                            }
                            @Html.VnrDropDownListFor(m => m.EDType, _edtype) @*//Chưa Dịch*@
                            <div style="clear: both;"></div>
                            
                            <div id="E_SUBTRACT" hidden="hidden" style="border: thin solid; border-color: rgba(13, 13, 13, 0.23); padding: 10px 15px 10px 10px">

                                <div class="FieldValue">
                                    @Html.VnrLabelFor(mode => mode.MinWorkDay)
                                    @Html.VnrNumericTextBoxFor(m => m.MinWorkDay, new NumericTextBoxBuilderInfo<int>() { })
                                </div>
                                <div style="clear: both;"></div>
                            </div>
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                   

                    <div id="div2">
                        <div class="FieldTitle200" >
                            @Html.VnrLabelFor(mode => mode.AttendanceMethod)
                        </div>
                        <div class="FieldValue">
                            @{
                                   IList<SelectListItem> listMethod = Enum.GetValues(typeof(AttendanceMethod))
                                    .Cast<AttendanceMethod>()
                                    .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
                                    .ToList();
                                DropDownListBuilderInfo _attendencemethod=new DropDownListBuilderInfo()
                                {
                                    DataTextField="Text",
                                    DataValueField="Value",
                                    BindTo=listMethod,
                                    EventChange="changeAttendenceMethod",
                                    Value = @Html.DisplayFor(mode => mode.AttendanceMethod).ToString(),
                                };
                            }
                            @Html.VnrDropDownListFor(m => m.AttendanceMethod, _attendencemethod) @*//Chưa Dịch*@
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <script>
                        $(document).ready(function () {
                            
                            var _AttendanceMethod =   $("#AttendanceMethod").data("kendoDropDownList");
                            if (_AttendanceMethod._old == "E_TAM") {
                                $("#E_TAM").show();
                            } else {
                                $("#E_TAM").hide();
                            }
                            if ($("#IsDeductInLateOutEarly").val() == "True") {
                                var _lateEarly = document.getElementById("LateEarly");
                                $("#DeductInLateOutEarly").show();
                                _lateEarly.checked = true;
                            }
                            
                        });
                    </script>
                    <div id="E_TAM" style="display: none; margin-left: 200px; border: thin solid; border-color: rgba(13, 13, 13, 0.23)">
                     
                        <div class="FieldValue">
                            <div style="margin-left: 10px">
                                @Html.VnrCheckBoxFor(mode => mode.IsDeductInLateOutEarly, new CheckBoxBuilderInfo() { Value = Model != null ? Model.IsDeductInLateOutEarly != null ? (bool)Model.IsDeductInLateOutEarly : false : false })
                                @Html.VnrLabelFor(mode => mode.IsDeductInLateOutEarly)
                            </div>
                            <div id="DeductInLateOutEarly" style="display:none;margin-left:30px">
                                <div>
                                    @*@Html.VnrRadioButtonFor(mode => mode.LateEarly, "DeductInLateOutEarly")*@
                                    @Html.VnrCheckBoxFor(m => m.LateEarly, new CheckBoxBuilderInfo { Value = Model != null ? Model.LateEarly != null ? (bool)Model.LateEarly : false : false })
                                    @Html.VnrLabelFor(mode => mode.LateEarly)

                                    @*@Html.VnrRadioButtonFor(mode => mode.RoundByLateEarly, "DeductInLateOutEarly")*@
                                    @*@Html.CheckBoxFor(m => m.RoundByLateEarly, new { name = "DeductInLateOutEarly" })
                    @Html.VnrLabelFor(mode => mode.RoundByLateEarly)*@

                                    @*@Html.VnrRadioButtonFor(mode => mode.Round, "DeductInLateOutEarly")*@
                                    @Html.VnrCheckBoxFor(m => m.Round, new CheckBoxBuilderInfo() { Value = Model != null ? Model.Round != null ? (bool)Model.Round : false : false })
                                    @Html.VnrLabelFor(mode => mode.Round)

                                    @*@Html.VnrRadioButtonFor(mode => mode.RoundByMonth, "DeductInLateOutEarly")*@
                                    @*@Html.CheckBoxFor(m => m.RoundByMonth, new { name = "DeductInLateOutEarly" })
                    @Html.VnrLabelFor(mode => mode.RoundByMonth)*@

                                </div>
                                <div id="LateEarlyRuleGrid" hidden="hidden" style="margin-right:30px">
                                    @Html.Partial("_LateEarlyRuleGrid", Model)
                                </div>
                            </div>
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div2">
                        @*<div class="FieldTitle" style="width:220px">
                           @Html.VnrLabelFor(mode => mode.IsReceiveOvertimeBonus) 
                        </div>*@
                        @*<div class="FieldValue">
                            <div>
                                @Html.VnrCheckBoxFor(mode => mode.IsReceiveOvertimeBonus, new CheckBoxBuilderInfo() { Value =Model!=null?Model.IsReceiveOvertimeBonus != null ? (bool)Model.IsReceiveOvertimeBonus : false:false })
                            </div>
                            <div id="ReceiveOvertimeBonus" style="display:none">
                                <div>
                                    @Html.VnrLabelFor(mode => mode.OTNomal)
                                    @{
                                        var _dropdownOvertimeType = new DropDownListBuilderInfo()
                                        {
                                            DataTextField = "OvertimeTypeName",
                                            DataValueField = "ID",
                                            Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiOvertimeType",
                                            OptionLabel = ConstantDisplay.HRM_Attendance_SelectOvertimeType.TranslateString(),
                                            Value = @Html.DisplayFor(mode => mode.OTNomal).ToString(),
                                            StyleCss = "width:150px",
                                        };
                                    }
                                    @(Html.VnrDropDownListFor(mode => mode.OTNomal, _dropdownOvertimeType))
                                    @Html.VnrLabelFor(mode => mode.OTNomalNight)
                                    @{
                                        var _dropdownOvertimeType3 = new DropDownListBuilderInfo()
                                        {
                                            DataTextField = "OvertimeTypeName",
                                            DataValueField = "ID",
                                            Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiOvertimeType",
                                            OptionLabel = ConstantDisplay.HRM_Attendance_SelectOvertimeType.TranslateString(),
                                            Value = @Html.DisplayFor(mode => mode.OTNomalNight).ToString(),
                                            StyleCss = "width:150px",
                                        };
                                    }
                                    @(Html.VnrDropDownListFor(mode => mode.OTNomalNight, _dropdownOvertimeType3))
                                </div>
                                <div>
                                    @Html.VnrLabelFor(mode => mode.OTLeaveDay)
                                    @{
                                        var _dropdownOvertimeType1 = new DropDownListBuilderInfo()
                                        {
                                            DataTextField = "OvertimeTypeName",
                                            DataValueField = "ID",
                                            Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiOvertimeType",
                                            OptionLabel = ConstantDisplay.HRM_Attendance_SelectOvertimeType.TranslateString(),
                                            Value = @Html.DisplayFor(mode => mode.OTLeaveDay).ToString(),
                                            StyleCss = "width:150px",
                                        };
                                    }
                                    @(Html.VnrDropDownListFor(mode => mode.OTLeaveDay, _dropdownOvertimeType1))
                                    @Html.VnrLabelFor(mode => mode.OTLeaveDayNight)
                                    @{
                                        var _dropdownOvertimeType4 = new DropDownListBuilderInfo()
                                        {
                                            DataTextField = "OvertimeTypeName",
                                            DataValueField = "ID",
                                            Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiOvertimeType",
                                            OptionLabel = ConstantDisplay.HRM_Attendance_SelectOvertimeType.TranslateString(),
                                            Value = @Html.DisplayFor(mode => mode.OTLeaveDayNight).ToString(),
                                            StyleCss = "width:150px",
                                        };
                                    }
                                    @(Html.VnrDropDownListFor(mode => mode.OTLeaveDayNight, _dropdownOvertimeType4))
                                </div>
                                <div>
                                    @Html.VnrLabelFor(mode => mode.OTHoliday)
                                    @{
                                        var _dropdownOvertimeType2 = new DropDownListBuilderInfo()
                                        {
                                            DataTextField = "OvertimeTypeName",
                                            DataValueField = "ID",
                                            Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiOvertimeType",
                                            OptionLabel = ConstantDisplay.HRM_Attendance_SelectOvertimeType.TranslateString(),
                                            Value = @Html.DisplayFor(mode => mode.OTHoliday).ToString(),
                                            StyleCss = "width:150px",
                                        };
                                    }
                                    @(Html.VnrDropDownListFor(mode => mode.OTHoliday, _dropdownOvertimeType2))
                                    @Html.VnrLabelFor(mode => mode.OTHolidayNight)
                                    @{
                                        var _dropdownOvertimeType5 = new DropDownListBuilderInfo()
                                        {
                                            DataTextField = "OvertimeTypeName",
                                            DataValueField = "ID",
                                            Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiOvertimeType",
                                            OptionLabel = ConstantDisplay.HRM_Attendance_SelectOvertimeType.TranslateString(),
                                            Value = @Html.DisplayFor(mode => mode.OTHolidayNight).ToString(),
                                            StyleCss = "width:150px",
                                        };
                                    }
                                    @(Html.VnrDropDownListFor(mode => mode.OTHolidayNight, _dropdownOvertimeType5))
                                </div>
                            </div>
                        </div>*@
                        <div style="clear: both;"></div>
                    </div>                
                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
               
            </tr>
            <tr>
                <td class="Box_Bottom_Left"></td>
                <td class="Box_Bottom_Mid"></td>
                <td class="Box_Bottom_Right"></td>
            </tr>
        </tbody>
    </table>

</div>

<div>
    @{
        if(Model != null && Model.ID != Guid.Empty){
           <script>
               debugger;
               var _round1 = document.getElementById("Round");
               var _lateEarly1 = document.getElementById("LateEarly");
               $(document).ready(function () {
                   debugger;
                   var dllED = $("#EDType").data("kendoDropDownList");
                   if (dllED._old == "E_SUBTRACT") {
                       $("#E_SUBTRACT").show();
                   }
                   if (_round1.value == "True")
                   {
                       _round1.checked = true;
                       _lateEarly1.checked = false;
                       $("#LateEarlyRuleGrid").show();
                   }
               });
           </script>
        }
    }
</div>
<script>
    
</script>