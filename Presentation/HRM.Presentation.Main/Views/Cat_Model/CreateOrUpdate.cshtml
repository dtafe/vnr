@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.UI.Controls.Kendo.DropDownList
@using HRM.Presentation.UI.Controls.Kendo.MultiSelect

@using HRM.Infrastructure.Utilities
@using System.Collections
@using HRM.Presentation.Payroll.Models;
@using HRM.Presentation.Hr.Models;
@using HRM.Presentation.Training.Models;
@using HRM.Infrastructure.Security
@model Cat_ModelModel

@{
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Cat_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
   
    IList<SelectListItem> listClassType = Enum.GetValues(typeof(EnumDropDown.PurColor))
     .Cast<EnumDropDown.PurColor>()
     .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() }).OrderBy(p => p.Text)
     .ToList();
}
@*@{
    var window = new WindowBuilderInfo
    {
        Name = "windowTrainee",
        Visible = false,
        Title = @ConstantDisplay.HRM_Category_ExportItem.TranslateString(),
        Width = 1000,
        LoadContentFrom = _hrm_Main_Web + "Tra_Class/TraineeInfo?ContractD=" + ClassID,
    };
}*@

@{
    var windowError = new WindowBuilderInfo
    {
        Name = "windowError",
        Visible = false,
        Height = 150,
        Width = 300,
        Title = ConstantDisplay.MessageError.TranslateString(),
        Content = ConstantDisplay.YouMustSaveClassFirst.TranslateString()
    };
}
@(Html.VnrWindow(windowError))

@{
    var windowPurColor = new WindowBuilderInfo
    {
        Name = "windowPurColor",
        Visible = false,
        Width = 700,
        Title = ConstantDisplay.HRM_Category_PurColor_List.TranslateString(),
        LoadContentFrom = _hrm_Main_Web + "Pur_Color/Pur_ColorInfo"
    };
}
@(Html.VnrWindow(windowPurColor))
<script type="text/javascript">
    var titleCreatePopUp = '@Html.Raw(ConstantDisplay.HRM_Category_CostSource_PopUp_Create_Title.TranslateString())';
    var titleUpdatePopup = '@Html.Raw(ConstantDisplay.HRM_Category_PurColor_PopUp_Update_Title.TranslateString())';
    $("#btnCreate").click(function () {
        debugger;
        var x = $('#@Html.FieldIdFor(model => model.Model_ID)').val();
        if (x == '') {
            PopUpCreate("windowError");
        }
        else {

            setTimeout(function () {
                PopUpCreate("windowPurColor", titleCreatePopUp, '@ConstantPermission.Pur_Color_Create');
            }, 1000)
            @*$("#ClassID").val($('#@Html.FieldIdFor(model => model.Model_ID)').val());*@
        };

    });

    $(document).ready(function () {
        debugger;
        var url = '@_hrm_Main_Web' + "Pur_Color/Pur_ColorInfo/";
        EditGridPopUp('@ConstantControlName.HRM_Category_Pur_Color_Grid', "windowPurColor", url, '@HRM.Infrastructure.Security.ConstantPermission.Pur_Color_Edit', titleUpdatePopup);
    });

    function filterFieldInfo() {
        return {
            ModelID: $("#Model_ID").val()
        };
    }
    $('#btnDelete').click(function (e) {
        debugger;
        if (selectedIds == "") {
            DeleteFail();
            return;
        }
        e.preventDefault();
        DeleteSelected('@ConstantControlName.HRM_Category_Pur_Color_Grid', '@_hrm_Main_Web' + "Pur_Color/RemoveSelected/", selectedIds, '@ConstantPermission.cat_Model_Delete');
        return false;
    });
</script>
<div id="Popup_AddPoint"></div>

<div class="VnRMain">
    <table style="width:100%">
        <tbody>
            <tr><td colspan="3" style=""></td></tr>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                <td valign="top">
                    <div>
                        <div style="float:left">
                            <div id=" div1">
                                <!--Loại xe-->
                                <div class="FieldTitle170">
                                    @Html.VnrLabelFor(mode => mode.ModelType)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var _ModelType = new ComboBoxBuilderInfo()
                                        {
                                            DataTextField = "Text",
                                            DataValueField = "Value",
                                            BindTo = listClassType,
                                            StyleCss="Width:200px",
                                        };
                                    }
                                    @(Html.VnrComboBoxFor(mode => mode.ModelType, _ModelType))
                                </div>
                            </div>
                            <!--Mã xe-->
                            <div id="div2">
                                <div class="FieldTitle170">
                                    @Html.VnrLabelFor(mode => mode.ModelCode)
                                </div>
                                <div class="FieldValue">
                                   @Html.VnrTextBoxFor(m=>m.ModelCode)
                                </div>
                            </div>
                            <!--Tên Model-->
                            <div id=" div1">
                                <div class="FieldTitle170">
                                    @Html.VnrLabelFor(mode => mode.ModelName)
                                </div>
                                <div class="FieldValue">
                                   @Html.VnrTextBoxFor(mode=>mode.ModelName)
                                </div>
                            </div>
                            <!--Giá bình thường-->
                            <div id=" div1">
                                <div class="FieldTitle170">
                                    @Html.VnrLabelFor(mode => mode.NormalPrice)
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrTextBoxFor(model => model.NormalPrice)
                                </div>
                            </div>
                            <!--Giá đặc biệt-->
                            <div id=" div1">
                                <div class="FieldTitle170">
                                    @Html.VnrLabelFor(mode => mode.SpecialPrice)
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrTextBoxFor(model => model.SpecialPrice)
                                </div>
                            </div>
                            <!--Ngày áp dụng-->
                            <div id=" div1">
                                <div class="FieldTitle170"> 
                                    @Html.VnrLabelFor(mode => mode.DateApply)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var _DateApply = new DatePickerBuilderInfo()
                                        {
                                            // Name = "RevenueForProfileIfo_DateFrom",
                                            StyleCss = "width:100px",
                                            Placeholder = ConstantDisplay.HRM_Cat_Model_DateApply.ToString().TranslateString()
                                        };
                                    }
                                    @Html.VnrDatePickerFor(model => model.DateApply, _DateApply)
                                </div>
                            </div>
                        </div>
                    </div>
                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
            <tr>
                <td class="Box_Bottom_Left"></td>
                <td class="Box_Bottom_Mid"></td>
                <td class="Box_Bottom_Right"></td>
                @Html.HiddenFor(mode => mode.Model_ID)
                @Html.HiddenFor(mode => mode.ID)
            </tr>
        </tbody>
    </table>
</div>
<div class="commandToolBarWidge">
    <div class="GridTitle">
        @Html.VnrLabel(ConstantDisplay.HRM_Category_PurColor_List.TranslateString())

    </div>

    <div style="float:right">
       
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreate", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
    </div>
    <div class="clear"></div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @using HRM.Presentation.Category.Models
    @using HRM.Presentation.UI.Controls.Kendo
    @{
        
        //Thông tin hiển column hiển thị
        string[] valueFields = new string[]
                            {
                                PUR_ColorModelModel.FieldNames.ColorCode,
                                PUR_ColorModelModel.FieldNames.Color,
                                PUR_ColorModelModel.FieldNames.UserCreate,
                                PUR_ColorModelModel.FieldNames.DateUpdate,
                            };
        //Set độ rộng cho từng column
        Dictionary<string, int> sizeFields = new Dictionary<string, int>()
                            {
                                { PUR_ColorModelModel.FieldNames.ColorCode, 150},
                                { PUR_ColorModelModel.FieldNames.Color, 150},
                                { PUR_ColorModelModel.FieldNames.UserCreate, 150},
                                {PUR_ColorModelModel.FieldNames.DateUpdate,135},
        
                            };

        //Thông tin hiển thị được dịch
        Dictionary<string, string> displayFields = new Dictionary<string, string>()
        {
                                { PUR_ColorModelModel.FieldNames.ColorCode,ConstantDisplay.HRM_Cat_Model_ModelType},
                                { PUR_ColorModelModel.FieldNames.Color, ConstantDisplay.HRM_Cat_Model_ColorName},
                                { PUR_ColorModelModel.FieldNames.UserCreate, ConstantDisplay.HRM_Tra_PlanDetail_UserCreate},
                                {   PUR_ColorModelModel.FieldNames.DateUpdate,ConstantDisplay.HRM_Common_DateUpdate},
        };

        var grid = new GridBuilderInfo
        {
            Name = ConstantControlName.HRM_Category_Pur_Color_Grid,
            //Name="PurColorGrid",
            ValueFields = valueFields,
            SizeFields = sizeFields,
            DisplayFields = displayFields,
            ShowCommand = false,
            GridHeight = 200,
            AutoBind = true,
            ReadActionUrl = _hrm_Hr_Service + "Cat_GetData/CatGetColorByModelID",
            ReadData = "filterFieldInfo",

        };
    }
    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<PUR_ColorModelModel>(grid))
</div>

<div>
    @{
        if (Model != null)
        {
            <script>
                function onDataBoundGrid() {
                    debugger;
                    var grid = $("#PurColorGrid").data("kendoGrid");
                }
            </script>
        }
    }
</div>
