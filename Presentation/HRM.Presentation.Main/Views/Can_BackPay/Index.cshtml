
@using HRM.Infrastructure.Utilities;
@using HRM.Presentation.Canteen.Models
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Infrastructure.Security
@model HRM.Presentation.Canteen.Models.Can_BackPaySearchModel
@{
    ViewBag.Title = HRM.Infrastructure.Utilities.ConstantDisplay.HRM_Canteen_BackPay_List.TranslateString();
    Layout = null;
    var _hrm_Can_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Can_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Hre_Service;
}



<script type="text/javascript">

    var checkedNodes = [];
     
    //Lấy dữ liệu khi tìm kiếm
    function filterFieldInfo(isExport) {
        var ProfileName = $('#@Html.FieldIdFor(model => model.ProfileName)').val();
        @*var DateFrom1 = $('#@Html.FieldIdFor(model => model.DateFrom)').val();
        var DateTo1 = $('#@Html.FieldIdFor(model => model.DateTo)').val();*@
        var _DateFrom = ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateFrom").val()); 
        var _DateTo = ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateTo").val()); 
        
         
        return {
            ProfileName: ProfileName,
            DateFrom: _DateFrom,
            DateTo: _DateTo,
            IsExport: isExport,
            ValueFields: $('#valueFieldsGrid').val()
        };
    }

    //Hàm xử lý sự kiện edit trên lưới
    function eEditBackPay(e) {
        var isAccess = checkPermission(PrivilegeType.ExportAll, '@ConstantPermission.Can_BackPay');
        if (!isAccess) {
            return;
        }
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var id = dataItem.Id;
        KendoRouteMapping('#Hrm_Main_Web/Can_BackPay/Edit/' + id, 'Hrm_Main_Web', '@_hrm_Can_Web');
    }

    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        //Xử lý show hide form tìm kiếm
        ShowHidePanel();
        //Jump Anchor
         
        jumpAnchor("anchor");

        // Nút export all
        $("#btnExportAll").click(function () {
            var isAccess = checkPermission(PrivilegeType.ExportAll, '@ConstantPermission.Can_BackPay');
            if (!isAccess) {
                return;
            }
             
            var grid = $('#gridCan_BackPay').data("kendoGrid");
            var count = grid.dataSource._data.toJSON().length;
            if (count == 0) {
                // ExportAllFail();
                return;
            }
            var urlGetData = '@_hrm_Can_Service' + "Canteen_GetData/GetBackPayList/";
            var urlDownload = '@_hrm_Main_Web';
            var dataParameter = filterFieldInfo(true);
            ExportAll(urlGetData, dataParameter, urlDownload);
        });


        //
        $("#btnSearch").click(function () {

            var grid = $('#gridCan_BackPay').data("kendoGrid");
            grid.dataSource.read();
            checkedNodes = [];
        });
        //Xử Lý Grid
        GridCheckbox("gridCan_BackPay");
        //Xử lý nút Edit
        var isAccess = checkPermission(PrivilegeType.Modify, '@ConstantPermission.Can_BackPay');
        if (!isAccess) {
            return;
        }
        EditGridNewPage("gridCan_BackPay", '#Hrm_Main_Web/Can_BackPay/Edit/', 'Hrm_Main_Web', '@_hrm_Can_Web');
        //Xử lý nút Delete
        var isAccess = checkPermission(PrivilegeType.Delete, '@ConstantPermission.Can_BackPay');
        if (!isAccess) {
            return;
        }
        DeleteGrid("gridCan_BackPay", '@_hrm_Can_Web' + "Can_BackPay/Remove/");


        $("#btnCreate").click(function () {
            var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Can_BackPay');
            if (!isAccess) {
                return;
            }
            KendoRouteMapping('#Hrm_Main_Web/Can_BackPay/Create/', 'Hrm_Main_Web', '@_hrm_Can_Web');
        });
        $('#btnDelete').click(function (e) {
            var isAccess = checkPermission(PrivilegeType.Delete, '@ConstantPermission.Can_BackPay');
            if (!isAccess) {
                return;
            }
            if (selectedIds == "") {
                DeleteFail();
                return;
            }
            e.preventDefault();

            DeleteSelected("gridCan_BackPay", '@_hrm_Can_Web' + "Can_BackPay/RemoveSelected/", selectedIds.join(","));

            return false;
        });
    });



    @*function showpage(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var id = dataItem.Id;
        window.location.href = '@_hrm_Can_Web' + 'Can_BackPay/Edit/' + id;
    }
        window.location.href = '@_hrm_Can_Web' + 'Can_BackPay/Create';
    }*@
</script>


<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                @*//@ConstantDisplay.HRM_Canteen_BackPay_List.TranslateString()*@
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->

            <div class="contendSearchWidge">
                <form id="form-search">
                    <div class="hrm_box">
                        <div id="div4">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(model => model.ProfileName)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextBoxFor(mode => mode.ProfileName)
                            </div>
                        </div>
                    </div>

                    <div id="dvDateFrom">
                        <div class="FieldTitle">
                            @*@Html.VnrLabel(ConstantDisplay.HRM_Can_MealAllowanceToMoney_DateFromTo.TranslateString())*@
                            @Html.VnrLabel(ConstantDisplay.HRM_Canteen_BackPay_MonthYear.TranslateString())
                            
                        </div>
                        <div class="FieldValue">
                            @{
                                var dateFrom = new DatePickerBuilderInfo()
                                {
                                    //Value = @Html.DisplayFor(mode => mode.DateFrom).ToString(),
                                    StyleCss = "width:100px;",
                                    Placeholder = ConstantDisplay.HRM_HR_Profile_DateFrom.TranslateString(),
                                };
                            }
                            @Html.VnrDatePickerFor(mode => mode.DateFrom, dateFrom)
                            @{
                                var dateTo = new DatePickerBuilderInfo()
                                {
                                    //Value = @Html.DisplayFor(mode => mode.DateTo).ToString(),
                                    StyleCss = "width:100px;",
                                    Placeholder = ConstantDisplay.HRM_HR_Profile_DateTo.TranslateString(),
                                };
                            }
                            @Html.VnrDatePickerFor(mode => mode.DateTo, dateTo)
                        </div>
                    </div>

                </form>
            </div>
        </div>
    </div>
</div>

<div class="commandToolBarWidge">
    <div style="float:left">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreate", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    </div>
    <div style="float:right">
        <div class="btn-group">
            <button type="button" class="k-button btn-default dropdown-toggle" data-toggle="dropdown">
                <img src="@ConstantPath.IconExportPath" width="15" height="15" />
                @ConstantDisplay.HRM_Common_ExportDropdown_Title.TranslateString()
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu pull-right" role="menu">
                <li>@Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExportAll", Content = ConstantAction.HRM_Common_ExportAll.TranslateString(), ImageUrl = ConstantPath.IconExportPath, CssStyle = "border:0" })</li>
            </ul>
        </div>
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
    </div>
    <div class="clear"></div>
</div>

<div>
    <!--Khai báo các thông tin cho Grid-->
    @using HRM.Presentation.Canteen.Models
    @using HRM.Presentation.UI.Controls.Kendo
    @{
        string[] valueFields = new string[]
        {
            Can_BackPayModel.FieldNames.ProfileName,
            Can_BackPayModel.FieldNames.MonthYear,
            Can_BackPayModel.FieldNames.Count,
            Can_BackPayModel.FieldNames.CountByFomular,
            Can_BackPayModel.FieldNames.Amount,
            Can_BackPayModel.FieldNames.AmountByFomular,
            Can_BackPayModel.FieldNames.MealAllowanceTypeName,
            Can_BackPayModel.FieldNames.Note
        };
        Dictionary<string, int> sizeFields = new Dictionary<string, int>()
        {
           {Can_BackPayModel.FieldNames.ProfileName,150},
            {Can_BackPayModel.FieldNames.MonthYear,150},
            {Can_BackPayModel.FieldNames.Count,150},
            {Can_BackPayModel.FieldNames.CountByFomular,200},
            {Can_BackPayModel.FieldNames.Amount,100},
            {Can_BackPayModel.FieldNames.AmountByFomular,200},
            {Can_BackPayModel.FieldNames.MealAllowanceTypeName,150},
            {Can_BackPayModel.FieldNames.Note,300}
        };

        Dictionary<string, string> displayFields = new Dictionary<string, string>()
        {
            {Can_BackPayModel.FieldNames.ProfileName, ConstantDisplay.HRM_Canteen_BackPay_ProfileId},
            {Can_BackPayModel.FieldNames.MonthYear, ConstantDisplay.HRM_Canteen_BackPay_MonthYear},
            {Can_BackPayModel.FieldNames.Count, ConstantDisplay.HRM_Canteen_BackPay_Count},
            {Can_BackPayModel.FieldNames.CountByFomular, ConstantDisplay.HRM_Canteen_BackPay_CountByFomular},
            {Can_BackPayModel.FieldNames.Amount, ConstantDisplay.HRM_Canteen_BackPay_Amount},
            {Can_BackPayModel.FieldNames.AmountByFomular, ConstantDisplay.HRM_Canteen_BackPay_AmountByFomular},
            {Can_BackPayModel.FieldNames.MealAllowanceTypeName, ConstantDisplay.HRM_Canteen_BackPay_MealAllowanceTypeSettingID},
            {Can_BackPayModel.FieldNames.Note, ConstantDisplay.HRM_Canteen_BackPay_Note},
        };
        var grid = new GridBuilderInfo
        {
            Name = "gridCan_BackPay",
            ValueFields = valueFields,
            SizeFields = sizeFields,
            DisplayFields = displayFields,
            ReadActionUrl = @_hrm_Can_Service + "Canteen_GetData/GetBackPayList/",
            ReadData = "filterFieldInfo"
        };
    }
    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<Can_BackPayModel>(grid))
</div>
@{
    var valueFields1 = string.Empty;
    for (int i = 0; i < valueFields.Count(); i++)
    {
        valueFields1 += "," + valueFields[i];
    }
}
@Html.Hidden("valueFieldsGrid", valueFields1)


