@using HRM.Infrastructure.Utilities
@using System.Collections
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Payroll.Models;
@model Sal_SalaryInformationModel

@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var hrm_Payroll_Web = ConstantPathWeb.Hrm_Main_Web;
  
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
}
<script>
    SetFieldRequired();

    function onSaveNew() {
     //   var dataCheck = data[''];
        
        //if (CheckValidate(data) && !checkDuplicationCode()) {
            onSaveAndContinue($('#form_Sal_SalaryInformation'), '@_hrm_Hr_Service', 'api/Sal_SalaryInformation/', '@ConstantControlName.HRM_Payroll_Sal_SalaryInformation_Grid_Name', '@ConstantControlName.HRM_Payroll_Sal_SalaryInformation_PopUp_Name'); return false;

      //  }
    }

    function onSaveClose() {
        //if (CheckValidate(data) && !checkDuplicationCode()) {
            onSaveAndClose($('#form_Sal_SalaryInformation'), '@_hrm_Hr_Service', 'api/Sal_SalaryInformation/', '@ConstantControlName.HRM_Payroll_Sal_SalaryInformation_Grid_Name', '@ConstantControlName.HRM_Payroll_Sal_SalaryInformation_PopUp_Name'); return false;

        //}
    }
    function onSaveDataPopUp() {
        
      //  if (CheckValidate(data)) {
         //   if (!checkDuplicationCode()) {
                onlySave($('#form_Sal_SalaryInformation'), '@_hrm_Hr_Service', 'api/Sal_SalaryInformation/', '@ConstantControlName.HRM_Payroll_Sal_SalaryInformation_Grid_Name'); return false;
          //  }
       // }
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Sal_SalaryInformation" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div class="hrm_box">
                    <div>
                        <div class="FieldTitle150">
                            @Html.VnrLabelForNoneIcon(mode => mode.ProfileID)
                        </div>
                        <div class="FieldValue">
                            <!--Xử lý gán trực tiếp dữ liệu cho Multi, không cần load dữ liệu từ database lên, giảm kết nối đến database khi edit-->
                            @{
    IEnumerable valueProfile = new string[] { };
    if (Model != null)
    {
        valueProfile = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
    }
                            }
                                                        @{
                                var _ProfileID = new MultiSelectBuilderInfo()
                                {
                                    Name = "SalaryInformation_ProfileID",
                                    DataTextField = "ProfileName",
                                    DataValueField = "ID",
                                    Url = @_hrm_Hre_Service + "HrMultiSelect/GetMultiProfile",
                                    Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                                    MaxSelectedItems = 1,
                                   // Autobind = true,
                                    Value = valueProfile,
                                    Width = 300
                                };
                            }
                            @Html.VnrMultiSelectFor(model => model.ProfileID, _ProfileID)
                        </div>
                        <div>
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.IsCash)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrCheckBoxFor(mode => mode.IsCash)
                            </div>
                        </div>
                        <div>
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.AccountNo)
                            </div>
                            <div class="FieldValue">

                                @Html.VnrTextBoxFor(mode => mode.AccountNo, "width: 300px")
                            </div>
                        </div>
                        <div>
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.AccountName)
                            </div>
                            <div class="FieldValue">

                                @Html.VnrTextBoxFor(mode => mode.AccountName, "width: 300px")
                            </div>
                        </div>
                        <div>
                            <div class="FieldTitle150">
                                @Html.VnrLabelForNoneIcon(model => model.BankID)
                            </div>
                            <div class="FieldValue">
                                <!--Xử lý gán trực tiếp dữ liệu cho Multi, không cần load dữ liệu từ database lên, giảm kết nối đến database khi edit-->
                                @{
                                var _BankID = new ComboBoxBuilderInfo()
                                {
                                    Name = "_BankID",
                                    DataTextField = "BankName",
                                    DataValueField = "ID",
                                    Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiBank",
                                    Placeholder = ConstantDisplay.HRM_Category_SelectBank.TranslateString(),
                                    //   MaxSelectedItems = 1,
                                    Autobind = true,
                                    StyleCss = "width:300px"
                                    //  Value = valueBank,
                                    //  Width = 200
                                };
                                }
                                @Html.VnrComboBoxFor(model => model.BankID, _BankID)
                            </div>
                        </div>
                        <div>
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.SwiftCode)
                            </div>
                            <div class="FieldValue">

                                @Html.VnrTextBoxFor(mode => mode.SwiftCode, "width: 300px")
                            </div>
                        </div>
                        <div>
                            <div class="FieldTitle150">
                                @Html.VnrLabelForNoneIcon(model => model.CurrencyID)
                            </div>
                            <div class="FieldValue">

                                @{
    var valueCurrencyID = new ComboBoxBuilderInfo()
   {
       Name = "_CurrencyID",
       DataTextField = "CurrencyName",
       DataValueField = "ID",
       Url = _hrm_Hr_Service + "Cat_GetData/GetMultiCurrency",
       //    MaxSelectedItems = 1,
       Placeholder = ConstantDisplay.HRM_Category_SelectCurrency.TranslateString(),
       Autobind = true,
       StyleCss = "width:300px"
       //   Value = valueCurrency1,
       //  Width = 200
   };
                                }
                                @Html.VnrComboBoxFor(mode => mode.CurrencyID, valueCurrencyID)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="hrm_box">
                    <div style="height:26px">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.GroupBank)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(mode => mode.GroupBank, "width: 300px")
                        </div>
                    </div>
                    <div style="height:26px">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.IsCash2)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrCheckBoxFor(mode => mode.IsCash2)
                        </div>
                    </div>
                    <div>
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.AccountNo2)
                        </div>
                        <div class="FieldValue">

                            @Html.VnrTextBoxFor(mode => mode.AccountNo2, "width: 300px")
                        </div>
                    </div>
                    <div>
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.AccountName2)
                        </div>
                        <div class="FieldValue">

                            @Html.VnrTextBoxFor(mode => mode.AccountName2, "width: 300px")
                        </div>
                    </div>
                    <div>
                        <div class="FieldTitle150">
                            @Html.VnrLabelForNoneIcon(model => model.BankID2)
                        </div>
                        <div class="FieldValue">
                            <!--Xử lý gán trực tiếp dữ liệu cho Multi, không cần load dữ liệu từ database lên, giảm kết nối đến database khi edit-->
                            @{
    var _BankID2 = new ComboBoxBuilderInfo()
    {
        Name = "_BankID2",
        DataTextField = "BankName",
        DataValueField = "ID",
        Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiBank",
        Placeholder = ConstantDisplay.HRM_Category_SelectBank.TranslateString(),
        //    MaxSelectedItems = 1,
        Autobind = true,
        StyleCss = "width:300px"
        //    Value = valueBank2,
        //   Width = 200
    };
                            }
                            @Html.VnrComboBoxFor(model => model.BankID2, _BankID2)
                        </div>
                    </div>
                    <div>
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.SwiftCode2)
                        </div>
                        <div class="FieldValue">

                            @Html.VnrTextBoxFor(mode => mode.SwiftCode2, "width: 300px")
                        </div>
                    </div>
                    <div>
                        <div class="FieldTitle150">
                            @Html.VnrLabelForNoneIcon(model => model.CurrencyID2)
                        </div>
                        <div class="FieldValue">

                            @{
                            var valueCurrencyID2 = new ComboBoxBuilderInfo
                           {
                               Name = "_CurrencyID2",
                               DataTextField = "CurrencyName",
                               DataValueField = "ID",
                               Url = _hrm_Hr_Service + "Cat_GetData/GetMultiCurrency",
                               // MaxSelectedItems = 1,
                               Placeholder = ConstantDisplay.HRM_Category_SelectCurrency.TranslateString(),
                               Autobind = true,
                               StyleCss = "width:300px"
                               //   Value = valueCurrency2,
                               // Width = 200
                           };
                            }
                            @Html.VnrComboBoxFor(mode => mode.CurrencyID, valueCurrencyID2)
                        </div>
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-salInformation", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveNew", Name = "save-New-salInformation", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-salInformation", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
    
                  
   
   
    
}
