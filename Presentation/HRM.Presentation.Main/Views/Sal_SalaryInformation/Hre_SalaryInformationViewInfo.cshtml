@using System.Collections
@using HRM.Infrastructure.Utilities

@using HRM.Presentation.UI.Controls.Kendo
@model HRM.Presentation.Payroll.Models.Sal_SalaryInformationModel

@{
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;

   Guid ProfileID = Guid.Empty;
    string aaa = ViewBag.profileID;
    if (!string.IsNullOrEmpty(aaa))
    {
        ProfileID = Common.ConvertToGuid(aaa.ToString());
    }
    Layout = null;

}
<script>
    SetFieldRequiredByScreenName("SalHre_SalaryInformationViewInfo");
    @*function onSave() {
        onSaveAndContinue($('#form_Profiel_Sal_Hre_SalaryInformationViewInfo'), '@_hrm_Hr_Service', 'api/Sal_SalaryInformation/', '', 'window_Hre_SalaryInformationViewInfoEdit');
        return false;
    }*@
    function onSaveClose() {
        onSaveAndClose($('#form_Profiel_Sal_Hre_SalaryInformationViewInfo'), '@_hrm_Hr_Service', 'api/Sal_SalaryInformation/', '', 'window_Hre_SalaryInformationViewInfoEdit');
        LoadForm();
        return false;
    }
    function onSaveDataPopUp() {
        onlySave($('#form_Profiel_Sal_Hre_SalaryInformationViewInfo'), '@_hrm_Hr_Service', 'api/Sal_SalaryInformation/', '');
        LoadForm();
        return false;
    }
    $("#SalInformationViewInfo_IsCash").on("change", function () {
        debugger;
       
        if (this.checked) {
            $('#SalInformationViewInfo_IsCash').val(true);
        }
        else {
            $('#SalInformationViewInfo_IsCash').val(false);
        }
    });
    $("#SalInformationViewInfo_IsCash2").on("change", function () {
        if(this.checked)
        {
            $("#SalInformationViewInfo_IsCash2").val(true);
        }
        else
        {
            $("#SalInformationViewInfo_IsCash2").val(false);
        }
    });
 
</script>

@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Profiel_Sal_Hre_SalaryInformationViewInfo" }))
{
    @Html.HiddenFor(model => model.UnusualED_ID)
    <div>
        @{
                if (Model != null)
                {
                    @Html.HiddenFor(m => m.ProfileID)
                    @Html.HiddenFor(m => m.ID)
                }
                else
                {
                    @Html.Hidden("ProfileID", ProfileID)
                }
        }

    </div>
    <table>
        <tr>
            <td>
                <div style="float:left; width:100%">
                    <div style="float:left; width:50%">
                        <div class="DivContentTitleValue" id="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelForNoneIcon(model => model.IsCash)
                                @Html.HiddenFor(m => m.ID)
                            </div>
                            <div class="FieldValue">
                                @{
                                var _IsCash = new CheckBoxBuilderInfo()
                                {
                                    Id = "SalInformationViewInfo_IsCash",
                                    Value = Model != null ? Model.IsCash != null ? (bool)Model.IsCash : false : false
                                };
                                }

                                @Html.VnrCheckBoxFor(model => model.IsCash, _IsCash)
                            </div>
                        </div>
                        <div class="DivContentTitleValue" id="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelForNoneIcon(model => model.CurrencyID)
                            </div>
                            <div class="FieldValue">
                                @*@Html.DisplayFor(model => model.CurrencyName)*@
                                @{
                                    var _CurrencyID = new ComboBoxBuilderInfo()
                                        {
                                            DataValueField = "ID",
                                            DataTextField = "CurrencyName",
                                            Url = _hrm_Hr_Service + "Cat_GetData/GetMultiCurrency",
                                            Value=Model == null ? string.Empty:Model.CurrencyID.ToString(),
                                            StyleCss = "Width:300px",
                                            Autobind=true
                                        };
                                }
                                @Html.VnrComboBoxFor(model => model.CurrencyID, _CurrencyID).Text(Model != null ?Model.CurrencyName != null? Model.CurrencyName.ToString():string.Empty:string.Empty)
                            </div>
                        </div>
                        <div class="DivContentTitleValue" id="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelForNoneIcon(model => model.BankID)
                            </div>
                            <div class="FieldValue">
                                @*@Html.DisplayFor(model => model.BankName)*@
                                @{
                                    var _BankID = new ComboBoxBuilderInfo()
                                    {
                                        DataValueField="ID",
                                        DataTextField = "BankName",
                                        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiBank",
                                        Value = Model == null ? string.Empty : Model.BankID.ToString(),
                                        StyleCss = "Width:300px",
                                        Autobind = true
                                    };
                                }
                                @Html.VnrComboBoxFor(model => model.BankID, _BankID).Text(Model != null ? Model.BankName != null ? Model.BankName.ToString() : string.Empty : string.Empty)
                            </div>
                        </div>
                        <div class="DivContentTitleValue" id="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelForNoneIcon(model => model.BankBrandName)
                            </div>
                            <div class="FieldValue">
                                @*@Html.VnrDisplayFor(model => model.BankBrandName)*@
                                @{
    var _BankBrandName = new TextBoxBuilderInfo()
    {
        Width = 300
    };
                                }
                                @Html.VnrTextBoxFor(model => model.BankBrandName)
                            </div>
                        </div>
                        <div class="DivContentTitleValue" id="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelForNoneIcon(model => model.AccountName)
                            </div>
                            <div class="FieldValue">
                                @*@Html.VnrDisplayFor(model => model.AccountName)*@
                                @{
    var _AccountName = new TextBoxBuilderInfo()
    {
        Width = 300
    };
                                }
                                @Html.VnrTextBoxFor(model => model.AccountName)
                            </div>
                        </div>
                        <div class="DivContentTitleValue" id="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelForNoneIcon(model => model.AccountNo)
                            </div>
                            <div class="FieldValue">
                                @*@Html.DisplayFor(model => model.AccountNo)*@
                                @{
    var _AccountNo = new TextBoxBuilderInfo()
    {
        Width = 300
    };
                                }
                                @Html.VnrTextBoxFor(model => model.AccountNo)
                            </div>
                        </div>
                        <div class="DivContentTitleValue" id="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelForNoneIcon(model => model.SwiftCode)
                            </div>
                            <div class="FieldValue">
                                @*@Html.DisplayFor(model => model.SwiftCode)*@
                                @{
    var _SwiftCode = new TextBoxBuilderInfo()
    {
        Width = 300
    };
                                }
                                @Html.VnrTextBoxFor(model => model.SwiftCode)
                            </div>
                        </div>
                        <div class="DivContentTitleValue" id="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelForNoneIcon(model => model.SortCode)
                            </div>
                            <div class="FieldValue">
                                @*@Html.DisplayFor(model => model.SortCode)*@
                                @{
    var _SortCode = new TextBoxBuilderInfo()
    {
        Width = 300
    };
                                }
                                @Html.VnrTextBoxFor(model => model.SortCode)

                            </div>
                        </div>
                        <div class="DivContentTitleValue" id="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelForNoneIcon(model => model.AmountTransfer)
                            </div>
                            <div class="FieldValue">
                                @*@Html.DisplayFor(model => model.AmountTransfer)*@
                                @{
    var _AmountTransfer = new TextBoxBuilderInfo()
    {
        Width = 300
    };
                                }
                                @Html.VnrTextBoxFor(model => model.AmountTransfer)
                            </div>
                        </div>
                    </div>
                    <div style="float:left; width:50%">
                        <div style="float:left">
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelForNoneIcon(model => model.IsCash2)
                                </div>
                                <div class="FieldValue">
                                    @{
    var _IsCash2 = new CheckBoxBuilderInfo()
    {
        Id = "SalInformationViewInfo_IsCash2",
        Value = Model != null ? Model.IsCash2 != null ? (bool)Model.IsCash2 : false : false
    };
                                    }
                                    @Html.VnrCheckBoxFor(model => model.IsCash2, _IsCash2)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelForNoneIcon(model => model.CurrencyID2)
                                </div>
                                <div class="FieldValue">
                                    @*@Html.DisplayFor(model => model.CurrencyName2)*@
                                    @{
    var _CurrencyID2 = new ComboBoxBuilderInfo()
    {
        DataValueField = "ID",
        DataTextField = "CurrencyName",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiCurrency",
        Value = Model == null ? string.Empty : Model.CurrencyID2.ToString(),
        StyleCss = "Width:300px",
        Autobind = true
    };
                                    }
                                    @Html.VnrComboBoxFor(model => model.CurrencyID2, _CurrencyID2).Text(Model != null ? Model.CurrencyName2 != null ? Model.CurrencyName2.ToString() : string.Empty : string.Empty)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelForNoneIcon(model => model.BankID2)
                                </div>
                                <div class="FieldValue">
                                    @*@Html.DisplayFor(model => model.BankName2)*@
                                    @{
    var _BankID2 = new ComboBoxBuilderInfo()
    {
        DataValueField = "ID",
        DataTextField = "BankName",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiBank",
        Value = Model == null ? string.Empty : Model.BankID2.ToString(),
        StyleCss = "Width:300px",
        Autobind = true
    };
                                    }
                                    @Html.VnrComboBoxFor(model => model.BankID2, _BankID2).Text(Model != null ? Model.BankName2 != null ? Model.BankName2.ToString() : string.Empty : string.Empty)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelForNoneIcon(model => model.BankBrandName2)
                                </div>
                                <div class="FieldValue">
                                    @*@Html.VnrDisplayFor(model => model.BankBrandName2)*@
                                    @{
    var _BankBrandName2 = new TextBoxBuilderInfo()
    {
        Width = 300
    };
                                    }
                                    @Html.VnrTextBoxFor(model => model.BankBrandName2)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelForNoneIcon(model => model.AccountName2)
                                </div>
                                <div class="FieldValue">
                                    @*@Html.VnrDisplayFor(model => model.AccountName2)*@
                                    @{
    var _AccountName2 = new TextBoxBuilderInfo()
    {
        Width = 300
    };
                                    }
                                    @Html.VnrTextBoxFor(model => model.AccountName2)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelForNoneIcon(model => model.AccountNo2)
                                </div>
                                <div class="FieldValue">
                                    @*@Html.DisplayFor(model => model.AccountNo2)*@
                                    @{
    var _AccountNo2 = new TextBoxBuilderInfo()
    {
        Width = 300
    };
                                    }
                                    @Html.VnrTextBoxFor(model => model.AccountNo2)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelForNoneIcon(model => model.SwiftCode2)
                                </div>
                                <div class="FieldValue">
                                    @*@Html.DisplayFor(model => model.SwiftCode2)*@
                                    @{
    var _SwiftCode2 = new TextBoxBuilderInfo()
    {
        Width = 300
    };
                                    }
                                    @Html.VnrTextBoxFor(model => model.SwiftCode2)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelForNoneIcon(model => model.SortCode2)
                                </div>
                                <div class="FieldValue">
                                    @*@Html.DisplayFor(model => model.SortCode2)*@
                                    @{
    var _SortCode2 = new TextBoxBuilderInfo()
    {
        Width = 300
    };
                                    }
                                    @Html.VnrTextBoxFor(model => model.SortCode2)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelForNoneIcon(model => model.AmountTransfer2)
                                </div>
                                <div class="FieldValue">
                                    @*@Html.DisplayFor(model => model.AmountTransfer2)*@
                                    @{
    var _AmountTransfer2 = new TextBoxBuilderInfo()
    {
        Width = 300
    };
                                    }
                                    @Html.VnrTextBoxFor(model => model.AmountTransfer2)
                                </div>
                            </div>
                        </div>

                    </div>
                </div>

            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="FieldTitle150">
                </div>
                <div class="FieldValue">
                    @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-SalHre_SalaryInformationViewInfo", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    @*@Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-SalHre_UnusualIEDChildCare", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })*@
                    @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-SalHre_SalaryInformationViewInfo", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                </div>
            </td>
        </tr>
    </table>
}

