@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.UI.Controls.Kendo.DropDownList
@using HRM.Presentation.UI.Controls.Kendo.MultiSelect

@using HRM.Infrastructure.Utilities
@using System.Collections;
@using HRM.Presentation.Category.Models;
@model Cat_SkillModel
@{

    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;

  
    var SkillID = Guid.Empty;
    if (Model != null)
    {
        SkillID = Model.ID;
    }
}

@{
    var window = new WindowBuilderInfo
    {
        Name = "windownCat_SkillTopic",
        Visible = false,
        Width = 700,
        LoadContentFrom = @_hrm_Main_Web + "Cat_SkillTopic/Cat_SkillTopicInfo/",
    };
}
@(Html.VnrWindow(window))
@{
    var windowError = new WindowBuilderInfo
    {
        Name = "windowError",
        Visible = false,
        Height = 150,
        Width = 300,
        Title = ConstantDisplay.MessageError.TranslateString(),
        Content = ConstantDisplay.YouMustSaveSkillFirst.TranslateString()
    };
}
@(Html.VnrWindow(windowError))
<script>
    SetFieldRequired();

    var titleUpdatePopup = '@Html.Raw(ConstantDisplay.HRM_Cat_SkillTopic_Update_Title.TranslateString())';
    var titleCreatePopUp = '@Html.Raw(ConstantDisplay.HRM_Cat_SkillTopic_Create_Title.TranslateString())';
    SetFieldRequired();
    $("#btnCreateSkillTopic").click(function () {

        debugger;
        var x = $('#@Html.FieldIdFor(model => model.Skill_ID)').val();

        if (x == '') {
            PopUpCreate("windowError");
        }
        else {
            setTimeout(function () {
                PopUpCreate("windownCat_SkillTopic", titleCreatePopUp, '@HRM.Infrastructure.Security.ConstantPermission.Cat_SkillTopic')
            }, 1000)

            $("#Skill_ID").val($('#@Html.FieldIdFor(model => model.Skill_ID)').val());
        }
    });
    //Xử lý nút Delete
    $('#btnDelete').click(function (e) {

        if (selectedIds.length == 0) {
            DeleteFail();
            return;
        }
        //  e.preventDefault();
        DeleteSelected("grid_SkillTopic_info", '@_hrm_Main_Web' + "Cat_SkillTopic/RemoveSelected/", selectedIds, '@HRM.Infrastructure.Security.ConstantPermission.Cat_SkillTopic');
        //selectedIds = [];
    });
    $(document).ready(function () {
        var url = '@_hrm_Main_Web' + "Cat_SkillTopic/Cat_SkillTopicInfo/";
        EditGridPopUp("grid_SkillTopic_info", "windownCat_SkillTopic", url, '@HRM.Infrastructure.Security.ConstantPermission.Cat_SkillTopic', titleUpdatePopup);
    });

    function filterFieldInfo() {
        return {
            SkillID: $("#Skill_ID").val()
        };
    }

</script>
<div class="VnRMain">
    <table>
        <tbody>
            <tr><td colspan="3" style=""></td></tr>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                <div style="display: block; float: left ;padding-top: 10px; ">
                    <div style="float:left">
                        <div class="hrm_box">
                            @Html.HiddenFor(mode => mode.Skill_ID)
                            <div>
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(model => model.Code)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var _Code = new TextBoxBuilderInfo()
                                        {

                                        };
                                    }
                                    @Html.VnrTextBoxFor(model => model.Code)
                                </div>
                            </div>
                            <div>
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(model => model.SkillName)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var _SkillName = new TextBoxBuilderInfo()
                                        {

                                        };
                                    }
                                    @Html.VnrTextBoxFor(model => model.SkillName)
                                </div>
                            </div>
                            <div id="div2">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.Note)

                                </div>
                                <div class="FieldValue">
                                    @{
                                        var _Description = new TextAreaBuilderInfo()
                                        {

                                        };
                                    }
                                    @Html.VnrTextAreaFor(model => model.Note)
                                </div>
                            </div>
                           
                        </div>
                    </div>
                   </div>

                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
            @*<tr>
                    <td class="Box_Bottom_Left"></td>
                    <td class="Box_Bottom_Mid"></td>
                    <td class="Box_Bottom_Right"></td>
                </tr>*@
        </tbody>
    </table>
    @Html.HiddenFor(mode => mode.ID)
</div>

<div class="commandToolBarWidge">
    <div class="GridTitle">
        @Html.VnrLabel(ConstantDisplay.HRM_Cat_SkillTopic_Title.TranslateString())

    </div>
    <div style="float:right">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateSkillTopic", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
    </div>
    <div class="clear"></div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @{

      
        var valueFieldsSkillTopic = new[]
                        {
                            Cat_SkillTopicModel.FieldNames.SkillTopicName,
                            Cat_SkillTopicModel.FieldNames.SkillName,
                            Cat_SkillTopicModel.FieldNames.TopicName,
                            Cat_SkillTopicModel.FieldNames.Note,
                        };

        var sizeFieldsSkillTopic = new Dictionary<string, int>()
                        {


                            {Cat_SkillTopicModel.FieldNames.SkillTopicName,140},
                            {Cat_SkillTopicModel.FieldNames.SkillName, 140},
                            {Cat_SkillTopicModel.FieldNames.TopicName, 140},
                            {Cat_SkillTopicModel.FieldNames.Note, 140},

                        };

        var displayFieldsSkillTopic = new Dictionary<string, string>()
                        {
                            {Cat_SkillTopicModel.FieldNames.SkillTopicName,ConstantDisplay.HRM_Cat_SkillTopic_SkillTopicName},
                            {Cat_SkillTopicModel.FieldNames.SkillName, ConstantDisplay.HRM_Cat_SkillTopic_SkillID},
                            {Cat_SkillTopicModel.FieldNames.TopicName, ConstantDisplay.HRM_Cat_SkillTopic_TopicID},
                            {Cat_SkillTopicModel.FieldNames.Note, ConstantDisplay.HRM_Cat_SkillTopic_Note},
                        };

        var grid_SkillTopic = new GridBuilderInfo
        {

            Name = "grid_SkillTopic_info",
            ValueFields = valueFieldsSkillTopic,
            SizeFields = sizeFieldsSkillTopic,
            DisplayFields = displayFieldsSkillTopic,
            ReadActionUrl = _hrm_Hr_Service + "Cat_GetData/GetSkillTopicBySkillID",
            AutoBind = true,
            ShowDeleteButton = true,
            GridHeight = 480,
            ShowCheckAll = false,
            ReadData = "filterFieldInfo",
            PageSize=20
        };
    }
    @(Html.VnrGrid<Cat_SkillTopicModel>(grid_SkillTopic))
</div>

@*<div>
    @{
        if (Model != null)
        {
            <script>
                $(document).ready(function () {
                    var sum = $("#SumQuantity").data("kendoNumericTextBox");
                    sum.enable();
                });
                function onDataBoundGrid() {
                    debugger;
                    var grid = $("#grid_PlanDetail_info").data("kendoGrid");
                    var sumQuantity = grid._data[0].SumQuantity;
                    var sumQuantityNumberTextBox = $("#SumQuantity").data("kendoNumericTextBox");
                    sumQuantityNumberTextBox.value(sumQuantity);

                }
            </script>
        }
    }
</div>*@