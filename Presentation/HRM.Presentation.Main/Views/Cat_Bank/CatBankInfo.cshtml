@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@model HRM.Presentation.Category.Models.CatBankModel

@{
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
}
<script>
    SetFieldRequired();
    function checkDuplicationCode() {
        
        var _code = $("#BankCode").val();
        var _id = '@lineId';
        var param = {
            tableName: 'Cat_Bank',
            columnName: 'BankCode',
            keyword: _code,
            id: _id
        };

        var isduplicate = checkDuplicate('@_hrm_Sys_Service', 'Sys_GetData', 'CheckDuplicate', param, "BankCode");

        return isduplicate;
    }
    function onSaveNew() {
        // var dataCheck = data[''];

        //if (CheckValidate(data) && !checkDuplicationCode()) {
        onSaveAndContinue($('#form_cat_bank'), '@_hrm_Hre_Service', 'api/CatBank/', '@ConstantControlName.HRM_Category_Bank_Grid_Name', '@ConstantControlName.HRM_Category_Bank_PopUp_Name'); return false;

        //}
    }

    function onSaveClose() {
        // if (CheckValidate(data) && !checkDuplicationCode()) {
        onSaveAndClose($('#form_cat_bank'), '@_hrm_Hre_Service', 'api/CatBank/', '@ConstantControlName.HRM_Category_Bank_Grid_Name', '@ConstantControlName.HRM_Category_Bank_PopUp_Name'); return false;

        // }
    }
    function onSaveDataPopUp() {

        //  if (CheckValidate(data)) {
        //  if (!checkDuplicationCode()) {
        onlySave($('#form_cat_bank'), '@_hrm_Hre_Service', 'api/CatBank/', '@ConstantControlName.HRM_Category_Bank_Grid_Name'); return false;
        //  }
        // }
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_cat_bank" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.BankCode)
                    </div>
                    <div class="FieldValue">
                        @*@{
    var txtBankCode = new TextBoxBuilderInfo()
    {
        Width = 150,
    };
                        }*@
                        @Html.VnrTextBoxFor(mode => mode.BankCode, "width: 300px")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.BankName)
                    </div>
                    <div class="FieldValue">
                        @*@{
                                var txtBankName = new TextBoxBuilderInfo()
                                {
                                    Width = 300,
                                };
                            }*@
                        @Html.VnrTextBoxFor(mode => mode.BankName, "width: 300px")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.CompBankCode)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.CompBankCode, "width: 300px")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Notes)
                    </div>
                    <div class="FieldValue">

                        @Html.VnrTextAreaFor(mode => mode.Notes, "width:500px;height:100px;")
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150"></div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-Bank", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveNew", Name = "save-New-catBank", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-catBank", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}
