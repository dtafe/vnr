@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Payroll.Models
@using HRM.Presentation.UI.Controls.Kendo

@model HRM.Presentation.Payroll.Models.Kai_RankMarkModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
}

<script>
    //var Validator = CheckValidate();
    SetFieldRequired();

    function onSave() {
      //  if (CheckValidate(data)) {
        onSaveAndContinue($('#form_Kai_RankMarkInfo'), '@_hrm_Hr_Service', 'api/Kai_RankMark/', '@ConstantControlName.HRM_Kai_RankMark_Grid_Name', '@ConstantControlName.HRM_Kai_RankMark_PopUp_Name');
       // }
        return false;
    }

    function onSaveClose() {
      //  if (CheckValidate(data)) {
        onSaveAndClose($('#form_Kai_RankMarkInfo'), '@_hrm_Hr_Service', 'api/Kai_RankMark/', '@ConstantControlName.HRM_Kai_RankMark_Grid_Name', '@ConstantControlName.HRM_Kai_RankMark_PopUp_Name');
       // }
        return false;
    }
    function onSaveDataPopUp() {

        //    if (CheckValidate(data)) {
        //   if (!checkDuplicationCode()) {
        onlySave($('#form_Kai_RankMarkInfo'), '@_hrm_Hr_Service', 'api/Kai_RankMark/', '@ConstantControlName.HRM_Kai_RankMark_Grid_Name'); return false;
        //    }
        // }
    }

</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Kai_RankMarkInfo" }))
{
    @Html.HiddenFor(model => model.ID)
    <table style="width:100%">
        <tbody>
            <tr><td colspan="3" style=""></td></tr>
            <tr>
                <td valign="top">
                    <div style="overflow: hidden;">
                        <div style="display: block">
                            <div>
                                    <div style="float:left; width:100%">
                                        <div style="float:left; width:50%">
                                            <div id="div1" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(model => model.MarkIdea)
                                                </div>
                                                <div class="FieldValue">
                                                    @{
                                                        var _MarkIdea = new NumericTextBoxBuilderInfo<double>()
                                                        {
                                                            Name = "RankMarkInfo_MarkIdea",
                                                            StyleCss = "width:150px",
                                                            Format = ConstantFormat.HRM_Format_Money,
                                                        };
                                                    }
                                                    @Html.VnrNumericTextBoxFor(model => model.MarkIdea, _MarkIdea)
                                                </div>
                                 
                                            </div>
                                            <div id="div2" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(model => model.AmountIdea)
                                                </div>
                                                <div class="FieldValue">
                                                    @{
                                                     var _AmountIdea = new NumericTextBoxBuilderInfo<double>()
                                                        {
                                                            Name = "RankMarkInfo_AmountIdea",
                                                            StyleCss = "width:150px",
                                                            Format = ConstantFormat.HRM_Format_Money,
                                                        };
                                                    }
                                                    @Html.VnrNumericTextBoxFor(model => model.AmountIdea, _AmountIdea)
                                                </div>

                                            </div>
                                            <div id="div3" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(model => model.MarkPerform)
                                                </div>
                                                <div class="FieldValue">
                                                    @{
                                                    var _MarkPerform = new NumericTextBoxBuilderInfo<double>()
                                                   {
                                                       Name = "RankMarkInfo_MarkPerform",
                                                       StyleCss = "width:150px",
                                                       Format = ConstantFormat.HRM_Format_Money,
                                                   };
                                                    }
                                                    @Html.VnrNumericTextBoxFor(model => model.MarkPerform, _MarkPerform)
                                                </div>
                                            </div>
                                            <div id="div4" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(model => model.AmountPerform)
                                                </div>
                                                <div class="FieldValue">
                                                    @{
                                                     var _AmountPerform = new NumericTextBoxBuilderInfo<double>()
                                                   {
                                                       Name = "RankMarkInfo_AmountPerform",
                                                       StyleCss = "width:150px",
                                                       Format = ConstantFormat.HRM_Format_Money,
                                                   };
                                                    }
                                                    @Html.VnrNumericTextBoxFor(model => model.AmountPerform, _AmountPerform)
                                                </div>

                                            </div>
                                        </div>
                                        <div style="float:left; width: 50%">
                                            <div id="div5" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(model => model.Accumulate)
                                                </div>
                                                <div class="FieldValue">
                                                    @{
    var _Accumulate = new NumericTextBoxBuilderInfo<double>()
                                                  {
                                                      Name = "RankMarkInfo_Accumulate",
                                                      StyleCss = "width:150px",
                                                      Format = ConstantFormat.HRM_Format_Money,
                                                  };
                                                    }
                                                    @Html.VnrNumericTextBoxFor(model => model.Accumulate, _Accumulate)
                                                </div>

                                            </div>
                                            <div id="div6" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(model => model.TotalAmount)
                                                </div>
                                                <div class="FieldValue">
                                                    @{
                                                        var _TotalAmount = new NumericTextBoxBuilderInfo<double>()
                                                      {
                                                          Name = "RankMarkInfo_TotalAmount",
                                                          StyleCss = "width:150px",
                                                          Format = ConstantFormat.HRM_Format_Money,
                                                      };
                                                    }
                                                    @Html.VnrNumericTextBoxFor(model => model.TotalAmount, _TotalAmount)
                                                </div>

                                            </div>
                                            <div id="div7" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(model => model.MarkArea)
                                                </div>
                                                <div class="FieldValue">
                                                    @{
                                                        var _MarkArea = new TextBoxBuilderInfo()
                                                        {
                                                            Name = "RankMarkInfo_MarkArea",
                                                            CssStyle="width:300px"
                                                        };
                                                        if (Model != null)
                                                        {
                                                            _MarkArea.Value = Model.MarkArea != null ? Model.MarkArea.ToString() : string.Empty;
                                                        }
                                                    }
                                                    @Html.VnrTextBoxFor(model => model.MarkArea, _MarkArea)
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td style="padding-top:2px; padding-bottom:10px;">
                    <div class="LineFooterCommandEdit">
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div>
                        <div class="FieldTitle150">
                        </div>
                        <div class="FieldValue">
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-KaiRankMarkInfo", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-KaiRankMarkInfo", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-KaiRankMarkInfo", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        </div>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
}
<script>
    $(document).ready(function () {
        var _MarkPerform = $("#RankMarkInfo_MarkPerform").data("kendoNumericTextBox");
        var _Accumulate = $("#RankMarkInfo_Accumulate").data("kendoNumericTextBox");
        if (_MarkPerform._value == null) {
            _MarkPerform._value = 0;
        }
        var total = parseFloat(_MarkPerform._value)
        if (_Accumulate != undefined) {
            _Accumulate.value(total);
        }
    });
    function Cal1() {
        debugger;
        var _MarkPerform = $("#RankMarkInfo_MarkPerform").data("kendoNumericTextBox");
        var _Accumulate = $("#RankMarkInfo_Accumulate").data("kendoNumericTextBox");
        if (_MarkPerform._value == null) {
            _MarkPerform._value = 0;
        }
        var total = parseFloat(_MarkPerform._value)
        if (_Accumulate != undefined) {
            _Accumulate.value(total);
        }
    }
    function Cal2() {
        debugger;
        var _AmountIdea = $("#RankMarkInfo_AmountIdea").data("kendoNumericTextBox");
        var _AmountPerform = $("#RankMarkInfo_AmountPerform").data("kendoNumericTextBox");
        var _TotalAmount = $("#RankMarkInfo_TotalAmount").data("kendoNumericTextBox");
        if (_AmountIdea._value == null) {
            _AmountIdea._value = 0;
        }
        if (_AmountPerform._value == null) {
            _AmountPerform._value = 0;
        }
        var total = parseFloat(_AmountIdea._value) + parseFloat(_AmountPerform._value)
        if (_TotalAmount != undefined) {
            _TotalAmount.value(total);
        }
    }
    $("#RankMarkInfo_MarkPerform").change(function () {
        debugger;
        Cal1();
    });

    $("#RankMarkInfo_MarkPerform").keyup(function () {
        debugger;
        Cal1();
    });
    $("#RankMarkInfo_AmountIdea").change(function () {
        Cal2();
    });

    $("#RankMarkInfo_AmountIdea").keyup(function () {

        Cal2();
    });
    $("#RankMarkInfo_AmountPerform").change(function () {
        Cal2();
    });

    $("#RankMarkInfo_AmountPerform").keyup(function () {

        Cal2();
    });
</script>