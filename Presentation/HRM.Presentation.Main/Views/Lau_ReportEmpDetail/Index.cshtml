
@using HRM.Infrastructure.Utilities;
@using HRM.Presentation.Laundry.Models;
@using HRM.Infrastructure.Security;
@model HRM.Presentation.Laundry.Models.Lau_ReportSearchModel
@{
    ViewBag.Title = HRM.Infrastructure.Utilities.ConstantDisplay.HRM_Laundry_ReportEmpDetail.TranslateString();
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var controller = ViewContext.RouteData.Values["Controller"].ToString();
    var action = ViewContext.RouteData.Values["Action"].ToString();
    var screen = controller + "/" + action;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
}
<script>
    var checkedNodes = [];
     
    function filterFieldInfo(isExport) {

        var checkedNodes = [];
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes);
        var _ProfileIDs = $('#@Html.FieldIdFor(model => model.ProfileIDs)').val() != null ? $('#@Html.FieldIdFor(model => model.ProfileIDs)').val().join(',') : $('#@Html.FieldIdFor(model => model.ProfileIDs)').val();
        var _Lines = $('#@Html.FieldIdFor(model => model.LineID)').val() != null ? $('#@Html.FieldIdFor(model => model.LineID)').val().join(',') : $('#@Html.FieldIdFor(model => model.LineID)').val();
        var _Lockers = $('#@Html.FieldIdFor(model => model.LockerID)').val() != null ? $('#@Html.FieldIdFor(model => model.LockerID)').val().join(',') : $('#@Html.FieldIdFor(model => model.LockerID)').val();
        var _Markers = $('#@Html.FieldIdFor(model => model.MarkerID)').val() != null ? $('#@Html.FieldIdFor(model => model.MarkerID)').val().join(',') : $('#@Html.FieldIdFor(model => model.MarkerID)').val();
        var elementPara = {
            CodeEmp: $('#@Html.FieldIdFor(model => model.CodeEmp)').val(),
            ProfileIDs: _ProfileIDs,
            DateFrom: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateFrom").val()),
            DateTo: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateTo").val()),
            LineID: _Lines,
            LockerID: _Lockers,
            MarkerID: _Markers,
            isIncludeQuitEmp: $('#@Html.FieldIdFor(model => model.isIncludeQuitEmp)').val(),
            OrgStructureID: checkedNodes.join(","),
            selectedIds: selectedIds.join(",")
        };
        if (isExport == true) {
            elementPara["ExportId"] = $('#ddlScreenName').val();
        }
        return elementPara;
    }
    var data = SetCharacteFieldRequired();
    $(document).ready(function () {
        //Show Hide Panel
        ShowHidePanel();
        //Jump Anchor
        jumpAnchor("anchor");
        //
        $("#btnSearch").click(function () {

            if (CheckValidate(data)) {
                checkedNodes = [];
                var treeView = $("#treeviewOrg").data("kendoTreeView");
                checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes);
                var grid = $('#grid_ReportEmpDetail').data("kendoGrid");
                grid.dataSource.read();
            }
        });

        $('input[type=radio]').change(function () {
            if ($(this).is(':checked')) {
                $(this).val('true');
            } else {
                $(this).val('false');
            }
        });

    });

    //Xử Lý Grid
    GridCheckbox("grid_ReportEmpDetail");

    $("#btnExport").click(function () {
        var isAccess = checkPermission(PrivilegeType.Export, '@ConstantPermission.Lau_ReportEmpDetail');
        if (!isAccess) {
            return;
        }
        var urlGetData = '@_hrm_Hre_Service' + "Lau_GetData/GetReportEmpDetail/";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo(true);

        checkedNodes = [];
        ExportAll(urlGetData, dataParameter, urlDownload);
        selectedIds = [];
    });

    function checkedNodeIds(nodes, checkedNodes) {
        for (var i = 0; i < nodes.length; i++) {
            if (nodes[i].checked) {
                checkedNodes.push(nodes[i].id);
            }

            if (nodes[i].hasChildren) {
                checkedNodeIds(nodes[i].children.view(), checkedNodes);
            }
        }
    }
</script>




<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            <div class="contendSearchWidge">
                <form id="form-search">
                    <div style="width:550px; display:block; float:left">
                        <div id="div1">
                            <div class="FieldTitle">
                                @Html.VnrLabel(@ConstantDisplay.HRM_Common_Search_Duration.TranslateString())
                            </div>
                            <div class="FieldValue">
                                @{
                                    var DateStart = new DatePickerBuilderInfo()
                                    {
                                        Placeholder = ConstantDisplay.HRM_Attendance_DateFrom.TranslateString(),
                                        StyleCss = "width:100px"
                                    };
                                }
                                @Html.VnrDatePickerFor(model => model.DateFrom, DateStart)
                                @{
                                    var DateEnd = new DatePickerBuilderInfo()
                                    {
                                        Placeholder = ConstantDisplay.HRM_Attendance_DateTo.TranslateString(),
                                        StyleCss = "width:100px"
                                    };
                                }
                                @Html.VnrDatePickerFor(model => model.DateTo, DateEnd)
                            </div>
                        </div>
                        <div id="div2">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.ProfileIDs)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var multiSelectProfileID = new MultiSelectBuilderInfo()
                                    {
                                        DataTextField = "ProfileName",
                                        DataValueField = "ID",
                                        Url = _hrm_Hre_Service + "HrMultiSelect/GetMultiProfile",
                                        Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                                    };
                                }
                                @Html.VnrMultiSelectFor(mode => mode.ProfileIDs, multiSelectProfileID)
                            </div>
                        </div>

                        <div id="div4">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.CodeEmp)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextBoxFor(mode => mode.CodeEmp)
                            </div>
                        </div>
                       
                        <div id="div4">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.OrgStructureID)
                            </div>
                            <div class="FieldValue">
                                @Html.Partial("EditorTemplates/OrgStructureTreeViewDropdown")
                                
                            </div>
                        </div>
                    </div>
                    <div style="width:550px; display:block; float:left">
                        <div id="div7">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.MarkerID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var _marker = new ComboBoxBuilderInfo()
                                    {
                                        Name = "_Markers",
                                        DataTextField = "MarkerName",
                                        DataValueField = "ID",
                                        Url = _hrm_Hre_Service + "Lau_GetData/GetMultiMarker",
                                        Placeholder = ConstantDisplay.HRM_Laundry_SelectMarker.TranslateString(),
                                        Autobind = true,
                                        StyleCss = "width:250px;",
                                    };
                                }
                                @Html.VnrComboBoxFor(mode => mode.MarkerID, _marker)
                            </div>
                        </div>
                        <div id="div6">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.LockerID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var _locker = new ComboBoxBuilderInfo()
                                    {
                                        Name = "_Lockers",
                                        DataTextField = "LockerLMSName",
                                        DataValueField = "ID",
                                        Url = _hrm_Hre_Service + "Lau_GetData/GetMultiLocker",
                                        Placeholder = ConstantDisplay.HRM_Laundry_SelectLocker.TranslateString(),
                                        Autobind = true,
                                        StyleCss = "width:250px;",
                                    };
                                }
                                @Html.VnrComboBoxFor(mode => mode.LockerID, _locker)
                            </div>
                        </div>
                        <div id="div5">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.LineID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var _line = new ComboBoxBuilderInfo()
                                    {
                                        Name = "_Lines",
                                        DataTextField = "LineLMSName",
                                        DataValueField = "ID",
                                        Url = _hrm_Hre_Service + "Lau_GetData/GetMultiLine",
                                        Placeholder = ConstantDisplay.HRM_Laundry_SelectLine.TranslateString(),
                                        Autobind = true,
                                        StyleCss = "width:250px;",
                                    };
                                }
                                @Html.VnrComboBoxFor(mode => mode.LineID, _line)
                            </div>
                        </div>
                        
                        
                        <div id="div8">
                            <div class="FieldTitle">
                            </div>
                            <div class="FieldValue">
                                @Html.VnrRadioButtonFor(mode => mode.isIncludeQuitEmp)
                                @Html.VnrLabelFor(mode => mode.isIncludeQuitEmp)
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="commandToolBarWidge">
    <div style="float:left">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    </div>

    <div style="float:right">
        <script>
            function GetScreenName() {
                return {
                    screenName: '@screen'
                };
            }
        </script>
        <div class="FieldValue" style="margin-top: 0;">
            @{
                var screenName = new DropDownListBuilderInfo()
                {
                    Name = "ddlScreenName",
                    DataTextField = "ExportName",
                    DataValueField = "ID",
                    Url = @_hrm_Hre_Service + "Cat_GetData/GetScreenName",
                    Data = "GetScreenName",
                    StyleCss = "width:200px"
                };
            }
            @Html.VnrDropDownList(screenName)
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport", Content = ConstantDisplay.HRM_Common_Export_Button.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
        </div>
    </div>
    <div class="clear"></div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @using HRM.Presentation.UI.Controls.Kendo
    @{
        string[] valueFields = new string[]{
           Lau_ReportEmpDetailModel.FieldNames.ProfileName,
           Lau_ReportEmpDetailModel.FieldNames.CodeEmp,
           
           Lau_ReportEmpDetailModel.FieldNames.MarkerName,
           Lau_ReportEmpDetailModel.FieldNames.LockerName,
           Lau_ReportEmpDetailModel.FieldNames.LineName,
           
           Lau_ReportEmpDetailModel.FieldNames.TimeLog,
           Lau_ReportEmpDetailModel.FieldNames.Hour,
           
           Lau_ReportEmpDetailModel.FieldNames.BranchName,
           Lau_ReportEmpDetailModel.FieldNames.DepartmentName,
           Lau_ReportEmpDetailModel.FieldNames.TeamName,
           Lau_ReportEmpDetailModel.FieldNames.SectionName,
           
           Lau_ReportEmpDetailModel.FieldNames.BranchCode,
           Lau_ReportEmpDetailModel.FieldNames.DepartmentCode,
           Lau_ReportEmpDetailModel.FieldNames.TeamCode,
           Lau_ReportEmpDetailModel.FieldNames.SectionCode,
           
        };
        
        Dictionary<string, int> sizeFields = new Dictionary<string, int>(){
            {Lau_ReportEmpDetailModel.FieldNames.ProfileName,160},
            {Lau_ReportEmpDetailModel.FieldNames.CodeEmp,80},
            {Lau_ReportEmpDetailModel.FieldNames.MarkerName,160},
            {Lau_ReportEmpDetailModel.FieldNames.LockerName,100},
            {Lau_ReportEmpDetailModel.FieldNames.LineName,120},
            
            {Lau_ReportEmpDetailModel.FieldNames.TimeLog,100},
            {Lau_ReportEmpDetailModel.FieldNames.Hour,100},
            
            {Lau_ReportEmpDetailModel.FieldNames.BranchName,80},
            {Lau_ReportEmpDetailModel.FieldNames.DepartmentName,100},
            {Lau_ReportEmpDetailModel.FieldNames.TeamName,80},
            {Lau_ReportEmpDetailModel.FieldNames.SectionName,80},
            
            {Lau_ReportEmpDetailModel.FieldNames.BranchCode,100},
            {Lau_ReportEmpDetailModel.FieldNames.DepartmentCode,100},
            {Lau_ReportEmpDetailModel.FieldNames.TeamCode,100},
            {Lau_ReportEmpDetailModel.FieldNames.SectionCode,80},
            
        };

        Dictionary<string, string> displayFields = new Dictionary<string, string>()
        {
            {Lau_ReportEmpDetailModel.FieldNames.ProfileName,ConstantDisplay.HRM_Canteen_Report_ProfileName},
            {Lau_ReportEmpDetailModel.FieldNames.CodeEmp,ConstantDisplay.HRM_Canteen_Report_CodeEmp},
            {Lau_ReportEmpDetailModel.FieldNames.MarkerName,ConstantDisplay.HRM_Laundry_Marker_MarkerName},
            {Lau_ReportEmpDetailModel.FieldNames.LockerName,ConstantDisplay.HRM_Laundry_Locker_LockerName},
            {Lau_ReportEmpDetailModel.FieldNames.LineName,ConstantDisplay.HRM_Laundry_Line_LineName},
            
            {Lau_ReportEmpDetailModel.FieldNames.TimeLog,ConstantDisplay.HRM_Canteen_MealRecord_TimeLog},
            {Lau_ReportEmpDetailModel.FieldNames.Hour,ConstantDisplay.HRM_Canteen_MealRecord_TimeLog_Hours},
            
            {Lau_ReportEmpDetailModel.FieldNames.BranchName,ConstantDisplay.HRM_Attendance_BranchName1},
            {Lau_ReportEmpDetailModel.FieldNames.DepartmentName,ConstantDisplay.HRM_Attendance_DepartmentName1},
            {Lau_ReportEmpDetailModel.FieldNames.TeamName,ConstantDisplay.HRM_Attendance_TeamName1},
            {Lau_ReportEmpDetailModel.FieldNames.SectionName,ConstantDisplay.HRM_Attendance_SectionName1},
            
            {Lau_ReportEmpDetailModel.FieldNames.BranchCode,ConstantDisplay.HRM_Attendance_BranchCode},
            {Lau_ReportEmpDetailModel.FieldNames.DepartmentCode,ConstantDisplay.HRM_Attendance_DepartmentCode},
            {Lau_ReportEmpDetailModel.FieldNames.TeamCode,ConstantDisplay.HRM_Attendance_TeamCode},
            {Lau_ReportEmpDetailModel.FieldNames.SectionCode,ConstantDisplay.HRM_Attendance_SectionCode},
            
        };

        Dictionary<string, string> formatFields = new Dictionary<string, string>()
        {
            {Lau_ReportEmpDetailModel.FieldNames.TimeLog, ConstantFormat.HRM_Format_DayMonthYear},
            {Lau_ReportEmpDetailModel.FieldNames.Hour, ConstantFormat.HRM_Format_HourMinSecond_TT},
        };
        var grid = new GridBuilderInfo
        {
            ShowCheckbox = false,
            ShowEditIcon = false,
            Name = "grid_ReportEmpDetail",
            ValueFields = valueFields,
            SizeFields = sizeFields,
            DisplayFields = displayFields,
            FormatFields = formatFields,
            ReadActionUrl = _hrm_Hre_Service + "Lau_GetData/GetReportEmpDetail",
            ReadData = "filterFieldInfo",
            ServerOperation = false
        };
    }
    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<Lau_ReportEmpDetailModel>(grid))
</div>

