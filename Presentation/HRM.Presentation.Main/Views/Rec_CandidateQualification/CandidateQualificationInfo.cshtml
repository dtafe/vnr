@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using System.Collections;
@model HRM.Presentation.Recruitment.Models.Rec_CandidateQualificationModel

@{
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    //Guid CandidateID = Guid.Empty;
    //string aaa = ViewBag.QualifitcationcandidateID;
    //if (!string.IsNullOrEmpty(aaa))
    //{
    //    CandidateID = Common.ConvertToGuid(aaa.ToString());
    //}

}
<script>
    $(document).ready(function () {
        $("#SCandidateID").val(SelectID);
    });

    SetFieldRequiredByScreenName('Rec_CandidateQualification');
    function onSaveNew() {
        onSaveAndContinue($('#form_hre_qualification'), '@_hrm_Hre_Service', 'api/Rec_CandidateQualification/', 'grid_QualificationCandidate', 'windowQualifitcationCandidate'); return false;
    }

    function onSaveClose() {
        onSaveAndClose($('#form_hre_qualification'), '@_hrm_Hre_Service', 'api/Rec_CandidateQualification/', 'grid_QualificationCandidate', 'windowQualifitcationCandidate'); return false;
    }
    function onSaveDataPopUp() {
        onlySave($('#form_hre_qualification'), '@_hrm_Hre_Service', 'api/Rec_CandidateQualification/', 'grid_QualificationCandidate'); return false;
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_hre_qualification" }))
{
    @Html.HiddenFor(model => model.ID)
     @Html.HiddenFor(m => m.CandidateID, new { id = "SCandidateID" })
     
    <table>
        <tr>
            <td>
                <div id="div3">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.QualificationName)
                    </div>
                    <div class="FieldValue">
                        @{
                         var _CandidateQualificationName = new ComboBoxBuilderInfo()
                            {
                                Name = "CandidateQualification_QualificationName",
                                DataTextField = "QualificationName",
                                DataValueField = "QualificationName",
                                Url = _hrm_Hre_Service + "Cat_GetData/GetMultiQualification",
                                StyleCss = "width:300px;",
                                Value = Model == null ? string.Empty : Model.QualificationName,
                                //Autobind = true
                            };
                        }
                        @(Html.VnrComboBoxFor(mode => mode.QualificationName, _CandidateQualificationName))
                    </div>
                    <div style="clear: both;"></div>
                </div>

                <div id="div2">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.SpecialLevelID)
                    </div>
                    <div class="FieldValue">
                        @{
                            var dropdownSpecialLevelID = new DropDownListBuilderInfo()
                           {
                               Name = "CandidateQualification_SpecialLevelID",
                               DataTextField = "NameEntityName",
                               DataValueField = "ID",
                               Url = @_hrm_Hre_Service + "Cat_GetData/GetMultiQualificationLevel",
                               Value = @Html.DisplayFor(mode => mode.SpecialLevelID).ToString(),
                               StyleCss = "width:300px"
                           };
                        }
                        @(Html.VnrDropDownListFor(mode => mode.SpecialLevelID, dropdownSpecialLevelID))
                      @*  @Html.ValidationMessageFor(model => model.SpecialLevelID)*@
                    </div>
                    <br />
                </div>
                <div id="div3">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.FieldOfTraining)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(model => model.FieldOfTraining, "width: 300px")
                      @*  @Html.ValidationMessageFor(model => model.FieldOfTraining)*@
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div3">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.TrainingPlace)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(model => model.TrainingPlace, "width: 300px")
                       @* @Html.ValidationMessageFor(model => model.TrainingPlace)*@
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div3">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.TrainingAddress)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(model => model.TrainingAddress, "width:500px;height:100px;")
                        @Html.ValidationMessageFor(model => model.TrainingAddress, "width:500px;height:100px;")
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div3">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.DateStart)
                    </div>
                    <div class="FieldValue">
                        @{
                            var dateStart = new DatePickerBuilderInfo()
                            {
                                StyleCss = "width:120px;",
                                Name = "CandidateQualification_DateStart"
                            };
    
                        }
                        @Html.VnrDatePickerFor(model => model.DateStart, dateStart)
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div3">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.DateFinish)
                    </div>
                    <div class="FieldValue">
                        @{
    var dateFinish = new DatePickerBuilderInfo()
    {
        StyleCss = "width:120px;",
                                Name = "CandidateQualification_DateFinish"                    
                            };
                        }
                        @Html.VnrDatePickerFor(model => model.DateFinish, dateFinish)
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div3">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.GraduationDate)
                    </div>
                    <div class="FieldValue">
                        @{
    var graduationDate = new DatePickerBuilderInfo()
    {
        StyleCss = "width:120px;",
                                Name = "CandidateQualification_GraduationDate"
                            };
                        }
                        @Html.VnrDatePickerFor(model => model.GraduationDate, graduationDate)
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div3">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.CertificateName)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(model => model.CertificateName, "width: 300px")
                        @*@Html.ValidationMessageFor(model => model.CertificateName)*@
                    </div>
                    <div style="clear: both;"></div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150"></div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-CandidateQualification", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @*@Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveNew", Name = "save-New-Qualification", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })*@
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-CandidateQualification", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>

}