@using System.Collections
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@model HRM.Presentation.HrmSystem.Models.Sys_ConfigProcessApproveModel

@{
    ViewBag.Title = "Sys_ConfigProcessApprove";
    Layout = null;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var userApproveId = Model == null ? Guid.Empty : Model.ID;
    var formName = "form_sys_sysConfigPA";
    var gridName = "gridConfigPApprove";
    var windowName = "windowConfigPApprove";
    IList<SelectListItem> lstApproveType = Enum.GetValues(typeof(ApproveType))
    .Cast<ApproveType>()
    .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) }).OrderBy(p=>p.Text)
    .ToList();

    string orgStructureName = string.Empty;
    if (Model != null && !string.IsNullOrEmpty(Model.OrgStructureName))
    {
        orgStructureName = Model.OrgStructureName;
    }

}

<script>
    SetFieldRequired();
    var formName = '@formName';
    var gridName = '@gridName';
    var windowName = '@windowName';

  
    $(document).ready(function () {

    });

    function onSave() {
        //luu
        
            onlySave($('#' + formName), '@_hrm_Sys_Service', 'api/Sys_ConfigProcessApprove/', gridName, windowName); return false;
        
    }

    function onSaveDataPopUp() {
        //luu va tao moi

            onSaveAndContinue($('#' + formName), '@_hrm_Sys_Service', 'api/Sys_ConfigProcessApprove/', gridName, windowName); return false;
        

        @*onlySave($('#' + formName), '@_hrm_Sys_Service', 'api/Sys_UserApprove/', gridName, windowName); return false;*@
    }

    function onSaveClose() {
        //luu va dong
      
            onSaveAndClose($('#' + formName), '@_hrm_Sys_Service', 'api/Sys_ConfigProcessApprove/', gridName, windowName); return false;
        
    }

</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = formName }))
{
    @Html.HiddenFor(model => model.ID)

    <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150" style="width: 155px;">
                        
                        @Html.VnrLabelFor(mode => mode.ConfigProcessApproveName)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.ConfigProcessApproveName, "width:300px")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150" style="width: 155px;">
                        @Html.VnrLabelFor(mode => mode.DeptID)
                    </div>
                    <div class="FieldValue">
                        @{
    var org = new TreeViewDropdDownBuilderInfo()
    {
        Value = Model == null ? string.Empty : Model.OrgStructureName,
        SetFieldID = "DeptID",
        SetFieldName = "DeptID",
        IsShowCheckBox = false,
    };
                        }
                        @Html.Partial("EditorTemplates/OrgTreeViewDropDown", org)
                        @Html.HiddenFor(model => model.DeptID)
                        @Html.HiddenFor(model => model.OrgStructureName)
                    </div>
                </div>

                <div>
                    <div class="FieldTitle150" style="width: 155px;">
                        @Html.VnrLabelFor(mode => mode.Function)
                    </div>
                    <div class="FieldValue">
                        @{
    var dropdownStatus = new DropDownListBuilderInfo()
    {
        DataTextField = "Text",
        DataValueField = "Value",
        BindTo = lstApproveType,
        OptionLabel = @ConstantDisplay.HRM_System_UserApprove_SelectType.TranslateString(),
        StyleCss = "width:300px;"
    };
                        }
                        @(Html.VnrDropDownListFor(mode => mode.Function, dropdownStatus))
                    </div>

                </div>
              
                <div>
                    <div class="FieldTitle150" style="width: 155px;">
                        @Html.VnrLabelFor(mode => mode.CurrentStatus)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.CurrentStatus, "width:300px")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150" style="width: 155px;">
                        @Html.VnrLabelFor(mode => mode.NextStatusFormular)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.NextStatusFormular, "width:500px;height:100px;")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150" style="width: 155px;">
                        @Html.VnrLabelFor(mode => mode.Description)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Description, "width:500px;height:100px;")
                    </div>
                </div>

            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150" style="width: 155px;">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-SysConfigPA", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-continue-SysConfigPA", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-SysConfigPA", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })

                    </div>
                </div>
            </td>
        </tr>
    </table>
}

