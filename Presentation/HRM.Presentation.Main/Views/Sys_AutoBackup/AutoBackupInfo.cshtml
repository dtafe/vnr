@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@model HRM.Presentation.HrmSystem.Models.Sys_AutoBackupModel

@{
    ViewBag.Title = "SysGroup";
    Layout = null;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    IList<SelectListItem> List_ScheduleTask = Enum.GetValues(typeof(ScheduleTaskType))
      .Cast<ScheduleTaskType>()
      .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
      .ToList();
}
<script>
    SetFieldRequired();
    function onSave() {
        var _IsActivate = document.getElementById("IsActivate");
        if (_IsActivate != null && _IsActivate.checked) {
            $("#IsActivate").val("true");
        } else {
            $("#IsActivate").val("false");
        }
        onSaveAndContinue($('#form_system_autobackup'), '@_hrm_Sys_Service', 'api/Sys_AutoBackup/', 'grid_AutoBackup', 'windowAutoBackup'); return false;
       
        return false;
    }

    function onSaveClose() {
        var _IsActivate = document.getElementById("IsActivate");
        if (_IsActivate != null && _IsActivate.checked) {
            $("#IsActivate").val("true");
        } else {
            $("#IsActivate").val("false");
        }
        onSaveAndClose($('#form_system_autobackup'), '@_hrm_Sys_Service', 'api/Sys_AutoBackup/', 'grid_AutoBackup', 'windowAutoBackup'); return false;
       
        return false;
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_system_autobackup" }))
{
    @Html.HiddenFor(model => model.ID)
    
     <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _Code = new TextBoxBuilderInfo()
                            {
                                Width = 300,
                                Name = "AutoBackupInfo_Code"
                            };
                            if (Model != null)
                            {
                                _Code.Value = Model == null ? string.Empty : Model.Code;
                            }
                        }
                        @Html.VnrTextBoxFor(mode => mode.Code, _Code)

                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.AutoBackupName)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.AutoBackupName, "width: 300px")

                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.ProcedureName)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.ProcedureName, "width: 300px")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Email)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.Email, "width: 300px")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.IsActivate)
                    </div>
                    <div class="FieldValue">
                        @{
                        var _isActive = new CheckBoxBuilderInfo { 
                            
                        };
                        if (Model != null)
                        {
                            if (Model.IsActivate == true)
                            {
                                _isActive.Value = true;
                            }
                            else
                            {
                                _isActive.Value = false;
                            }
                        }
                        }
                        @Html.VnrCheckBoxFor(mode => mode.IsActivate, _isActive)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.TimeWaiting)
                    </div>
                    <div class="FieldValue">
                        @{
                            var numericTextBoxTimeWaiting = new NumericTextBoxBuilderInfo<int>()
                            {
                                StyleCss = "width:150px",
                            Name = "AutoBackupInfo_TimeWaiting",
                            Format = ConstantFormat.HRM_Format_Int
                        };
                        }
                        @Html.VnrNumericTextBoxFor(mode => mode.TimeWaiting, numericTextBoxTimeWaiting)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Type)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _Type = new DropDownListBuilderInfo()
                            {
                                StyleCss = "width:300px",
                                Name = "AutoBackupInfo_Type",
                                DataTextField = "Text",
                                DataValueField = "Value",
                                BindTo = List_ScheduleTask
                            };
                        }
                        @Html.VnrDropDownListFor(model => model.Type, _Type)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150" >
                        @Html.VnrLabelFor(mode => mode.DateStart)
                    </div>
                    <div class="FieldValue">
                        @{
                        var _DateStart = new DateTimePickerBuilderInfo()
                        {
                            StyleCss = "width:120px",
                            Name = "AutoBackupInfo_DateStart"
                        };
                        }
                        @Html.VnrDateTimePickerFor(model => model.DateStart, _DateStart)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.DateExpired)
                    </div>
                    <div class="FieldValue">
                        @{
                     var _DateExpired = new DateTimePickerBuilderInfo()
                     {
                         StyleCss = "width:120px",
                            Name = "AutoBackupInfo_DateExpired"
                        };
                        }
                        @Html.VnrDateTimePickerFor(model => model.DateExpired, _DateExpired)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.LastStart)
                    </div>
                    <div class="FieldValue">
                        @{
                  var _LastStart = new DateTimePickerBuilderInfo()
                  {
                      StyleCss = "width:120px",
                            Name = "AutoBackupInfo_LastStart"
                        };
                        }
                        @Html.VnrDateTimePickerFor(model => model.LastStart, _LastStart)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Description)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Description, "width:500px;height:100px;")
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>
                    <div class="FieldValue">

                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-SysGroup", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-SysGroup", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @*<input type="button" value="@ConstantAction.HRM_Common_SaveNew.TranslateString()" onclick="onSaveAndContinue($('#form_cat_sysgroup'), '@_hrm_Sys_Service', 'api/Sys_Group/', 'Group','windowSysGroup'); return false;" class="k-button" />
                <input type="button" value="@ConstantAction.HRM_Common_SaveClose.TranslateString()" onclick="onSaveAndClose($('#form_cat_sysgroup'), '@_hrm_Sys_Service', 'api/Sys_Group/', 'Group','windowSysGroup'); return false;" class="k-button" />*@
                    </div>
                </div>
            </td>
        </tr>
 </table>
}

