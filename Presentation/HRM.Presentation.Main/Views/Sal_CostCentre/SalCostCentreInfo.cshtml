@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Payroll.Models

@model SalCostCentreModel
@{
    //ViewBag.Title = "Sal Cost Centre";
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    
    var _hrm_Cat_Service = ConstantPathWeb.Hrm_Hre_Service;

}

<script>
    SetFieldRequired();


    function onSave() {
     //   if (CheckValidate(data)) {

      //      if (!checkDuplicationCode()) {
        //Cập nhật lại tiền tệ
        onSaveAndContinue($('#form_sal_cost_centre'), '@_hrm_Hr_Service', 'api/Sal_CostCentre/', 'grid_salCostcentre', 'windowSalCostCentre');
        //    }

      //  }
        return false;
    }
    function onSaveClose() {

     //   if (CheckValidate(data)) {
        //  if (!checkDuplicationCode()) {
        //Cập nhật lại tiền tệ
        onSaveAndClose($('#form_sal_cost_centre'), '@_hrm_Hr_Service', 'api/Sal_CostCentre/', 'grid_salCostcentre', 'windowSalCostCentre');
        //    }
      //  }
        return false;
    }
    function onSaveDataPopUp() {

    //    if (CheckValidate(data)) {
        //   if (!checkDuplicationCode()) {
        //Cập nhật lại tiền tệ
        var number = parseInt($("#SalCostcentreInfo_Rate").val().replace(".00", "").replace(/,/g, ""));
        if (!isNaN(number)) {
            $("#SalCostcentreInfo_Rate").val(number);
        }

        onlySave($('#form_sal_cost_centre'), '@_hrm_Hr_Service', 'api/Sal_CostCentre/', 'grid_salCostcentre'); return false;
        //    }
       // }
    }

</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_sal_cost_centre" }))
{
    @Html.HiddenFor(model => model.ID)


    <table>
        <tr>
            <td>
                <div id=" div1">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.ProfileName)
                    </div>
                    <div class="FieldValue">
                        @{
    System.Collections.IEnumerable valueProfile = new string[] { };
    if (Model != null)
    {
        valueProfile = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
    }
                        }
                        @{
    var Profile = new MultiSelectBuilderInfo()
    {
        Width = 300,
        Name = "SalCostcentreInfo_ProfileID",
         DataTextField = SalCostCentreModel.FieldNames.ProfileName,
         DataValueField = SalCostCentreModel.FieldNames.ID,
         Url = @_hrm_Hr_Service + "HrMultiSelect/GetMultiProfile",
         Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
         MaxSelectedItems = 1,
         Value = valueProfile
     };
                        }
                        @(Html.VnrMultiSelectFor(mode => mode.ProfileID, Profile))

                    </div>
                    <div style="clear: both;"></div>
                </div>               
                <div id="div3" class="DivContentTitleValue">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.CostCentreID)
                    </div>
                    <div class="FieldValue">
                        @{
    var CostCentre = new ComboBoxBuilderInfo()
 {
     Name = "SalCostcentreInfo_CostCentreID",
     DataTextField = "CostCentreName",
     DataValueField = "ID",
     Url = _hrm_Cat_Service + "Cat_GetData/GetMultiCostCentre",
     StyleCss = "width:300px;",
     Value = Model == null ? string.Empty : Model.CostCentreID.ToString(),
 };
                        }
                        @(Html.VnrComboBoxFor(mode => mode.CostCentreID, CostCentre).Text(Model == null ? string.Empty : Model.CostCentreName))
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.ElementType)
                    </div>
                    <div class="FieldValue">
                        @{
                        var dropdownElementType = new DropDownListBuilderInfo()
                        {
                            Name = "SalCostcentreInfo_ElementType",
                            DataTextField = "ElementName",
                            DataValueField = "ElementCode",
                            Url = @_hrm_Cat_Service + "Cat_GetData/GetElementType",
                            Value = @Html.DisplayFor(mode => mode.ElementType).ToString(),
                            Enable = true,
                            OptionLabel = @ConstantDisplay.HRM_Category_SelectElementType.TranslateString(),
                            StyleCss = "width:300px"
                        };
                        }
                        @(Html.VnrDropDownListFor(mode => mode.ElementType, dropdownElementType))
                    </div>
                </div>

                <div id="div9" class="DivContentTitleValue">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.DateStart)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _DateStart = new DatePickerBuilderInfo()
                            {
                                Name = "SalCostcentreInfo_DateStart",
                                 StyleCss="width:120px"
                            };
                        }
                        @Html.VnrDatePickerFor(model => model.DateStart, _DateStart)
                    </div>
                </div>
                <div id="div4" class="DivContentTitleValue">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Rate)
                    </div>

                    <div class="FieldValue">
                      
                        @{
                            var number = new NumericTextBoxBuilderInfo<double>()
                            {
                                 StyleCss="width:150px",
                                Name="SalCostcentreInfo_Rate",
                                Format = "p0"
                            };
                        }
                        @Html.VnrNumericTextBoxFor(m => m.Rate, number)
                  
                    </div>

                </div>
                @*<div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">
                        @{
    var _CostCentreCode = new TextBoxBuilderInfo()
    {
        Name = "SalCostCentre_Code",

    };
    if (Model != null)
    {
        _CostCentreCode.Value = Model.Code == null ? string.Empty : Model.Code;
    }
                        }
                        @Html.VnrTextBoxFor(mode => mode.Code, _CostCentreCode)

                    </div>
                </div>

                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.CostCentreName)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.CostCentreName)
                        
                    </div>
                </div>
                
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.GroupCost)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.GroupCost)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Description)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Description)
                    </div>
                </div>*@
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>

                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-SalCostCentre", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-SalCostCentre", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-SalCostCentre", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}
