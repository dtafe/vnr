@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Evaluation.Models
@model Eva_LevelModel

@{
    ViewBag.Title = ConstantDisplay.HRM_Category_OrgStructureType.TranslateString();
    Layout = null;
    var _Hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
}
<script>
    var data = SetCharacteFieldRequired();
    SetFieldRequired();
    function onSave() {
        onSaveAndContinue($('#form_Eva_Level'), '@_Hrm_Hre_Service', 'api/Eva_Level/', 'gridEvaLevel', 'windowEvaLevel');
        return false;
    }
    function onSaveClose() {
        onSaveAndClose($('#form_Eva_Level'), '@_Hrm_Hre_Service', 'api/Eva_Level/', 'gridEvaLevel', 'windowEvaLevel');
        return false;
    }
    function onSaveDataPopUp() {
        onlySave($('#form_Eva_Level'), '@_Hrm_Hre_Service', 'api/Eva_Level/', 'gridEvaLevel'); return false;
    }
</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Eva_Level" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div id="div5">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.LevelName)
                    </div>
                    <div class="FieldValue">
                        @(Html.VnrTextBoxFor(model => model.LevelName, "width: 300px"))
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div3">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.MinimumRating)
                    </div>
                    <div class="FieldValue">
                        @(Html.VnrTextBoxFor(model => model.MinimumRating, "width: 300px"))
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div5">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.MaximumRating)
                    </div>
                    <div class="FieldValue">
                        @(Html.VnrTextBoxFor(model => model.MaximumRating, "width: 300px"))
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div5">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.PerformanceTypeName)
                    </div>
                    <div class="FieldValue">
                        @{
    var _PerformanceTypeName = new ComboBoxBuilderInfo()
    {
        DataTextField = "PerformanceTypeName",
        DataValueField = "ID",
        Url = _Hrm_Hre_Service + "Cat_GetData/GetMultiPerformanceType",
        StyleCss = "width:300px;",
        Value = Model == null ? string.Empty : Model.PerformanceTypeName,
        Autobind = true
    };
                        }
                        @(Html.VnrComboBoxFor(mode => mode.PerformanceTypeID, _PerformanceTypeName))
                    </div>
                </div>
                <div id="div5">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Comment)
                    </div>
                    <div class="FieldValue">
                        @(Html.VnrTextAreaFor(model => model.Comment, "width:500px; Height:100px;"))
                    </div>
                    <div style="clear: both;"></div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-Evalevel", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-Evalevel", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-Evalevel", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>

                </div>
            </td>
        </tr>
    </table>
}

