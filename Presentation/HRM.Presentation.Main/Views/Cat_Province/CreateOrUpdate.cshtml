@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.Category.Models
@model CatProvinceModel

@{
    ViewBag.Title = ConstantDisplay.HRM_Category_Province.TranslateString();
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineID = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
}
<script>
    SetFieldRequired();

    function checkDuplicationCode() {
        
        var _code = $("#Province_Code").val();
        var _ID = '@lineID';
        var param = {
            tableName: 'Cat_Province',
            columnName: 'Code',
            keyword: _code,
            ID: _ID
        };

        var isduplicate = checkDuplicate('@_hrm_Sys_Service', 'Sys_GetData', 'CheckDuplicate', param, "Code");
        
        return isduplicate;
    }
    function onSave() {
       // if (CheckValidate(data)) {
         //     if (!checkDuplicationCode()) {
        onSaveAndContinue($('#form_Cat_Province'), '@_hrm_Hre_Service', 'api/CatProvince/', 'grid_Cat_Province', 'windowCatProvince');
          //   }

      //  }
        return false;
    }

    function onSaveClose() {
       // if (CheckValidate(data)) {
           //  if(!checkDuplicationCode()){
        onSaveAndClose($('#form_Cat_Province'), '@_hrm_Hre_Service', 'api/CatProvince/', 'grid_Cat_Province', 'windowCatProvince');
         //   }

       // }
        return false;
    }
    function onSaveDataPopUp() {
        
      //  if (CheckValidate(data)) {
        //    if (!checkDuplicationCode()) {
        onlySave($('#form_Cat_Province'), '@_hrm_Hre_Service', 'api/CatProvince/', 'grid_Cat_Province'); return false;
         //   }
      //  }
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Cat_Province" }))
{
    @Html.HiddenFor(model => model.ID)



     <table>
        <tr>
            <td>
                <div id="div4">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">
                        @{
    var _ProvinceCode = new TextBoxBuilderInfo()
    {
        Name = "CatProvince_Code",
        CssStyle = "width:300px"
    };
    if (Model != null)
    {
        _ProvinceCode.Value = Model.Code == null ? string.Empty : Model.Code;
    }
                        }
                        @(Html.VnrTextBoxFor(model => model.Code, _ProvinceCode))
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div5">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.ProvinceName)
                    </div>
                    <div class="FieldValue">
                        @(Html.VnrTextBoxFor(model => model.ProvinceName, "width:300px"))
                    </div>
                    <div style="clear: both;"></div>
                </div>

             

                <div id="div2">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.CountryID)
                    </div>
                    <div class="FieldValue">
                        @{
    var mtsCountry = new MultiSelectBuilderInfo()
     {
         DataTextField = CatProvinceModel.FieldNames.CountryName,
         DataValueField = CatProvinceModel.FieldNames.ID,
         Url = @_hrm_Hre_Service + "Cat_GetData/GetMultiCountry",
         Placeholder = ConstantDisplay.HRM_Category_SelectCountry.TranslateString(),
         MaxSelectedItems = 1,
         Width = 300,
         Autobind = true,
         Value = new string[] { @Html.DisplayFor(mode => mode.CountryID).ToString() },
         Name = "ProvinceInfo_CountryID"
     };
                        }
                        @(Html.VnrMultiSelectFor(mode => mode.CountryID, mtsCountry))
                    </div>
                    <div style="clear: both;"></div>
                </div>

                <div id="div3">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.RegionID)
                    </div>
                    <div class="FieldValue">
                        @{
    var mtsRegion = new MultiSelectBuilderInfo()
     {
         DataTextField = CatProvinceModel.FieldNames.RegionName,
         DataValueField = CatProvinceModel.FieldNames.ID,
         Url = @_hrm_Hre_Service + "Cat_GetData/GetMultiRegion",
         Placeholder = ConstantDisplay.HRM_Category_SelectRegion.TranslateString(),
         MaxSelectedItems = 1,
         Autobind = true,
         Width = 300,
         Value = new string[] { @Html.DisplayFor(mode => mode.RegionID).ToString() },
         Name = "ProvinceInfo_RegionID"
     };
                        }
                        @(Html.VnrMultiSelectFor(mode => mode.RegionID, mtsRegion))
                    </div>
                    <div style="clear: both;"></div>
                </div>

                <div id="div7">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Notes)
                    </div>
                    <div class="FieldValue">
                        @(Html.VnrTextAreaFor(model => model.Notes, "width:500px;height:100px;"))
                    </div>
                    <div style="clear: both;"></div>
                </div>


            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-province", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-catProvince", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-catProvince", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
 </table>
}


