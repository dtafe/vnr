@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@using System.Collections
@using HRM.Presentation.Evaluation.Models
@model Eva_KPIModel

@{
    Layout = null;
    //var _Hrm_Eva_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;

    var colorKPI = string.Empty;
    if (Model != null)
    {
        colorKPI = Model.KPIColor;
    }
    
}
<script>
   
    SetFieldRequiredByScreenName('Eva_KPI');
    function onSave1() {
        onSaveAndContinue($('#form_Eva_KPI'), '@_hrm_Hre_Service', 'api/Eva_KPI/', '@ConstantControlName.HRM_Evaluation_KPI_Grid_Name', '@ConstantControlName.HRM_Evaluation_KPI_PopUp_Name');
        return false;
    }
    function onSaveClose1() {
        onSaveAndClose($('#form_Eva_KPI'), '@_hrm_Hre_Service', 'api/Eva_KPI/', '@ConstantControlName.HRM_Evaluation_KPI_Grid_Name', '@ConstantControlName.HRM_Evaluation_KPI_PopUp_Name');
        return false;
    }
    function onSaveDataPopUp1() {
        onlySave($('#form_Eva_KPI'), '@_hrm_Hre_Service', 'api/Eva_KPI/', '@ConstantControlName.HRM_Evaluation_KPI_Grid_Name'); return false;
    }
    
    function pickerSelect(e) {
        debugger;
        //$("#ColorCode").val(e.value);
        $('#@Html.FieldIdFor(model => model.KPIColor)').val(e.value);
    }

</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Eva_KPI" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div style="display:block; padding-top:10px;">
                    <fieldset>
                        <legend>
                            @ConstantDisplay.HRM_Evaluation_Eva_KPI.TranslateString()
                        </legend>
                            <div style="float:left; width:50%">
                                <div id="dvKPIName">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.KPIName)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                        var txtKPIName = new TextBoxBuilderInfo()
                                        {
                                            Name = "KPIName",
                                            Width = 300,
                                            Value = Model != null ? Model.KPIName : null
                                        };
                                        }
                                        @Html.VnrTextBoxFor(model => model.KPIName, txtKPIName)
                                    </div>
                                    <div style="clear: both;"></div>
                                </div>
                                
                                <div>
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.Code)
                                    </div>
                                    <div class="FieldValue">                                       
                                        @Html.VnrTextBoxFor(mode => mode.Code, "width: 300px")
                                    </div>
                                    <div style="clear: both;"></div>
                                </div>

                                <div id="dvNameEntityID">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.NameEntityID)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                        IEnumerable valueNameEntityID = new string[] { };
                                        if (Model != null)
                                        {
                                            valueNameEntityID = new[] { new { valueNameEntity = Model.NameEntityObject, ID = Model.NameEntityID } };
                                        }
                                        }
                                        @{
                                        var _NameEntityID = new MultiSelectBuilderInfo()
                                        {
                                            Name = "KPI_NameEntityID",
                                            DataTextField = "NameEntityName",
                                            DataValueField = "ID",
                                            Url = @_hrm_Hre_Service + "Cat_GetData/GetMultiCategoryKPI",
                                            Placeholder = ConstantDisplay.HRM_Evaluation_KPI_SelectObject.TranslateString(),
                                            MaxSelectedItems = 1,
                                            Autobind = true,
                                            Width = 300,
                                            Value = valueNameEntityID
                                        };
                                        }
                                        @Html.VnrMultiSelectFor(model => model.NameEntityID, _NameEntityID)

                                    </div>
                                    <div style="clear: both;"></div>
                                </div>
                                
                                <div id="dvRate">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.Rate)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                        var Rate = new NumericTextBoxBuilderInfo<double>()
                                        {
                                            StyleCss = "width:150px",
                                         //   Format = ConstantFormat.HRM_Format_Money,
                                         Step=0.1,
                                            Value = Model != null && Model.Rate != null ? Model.Rate : 1
                                        };
                                        }
                                        @Html.VnrNumericTextBoxFor(mode => mode.Rate, Rate)
                                    </div>
                                    <div style="clear: both;"></div>
                                </div>
                                     
                                <div id="dvDescriptionKPIFix">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.DescriptionKPIFix)
                                    </div>
                                    <div class="FieldValue">
                                        @Html.VnrTextAreaFor(model => model.DescriptionKPIFix, "width:300px;height:100px;")
                                    </div>
                                    <div style="clear: both;"></div>
                                </div>

                                <div id="dvIsKPIFix">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.IsKPIFix)
                                    </div>
                                    <div class="FieldValue">
                                        @Html.VnrCheckBoxFor(model => model.IsKPIFix)
                                    </div>
                                    <div style="clear: both;"></div>
                                </div>
                                               
                                </div>
                            <div style="float:left; width:50%">
                                <div id="dvMinimumRating">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.MinimumRating)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                        var MinimumRating = new NumericTextBoxBuilderInfo<double>()

                                            {
                                                StyleCss = "width:150px",
                                                Format = ConstantFormat.HRM_Format_Money,
                                                Value = Model != null && Model.MinimumRating != null ? Model.MinimumRating : 1
                                            };
                                        }
                                        @Html.VnrNumericTextBoxFor(mode => mode.MinimumRating, MinimumRating)
                                    </div>
                                    <div style="clear: both;"></div>
                                </div>
                                                                                                
                                <div id="dvMaximumRating">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.MaximumRating)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                        var MaximumRating = new NumericTextBoxBuilderInfo<double>()

                                           {
                                               StyleCss = "width:150px",
                                               Format = ConstantFormat.HRM_Format_Money,
                                               Value = Model != null && Model.MaximumRating != null ? Model.MaximumRating : 1
                                           };
                                        }
                                        @Html.VnrNumericTextBoxFor(mode => mode.MaximumRating, MaximumRating)
                                    </div>
                                    <div style="clear: both;"></div>
                                </div>

                                <div id="dvScale">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.Scale)
                                    </div>
                                    <div class="FieldValue">

                                        @Html.VnrTextBoxFor(mode => mode.Scale, "width: 300px")
                                    </div>
                                    <div style="clear: both;"></div>
                                </div>
                                
                                <div>
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.MeasuredSource)
                                    </div>
                                    <div class="FieldValue">

                                        @Html.VnrTextBoxFor(mode => mode.MeasuredSource, "width: 300px")
                                    </div>
                                    <div style="clear: both;"></div>
                                </div>
                                
                                <div>
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.KPIColor)
                                    </div>
                                    <div class="FieldValue">
                                        @Html.VnrTextBoxFor(m => m.KPIColor, "width: 300px")
                                        @(Html.Kendo().ColorPicker()
                                              .Name("KPIColor1")
                                              .Value(!string.IsNullOrEmpty(colorKPI) ? colorKPI : string.Empty)
                                              .Events(events => events
                                              .Select("pickerSelect")))
                                    </div>
                                    <div style="clear: both;"></div>
                                </div>
                                
                                <div id="dvComment">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.Comment)
                                    </div>
                                    <div class="FieldValue">
                                        @Html.VnrTextAreaFor(model => model.Comment, "width:500px;height:100px;")
                                    </div>
                                    <div style="clear: both;"></div>
                                </div>
                                
                            </div>                                             
                                              
                        </fieldset>
                  
                    </div>

            </td>

        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>
                    <div class="FieldValue" style="float:right">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp1", Name = "save-EvalKPI", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave1", Name = "save-continue-EvalKPI", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose1", Name = "save-close-EvalKPI", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>

                </div>
            </td>
        </tr>
    </table>
}

<script>
    $(document).ready(function () {
        
        //var multiselect = $('#KPI_NameEntityID');
        var value1 = $('#Cat_NameEntityID').val();
        var multiSelect = $("#KPI_NameEntityID").data("kendoMultiSelect");
        //multiSelect.enable(false);
        //multiSelect.dataSource.filter({}); //clear applied filter before setting value
        multiSelect.value(value1);
       @*if (value1 != '@Guid.Empty')
        multiselect.value(value1);*@
        });
</script>