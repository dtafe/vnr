@using HRM.Presentation.UI.Controls.Kendo
@using System.Collections
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo


@model HRM.Presentation.Hr.Models.Hre_ContractModel
@{
    Layout = null;
    var _Hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;

    IList<SelectListItem> listEvaContract = Enum.GetValues(typeof(EnumDropDown.ContractEvaType))
       .Cast<EnumDropDown.ContractEvaType>()
       .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() })
       .ToList();

    IList<SelectListItem> listEvaResultContract = Enum.GetValues(typeof(EnumDropDown.EvaResultContract))
    .Cast<EnumDropDown.EvaResultContract>()
    .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() })
    .ToList();

    IList<SelectListItem> listResultContract = Enum.GetValues(typeof(EnumDropDown.ResultContract))
   .Cast<EnumDropDown.ResultContract>()
   .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() })
   .ToList();
   
}

<script>
    function onChanged(e) {
        
        if (e.sender._old == "E_ANNUAL_EVALUATION") {
            $("#DivSalaryRank").show();
        } else {
            $("#DivSalaryRank").hide();
        }
       
    }
</script>
<div class="VnRMain">
    <table style="width:50%">
        <tbody>
            <tr>
                <td class="Box_Top_Left"></td>
                <td valign="middle" class="Box_Top_Mid"></td>
                <td class="Box_Top_Right"></td>
            </tr>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                <td valign="top">
                    <div id="div2">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(model => model.ContractEvaType)
                        </div>
                        <div class="FieldValue">
                            @{
                                var ddlContractEvaType = new DropDownListBuilderInfo()
                                {
                                    DataTextField = "Text",
                                    DataValueField = "Value",
                                    BindTo = listEvaContract,
                                    EventChange = "onChanged"
                                };
                            }
                            @Html.VnrDropDownListFor(model => model.ContractEvaType, ddlContractEvaType)
                        </div>

                    </div>
                    <div  id="div33">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(model => model.DateOfContractEva)
                        </div>
                        <div class="FieldValue">
                            @{
                                var dateHire = new DatePickerBuilderInfo()
                                {
                                    Name = "Contract_DateOfContractEva"
                                };
                            }
                            @Html.VnrDatePickerFor(model => model.DateOfContractEva, dateHire)
                        </div>
                    </div>

                    <div id="div4">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(model => model.EvaluationResult)
                        </div>
                        <div class="FieldValue">
                            @{
                                var ddlEvaluationResult = new DropDownListBuilderInfo()
                                {
                                    DataTextField = "Text",
                                    DataValueField = "Value",
                                    BindTo = listEvaResultContract
                                };
                            }
                            @Html.VnrDropDownListFor(model => model.EvaluationResult, ddlEvaluationResult)
                        </div>
                    </div>
                    <div id="div5">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(model => model.ContractResult)
                        </div>
                        <div class="FieldValue">
                            @{
                                var ddlContractResult = new DropDownListBuilderInfo()
                                {
                                    DataTextField = "Text",
                                    DataValueField = "Value",
                                    BindTo = listResultContract
                                };
                            }
                            @Html.VnrDropDownListFor(model => model.ContractResult, ddlContractResult)
                        </div>
                    </div>
                    <div id="div6">
                        <div id="DivSalaryRank" hidden ="hidden">
                            <div id="div3" class="DivContentTitleValue">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.RankRateID)
                                </div>
                                <div class="FieldValue">
                                    <div>
                                        @{
                                            var RankRateName = new ComboBoxBuilderInfo()
                                             {
                                                 DataTextField = "SalaryRankName",
                                                 DataValueField = "ID",
                                                 Url = _Hrm_Hre_Service + "Cat_GetData/GetMultiSalaryRank",
                                                 StyleCss = "width:150px;",
                                                 Value = Model == null ? string.Empty : Model.RankRateID.ToString(),
                                             };
                                        }
                                        @(Html.VnrComboBoxFor(mode => mode.RankRateID, RankRateName).Text(Model == null ? string.Empty : Model.SalaryRankName))
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                    </div>
                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
            <tr>
                <td class="Box_Bottom_Left"></td>
                <td class="Box_Bottom_Mid"></td>
                <td class="Box_Bottom_Right"></td>
            </tr>
        </tbody>
    </table>
</div>
