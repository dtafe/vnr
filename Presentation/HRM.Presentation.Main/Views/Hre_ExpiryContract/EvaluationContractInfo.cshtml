@using HRM.Presentation.UI.Controls.Kendo
@using System.Collections
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo


@model HRM.Presentation.Hr.Models.Hre_ContractModel
@{
    Layout = null;
    var _Hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;

    IList<SelectListItem> listEvaContract = Enum.GetValues(typeof(EnumDropDown.ContractEvaType))
       .Cast<EnumDropDown.ContractEvaType>()
       .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() })
       .ToList();

    IList<SelectListItem> listEvaResultContract = Enum.GetValues(typeof(EnumDropDown.EvaResultContract))
    .Cast<EnumDropDown.EvaResultContract>()
    .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() })
    .ToList();

    IList<SelectListItem> listResultContract = Enum.GetValues(typeof(EnumDropDown.ResultContract))
   .Cast<EnumDropDown.ResultContract>()
   .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() })
   .ToList();

    IList<SelectListItem> listTypeOffPass = Enum.GetValues(typeof(EnumDropDown.TypeOfPass))
    .Cast<EnumDropDown.TypeOfPass>()
    .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() })
    .ToList();

}
<script>
    SetFieldRequiredByScreenName("Hre_Contract_EvaluationContractInfo");
    $(document).ready(function () {
        debugger;
        document.getElementById("ContractNo").readOnly = true;
        document.getElementById("ProfileName").readOnly = true;
        $("#ContractNo").val($("#ContractNoTempExpiryContract").val());
        $("#ProfileName").val($("#ProfileNameTempExpiryContract").val());
    });

    function onSave() {
        ShowHre_ProgressBar();
        $("#EvaluationContractInfo_DateOfContractEva").val(ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#EvaluationContractInfo_DateOfContractEva").val()));
        //$("#EvaluationContractInfo_DateEndNextContract").val(ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#EvaluationContractInfo_DateEndNextContract").val()));
        $("#selectedIds").val(selectedIds.join(','));
        $("#ProfileIDs").val(selectedIds.join(','));
        var entity = JSON.stringify(slpitQueryEntity($("#form_cat_EvaluationContract").serialize()));

        $.ajax({
            url: '@_Hrm_Hre_Service' + "Hre_GetData/EditContractByEvaContract",
            data: entity,
            type: 'POST',
            datatype: 'json',
            success: function (data) {
                CloseHre_ProgressBar();
                if (data == "Success") {
                    ShowNotificationProcessor(data);
                    var window = $("#windowEvaContract").data("kendoWindow");
                    window.refresh();
                    ReadGrid('@ConstantControlName.HRM_gridHre_ReportExpiryContract_Grid_Name');
                }

                checkedNodes = [];
            }
        });
        @*onSaveAndContinue($('#form_cat_EvaluationContract'), '@_Hrm_Hre_Service', 'api/Hre_Contract/', 'gridHre_ReportExpiryContract', 'windowEvaluationContractInfo');*@
        return false;
    }

    function onSaveClose() {
      $("#EvaluationContractInfo_DateOfContractEva").val(ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#EvaluationContractInfo_DateOfContractEva").val()));
        //$("#EvaluationContractInfo_DateEndNextContract").val(ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#EvaluationContractInfo_DateEndNextContract").val()));
        $("#selectedIds").val(selectedIds.join(','));
        $("#ProfileIDs").val(selectedIds.join(','));
        var entity = JSON.stringify(slpitQueryEntity($("#form_cat_EvaluationContract").serialize()));

        $.ajax({
            url: '@_Hrm_Hre_Service' + "Hre_GetData/EditContractByEvaContract",
            data: entity,
            type: 'POST',
            datatype: 'json',
            success: function (data) {
                debugger;
                hideAjaxLoading()
                if (data == "Success") {
                    ShowNotificationProcessor(data);
                    var window = $("#windowEvaContract").data("kendoWindow");
                    window.refresh().close();
                    ReadGrid('@ConstantControlName.HRM_gridHre_ReportExpiryContract_Grid_Name');
                }
                else if (data == "PLHD")
                {
                    ShowNotificationProcessor("Nhân Viên Chưa Có PLHĐ");
                    var window = $("#windowEvaContract").data("kendoWindow");
                    window.refresh().close();
                    ReadGrid('@ConstantControlName.HRM_gridHre_ReportExpiryContract_Grid_Name');
                }

                checkedNodes = [];
            }
        });
        @*onSaveAndClose($('#form_cat_EvaluationContract'), '@_Hrm_Hre_Service', 'api/Hre_Contract/', 'gridHre_ReportExpiryContract', 'windowEvaluationContractInfo');*@
        return false;
    }
    function onSaveDataPopUp() {
        debugger;
        $("#EvaluationContractInfo_DateOfContractEva").val(ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#EvaluationContractInfo_DateOfContractEva").val()));
        //$("#EvaluationContractInfo_DateEndNextContract").val(ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#EvaluationContractInfo_DateEndNextContract").val()));
        $("#selectedIds").val(selectedIds.join(','));
        $("#ProfileIDs").val(selectedIds.join(','));
        var entity = JSON.stringify(slpitQueryEntity($("#form_cat_EvaluationContract").serialize()));

        $.ajax({
            url: '@_Hrm_Hre_Service' + "Hre_GetData/EditContractByEvaContract",
            data: entity,
            type: 'POST',
            datatype: 'json',
            success: function (data) {
                debugger;
                hideAjaxLoading()
                if (data == "Success") {
                    ShowNotificationProcessor(data);

                    ReadGrid('@ConstantControlName.HRM_gridHre_ReportExpiryContract_Grid_Name');
                }

                checkedNodes = [];
            }
        });
        @*onlySave($('#form_cat_EvaluationContract'), '@_Hrm_Hre_Service', 'api/Hre_Contract/', 'gridHre_ReportExpiryContract');*@
        return false;
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_cat_EvaluationContract" }))
{
    @Html.HiddenFor(mode => mode.ProfileIDs)
    @Html.HiddenFor(mode => mode.selectedIds)
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div id="div2">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(model => model.ProfileName)
                    </div>
                    <div class="FieldValue"> 
                        @Html.VnrTextBoxFor(model => model.ProfileName, "width: 300px")
                    </div>

                </div>
                <div id="div2">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(model => model.ContractNo)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(model => model.ContractNo, "width: 300px")
                    </div>

                </div>
                
                <div id="div2">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(model => model.ContractEvaType)
                    </div>
                    <div class="FieldValue">
                        @{
    var ddlContractEvaType = new DropDownListBuilderInfo()
    {
        StyleCss = "width:300px;",
        Name = "EvaluationContractInfo_ContractEvaType",
        DataTextField = "Text",
        DataValueField = "Value",
        BindTo = listEvaContract,
       // EventChange = "onChanged"
    };
                        }
                        @Html.VnrDropDownListFor(model => model.ContractEvaType, ddlContractEvaType)
                    </div>

                </div>
                <div id="div33">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(model => model.DateOfContractEva)
                    </div>
                    <div class="FieldValue">
                        @{
    var _DateOfContractEva = new DatePickerBuilderInfo()
    {
        Name = "EvaluationContractInfo_DateOfContractEva",
        StyleCss = "width:120px;",
    };
                        }
                        @Html.VnrDatePickerFor(model => model.DateOfContractEva, _DateOfContractEva)
                    </div>
                </div>

                <div id="div4">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(model => model.EvaluationResult)
                    </div>
                    <div class="FieldValue">
                        @{
    var ddlEvaluationResult = new DropDownListBuilderInfo()
    {
        StyleCss = "width:300px;",
        Name = "EvaluationContractInfo_EvaluationResult",
        DataTextField = "Text",
        DataValueField = "Value",
        BindTo = listEvaResultContract
    };
                        }
                        @Html.VnrDropDownListFor(model => model.EvaluationResult, ddlEvaluationResult)
                    </div>
                </div>
                <div id="div5">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(model => model.ContractResult)
                    </div>
                    <div class="FieldValue">
                        @{
    var ddlContractResult = new DropDownListBuilderInfo()
    {
        StyleCss = "width:300px;",
        Name = "EvaluationContractInfo_ContractResult",
        DataTextField = "Text",
        DataValueField = "Value",
        BindTo = listResultContract
    };
                        }
                        @Html.VnrDropDownListFor(model => model.ContractResult, ddlContractResult)
                    </div>
                </div>
                <div id="div5">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(model => model.TypeOfPass)
                    </div>
                    <div class="FieldValue">
                        @{
    var ddlTypeOffPass = new DropDownListBuilderInfo()
    {
        StyleCss = "width:300px;",
        Name = "EvaluationContractInfo_TypeOfPass",
        DataTextField = "Text",
        DataValueField = "Value",
        BindTo = listTypeOffPass
    };
                        }
                        @Html.VnrDropDownListFor(model => model.TypeOfPass, ddlTypeOffPass)
                    </div>
                </div>
                <div id="div6">

                    <div id="div3" class="DivContentTitleValue">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.RankDetailForNextContract)
                        </div>
                        <div class="FieldValue">
                            <div>
                                @{
    var SalaryRankNameNextContract = new ComboBoxBuilderInfo()
     {
         // Name ="EvaContract_"
         Name = "EvaluationContractInfo_RankDetailForNextContract",
         DataTextField = "SalaryRankName",
         DataValueField = "ID",
         Url = _Hrm_Hre_Service + "Cat_GetData/GetMultiSalaryRank",
         StyleCss = "width:300px;",
         Value = Model == null ? string.Empty : Model.RankDetailForNextContract.ToString(),
         Autobind = true,
         // ServerFilter = true
     };
                                }
                                @(Html.VnrComboBoxFor(mode => mode.RankDetailForNextContract, SalaryRankNameNextContract).Text(Model == null ? string.Empty : Model.SalaryRankNameNextContract))
                            </div>
                        </div>
                    </div>

                    <div id="div3" class="DivContentTitleValue">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.NextContractTypeID)
                        </div>
                        <div class="FieldValue">
                            @{
    var NextContractTypeName = new ComboBoxBuilderInfo()
    {
        Name = "EvaluationContractInfo_NextContractTypeID",
        DataTextField = "ContractTypeName",
        DataValueField = "ID",
        Url = _Hrm_Hre_Service + "Cat_GetData/GetMultiContractType",
        StyleCss = "width:300px;",
        Autobind = true
        //   Value = Model == null ? string.Empty : Model.QualificationName,

    };
    if (Model != null)
    {
        NextContractTypeName.Value = Model == null ? string.Empty : Model.NextContractTypeID.ToString();
    }
                            }
                            @(Html.VnrComboBoxFor(mode => mode.NextContractTypeID, NextContractTypeName).Text(Model == null ? string.Empty : Model.NextContractTypeName))
                        </div>
                    </div>

                    @*<div id="div33">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(model => model.DateEndNextContract)
                        </div>
                        <div class="FieldValue">
                            @{
    var _DateEndNextContract = new DatePickerBuilderInfo()
    {
        Name = "EvaluationContractInfo_DateEndNextContract",
        StyleCss = "width:120px;"
    };
                            }
                            @Html.VnrDatePickerFor(model => model.DateEndNextContract, _DateEndNextContract)
                        </div>
                    </div>*@
                    <div id="div5">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(model => model.Remark)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextAreaFor(model => model.Remark, "width:500px;height:100px;")
                        </div>
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-EvaContract", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-EvaContract", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-EvaContract", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}
