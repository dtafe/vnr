@using HRM.Presentation.UI.Controls.Kendo
@using System.Collections
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo


@model HRM.Presentation.Hr.Models.Hre_ContractModel
@{
    Layout = null;
    var _Hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
}
<script>
    $(document).ready(function () {
        document.getElementById("ContractExtendInfo_ContractNo").readOnly = true;
        document.getElementById("ContractExtendInfo_ProfileName").readOnly = true;
        $("#ContractExtendInfo_ContractNo").val($("#ContractNoTempExpiryContract").val());
        $("#ContractExtendInfo_ProfileName").val($("#ProfileNameTempExpiryContract").val());
    });

       function onSaveClose() {
      $("#ContractExtendInfo_DateExtendFrom").val(ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#ContractExtendInfo_DateExtendFrom").val()));
        $("#ContractExtendInfo_DateExtendTo").val(ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#ContractExtendInfo_DateExtendTo").val()));
           $("#ContractExtendInfo_selectedIds").val(selectedIds.join(','));
        $("#ProfileIDs").val(selectedIds.join(','));
        var entity = JSON.stringify(slpitQueryEntity($("#form_ContractExtendInfo").serialize()));

        $.ajax({
            url: '@_Hrm_Hre_Service' + "Hre_GetData/ExtendContract",
            data: entity,
            type: 'POST',
            datatype: 'json',
            success: function (data) {
                debugger;
                hideAjaxLoading()
                if (data == "Success") {
                    ShowNotificationProcessor(data);
                    var window = $("#windowExtendContract").data("kendoWindow");
                    window.refresh().close();
                    ReadGrid('@ConstantControlName.HRM_gridHre_ReportExpiryContract_Grid_Name');
                }

                checkedNodes = [];
            }
        });
        return false;
    }
    function onSaveDataPopUp() {
        debugger;
        $("#ContractExtendInfo_DateExtendFrom").val(ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#ContractExtendInfo_DateExtendFrom").val()));
        $("#ContractExtendInfo_DateExtendTo").val(ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#ContractExtendInfo_DateExtendTo").val()));
        $("#ContractExtendInfo_selectedIds").val(selectedIds.join(','));
        $("#ProfileIDs").val(selectedIds.join(','));
        var entity = JSON.stringify(slpitQueryEntity($("#form_ContractExtendInfo").serialize()));

        $.ajax({
            url: '@_Hrm_Hre_Service' + "Hre_GetData/ExtendContract",
            data: entity,
            type: 'POST',
            datatype: 'json',
            success: function (data) {
                debugger;
                hideAjaxLoading()
                if (data == "Success") {
                    ShowNotificationProcessor(data);

                    ReadGrid('@ConstantControlName.HRM_gridHre_ReportExpiryContract_Grid_Name');
                }

                checkedNodes = [];
            }
        });
        return false;
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_ContractExtendInfo" }))
{
    @Html.HiddenFor(mode => mode.ProfileIDs)
    @Html.HiddenFor(mode => mode.selectedIds, new { @ID = "ContractExtendInfo_selectedIds" })
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div id="div2">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(model => model.ProfileName)
                    </div>
                    <div class="FieldValue">
                        @{
    var _ProfileName = new TextBoxBuilderInfo()
    {
        Name = "ContractExtendInfo_ProfileName",
        Width = 300,
    };
                        }
                        @Html.VnrTextBoxFor(model => model.ProfileName, _ProfileName)
                    </div>

                </div>
                <div id="div2">
                    <div class="FieldTitle150">
                        @{
    var _ContractNo = new TextBoxBuilderInfo()
    {
        Name = "ContractExtendInfo_ContractNo",
        Width = 300,
    };
                        }
                        @Html.VnrLabelFor(model => model.ContractNo)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(model => model.ContractNo, _ContractNo)
                    </div>
                </div>
                <div id="div33">
                    <div class="FieldTitle150">
                        @Html.VnrLabel(ConstantDisplay.HRM_Common_DateStart.TranslateString())
                    </div>
                    <div class="FieldValue">
                        @{
    var _DateExtendFrom = new DatePickerBuilderInfo()
    {
        Name = "ContractExtendInfo_DateExtendFrom",
        StyleCss = "width:100px;",
    };
                        }
                        @Html.VnrDatePickerFor(model => model.DateExtendFrom, _DateExtendFrom)
                    </div>
                </div>
                <div id="div33">
                    <div class="FieldTitle150">
                        @Html.VnrLabel(ConstantDisplay.HRM_Common_DateEnd.TranslateString())
                    </div>
                    <div class="FieldValue">
                        @{
    var _DateExtendTo = new DatePickerBuilderInfo()
    {
        Name = "ContractExtendInfo_DateExtendTo",
        StyleCss = "width:100px;",
    };
                        }
                        @Html.VnrDatePickerFor(model => model.DateExtendTo, _DateExtendTo)
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-ContractExtendInfo", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-ContractExtendInfot", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}
