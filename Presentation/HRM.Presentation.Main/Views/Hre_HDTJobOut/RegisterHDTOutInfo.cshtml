@using HRM.Presentation.UI.Controls.Kendo
@using System.Collections
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo


@model HRM.Presentation.Hr.Models.Hre_HDTJobModel
@{
    Layout = null;
    var _Hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    IList<SelectListItem> listType = Enum.GetValues(typeof(EnumDropDown.HDTJobType))
    .Cast<EnumDropDown.HDTJobType>()
    .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
    .ToList();

    SelectList data = new SelectList(listType, "Value", "Text");
}
<script>

    function onSaveClose() {
        $("#StatusOut").val("E_WAITING");
        $("#RegisterHDTOutInfo_ProfileID").val($("#ProfileIDTemp").val());
        onSaveAndClose($('#form_RegisterHDTOutInfo'), '@_Hrm_Hre_Service', 'api/Hre_HDTJob/', 'gridHre_HDTJobOut', 'windowRegisterHDTOutInfo'); return false;
        }

    function onSaveDataPopUp() {
        $("#StatusOut").val("E_WAITING");
        $("#RegisterHDTOutInfo_ProfileID").val($("#ProfileIDTemp").val());
        onlySave($('#form_RegisterHDTOutInfo'), '@_Hrm_Hre_Service', 'api/Hre_HDTJob/', 'gridHre_HDTJobOut'); return false;
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_RegisterHDTOutInfo" }))
{
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(mode => mode.ProfileID)
    @Html.HiddenFor(mode => mode.StatusOut)
    @Html.HiddenFor(mode => mode.Status)
    <table>
        <tr>
            <td>
                <div style="display: block; float: left; width: 500px">
                    <div id="div2">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(model => model.ProfileName)
                        </div>
                        <div class="FieldValue">
                            @{
    IEnumerable valueProfile = new string[] { };
    if (Model != null)
    {
        valueProfile = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
    }
                            }
                            @{
    var Profile = new MultiSelectBuilderInfo()
    {
        Name = "RegisterHDTOutInfo_ProfileID",
        DataTextField = "ProfileName",
        DataValueField = "ID",
        Url = @_Hrm_Hre_Service + "Hre_GetData/GetMultiProfile",
        Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
        MaxSelectedItems = 1,
        Value = valueProfile,
    };
                            }
                            @(Html.VnrMultiSelectFor(mode => mode.ProfileID, Profile))
                        </div>
                    </div>
                    <div id="div2">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(model => model.DateFrom)
                        </div>
                        <div class="FieldValue">
                            @{
    var _DateFrom = new DatePickerBuilderInfo()
    {
        Name = "RegisterHDTOutInfo_DateFrom",
        StyleCss = "width:100px;",
    };
                            }
                            @Html.VnrDatePickerFor(model => model.DateFrom, _DateFrom)
                        </div>
                    </div>
                    <div id="div33">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.DateTo)
                        </div>
                        <div class="FieldValue">
                            @{
    var _DateTo = new DatePickerBuilderInfo()
    {
        Name = "RegisterHDTOutInfo_DateTo",
        StyleCss = "width:100px;",
    };
                            }
                            @Html.VnrDatePickerFor(model => model.DateTo, _DateTo)
                        </div>
                    </div>
                </div>
                <div style="display: block; float: left; width: 450px">
                    <div id="div8">
                        <div class="FieldTitle150">
                            @Html.VnrLabel(@ConstantDisplay.HRM_Category_HDTJobType_HDTJobTypeName.TranslateString())
                        </div>
                        <div class="FieldValue">
                            @{
    IEnumerable HDTJobType = new string[] { };
    if (Model != null)
    {
        HDTJobType = new[] { new { HDTJobTypeName = Model.HDTJobTypeName, ID = Model.HDTJobTypeID } };
    }
                            }
                            @{
    var _HDTJobType = new MultiSelectBuilderInfo()
    {
        Name = "RegisterHDTOutInfo_HDTJobTypeID",
        DataTextField = "HDTJobTypeName",
        DataValueField = "ID",
        Url = @_Hrm_Hre_Service + "Cat_GetData/GetMultiHDTJob",
        MaxSelectedItems = 1,
        Value = HDTJobType,
        Width = 225,
        FilterType = FilterType.Contains,
    };
                            }
                            @(Html.VnrMultiSelectFor(mode => mode.HDTJobTypeID, _HDTJobType))
                        </div>
                    </div>
                    <div id="div1">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.HDTJobGroupID)
                        </div>
                        <div class="FieldValue">

                            @{
    IEnumerable valueHDTJobGroup = new string[] { };
    if (Model != null)
    {
        valueHDTJobGroup = new[] { new { HDTJobGroupName = Model.HDTJobGroupName, ID = Model.HDTJobGroupID } };
    }
                            }
                            @{
    var _HDTJobGroup = new MultiSelectBuilderInfo()
    {
        Name = "RegisterHDTOutInfo_HDTJobGroupID",
        DataTextField = "HDTJobGroupName",
        DataValueField = "ID",
        Url = @_Hrm_Hre_Service + "Cat_GetData/GetMultiHDTJobGroup",
        MaxSelectedItems = 1,
        Value = valueHDTJobGroup,
        Width = 225,
    };
                            }
                            @(Html.VnrMultiSelectFor(mode => mode.HDTJobGroupID, _HDTJobGroup))

                        </div>

                    </div>
                    <div id="div8">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.Type)
                        </div>

                        <div class="FieldValue">
                            @{
    var _Type = new ComboBoxBuilderInfo()
    {
        Name = "RegisterHDTOutInfo_Type",
        DataTextField = "Text",
        DataValueField = "Value",
        BindTo = listType,
        Value = (Model == null) ? string.Empty : Model.Type == null ? string.Empty : Model.Type,
        StyleCss = "width:100px;background-color:WhiteSmoke"
    };
                            }
                            @Html.VnrComboBoxFor(model => model.Type, _Type).Text((Model == null) ? string.Empty : Model.Type == null ? string.Empty : Model.Type.TranslateString())
                        </div>
                    </div>
                </div>
                <div id="div2">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Description)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(model => model.Description)
                    </div>
                </div>
                <div id="div3">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Note)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(model => model.Note)
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-RegisterHDTOutInfo", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-RegisterHDTOutInfot", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}

<script>
    var _ProfileID = $('#RegisterHDTOutInfo_ProfileID').data("kendoMultiSelect");
    var _HDTJobTypeID = $('#RegisterHDTOutInfo_HDTJobTypeID').data("kendoMultiSelect");
    var _HDTJobGroupID = $('#RegisterHDTOutInfo_HDTJobGroupID').data("kendoMultiSelect");
    var _Type = $('#RegisterHDTOutInfo_Type').data("kendoComboBox");
    var _DateFrom = $('#RegisterHDTOutInfo_DateFrom').data("kendoDatePicker");

    _ProfileID.readonly();
    _HDTJobTypeID.readonly();
    _HDTJobGroupID.readonly();
    _Type.readonly();
    _DateFrom.readonly();
</script>