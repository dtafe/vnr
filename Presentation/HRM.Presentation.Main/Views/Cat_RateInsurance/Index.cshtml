@using HRM.Infrastructure.Utilities;
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Infrastructure.Security;
@using System.Collections
@using HRM.Presentation.Category.Models

@model Cat_RateInsuranceModel

@{
    //var hrm_Cat_Web = ConstantPathWeb.Hrm_Cat_Web;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    Layout = null;
}
@{
    var windowRateInsurance = new WindowBuilderInfo
    {
        Name = ConstantControlName.HRM_Category_RateInsurance_PopUp_Name,
        Visible = false,
        Width = 700,
        LoadContentFrom = @_hrm_Main_Web + "Cat_RateInsurance/CatRateInsuranceInfo/",
    };
}
@(Html.VnrWindow(windowRateInsurance))

<script>
    //Biến để lưu id của các dòng đã check chọn

    var gridNamewindowRateInsurance = '@ConstantControlName.HRM_Category_RateInsurance_Grid_Name';
    var popUpNamewindowRateInsurance = '@ConstantControlName.HRM_Category_RateInsurance_PopUp_Name';
    var titleEditPopUpwindowRateInsurance = '@Html.Raw(ConstantDisplay.HRM_Category_RateInsurance_PopUp_Edit_Title.TranslateString())';
    var titleCreatePopUpwindowRateInsurance = '@Html.Raw(ConstantDisplay.HRM_Category_RateInsurance_PopUp_Create_Title.TranslateString())';

    $(document).ready(function () {
        //Ẩn hiện div chứa các input tìm kiếm
        ShowHidePanel();
        //Xử lý sự kiện click button tìm kiếm
        $("#btnSearchRateInsurance").click(function () {

            ReadGrid(gridNamewindowRateInsurance);
        });

        EditGridPopUp(gridNamewindowRateInsurance, popUpNamewindowRateInsurance, '@_hrm_Main_Web' + "Cat_RateInsurance/CatRateInsuranceInfo/", '@ConstantPermission.Cat_RateInsurance', titleEditPopUpwindowRateInsurance);
    });
    //Lấy dữ liệu khi tìm kiếm
    function filterFieldInfo(isExport) {
        return {
            IsExport: isExport,
            ValueFields: $('#valueFieldsGrid').val()
        };
    }
    //Xử lý khi check chọn các dòng trên lưới thì lưu id của các dòng đó cào biến selectedIds ở trên
    GridCheckbox(gridNamewindowRateInsurance);
    //Tạo mới Sản phẩm
    $("#btnCreateRateInsurance").click(function () {
        var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Cat_RateInsurance');
        if (!isAccess) {
            return;
        }
        PopUpCreate(popUpNamewindowRateInsurance, titleCreatePopUpwindowRateInsurance);
    });
    //Chỉnh sửa Sản phẩm

    //Xóa Sản phẩm
    $('#btnDeleteRateInsurance').click(function (e) {
        var isAccess = checkPermission(PrivilegeType.Delete, '@ConstantPermission.Cat_RateInsurance');
        if (!isAccess) {
            return;
        }

        if (selectedIds == "") {
            DeleteFail();
            return;
        }
        DeleteSelected(gridNamewindowRateInsurance, '@_hrm_Main_Web' + "Cat_RateInsurance/RemoveSelected/", selectedIds.join(","));
    });
    $("#btnExportRateInsuranceSelected").click(function () {
        @*var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Hre_ProfileQuit');
        if (!isAccess) {
            return;
        }*@
        if (selectedIds == "") {
            ExportSelectedFail();
            return;
        }
        var urlGetData = '@_hrm_Hr_Service' + "Cat_GetData/ExportRateInsuranceSelected/";
        var urlDownload = '@_hrm_Main_Web';
        var listIds = selectedIds.join(",");
        var listFields = $('#valueFieldsGrid').val();
        ExportSelected(urlGetData, listIds, listFields, urlDownload, '@ConstantPermission.Cat_RateInsurance');
    });

    $("#btnExportRateInsuranceAll").click(function () {
        @*var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Hre_ProfileQuit');
        if (!isAccess) {
            return;
        }*@
        var grid = $('#@ConstantControlName.HRM_Category_RateInsurance_Grid_Name').data("kendoGrid");
        if (grid.dataSource.total() == 0) {
            ExportAllFail();
            return;
        }
        var urlGetData = '@_hrm_Hr_Service' + "Cat_GetData/ExportAllRateInsuranceList/";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo(true);
        ExportAll(urlGetData, dataParameter, urlDownload, '@ConstantPermission.Cat_RateInsurance');
    });

</script>
<div style="display:block; padding-top:10px;">
    <fieldset>
        <legend>
            @ConstantDisplay.HRM_Category_RateInsurance.TranslateString()
        </legend>

        <div class="commandToolBarWidge" id="anchor">
            <div style="float:left">
                @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateRateInsurance", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
                @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearchRateInsurance", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
            </div>
            <div style="float:right">
                <div class="btn-group">
                    <button type="button" class="k-button btn-default dropdown-toggle" data-toggle="dropdown">
                        <img src="@ConstantPath.IconExportPath" width="15" height="15" />
                        @ConstantDisplay.HRM_Common_ExportDropdown_Title.TranslateString()
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu pull-right" role="menu">
                        <li>@Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExportRateInsuranceSelected", Content = ConstantAction.HRM_Common_ExportSelected.TranslateString(), ImageUrl = ConstantPath.IconExportPath, CssStyle = "border:0" })</li>
                        <li>@Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExportRateInsuranceAll", Content = ConstantAction.HRM_Common_ExportAll.TranslateString(), ImageUrl = ConstantPath.IconExportPath, CssStyle = "border:0" })</li>
                    </ul>
                </div>
                @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnChangeRateInsurance", Content = ConstantDisplay.HRM_ChangeColumn.TranslateString(), ImageUrl = ConstantPath.Hrm_ChangeColumnIcon })
                @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDeleteRateInsurance", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
            </div>

            <div class="clear"></div>
        </div>
        <div>
            <!--Khai báo các thông tin cho Grid-->
            @{
                var columnMode = string.Empty;
                var defaultColumnMode = string.Empty;
                var userId = Session[SessionObjects.UserId];
                //Lấy tên lưới cộng thêm tên của control và action để tránh trùng nhau
                var gridControlName = ConstantControlName.HRM_Category_RateInsurance_Grid_Name + "__Cat_RateInsurance_Index";
                HRM.Presentation.Main.Controllers.Sys_ColumnModeController control = new HRM.Presentation.Main.Controllers.Sys_ColumnModeController();
                //Get thông tin cấu hình trong database
                GridBuilderModel gridInfo = control.GetGridBuilderInfo(userId + "," + gridControlName);

                var formatFields = new Dictionary<string, string>()
                    {
                          {Cat_RateInsuranceModel.FieldNames.ApplyFrom,ConstantFormat.HRM_Format_Grid_MonthYear},
                          {Cat_RateInsuranceModel.FieldNames.HealthInsCompRate, ConstantFormat.HRM_Format_Grid_Percent},
                          {Cat_RateInsuranceModel.FieldNames.HealthInsEmpRate, ConstantFormat.HRM_Format_Grid_Percent},
                          {Cat_RateInsuranceModel.FieldNames.SocialInsCompRate,ConstantFormat.HRM_Format_Grid_Percent},
                          {Cat_RateInsuranceModel.FieldNames.SocialInsEmpRate,ConstantFormat.HRM_Format_Grid_Percent},
                          {Cat_RateInsuranceModel.FieldNames.UnemployInsCompRate, ConstantFormat.HRM_Format_Grid_Percent},
                          {Cat_RateInsuranceModel.FieldNames.UnemployInsEmpRate, ConstantFormat.HRM_Format_Grid_Percent},
                    };
                     

                var grid = new GridBuilderInfo
                {
                    Name = ConstantControlName.HRM_Category_RateInsurance_Grid_Name,
                    ReadActionUrl = @_hrm_Hr_Service + "Cat_GetData/GetRateInsuranceList/",
                    ReadData = "filterFieldInfo",
                    FormatFields =formatFields,
                    ShowCommand = false,
                };

                if (gridInfo != null && gridInfo.ValueFields != null && gridInfo.ValueFields.Any())
                {
                    grid.ValueFields = gridInfo.ValueFields;
                    grid.SizeFields = gridInfo.SizeFields;
                    grid.Filterable = gridInfo.FilterFields;
                    grid.DisplayFields = gridInfo.DisplayFields;
                    grid.LockedFields = gridInfo.LockedFields;
                    grid.GroupFields = gridInfo.GroupFields;
                    if (gridInfo.PageSize > 0)
                    {
                        grid.PageSize = gridInfo.PageSize;
                    }
                    columnMode = gridInfo.StringXml;
                }
                else
                {
                    grid.ValueFields = new[]
                    {

                        Cat_RateInsuranceModel.FieldNames.SocialInsCompRate,
                        Cat_RateInsuranceModel.FieldNames.SocialInsEmpRate,
                        Cat_RateInsuranceModel.FieldNames.HealthInsCompRate,
                        Cat_RateInsuranceModel.FieldNames.HealthInsEmpRate,
                        Cat_RateInsuranceModel.FieldNames.UnemployInsCompRate,
                        Cat_RateInsuranceModel.FieldNames.UnemployInsEmpRate,
                        Cat_RateInsuranceModel.FieldNames.ApplyFrom,
                    };

                    grid.SizeFields = new Dictionary<string, int>()
                    {

                        {Cat_RateInsuranceModel.FieldNames.SocialInsCompRate,150},
                        {Cat_RateInsuranceModel.FieldNames.SocialInsEmpRate,150},
                        {Cat_RateInsuranceModel.FieldNames.HealthInsCompRate,150},
                        {Cat_RateInsuranceModel.FieldNames.HealthInsEmpRate,150},
                        {Cat_RateInsuranceModel.FieldNames.UnemployInsCompRate,150},
                        {Cat_RateInsuranceModel.FieldNames.UnemployInsEmpRate,150},
                        {Cat_RateInsuranceModel.FieldNames.ApplyFrom,150},
                    };

                    grid.Filterable = new Dictionary<string, bool>()
                    {
                       {Cat_RateInsuranceModel.FieldNames.SocialInsCompRate,true},
                        {Cat_RateInsuranceModel.FieldNames.SocialInsEmpRate,true},
                        {Cat_RateInsuranceModel.FieldNames.HealthInsCompRate,true},
                        {Cat_RateInsuranceModel.FieldNames.HealthInsEmpRate,true},
                        {Cat_RateInsuranceModel.FieldNames.UnemployInsCompRate,true},
                        {Cat_RateInsuranceModel.FieldNames.UnemployInsEmpRate,true},
                        {Cat_RateInsuranceModel.FieldNames.ApplyFrom,true},
                    };

                    grid.DisplayFields = new Dictionary<string, string>()
                    {
                        {Cat_RateInsuranceModel.FieldNames.SocialInsCompRate,ConstantDisplay.HRM_Category_RateInsurance_SocialInsCompRate},
                        {Cat_RateInsuranceModel.FieldNames.SocialInsEmpRate,ConstantDisplay.HRM_Category_RateInsurance_SocialInsEmpRate},
                        {Cat_RateInsuranceModel.FieldNames.HealthInsCompRate,ConstantDisplay.HRM_Category_RateInsurance_HealthInsCompRate},
                        {Cat_RateInsuranceModel.FieldNames.HealthInsEmpRate,ConstantDisplay.HRM_Category_RateInsurance_HealthInsEmpRate},
                        {Cat_RateInsuranceModel.FieldNames.UnemployInsCompRate,ConstantDisplay.HRM_Category_RateInsurance_UnemployInsCompRate},
                        {Cat_RateInsuranceModel.FieldNames.UnemployInsEmpRate,ConstantDisplay.HRM_Category_RateInsurance_UnemployInsEmpRate},
                        {Cat_RateInsuranceModel.FieldNames.ApplyFrom,ConstantDisplay.HRM_Category_RateInsurance_ApplyFrom},
                    };
                    defaultColumnMode = control.SetDefaultGridBuilderInfo(grid);
                }
        //var grid = new GridBuilderInfo
        //{
        //    Name = ConstantControlName.HRM_Category_RateInsurance_Grid_Name,
        //    ValueFields = valueFields,
        //    SizeFields = sizeFields,
        //    DisplayFields = displayFields,
        //    Filterable = filterable,
        //    ShowCommand = false,
        //    ReadActionUrl = @_hrm_Hr_Service + "Cat_GetData/GetRateInsuranceList/",
        //    ReadData = "filterFieldInfo",
        //};
            }

            @(Html.VnrGrid<Cat_RateInsuranceModel>(grid))
            <script>
                ClickButtonChangeColum("btnChangeRateInsurance", "Cat_RateInsuranceModel");
                $(document).ready(function () {
                    $("#" + '@ConstantControlName.HRM_ChangeColum_Grid_Name').val('@gridControlName');
                    $("#" + '@ConstantControlName.HRM_ChangeColum_ColumMode_Name').val('@Html.Raw(columnMode)');
                    $("#" + '@ConstantControlName.HRM_ChangeColum_Default_ColumMode_Name').val('');
                    $("#" + '@ConstantControlName.HRM_ChangeColum_Default_ColumMode_Name').val('@Html.Raw(defaultColumnMode)');
                });
            </script>
        </div>
    </fieldset>
</div>
@{
            var listValueField = grid.ValueFields;
            var valueFields1 = string.Empty;
            if (listValueField != null)
            {
                for (int i = 0; i < listValueField.Count(); i++)
                {
                    valueFields1 += "," + listValueField[i];
                }
            }
}
@Html.Hidden("valueFieldsGrid", valueFields1)
