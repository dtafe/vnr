@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Hr.Models;
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Infrastructure.Security

@model Hre_ReportRewardModel
@{
    ViewBag.Title = "Index";
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var controller = ViewContext.RouteData.Values["Controller"].ToString();
    var action = ViewContext.RouteData.Values["Action"].ToString();
    var screen = controller + "/" + action;
}
@Html.Hidden("Screen", screen)
<script>
    var checkedNodes = [];
    var isCreateTemplate = false;
    var isCreateTemplateForDynamicGrid = false;
     
    function filterFieldInfo(isExport) {
        var elementPara = {
            DateFrom: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateFrom").val()),
            DateTo: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateTo").val()),
            OrgStructureID: checkedNodes.join(','),
            ValueFields: $('#valueFieldsGrid').val(),
            IsCreateTemplate: isCreateTemplate,
            IsCreateTemplateForDynamicGrid: isCreateTemplateForDynamicGrid
        };
        if (isExport == true) {
            elementPara["ExportId"] = $('#ddlScreenName').val();
        }
        return elementPara;
    }


    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        @*$("#DateFrom").data(@DateTime.Now.ToString("dd/MM/yyyy"));
        $("#DateTo").data(@DateTime.Now.ToString("dd/MM/yyyy"));*@
        //Show Hide Panel
        ShowHidePanel();
    $("#btnSearch").click(function () {
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes)
        var grid = $('#GridReportReward').data("kendoGrid");
        grid.dataSource.read();
        selectedIds = [];
        checkedNodes = [];

    });
    });
    $("#btnExport").click(function () {
        var isAccess = checkPermission(PrivilegeType.Export, '@ConstantPermission.Hre_ReportReward');
        if (!isAccess) { 
            return;
        }

        isCreateTemplate = false;
        isCreateTemplateForDynamicGrid = false;
        if ($('#ddlScreenName').val() == "") {
            ExportFail();
            return;
        }
        var urlGetData = '@_hrm_Hre_Service' + "Hre_GetData/GetReportReward";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo(true);
        ExportAll(urlGetData, dataParameter, urlDownload);
        checkedNodes = [];
    });
    $("#btnCreateTemplate").click(function () {
        isCreateTemplate = true;
        isCreateTemplateForDynamicGrid = false;
        CreateTemplate('@_hrm_Hre_Service' + '/Hre_GetData/GetReportReward', filterFieldInfo(true));
    });
</script>

<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            <div class="contendSearchWidge" style="overflow:visible">
                <div id="div2">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.DateOfEffective)
                    </div>
                    <div class="FieldValue">
                        @{
                            var DateFrom = new DatePickerBuilderInfo()
                            {
                                Name = "DateFrom",
                                StyleCss = "width:100px;",
                                Placeholder = ConstantDisplay.HRM_HR_Profile_DateFrom.TranslateString(),
                                Value = DateTime.Now.AddYears(-1).ToString("dd/MM/yyyy"),
                            };
                        }
                        @Html.VnrDatePickerFor(mode => mode.DateFrom, DateFrom)
                        @{
                            var DateTo = new DatePickerBuilderInfo()
                            {
                                Name = "DateTo",
                                StyleCss = "width:100px;",
                                Placeholder = ConstantDisplay.HRM_HR_Profile_DateTo.TranslateString(),
                                Value=DateTime.Now.ToString("dd/MM/yyyy"),
                            };
                        }
                        @Html.VnrDatePickerFor(mode => mode.DateTo, DateTo)
                    </div>

                    <div style="clear: both;"></div>
                </div>

                <div id="div14">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.OrgStructureID)
                    </div>
                    <div class="FieldValue">
                        <div class="FieldValue">
                            @Html.Partial("EditorTemplates/OrgStructureTreeViewDropdown")
                        </div>

                    </div>
                </div>
               
            </div>
        </div>
    </div>
</div>
<div class="commandToolBarWidge">
    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    <div style="float:right">
        <script>
            function GetScreenName() {
                return {
                    screenName: '@screen'
                };
            }
        </script>
        <div class="FieldValue" style="margin-top: 0;">
            @{
                var screenName = new DropDownListBuilderInfo()
                {
                    Name = "ddlScreenName",
                    DataTextField = "ExportName",
                    DataValueField = "ID",
                    Url = @_hrm_Hr_Service + "Cat_GetData/GetScreenName",
                    Data = "GetScreenName",
                };
            }
            @Html.VnrDropDownList(screenName)

            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport", Content = ConstantDisplay.HRM_Common_Export_Button.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateTemplate", Content = ConstantDisplay.HRM_Common_CreateTemplate_Button.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
        </div>
    </div>
</div>
<div >
    <!--Khai báo các thông tin cho Grid-->
    @{
        string[] valueFields = new string[]
                            {
                                Hre_ReportRewardModel.FieldNames.CodeEmp,
                                Hre_ReportRewardModel.FieldNames.ProfileName,
                                Hre_ReportRewardModel.FieldNames.OrgStructureName,
                                Hre_ReportRewardModel.FieldNames.PositionName,
                                Hre_ReportRewardModel.FieldNames.JobTitleName,
                                Hre_ReportRewardModel.FieldNames.DateOfEffective,
                                Hre_ReportRewardModel.FieldNames.Reason,
                                Hre_ReportRewardModel.FieldNames.RewardedTimeName,
                                Hre_ReportRewardModel.FieldNames.RewardedTitleName,
                                Hre_ReportRewardModel.FieldNames.UserApproveName,
                                Hre_ReportRewardModel.FieldNames.NoOfReward,
                            };
        Dictionary<string, int> sizeFields = new Dictionary<string, int>()
                            {
                                {Hre_ReportRewardModel.FieldNames.CodeEmp,80},
                                {Hre_ReportRewardModel.FieldNames.ProfileName,140},
                                {Hre_ReportRewardModel.FieldNames.OrgStructureName,120},
                                {Hre_ReportRewardModel.FieldNames.PositionName,110},
                                {Hre_ReportRewardModel.FieldNames.JobTitleName,110},
                                {Hre_ReportRewardModel.FieldNames.DateOfEffective,100},
                                {Hre_ReportRewardModel.FieldNames.Reason,140},
                                {Hre_ReportRewardModel.FieldNames.RewardedTimeName,130},
                                {Hre_ReportRewardModel.FieldNames.RewardedTitleName,160},
                                {Hre_ReportRewardModel.FieldNames.UserApproveName,140},
                                {Hre_ReportRewardModel.FieldNames.NoOfReward,140},
                                
                            };

        Dictionary<string, string> displayFields = new Dictionary<string, string>()
                            {
                                {Hre_ReportRewardModel.FieldNames.CodeEmp,ConstantDisplay.HRM_HR_Profile_CodeEmp},
                                {Hre_ReportRewardModel.FieldNames.ProfileName,ConstantDisplay.HRM_HR_ReportBirthday_ProfileName},
                                {Hre_ReportRewardModel.FieldNames.OrgStructureName,ConstantDisplay.HRM_HR_ReportBirthday_OrgStructureName},
                                {Hre_ReportRewardModel.FieldNames.PositionName,ConstantDisplay.HRM_HR_ReportBirthday_PositionName},
                                {Hre_ReportRewardModel.FieldNames.JobTitleName,ConstantDisplay.HRM_HR_Profile_JobTitleName},
                                {Hre_ReportRewardModel.FieldNames.DateOfEffective,ConstantDisplay.HRM_HR_Discipline_DateOfEffective},
                                {Hre_ReportRewardModel.FieldNames.Reason,ConstantDisplay.HRM_HR_Reward_Reason},
                                {Hre_ReportRewardModel.FieldNames.RewardedTimeName,ConstantDisplay.HRM_HR_ReportReward_RewardedTimeName},
                                {Hre_ReportRewardModel.FieldNames.RewardedTitleName,ConstantDisplay.HRM_HR_ReportReward_RewardedTitleName},
                                {Hre_ReportRewardModel.FieldNames.UserApproveName,ConstantDisplay.HRM_HR_Reward_UserApproveID},
                                {Hre_ReportRewardModel.FieldNames.NoOfReward,ConstantDisplay.HRM_HR_Reward_NoOfReward},
                                
                       
                                
                            };
        var grid = new GridBuilderInfo
        {
            Name = "GridReportReward",
            ValueFields = valueFields,
            SizeFields = sizeFields,
            DisplayFields = displayFields,
            ShowNextPrevious = true,
            PageSize = 20,
            ShowPageNumber = true,
            ReadActionUrl = _hrm_Hre_Service + "Hre_GetData/GetReportReward",
            ReadData = "filterFieldInfo",
            ShowCheckbox = false,
            ShowEditIcon = false,
        };
       

    }

    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<Hre_ReportRewardModel>(grid))
</div>

