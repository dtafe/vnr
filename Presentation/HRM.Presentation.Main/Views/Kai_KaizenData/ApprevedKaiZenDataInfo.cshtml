@using System.Collections
@using HRM.Infrastructure.Utilities

@using HRM.Presentation.UI.Controls.Kendo
@model HRM.Presentation.Payroll.Models.Sal_UnusualAllowanceModel

@{
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineID = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    Layout = null;
}
<script>
    function PagrameterKaiZenAppreved() {
        var UnusualEDTypeID = $("#AnnualLeave_UnusualEDTypeID").data("kendoComboBox").value();
        var CurrencyID = $("#AnnualLeave_CurrencyID").data("kendoComboBox").value();
        return {
            selectedIds: selectedIds,
            MonthYear: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#ApprevedKaiZenDataInfo_MonthStart").val()),
            UnusualEDTypeID: UnusualEDTypeID,
            Currency: CurrencyID,
        };
    };

    function Appreved() {
        $.ajax({
            url: '@_hrm_Hr_Service' + 'Sal_GetData/ApprevedKaiZenData',
            data: PagrameterKaiZenAppreved(),
            type: 'POST',
            traditional: true,
            async: false,
            success: function (data) {
                Notification(data[0] + ' @ConstantMessages.Succeed.TranslateString()/' + data[1] + ' @ConstantMessages.Fail.TranslateString()', '@NotificationType.Success.ToString()');
                ReadGrid('@ConstantControlName.HRM_grid_Kai_KaizenData_Name');
            },
            error: function (data) {
                ShowNotificationProcessor('@ConstantMessages.Fail.TranslateString()');
            }
        });
    };

    //Duyệt và chuyển qua lương
    function EvenClickAppreved() {
        Appreved();
    };

    function EvenClickApprevedClose() {
        Appreved();
        var dialog = $("#windowKaiKaizenDataAppreved").data("kendoWindow");
        dialog.close();

    };

    function DefaultLoadDataUnusualEDType() {
        var UnusualEDType = $("#AnnualLeave_UnusualEDTypeID").data("kendoComboBox");
        UnusualEDType.select(function (dataItem) {
            return dataItem.Code === "PC Kaizen";
        });
        //UnusualEDType.readonly(true);
    };

    function DefaultLoadDataCurrency() {
        var UnusualEDType = $("#AnnualLeave_CurrencyID").data("kendoComboBox");
        UnusualEDType.select(function (dataItem) {
            return dataItem.CurrencyName === "VND";
        });
        //UnusualEDType.readonly(true);
    };

</script>

@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_ApprevedKaiZenDataInfo_Model" }))
{
    <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.MonthStart)
                    </div>
                    <div class="FieldValue">
                        @{
    var datepickerMonthStart = new DatePickerBuilderInfo()
    {
        Name = "ApprevedKaiZenDataInfo_MonthStart",
        StyleCss = "width:120px;",
        Placeholder = ConstantDisplay.HRM_HR_Profile_DateFrom.TranslateString(),
    };
                        }
                        @Html.VnrDatePickerFor(model => model.MonthStart, datepickerMonthStart).Min(DateTime.Now).Value(DateTime.Now).Format(ConstantFormat.HRM_Format_MonthYear)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.UnusualEDTypeID)
                    </div>
                    <div class="FieldValue">
                        @{
    var ddlUnusualEDType = new ComboBoxBuilderInfo()
    {
        StyleCss = "width:300px;",
        Name = "AnnualLeave_UnusualEDTypeID",
        DataTextField = "UnusualAllowanceCfgName",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiUnusualAllowanceCfg",
        Autobind = true,
        EventDataBound = "DefaultLoadDataUnusualEDType",
    };
                        }
                        @(Html.VnrComboBoxFor(model => model.UnusualEDTypeID, ddlUnusualEDType))
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.CurrencyID)
                    </div>
                    <div class="FieldValue">
                        @{
    var ddlCurrency = new ComboBoxBuilderInfo()
    {
        Name = "AnnualLeave_CurrencyID",
        StyleCss = "width:300px;",
        DataTextField = "CurrencyName",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiCurrency",
        Autobind = true,
        EventDataBound = "DefaultLoadDataCurrency",
    };
                        }
                        @(Html.VnrComboBoxFor(model => model.CurrencyID, ddlCurrency))
                    </div>
                </div>
            </td>
        </tr>

        <tr>
            <td>
                <hr />
                <div class="FieldTitle150">
                </div>
                <div class="FieldValue">
                    @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "EvenClickAppreved", Name = "save-Appreved", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "EvenClickApprevedClose", Name = "save-Appreved-Close", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                </div>
            </td>
        </tr>
    </table>
}

<script>

    //$(document).ready(function () {
    //    var Currence = $("#AnnualLeave_CurrencyID").data("kendoComboBox");
    //    Currence.text('VND');

    //    var UnusualEDType = $("#AnnualLeave_UnusualEDTypeID").data("kendoComboBox");
    //    UnusualEDType.search('Kaizen');
    //    UnusualEDType.select(UnusualEDType.ul.children().eq(0));

    //});
</script>
