@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.UI.Controls.Kendo.MultiSelect
@using HRM.Presentation.UI.Controls.Kendo.DropDownList
@using HRM.Presentation.Hr.Models

@using HRM.Infrastructure.Utilities
@using System.Collections;
@model HRM.Presentation.Hr.Models.Hre_RewardModel
@{
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
}
@{
    IList<SelectListItem> list = Enum.GetValues(typeof(EnumDropDown.RewardType))
        .Cast<EnumDropDown.RewardType>()
        .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
        .ToList();

    SelectList data = new SelectList(list, "Value", "Text");
}


@*@Html.ValidationSummary(false)
    @Html.AntiForgeryToken()*@
<script>
    SetFieldRequired();
</script>
<div class="VnRMain">
    <table style="width:100%">
        <tbody>
            @*<tr>
                    <td class="Box_Top_Left"></td>
                    <td valign="middle" class="Box_Top_Mid"></td>
                    <td class="Box_Top_Right"></td>
                </tr>*@
            <tr><td colspan="3" style=""></td></tr>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                <td valign="top">
                    <div class="hrm_box">
                        <div id="div1">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.ProfileName)
                                @Html.HiddenFor(mode => mode.ID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    IEnumerable valueProfile = new string[] { };
                                    if (Model != null)
                                    {
                                        valueProfile = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
                                    }
                                }
                                @{
                                    var Profile = new MultiSelectBuilderInfo()
                                     {
                                         DataTextField = Hre_RewardModel.FieldNames.ProfileName,
                                         DataValueField = Hre_RewardModel.FieldNames.ID,
                                         Url = @_hrm_Hr_Service + "Hre_GetData/GetMultiProfile",
                                         Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                                         MaxSelectedItems = 1,
                                         Value = valueProfile
                                     };
                                }
                                @(Html.VnrMultiSelectFor(mode => mode.ProfileID, Profile))
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div2">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.DateOfIssuance)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var _dateOfIssuance = new DatePickerBuilderInfo()
                                    {
                                        StyleCss= "width:100px",
                                    };
                                }
                                @Html.VnrDatePickerFor(model => model.DateOfIssuance, _dateOfIssuance)
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div4">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.DateOfEffective)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var _dateOfEffective = new DatePickerBuilderInfo()
                                    {
                                        StyleCss = "width:100px", 
                                    };
                                }
                                @Html.VnrDatePickerFor(model => model.DateOfEffective, _dateOfEffective)
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div5">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.RewardedTypeID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var RewardedTypeName = new ComboBoxBuilderInfo()
                                     {
                                         DataTextField = "RewardedTypeName",
                                         DataValueField = "ID",
                                         Url = _hrm_Hr_Service + "Cat_GetData/GetMultiRewardedType",
                                         StyleCss = "width:200px;",
                                         Value = Model == null ? string.Empty : Model.RewardedTypeName,
                                     };
                                }
                                @(Html.VnrComboBoxFor(mode => mode.RewardedTypeID, RewardedTypeName))
                            </div>
                            <div style="clear: both;"></div>
                        </div>

                        <div id="div7">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.RewardValue)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var RewardValue = new NumericTextBoxBuilderInfo<double>() { };
                                }
                                @Html.VnrNumericTextBoxFor(model => model.RewardValue, RewardValue)
                                @Html.ValidationMessageFor(model => model.RewardValue)
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div8">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.NoOfReward)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextBoxFor(model => model.NoOfReward)
                                @Html.ValidationMessageFor(model => model.NoOfReward)
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                    </div>
                    <div class="hrm_box">
                        <div id="div10">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.RequesterID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    IEnumerable Requester = new string[] { };
                                    if (Model != null)
                                    {
                                        Requester = new[] { new { UserLogin = Model.RequesterName, ID = Model.RequesterID } };
                                    }
                                }
                                @{
                                    var requesterID = new MultiSelectBuilderInfo()
                                     {
                                         DataTextField = "UserLogin",
                                         DataValueField = "ID",
                                         Url = @_hrm_Sys_Service + "Sys_GetData/GetMultiUser",
                                         Placeholder = ConstantDisplay.HRM_System_SelectUser.TranslateString(),
                                         MaxSelectedItems = 1,
                                         Value = Requester
                                     };
                                }
                                @(Html.VnrMultiSelectFor(mode => mode.RequesterID, requesterID))
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div6">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.UserApproveID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    IEnumerable UserApproveName = new string[] { };
                                    if (Model != null)
                                    {
                                        UserApproveName = new[] { new { UserLogin = Model.UserApproveName, ID = Model.UserApproveID } };
                                    }
                                }
                                @{
                                    var userApproveID = new MultiSelectBuilderInfo()
                                     {
                                         DataTextField = "UserLogin",
                                         DataValueField = "ID",
                                         Url = @_hrm_Sys_Service + "Sys_GetData/GetMultiUserApproved_E_REWARD",
                                         Placeholder = ConstantDisplay.HRM_System_SelectUser.TranslateString(),
                                         MaxSelectedItems = 1,
                                         Value = UserApproveName
                                     };
                                }
                                @(Html.VnrMultiSelectFor(mode => mode.UserApproveID, userApproveID))
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div2">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.Reason)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextAreaFor(model => model.Reason, "min-Width: 250px")
                                @Html.ValidationMessageFor(model => model.Reason)
                            </div>
                            <div style="clear: both;"></div>
                        </div>

                        <div id="div3">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.Description)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextAreaFor(model => model.Description, "min-Width: 250px")
                                @Html.ValidationMessageFor(model => model.Description)
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                    </div>
                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
            <tr>
                <td class="Box_Bottom_Left"></td>
                <td class="Box_Bottom_Mid"></td>
                <td class="Box_Bottom_Right"></td>
            </tr>
        </tbody>
    </table>
</div>
