@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Category.Models
@using HRM.Presentation.UI.Controls.Kendo

@model HRM.Presentation.Training.Models.Tra_TraineeCertificateModel
@{
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
}

<script>
    //var Validator = CheckValidate();
    //SetFieldRequired();

    function onSave() {
        
        $("#ClassIDTemp").val($("#Class_ID").val());
      
        $("#TraineeID").val(selectedIds.join(","));
        onSaveAndContinue($('#form_Tra_Trainee_Certificate'), '@_hrm_Hre_Service', 'api/Tra_TraineeCertificate/', 'grid_TraineeInClass', 'windowTraineeCertificate');
        $("#Class_ID").val($("#ClassIDTemp").val());
       
        return false;
    }

    function onSaveClose() {
        $("#ClassIDTemp").val($("#Class_ID").val());
       
        $("#TraineeID").val(selectedIds.join(","));
        onSaveAndClose($('#form_Tra_Trainee_Certificate'), '@_hrm_Hre_Service', 'api/Tra_TraineeCertificate/', 'grid_TraineeInClass', 'windowTraineeCertificate');
       
      
        return false;
    }
    function onSaveDataPopUp() {
        $("#ClassIDTemp").val($("#Class_ID").val());
      
        $("#TraineeID").val(selectedIds.join(","));
        onlySave($('#form_Tra_Trainee_Certificate'), '@_hrm_Hre_Service', 'api/Tra_TraineeCertificate/', 'grid_TraineeInClass'); return false;
        $("#Class_ID").val($("#ClassIDTemp").val());
      
    }
    function filterFieldInfo() {
        return {
            ClassID: $("#Class_ID").val()
        };
    }

</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Tra_Trainee_Certificate" }))
{
    @Html.HiddenFor(model => model.ID)
   
    <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.CertificateID)
                        @Html.HiddenFor(mode => mode.TraineeID)
                    </div>
                    <div class="FieldValue">
                        @{
                             var _CertificateID = new ComboBoxBuilderInfo()
                             {
                                 StyleCss = "width:300px",
                                 Name = "TraineeCertificateInfo_CertificateID",
                                 DataTextField = "CertificateName",
                                 DataValueField = "ID",
                                 Url = _hrm_Hre_Service + "Tra_GetData/GetMultiCertificateByCourseID",
                                 Data = "filterFieldInfo",
                                 Autobind = true

                             };
                        }
                        @(Html.VnrComboBoxFor(mode => mode.CertificateID, _CertificateID).Text(Model != null && Model.CertificateName != null ? Model.CertificateName.ToString() : string.Empty))
                    </div>
                </div>
                <div id=" div1">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.DateCertificate)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _DateFrom = new DatePickerBuilderInfo()
                            {
                                Name = "TraineeCertificateInfo_DateCertificate",
                                StyleCss = "width:120px"
                            };
                        }
                        @Html.VnrDatePickerFor(model => model.DateCertificate, _DateFrom)

                        @Html.VnrLabelFor(mode => mode.DateExpireCertificate)

                        @{
                            var _DateTo = new DatePickerBuilderInfo()
                            {
                                Name = "TraineeCertificateInfo_DateExpireCertificate",
                                StyleCss = "width:120px"
                            };
                        }
                        @Html.VnrDatePickerFor(model => model.DateExpireCertificate, _DateTo)
                    </div>
                </div>

                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.PlaceCertificate)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.PlaceCertificate, "width: 300px")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Note)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Note, "width:500px;height:100px;")
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-Tra_Certificate", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-Tra_Certificate", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-Tra_Certificate", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })

                    </div>
                </div>
            </td>
        </tr>
    </table>
}