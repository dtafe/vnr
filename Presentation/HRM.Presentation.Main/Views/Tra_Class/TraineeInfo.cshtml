@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Category.Models
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.Training.Models
@using System.Collections
@model HRM.Presentation.Training.Models.Tra_TraineeModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    Guid ContractID = Guid.Empty;
    string aaa = ViewBag.contractID;
    if (!string.IsNullOrEmpty(aaa))
    {
        ContractID = Common.ConvertToGuid(aaa.ToString());
    }
    IList<SelectListItem> listTraineeStatus = Enum.GetValues(typeof(EnumDropDown.TraineeStatus))
 .Cast<EnumDropDown.TraineeStatus>()
 .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() })
 .ToList();
}


<script>
    //var Validator = CheckValidate();
    //SetFieldRequired();

    function onSave() {
      
        //  if (CheckValidate(data)) {
        onSaveAndContinue($('#form_Tra_Trainee'), '@_hrm_Hr_Service', 'api/Tra_Trainee/', 'grid_TraineeInClass', 'windowTrainee');
        // }
        return false;
    }

    function onSaveClose() {
        debugger;
       
        //  if (CheckValidate(data)) {
        onSaveAndClose($('#form_Tra_Trainee'), '@_hrm_Hr_Service', 'api/Tra_Trainee/', 'grid_TraineeInClass', 'windowTrainee');
        // }
        return false;
    }
    function onSaveDataPopUp() {
        debugger;
       
        onlySave($('#form_Tra_Trainee'), '@_hrm_Hr_Service', 'api/Tra_Trainee/', 'grid_TraineeInClass'); return false;
     
    }

    //var dataSource = new kendo.data.DataSource({
    //    transport: {
    //        read: {
    //            url: "http://demos.telerik.com/kendo-ui/service/products",
    //            dataType: "jsonp",
    //            data: { ClassID: $("#Class_ID").val() }
    //        }
    //    }
    //});

    function ReadDataTrainneInfo() {
        debugger;
        var _TraineeInfo_ProfileID = $('#TraineeInfo_ProfileID');

        var pagram = {
            text: _TraineeInfo_ProfileID.data("kendoMultiSelect").input.val(),
            ClassID: $("#Class_ID").val()
        }
        return pagram;
        
    };

</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Tra_Trainee" }))
{
    @Html.HiddenFor(model => model.ID)
    @*if (Model != null)
    {
        @Html.HiddenFor(mode => mode.ClassID)
    }
    else
    {
         @Html.HiddenFor(mode => mode.ClassID, ContractID)
    }*@
    <table>
        <tr>
            <td>
             
                <div >
                    <div style="float: left">
                        <div class="DivContentTitleValue" id="div13">
                            <div class="FieldTitle150">
                                @Html.HiddenFor(mode => mode.ID)
                                @Html.VnrLabelFor(mode => mode.ProfileID)
                            </div>
                            <div class="FieldValue">
                                @{
    IEnumerable valueProfile = new string[] { };
    if (Model != null)
    {
        valueProfile = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
    }
                                }
                                @{
    var Profile = new MultiSelectBuilderInfo()
     {
         Name="TraineeInfo_ProfileID",
         DataTextField = Tra_TraineeModel.FieldNames.ProfileName,
         DataValueField = "ID",
         Url = @_hrm_Hr_Service + "Tra_GetData/GetMultiProfileByClassId",
         Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
         Value = valueProfile,
         MaxSelectedItems = 1,
         Width = 300,
         ReadData="ReadDataTrainneInfo"
         //ActionName = "doLoadTrainee"

     };
                                }
                                @(Html.VnrMultiSelectFor(mode => mode.ProfileID, Profile))
                            </div>
                        </div>
                        <div id="div4" class="DivContentTitleValue">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.ClassID)
                            </div>
                            <div class="FieldValue">
                                @{
    IEnumerable valueClass = new string[] { };
    if (Model != null)
    {
        valueClass = new[] { new { ClassName = Model.ClassName, ID = Model.ClassID } };
    }
                                }
                                @{
    var _Class = new MultiSelectBuilderInfo
    {
        
        DataTextField = "ClassName",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Tra_GetData/GetMultiClass",
        MaxSelectedItems = 1,
        Placeholder = ConstantDisplay.HRM_Category_SelectClass.TranslateString(),
        Value = valueClass,
        Width = 300
    };
                                }
                                @Html.VnrMultiSelectFor(mode => mode.ClassID, _Class)
                            </div>
                            <script>
                                $(document).ready(function () {
                                    debugger;
                                    setTimeout(function () {
                                        $.ajax({
                                            type: 'POST',
                                            url: '@_hrm_Hr_Service' + "Tra_GetData/GetDataByClassID/",
                                            data: { classID: $("#Class_ID").val() },
                                            dataType: 'json',
                                            async: false,
                                            success: function (data) {
                                                var dataSource = new kendo.data.DataSource();
                                                var ItemsSelect = [];
                                                
                                                    dataSource.add({ ID: data.ID, ClassName: data.ClassName });
                                                    ItemsSelect.push(data.ID);
                                              
                                                var Profilemultiselect = $("#ClassID").data("kendoMultiSelect");
                                                if (Profilemultiselect != undefined) {
                                                    Profilemultiselect.setDataSource(dataSource);
                                                    Profilemultiselect.value(ItemsSelect);
                                                    Profilemultiselect.readonly();
                                                }
                                            },
                                        });
                                    }, 500);

                                    //var _class = $("#ClassID").data("kendoMultiSelect");
                                    //_class.dataSource.filter({});
                                    //_class.value($("#Class_ID").val());
                                    //_class.readonly();
                                });
                            </script>
                            <div id="div13">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelForNoneIcon(model => model.Status)
                                </div>
                                <div class="FieldValue">
                                    @{
    var ddlStatus = new DropDownListBuilderInfo()
    {
        StyleCss = "width:300px",
        Name = "TraineeInfo_Status",
        DataTextField = "Text",
        DataValueField = "Value",
        BindTo = listTraineeStatus
    };
                                    }
                                    @Html.VnrDropDownListFor(model => model.Status, ddlStatus)
                                </div>
                            </div>
                            <div id="div13">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.TrainLevelID)
                                </div>
                                <div class="FieldValue">
                                    @{
    var _TrainLevelID = new ComboBoxBuilderInfo()
      {
          StyleCss = "width:300px",
          Name = "Trainee_TrainLevelID",
          DataTextField = "TrainLevelName",
          DataValueField = "ID",
          ServerFilter = true,
          Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiTrainLevel",
          Value = Model == null ? string.Empty : Model.TrainLevelName
      };
                                    }
                                    @Html.VnrComboBoxFor(model => model.TrainLevelID, _TrainLevelID).Text(Model == null ? string.Empty : Model.TrainLevelName)
                                </div>
                            </div>
                            <div id="div13">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.Reason)
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrTextAreaFor(mode => mode.Reason, "width:300px;height:100px;")
                                </div>
                            </div>
                            <div id="div13">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.Result)
                                </div>
                                <div class="FieldValue">
                                    @{
    var _Result = new NumericTextBoxBuilderInfo<double>()
    {
        StyleCss = "width:150px"
    };
                                    }
                                    @Html.VnrNumericTextBoxFor(model => model.Result, _Result)
                                </div>
                            </div>
                            <div id="div13">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.RankingID)
                                </div>
                                <div class="FieldValue">
                                    @{
    var _RankingID = new ComboBoxBuilderInfo()
      {
          DataTextField = "RankingName",
          DataValueField = "ID",
          FilterType = FilterType.Contains,
          Url = @_hrm_Sys_Service + "Tra_GetData/GetMultiRanking",
          Value = Model == null ? string.Empty : Model.RankingName
      };
                                    }
                                    @Html.VnrComboBoxFor(model => model.RankingID, _RankingID).Text(Model == null ? string.Empty : Model.RankingName)
                                </div>
                            </div>
                        </div>
                    </div>
                    <div style="float: left">
                        <div id="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.CostCenter)
                            </div>
                            <div class="FieldValue">
                                @{
    var _CostCenter = new NumericTextBoxBuilderInfo<double>()
    {
        StyleCss = "width:150px"
    };
                                }
                                @Html.VnrNumericTextBoxFor(model => model.CostCenter, _CostCenter)
                            </div>
                        </div>
                        <div id="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.CostCenterCompanyPay)
                            </div>
                            <div class="FieldValue">
                                @{
    var _CostCenterCompanyPay = new NumericTextBoxBuilderInfo<double>()
    {
        StyleCss = "width:150px"
    };
                                }
                                @Html.VnrNumericTextBoxFor(model => model.CostCenterCompanyPay, _CostCenterCompanyPay)
                            </div>
                        </div>
                        <div id="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.CommitmentTimeWork)
                            </div>
                            <div class="FieldValue">
                                @{
    var CommitmentTimeWork = new DatePickerBuilderInfo()
    {
        StyleCss = "width:120px;"

    };
                                }
                                @Html.VnrDatePickerFor(model => model.CommitmentTimeWork, CommitmentTimeWork)
                            </div>
                        </div>
                        <div id="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.CommitmentOther)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextAreaFor(mode => mode.CommitmentOther, "width:300px;height:100px;")
                            </div>
                        </div>
                        <div id="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.TeacherComment)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextAreaFor(mode => mode.TeacherComment, "width:300px;height:100px;")
                            </div>
                        </div>
                    </div>
                    </div>

</td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle170">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-Tra_Trainee", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-Tra_Trainee", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-Tra_Trainee", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })

                    </div>
                </div>
            </td>
        </tr>
    </table>
}
