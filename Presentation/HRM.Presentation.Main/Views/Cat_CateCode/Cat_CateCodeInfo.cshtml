@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Category.Models
@using HRM.Presentation.UI.Controls.Kendo

@model HRM.Presentation.Category.Models.Cat_CateCodeModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    IList<SelectListItem> listCateCodeType = Enum.GetValues(typeof(EnumDropDown.CateCodeType))
   .Cast<EnumDropDown.CateCodeType>()
   .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
   .ToList();
}

<script>
    //var Validator = CheckValidate();
    SetFieldRequired();

    function onSave() {
        //  if (CheckValidate(data)) {
        onSaveAndContinue($('#form_Cat_CateCode'), '@_hrm_Hr_Service', 'api/Cat_CateCode/', '@ConstantControlName.HRM_Category_CateCode_Grid_Name', '@ConstantControlName.HRM_Category_CateCode_PopUp_Name');
        // }
        return false;
    }

    function onSaveClose() {
        //  if (CheckValidate(data)) {
        onSaveAndClose($('#form_Cat_CateCode'), '@_hrm_Hr_Service', 'api/Cat_CateCode/', '@ConstantControlName.HRM_Category_CateCode_Grid_Name', '@ConstantControlName.HRM_Category_CateCode_PopUp_Name');
        // }
        return false;
    }
    function onSaveDataPopUp() {

        //    if (CheckValidate(data)) {
        //   if (!checkDuplicationCode()) {
        onlySave($('#form_Cat_CateCode'), '@_hrm_Hr_Service', 'api/Cat_CateCode/', '@ConstantControlName.HRM_Category_CateCode_Grid_Name'); return false;
        //    }
        // }
    }

</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Cat_CateCode" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _Code = new TextBoxBuilderInfo()
                            {
                                Width = 300,
                                Name = "CateCode_Code"
                            };
                        }
                        @Html.VnrTextBoxFor(mode => mode.Code, _Code)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Name)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.Name, "width: 300px")
                    </div>
                </div>
                <div id="div6">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.CateCodeType)
                    </div>
                    <div class="FieldValue">
                        @{
                        var dropdownCateCodeType = new DropDownListBuilderInfo()
                       {
                           DataTextField = "Text",
                           DataValueField = "Value",
                           BindTo = listCateCodeType,
                           //OptionLabel = ConstantDisplay.HRM_Attendance_SelectType.TranslateString(),
                           StyleCss = "width:300px"
                       };
                        }
                        @(Html.VnrDropDownListFor(mode => mode.CateCodeType, dropdownCateCodeType))
                    </div>
                </div>

                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Note)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Note, "width:500px;height:100px;")
                    </div>
                </div>

            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-CatCateCode", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-CatCateCode", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-CatCateCode", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })

                    </div>
                </div>
            </td>
        </tr>
    </table>
}