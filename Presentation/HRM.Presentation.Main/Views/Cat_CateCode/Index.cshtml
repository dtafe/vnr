@using HRM.Infrastructure.Utilities;
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.Category.Models;
@using HRM.Infrastructure.Security;

@model Cat_CateCodeSearchModel

@{
    //var _hrm_Main_Web = ConstantPathWeb.Hrm_Cat_Web;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    Layout = null;
    IList<SelectListItem> listCateCodeType = Enum.GetValues(typeof(EnumDropDown.CateCodeType))
.Cast<EnumDropDown.CateCodeType>()
.Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
.ToList();
}

@{
    var window = new WindowBuilderInfo
    {
        Name = "windowCatCateCode",
        Visible = false,
        Width = 700,
        LoadContentFrom = @_hrm_Main_Web + "Cat_CateCode/Cat_CateCodeInfo/",
    };
}
@(Html.VnrWindow(window))

<script>
    var gridName = '@ConstantControlName.HRM_Category_CateCode_Grid_Name';
    var popUpName = '@ConstantControlName.HRM_Category_CateCode_PopUp_Name';
    var titleEditPopUp = '@Html.Raw(ConstantDisplay.HRM_Recruitment_CateCode_Update_Title.TranslateString())';
    var titleCreatePopUp = '@Html.Raw(ConstantDisplay.HRM_Recruitment_CateCode_Create_Title.TranslateString())';


    //Data khi tìm kiếm
    function filterFieldInfo() {
        return {
            Name: $('#CateCodeName1').val(),
            Code: $('#CateCodeCode1').val(),
            IsExport: false,
            ValueFields: $('#valueFieldsGrid').val()
        };
    }
    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        //Show Hide Panel
        ShowHidePanel();
        //Jump Anchor
        jumpAnchor("anchor");
        $("#btnSearch").click(function () {
            ReadGrid(gridName);
        });

        //Xử lý Edit popup
        var url = '@_hrm_Main_Web' + "Cat_CateCode/Cat_CateCodeInfo/";
        EditGridPopUp("@ConstantControlName.HRM_Category_CateCode_Grid_Name", "windowCatCateCode", url, '@ConstantPermission.Cat_CateCode', titleEditPopUp);
    });

    //Xử lý Create
    $("#btnCreateCat_CateCode").click(function () {
        var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Cat_CateCode');
        if (!isAccess) {
            return;
        }
        PopUpCreate("windowCatCateCode", titleCreatePopUp, '@ConstantPermission.Cat_CateCode');
    });

    //Xử Lý grid
    GridCheckbox(gridName);

    //Xử Lý button delete
    $('#btnDelete').click(function (e) {
        if (selectedIds == "") {
            DeleteFail();
            return;
        }
        
        e.preventDefault();
        DeleteSelected(gridName, '@_hrm_Main_Web' + "Cat_CateCode/RemoveSelected/", selectedIds, '@ConstantPermission.Cat_CateCode');
        return false;
    });

    $(document).ready(function () {
        ShowHidePanel();
    });

    $("#btnExportSelected").click(function () {

        if (selectedIds == "") {
            ExportSelectedFail();
            return;
        }
        var urlGetData = '@_hrm_Hr_Service' + "Cat_GetData/ExportCateCodeSelected/";
        var urlDownload = '@_hrm_Main_Web';
        var listIds = selectedIds.join(",");
        var listFields = $('#valueFieldsGrid').val();
        ExportSelected(urlGetData, listIds, listFields, urlDownload, '@ConstantPermission.Cat_CateCode');
    });

    $("#btnExportAll").click(function () {
        @*var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Hre_ProfileQuit');
        if (!isAccess) {
            return;
        }*@
        var grid = $('#@ConstantControlName.HRM_Category_CateCode_Grid_Name').data("kendoGrid");
        if (grid.dataSource.total() == 0) {
            ExportAllFail();
            return;
        }
        var urlGetData = '@_hrm_Hr_Service' + "Cat_GetData/ExportAllCateCodeList/";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo(true);
        ExportAll(urlGetData, dataParameter, urlDownload, '@ConstantPermission.Cat_CateCode');
    });
</script>

<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            <div class="contendSearchWidge">
                <div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(model => model.Name)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBox("CateCodeName1", "width:200px;")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(model => model.Code)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBox("CateCodeCode1", "width:200px;")
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="commandToolBarWidge" id="anchor">
    <div style="float:left">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateCat_CateCode", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    </div>
    <div style="float:right">
        <div class="btn-group">
            <button type="button" class="k-button btn-default dropdown-toggle" data-toggle="dropdown">
                <img src="@ConstantPath.IconExportPath" width="15" height="15" />
                @ConstantDisplay.HRM_Common_ExportDropdown_Title.TranslateString()
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu pull-right" role="menu">
                <li>@Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExportSelected", Content = ConstantAction.HRM_Common_ExportSelected.TranslateString(), ImageUrl = ConstantPath.IconExportPath, CssStyle = "border:0" })</li>
                <li>@Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExportAll", Content = ConstantAction.HRM_Common_ExportAll.TranslateString(), ImageUrl = ConstantPath.IconExportPath, CssStyle = "border:0" })</li>
            </ul>
        </div>
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
    </div>
    <div class="clear"></div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @{
        Dictionary<object, object[]> foreignKey = new Dictionary<object, object[]>()
        {

            {Cat_CateCodeModel.FieldNames.CateCodeType,new object[]
               { "Value", "Text", listCateCodeType, ConstantDisplay.HRM_Category_ValueEntity_Type,""}},

        };
        string[] valueFields = new[]
        {
            Cat_CateCodeModel.FieldNames.Code,
             Cat_CateCodeModel.FieldNames.Name,
            Cat_CateCodeModel.FieldNames.CateCodeType,
            Cat_CateCodeModel.FieldNames.Note,

        };

        var sizeFields = new Dictionary<string, int>()
        {
            {Cat_CateCodeModel.FieldNames.Code,140},
            {Cat_CateCodeModel.FieldNames.Name,140},
            {Cat_CateCodeModel.FieldNames.CateCodeType,120},
            {Cat_CateCodeModel.FieldNames.Note,110},
        };

        var filterable = new Dictionary<string, bool>()
        {
            {Cat_CateCodeModel.FieldNames.Name,true},
        };

        var displayFields = new Dictionary<string, string>()
        {
            {Cat_CateCodeModel.FieldNames.Code,ConstantDisplay.HRM_Category_CateCode_Code},
            {Cat_CateCodeModel.FieldNames.Name,ConstantDisplay.HRM_Category_CateCode_Name},
               {Cat_CateCodeModel.FieldNames.CateCodeType,ConstantDisplay.HRM_Category_CateCode_CateCodeType},
            {Cat_CateCodeModel.FieldNames.Note,ConstantDisplay.HRM_Category_CateCode_Note},
        };

        var grid = new GridBuilderInfo
        {
            Name = ConstantControlName.HRM_Category_CateCode_Grid_Name,
            ValueFields = valueFields,
            SizeFields = sizeFields,
            DisplayFields = displayFields,
            Filterable = filterable,
            ShowCommand = false,
            ReadActionUrl = _hrm_Hr_Service + "Cat_GetData/GetCateCodeList/",
            ReadData = "filterFieldInfo",
            ForeignKey = foreignKey
        };
    }

    @(Html.VnrGrid<Cat_CateCodeModel>(grid))
</div>
@{
    var valueFields1 = string.Empty;
    for (int i = 0; i < valueFields.Count(); i++)
    {
        valueFields1 += "," + valueFields[i];
    }
}
@Html.Hidden("valueFieldsGrid", valueFields1)