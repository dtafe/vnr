
@using HRM.Infrastructure.Utilities;
@using HRM.Infrastructure.Security
@model HRM.Presentation.Canteen.Models.Can_CanteenModel
@{
    ViewBag.Title = HRM.Infrastructure.Utilities.ConstantDisplay.HRM_Can_Canteen.TranslateString();
    Layout = null;
    var _hrm_Can_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Can_Service = ConstantPathWeb.Hrm_Hre_Service;
}
@{
    var window = new WindowBuilderInfo
    {
        Name = "windowCanTeen",
        Visible = false,
        Width=700,
        LoadContentFrom = @_hrm_Can_Web + "Can_Canteen/CreateOrUpdate/",
    };
}
@(Html.VnrWindow(window))
<script type="text/javascript">
    var checkedNodes = [];
     
    var gridName = '@ConstantControlName.HRM_Canteen_Canteen_Grid_Name';
    var popUpName = '@ConstantControlName.HRM_Canteen_Canteen_PopUp_Name';
    var titleEditPopUp = '@Html.Raw(ConstantDisplay.HRM_Canteen_Canteen_Edit_Title.TranslateString())';
    var titleCreatePopUp = '@Html.Raw(ConstantDisplay.HRM_Canteen_Canteen_Create_Title.TranslateString())';
    $(document).ready(function () {
        //Ẩn hiện div chứa các input tìm kiếm
        ShowHidePanel();
        //Xử lý sự kiện click button tìm kiếm
        $("#btnSearch").click(function () {
             
            ReadGrid(gridName);
        });
        //Chỉnh sửa
        @*var isAccess = checkPermission(PrivilegeType.Modify, '@ConstantPermission.Can_Canteen');
        if (!isAccess) {
            return;
        }*@
        EditGridPopUp(gridName, "windowCanTeen", '@_hrm_Can_Web' + "Can_Canteen/CreateOrUpdate/",'@ConstantPermission.Can_Canteen' ,titleEditPopUp);
    });
    //Lấy dữ liệu khi tìm kiếm
    function filterFieldInfo() {
        
        var locationID = $('#multiLocationId').val();
        locationID = locationID != null ? locationID[0] : locationID;
        return {
            CanteenName: $('#SCanteenName').val(),
            CanteenCode: $('#SCanteenCode').val(),
            LocationId: locationID,
            //Gán tạm vì các Cat chưa xử lý Export
            IsExport: false
        };
    }
    //Xử lý khi check chọn các dòng trên lưới thì lưu id của các dòng đó cào biến selectedIds ở trên
    GridCheckbox(gridName);
    //Tạo mới
    $("#btnCreate").click(function () {
        var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Can_Canteen');
        if (!isAccess) {
            return;
        }
         
        PopUpCreate("windowCanTeen", titleCreatePopUp);
    });
    
    //Xóa
    $('#btnDelete').click(function (e) {
        var isAccess = checkPermission(PrivilegeType.Delete, '@ConstantPermission.Can_Canteen');
        if (!isAccess) {
            return;
        }
        if (selectedIds == "") {
            DeleteFail();
            return;
        }
        e.preventDefault();
        DeleteSelected(gridName, '@_hrm_Can_Web' + "Can_Canteen/RemoveSelected/", selectedIds.join(","));
        return false;
    });

</script>


<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->

            <div class="contendSearchWidge">
                <form id="form-search">
                    <div id="div5">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.CanteenName)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBox("SCanteenName","width:200px")
                        </div>
                    </div>
                    <div id="div2">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(model => model.CanteenCode)
                        </div>
                        <div class="FieldValue">
                            <div class="FieldValue">                                
                                @Html.VnrTextBox("SCanteenCode","width:200px")
                            </div>
                        </div>
                    </div>
                   
                    <div id="div2">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(model => model.LocationName)
                        </div>
                        <div class="FieldValue">
                            <div class="FieldValue">
                                @{
                                    var multiLocationName = new MultiSelectBuilderInfo
                                    {
                                        Name = "multiLocationId",
                                        DataTextField = "LocationName",
                                        DataValueField = "ID",
                                        Url = @_hrm_Can_Service + "Canteen_GetData/GetMultiLocation",
                                        MaxSelectedItems = 1,
                                        Placeholder = ConstantDisplay.HRM_Canteen_Canteen_SelectLocation.TranslateString(),
                                    };
                                }
                                @Html.VnrMultiSelect(multiLocationName)
                            </div>
                        </div>
                    </div>

                </form>
            </div>

        </div>
    </div>
</div>
<div class="commandToolBarWidge">
    <div style="float:left">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreate", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    </div>
    <div style="float:right">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
    </div>
    <div class="clear"></div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @using HRM.Presentation.Canteen.Models
    @using HRM.Presentation.UI.Controls.Kendo
    @{
        string[] valueFields = new string[]
        {
            Can_CanteenModel.FieldNames.CanteenCode,
            Can_CanteenModel.FieldNames.CanteenName,
            Can_CanteenModel.FieldNames.LocationName,
            Can_CanteenModel.FieldNames.Note            
        };
        Dictionary<string, int> sizeFields = new Dictionary<string, int>()
        {
            {Can_CanteenModel.FieldNames.CanteenCode,120},
            {Can_CanteenModel.FieldNames.CanteenName, 150},     
            {Can_CanteenModel.FieldNames.LocationName, 150},
            {Can_CanteenModel.FieldNames.Note, 200},
        };

        Dictionary<string, string> displayFields = new Dictionary<string, string>()
        {
            {Can_CanteenModel.FieldNames.CanteenCode, ConstantDisplay.HRM_Canteen_Canteen_CanteenCode},
            {Can_CanteenModel.FieldNames.CanteenName, ConstantDisplay.HRM_Canteen_Canteen_CanteenName},
            {Can_CanteenModel.FieldNames.LocationName, ConstantDisplay.HRM_Canteen_Canteen_LocationName},
            {Can_CanteenModel.FieldNames.Note, ConstantDisplay.HRM_Canteen_Canteen_Notes}            
        };
        var grid = new GridBuilderInfo
        {
            Name = ConstantControlName.HRM_Canteen_Canteen_Grid_Name,
            ValueFields = valueFields,
            SizeFields = sizeFields,
            DisplayFields = displayFields,
            ReadActionUrl = @_hrm_Can_Service + "Canteen_GetData/GetCanteenList/",
            ReadData = "filterFieldInfo"
        };
    }
    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<HRM.Presentation.Canteen.Models.Can_CanteenModel>(grid))
</div>
