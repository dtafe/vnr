@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.UI.Controls.Kendo.DropDownList
@using HRM.Presentation.UI.Controls.Kendo.MultiSelect
@using HRM.Presentation.Hr.Models
@using HRM.Infrastructure.Utilities
@using System.Collections;

@model Hre_AccidentModel
@{
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    Layout = null;
}



<script>
    SetFieldRequired();


    function onSave() {
        onSaveAndContinue($('#form_Hre_Accident'), '@_hrm_Hr_Service', 'api/Hre_Accident/', '@ConstantControlName.HRM_gridHre_Accident_Grid_Name', '@ConstantDisplay.HRM_HR_Accident_AddNew');
        return false;
    }

    function onSaveClose() {
        onSaveAndClose($('#form_Hre_Accident'), '@_hrm_Hr_Service', 'api/Hre_Accident/', '@ConstantControlName.HRM_gridHre_Accident_Grid_Name', '@ConstantDisplay.HRM_HR_Accident_AddNew');
        return false;
    }

    function onSaveDataPopUp() {

        onlySave($('#form_Hre_Accident'), '@_hrm_Hr_Service', 'api/Hre_Accident/', '@ConstantControlName.HRM_gridHre_Accident_Grid_Name');
        return false;
    }
</script>
<style>
    label {
        min-width: 100px;
    }
</style>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Hre_Accident" }))
{


<div class="VnRMain">
    <table style="width:100%">
        <tbody>
            <tr><td colspan="3" style=""></td></tr>
            <tr>
                
                <td valign="top">
                    <div id="div2">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.ProfileID)
                            @Html.HiddenFor(mode => mode.ID)
                        </div>
                        <div class="FieldValue">
                            @{
                                IEnumerable valueProfile = new string[] { };
                                if (Model != null)
                                {
                                    valueProfile = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
                                }
                            }
                            @{
                                var Profile = new MultiSelectBuilderInfo()
                                 {
                                     Width=300,
                                     Name = "Accident_ProfileID",
                                     DataTextField = Hre_AccidentModel.FieldNames.ProfileName,
                                     DataValueField = Hre_AccidentModel.FieldNames.ID,
                                     Url = @_hrm_Hr_Service + "Hre_GetData/GetMultiProfile",
                                     Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                                     MaxSelectedItems = 1,
                                     Value = valueProfile
                                 };
                            }
                            @(Html.VnrMultiSelectFor(mode => mode.ProfileID, Profile))
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div2">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.AccidentTypeID)
                        </div>
                        <div class="FieldValue">
                            @{
                                IEnumerable valueAccidentType = new string[] { };
                                if (Model != null)
                                {
                                    valueAccidentType = new[] { new { AccidentTypeName = Model.AccidentTypeName, ID = Model.AccidentTypeID } };
                                }
                            }
                            @{
                                var AccidentType = new MultiSelectBuilderInfo()
                                 {
                                     Width=300,
                                     Name = "Accident_AccidentTypeID",
                                     DataTextField = "AccidentTypeName",
                                     DataValueField ="ID",
                                     Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiAccidentType",
                                     Placeholder = ConstantDisplay.HRM_Category_SelectAccidentType.TranslateString(),
                                     MaxSelectedItems = 1,
                                     Value = valueAccidentType
                                 };
                            }
                            @(Html.VnrMultiSelectFor(mode => mode.AccidentTypeID, AccidentType))
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div3">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.Date)
                        </div>
                        <div class="FieldValue">
                            @{
                                var Date = new DatePickerBuilderInfo() {
                                    Name = "Accident_Date",
                                StyleCss= "width:120px"
                                };
                            }
                            @Html.VnrDatePickerFor(model => model.Date, Date)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div6">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.Place)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextAreaFor(mode => mode.Place, "Width: 300px")
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div6">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.FirstMoney)
                        </div>
                        <div class="FieldValue">
                            @{
    var FirstMoney = new NumericTextBoxBuilderInfo<double>()
    {
        Name = "Accident_FirstMoney",
                                StyleCss="Width: 150px",
                                };
                            }
                            @(Html.VnrNumericTextBoxFor(mode => mode.FirstMoney,FirstMoney))
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div7">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.RealMoney)
                        </div>
                        <div class="FieldValue">
                            @{
    var RealMoney = new NumericTextBoxBuilderInfo<double>()
    {
        Name = "Accident_RealMoney",
        StyleCss = "Width: 150px",
                                };
                            }
                            @(Html.VnrNumericTextBoxFor(mode => mode.RealMoney, RealMoney))
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div8">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.CompanyPay)
                        </div>
                        <div class="FieldValue">
                            @{
    var CompanyPay = new NumericTextBoxBuilderInfo<double>()
    {
        Name = "Accident_CompanyPay",
        StyleCss = "Width: 150px",
                                };
                            }
                            @(Html.VnrNumericTextBoxFor(mode => mode.CompanyPay, CompanyPay))
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div9">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.Description)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextAreaFor(mode => mode.Description, "width:500px;height:100px;")
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div10">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.Note)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextAreaFor(mode => mode.Note, "width:500px;height:100px;")
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                </td>
              
            </tr>
            <tr>
                <td style="padding-top:2px; padding-bottom:10px;">
                    <div class="LineFooterCommandEdit">
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div>
                        <div class="FieldTitle150">

                        </div>
                        <div class="FieldValue">
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-RecruitmentCampaign", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-RecruitmentCampaign", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-RecruitmentCampaign", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        </div>

                    </div>
                </td>
            </tr>

        </tbody>
    </table>
</div>
}
