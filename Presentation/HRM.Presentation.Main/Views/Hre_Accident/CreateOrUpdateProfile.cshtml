@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Hr.Models
@using System.Collections;

@model Hre_AccidentModel
@{
    ViewBag.Title = "Hre Accident";
    Layout = null;
    var _Hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;

    Guid ProfileID = Guid.Empty;
    string param = ViewBag.profileID;
    if (!string.IsNullOrEmpty(param))
    {
        ProfileID = Common.ConvertToGuid(param.ToString());
    }
}
<script>
    // SetFieldRequired();
    SetFieldRequiredByScreenName('Hre_Accident_Tab');
    //Hàm lưu
    function onSave() {
        onlySave($('#form_Hre_Accident'), '@_Hrm_Hre_Service', 'api/Hre_Accident/', 'gridAccident', 'windowAccident');
        return false;
    }

    //Hàm lưu và đóng
    function onSaveClose() {
        onSaveAndClose($('#form_Hre_Accident'), '@_Hrm_Hre_Service', 'api/Hre_Accident/', 'gridAccident', 'windowAccident');
        return false;
    }
    @*//Ham lưu và tạo mới
    function doSaveNew() {
        if (doSave()) {
            KendoRouteMapping('Hrm_Hre_Web/Hre_Discipline/CreateOrUpdateProfile/', 'Hrm_Hre_Web', '@_hrm_Main_Web');
        }
    }*@

    function onSaveDataPopUp() {
        onlySave($('#form_Hre_Discipline'), '@_Hrm_Hre_Service', 'api/Hre_Accident/', 'gridAccident'); return false;
    }

</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Hre_Accident" }))
{
    @Html.HiddenFor(model => model.Accident_ID)
    <table style="width:100%">
        <tbody>
            <tr>
                <td valign="top">
                    <div style="width:100%">
                        <div id="div2">
                            <div class="FieldTitle150">
                                @{
    if (Model != null)
    {
        @Html.HiddenFor(m => m.ProfileID)
    }
    else
    {
        @Html.Hidden("ProfileID", ProfileID)
    }
                                }
                            </div>
                            <div class="FieldValue">

                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div3">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.Date)
                            </div>
                            <div class="FieldValue">
                                @{
    var Date = new DatePickerBuilderInfo()
    {
        StyleCss = "width:120px",
        Value = DateTime.Now.ToShortDateString()
    };
                                }
                                @Html.VnrDatePickerFor(model => model.Date, Date)
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div6">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.Place)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextAreaFor(mode => mode.Place, "width:500px;height:100px;")
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div6">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.FirstMoney)
                            </div>
                            <div class="FieldValue">
                                @{
    var FirstMoney = new NumericTextBoxBuilderInfo<double>()
    {
        StyleCss = "width:150px",
        Format = ConstantFormat.HRM_Format_Money
    };
                                }
                                @(Html.VnrNumericTextBoxFor(mode => mode.FirstMoney, FirstMoney))
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div7">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.RealMoney)
                            </div>
                            <div class="FieldValue">
                                @{
    var RealMoney = new NumericTextBoxBuilderInfo<double>()
    {
        StyleCss = "width:150px",
        Format = ConstantFormat.HRM_Format_Money
    };
                                }
                                @(Html.VnrNumericTextBoxFor(mode => mode.RealMoney, RealMoney))
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div8">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.CompanyPay)
                            </div>
                            <div class="FieldValue">
                                @{
    var CompanyPay = new NumericTextBoxBuilderInfo<double>()
    {
        StyleCss = "width:150px",
        Format = ConstantFormat.HRM_Format_Money
    };
                                }
                                @(Html.VnrNumericTextBoxFor(mode => mode.CompanyPay, CompanyPay))
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div9">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.Description)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextAreaFor(mode => mode.Description, "width:500px;height:100px;")
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div10">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.Note)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextAreaFor(mode => mode.Note, "width:500px;height:100px;")
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td style="padding-top:2px; padding-bottom:10px;">
                    <div class="LineFooterCommandEdit">
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div>
                        <div class="FieldTitle150">
                        </div>
                        <div class="FieldValue">
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save_Accident", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-Close_Accident", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        </div>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
}