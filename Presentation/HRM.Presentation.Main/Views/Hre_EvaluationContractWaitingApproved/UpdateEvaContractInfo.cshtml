@using HRM.Presentation.UI.Controls.Kendo
@using System.Collections
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo


@model HRM.Presentation.Hr.Models.Hre_ContractModel
@{
    Layout = null;
    var _Hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
}
<script>
    $(document).ready(function () {
        document.getElementById("UpdateEvaContractInfo_ContractNo").readOnly = true;
        document.getElementById("UpdateEvaContractInfo_ProfileName").readOnly = true;
        $("#UpdateEvaContractInfo_ContractNo").val($("#ContractNoTempExpiryContract").val());
        $("#UpdateEvaContractInfo_ProfileName").val($("#ProfileNameTempExpiryContract").val());
    });

    function onSaveClose() {
        $("#UpdateEvaContractInfo_DateEndNextContract").val(ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#UpdateEvaContractInfo_DateEndNextContract").val()));
        $("#UpdateEvaContractInfo_selectedIds").val(selectedIds.join(','));
        $("#ProfileIDs").val(selectedIds.join(','));
        var entity = JSON.stringify(slpitQueryEntity($("#form_UpdateEvaContractInfo").serialize()));
        $.ajax({
            url: '@_Hrm_Hre_Service' + "Hre_GetData/UpdateEvaContract",
            data: entity,
            type: 'POST',
            datatype: 'json',
            success: function (data) {
                debugger;
                hideAjaxLoading()
                if (data == "Success") {
                    ShowNotificationProcessor(data);
                    var window = $("#UpdateEvaContractInfo").data("kendoWindow");
                    window.refresh().close();
                    ReadGrid('@ConstantControlName.HRM_gridHre_EvaluationContractWaitingApproved_Name');
                }
                checkedNodes = [];
            }
        });
        return false;
    }
    function onSaveDataPopUp() {
        debugger;
        $("#UpdateEvaContractInfo_DateEndNextContract").val(ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#UpdateEvaContractInfo_DateEndNextContract").val()));
        $("#UpdateEvaContractInfo_selectedIds").val(selectedIds.join(','));
        $("#ProfileIDs").val(selectedIds.join(','));
        var entity = JSON.stringify(slpitQueryEntity($("#form_UpdateEvaContractInfo").serialize()));
        $.ajax({
            url: '@_Hrm_Hre_Service' + "Hre_GetData/UpdateEvaContract",
            data: entity,
            type: 'POST',
            datatype: 'json',
            success: function (data) {
                debugger;
                hideAjaxLoading()
                if (data == "Success") {
                    ShowNotificationProcessor(data);
                    ReadGrid('@ConstantControlName.HRM_gridHre_EvaluationContractWaitingApproved_Name');
                }
                checkedNodes = [];
            }
        });
        return false;
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_UpdateEvaContractInfo" }))
{
    @Html.HiddenFor(mode => mode.ProfileIDs)
    @Html.HiddenFor(mode => mode.selectedIds, new { @ID = "UpdateEvaContractInfo_selectedIds" })
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.StatusEvaluation)
    <table>
        <tr>
            <td>
                <div id="div2">
                    <div class="FieldTitle170">
                        @Html.VnrLabelFor(model => model.ProfileName)
                    </div>
                    <div class="FieldValue">
                        @{
    var _ProfileName = new TextBoxBuilderInfo()
    {
        Name = "UpdateEvaContractInfo_ProfileName",
        Width = 300,
    };
                        }
                        @Html.VnrTextBoxFor(model => model.ProfileName, _ProfileName)
                    </div>

                </div>
                <div id="div2">
                    <div class="FieldTitle170">
                        @{
    var _ContractNo = new TextBoxBuilderInfo()
    {
        Name = "UpdateEvaContractInfo_ContractNo",
        Width = 300,
    };
                        }
                        @Html.VnrLabelFor(model => model.ContractNo)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(model => model.ContractNo, _ContractNo)
                    </div>
                </div>
                <div id="div33">
                    <div class="FieldTitle170">
                        @Html.VnrLabelFor(mode => mode.RankDetailForNextContract)
                    </div>
                    <div class="FieldValue">
                        @{
    var SalaryRankNameNextContract = new ComboBoxBuilderInfo()
     {
         Name = "UpdateEvaContractInfo_RankDetailForNextContract",
         DataTextField = "SalaryRankName",
         DataValueField = "ID",
         Url = _Hrm_Hre_Service + "Cat_GetData/GetMultiSalaryRank",
         StyleCss = "width:300px;",
         Value = Model != null ? Model.RankDetailForNextContract.ToString(): string.Empty
     };
                        }
                        @Html.VnrComboBoxFor(mode => mode.RankDetailForNextContract, SalaryRankNameNextContract).Text(Model != null ? Model.SalaryRankNameNextContract : string.Empty)
                    </div>
                </div>
                <div id="div33">
                    <div class="FieldTitle170">
                        @Html.VnrLabel(ConstantDisplay.HRM_HR_Contract_DateEndNextContract.TranslateString())
                    </div>
                    <div class="FieldValue">
                        @{
    var _DateEndNextContract = new DatePickerBuilderInfo()
    {
        Name = "UpdateEvaContractInfo_DateEndNextContract",
        StyleCss = "width:100px;",
    };
                        }
                        @Html.VnrDatePickerFor(model => model.DateEndNextContract, _DateEndNextContract)
                    </div>
                </div>
                <div id="div33">
                    <div class="FieldTitle170">
                        @Html.VnrLabelFor(mode => mode.Notes)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(model => model.Notes)
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle170">
                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-UpdateEvaContractInfo", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-UpdateEvaContractInfot", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}
