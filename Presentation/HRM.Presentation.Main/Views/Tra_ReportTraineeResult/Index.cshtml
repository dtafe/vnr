@using HRM.Infrastructure.Security;
@using HRM.Presentation.Training.Models;
@using HRM.Infrastructure.Utilities;
@using HRM.Presentation.UI.Controls.Kendo
@model HRM.Presentation.Training.Models.Tra_ReportTraineeResultSearchModel
@{
    ViewBag.Title = ConstantDisplay.HRM_Tra_Trainee_Title.TranslateString();
    Layout = null;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var controller = ViewContext.RouteData.Values["Controller"].ToString();
    var action = ViewContext.RouteData.Values["Action"].ToString();
    var screen = controller + "/" + action;
    IList<SelectListItem> listTraineeStatus = Enum.GetValues(typeof(EnumDropDown.TraineeStatus))
            .Cast<EnumDropDown.TraineeStatus>()
            .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
            .ToList();
}
@Html.Hidden("Screen", screen)



<script type="text/javascript">
    var checkedNodes = [];
    var userLG = $('#UserLoginId').val();
    var isCreateTemplate = false;
    var isCreateTemplateForDynamicGrid = false;
    //Khởi tạo điều kiện tìm kiếm
    function filterFieldInfo(isExport) {
        debugger;
        var _courseID = $('#@Html.FieldIdFor(model => model.CourseID)').val() != null ? $('#@Html.FieldIdFor(model => model.CourseID)').val().join(',') : $('#@Html.FieldIdFor(model => model.CourseID)').val();
        var _classID = $('#@Html.FieldIdFor(model => model.ClassID)').val() != null ? $('#@Html.FieldIdFor(model => model.ClassID)').val().join(',') : $('#@Html.FieldIdFor(model => model.ClassID)').val();
        var _ScoreTypeID = $('#@Html.FieldIdFor(model => model.ScoreTypeID)').val();
        var _RequirementTrainIDs = $('#@Html.FieldIdFor(model => model.RequirementTrainIDs)').val() != null ? $('#@Html.FieldIdFor(model => model.RequirementTrainIDs)').val().join(',') : $('#@Html.FieldIdFor(model => model.RequirementTrainIDs)').val();
        var dataParameter = {
            ProfileName: $('#@Html.FieldIdFor(model => model.ProfileName)').val(),
            CodeEmp: $('#@Html.FieldIdFor(model => model.CodeEmp)').val(),
            CourseID: _courseID,
            ClassID: _classID,
            DateFrom: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateFrom").val()),
            DateTo: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateTo").val()),
            OrgStructureID: checkedNodes.join(','),
            Status: $('#@Html.FieldIdFor(model=>model.Status)').val(),
            ScoreTypeID: _ScoreTypeID,
            RequirementTrainIDs: _RequirementTrainIDs,
            IsExport: false,
            ValueFields: $('#valueFieldsGrid').val(),
            IsCreateTemplate: isCreateTemplate,
            IsCreateTemplateForDynamicGrid: isCreateTemplateForDynamicGrid,
        };
        if (isExport == true) {
            dataParameter["ExportId"] = $('#ddlScreenName').val();
        }
        return dataParameter;
    };


    $(document).ready(function () {
        //Xử lý show hide form tìm kiếm
        ShowHidePanel();
        //Jump anchor
        jumpAnchor("anchor");
        $("#btnSearch").click(function () {
            var treeView = $("#treeviewOrg").data("kendoTreeView");
            checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes)
            var grid = $('#gridTra_ReportTraineeResult').data("kendoGrid");
            grid.dataSource.read();
            selectedIds = [];
            checkedNodes = [];
        });

    });

    $("#btnExport").click(function () {
        var isAccess = checkPermission(PrivilegeType.Export, '@HRM.Infrastructure.Security.ConstantPermission.Tra_ReportTraineeResult');
        if (!isAccess) {
            return;
        }
        isCreateTemplate = false;
        isCreateTemplateForDynamicGrid = false;
        if ($('#ddlScreenName').val() == "") {
            ExportFail();
            return;
        }
        var urlGetData = '@_hrm_Hre_Service' + "Tra_GetData/GetReportTraineeResult";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo(true);
        ExportAll(urlGetData, dataParameter, urlDownload);
        checkedNodes = [];
    });

    $("#btnCreateTemplate").click(function () {

        isCreateTemplate = true;
        isCreateTemplateForDynamicGrid = true;
        CreateTemplate('@_hrm_Hre_Service' + '/Tra_GetData/GetReportTraineeResult', filterFieldInfo(true));

    });
</script>
@*@Html.HiddenFor(m => m.ActionStatus)*@
<div id="Popup_AddPoint"></div>
<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->

            <div class="contendSearchWidge">
                <form id="form-search">
                    <div>
                        <div class="hrm_box">
                            <div id="div2">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.ProfileName)
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrTextBoxFor(model => model.ProfileName)
                                </div>
                            </div>
                            <div id="div2">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.CodeEmp)
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrTextBoxFor(model => model.CodeEmp)
                                </div>
                            </div>
                            <div>
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.OrgStructureID)
                                </div>
                                <div class="FieldValue">
                                    @Html.Partial("EditorTemplates/OrgStructureTreeViewDropdown")
                                </div>
                            </div>
                        </div>
                        <div class="hrm_box">
                            <div id="div2">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.CourseID)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var CourseID = new MultiSelectBuilderInfo()
                                        {
                                            DataTextField = "CourseName",
                                            DataValueField = "ID",
                                            Url = _hrm_Hre_Service + "Tra_GetData/GetMultiTraCourse",
                                            Placeholder = ConstantDisplay.HRM_Category_SelectCourse.TranslateString(),
                                            Autobind = false
                                        };
                                    }
                                    @(Html.VnrMultiSelectFor(mode => mode.CourseID, CourseID))
                                </div>
                            </div>
                            <div id="div2">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.ClassID)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var ClassID = new MultiSelectBuilderInfo()
                                        {
                                            DataTextField = "ClassName",
                                            DataValueField = "ID",
                                            Url = _hrm_Hre_Service + "Tra_GetData/GetMultiClass",
                                            Placeholder = ConstantDisplay.HRM_Category_SelectClass.TranslateString(),
                                            Autobind = false
                                        };
                                    }
                                    @(Html.VnrMultiSelectFor(mode => mode.ClassID, ClassID))
                                </div>
                            </div>
                            <div>
                                <div class="FieldTitle">
                                    @Html.VnrLabel(ConstantDisplay.HRM_HR_DateLearn.TranslateString())
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var dateFrom = new DatePickerBuilderInfo()
                                        {
                                            StyleCss = "width:100px;",
                                            Placeholder = ConstantDisplay.HRM_HR_Profile_DateFrom.TranslateString(),
                                        };
                                    }
                                    @Html.VnrDatePickerFor(model => model.DateFrom, dateFrom)
                                    @{
                                        var dateTo = new DatePickerBuilderInfo()
                                        {
                                            StyleCss = "width:100px;",
                                            Placeholder = ConstantDisplay.HRM_HR_Profile_DateTo.TranslateString(),
                                        };
                                    }
                                    @Html.VnrDatePickerFor(model => model.DateTo, dateTo)
                                </div>
                            </div>
                        </div>
                        <div class="hrm_box">
                            <div>
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(model => model.RequirementTrainIDs)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var _RequirementTrain = new MultiSelectBuilderInfo
                                        {
                                            DataTextField = "RequirementTrainName",
                                            DataValueField = "ID",
                                            Url = @_hrm_Hre_Service + "Tra_GetData/GetMultiRequirementTrain",
                                            //  MaxSelectedItems = 1,
                                            Placeholder = ConstantDisplay.HRM_Training_TrainingRequirements_Select.TranslateString(),
                                            Autobind = false
                                        };
                                    }
                                    @Html.VnrMultiSelectFor(mode => mode.RequirementTrainIDs, _RequirementTrain)
                                </div>
                            </div>
                            <div>
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(model => model.Status)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var _Status = new DropDownListBuilderInfo()
                                        {
                                            DataTextField = "Text",
                                            DataValueField = "Value",
                                            BindTo = listTraineeStatus
                                        };
                                    }
                                    @Html.VnrDropDownListFor(model => model.Status, _Status)
                                </div>
                            </div>
                            <div>
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(model => model.ScoreTypeID)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var _ScoreTypeID = new ComboBoxBuilderInfo()
                                        {
                                            DataTextField = "ScoreTypeName",
                                            DataValueField = "ID",
                                            Url = _hrm_Hre_Service + "Tra_GetData/GetMultiScoreType",
                                            StyleCss="Width:200px",
                                            Placeholder = ConstantDisplay.HRM_Common_PleaseSelect.TranslateString(),
                                        };
                                    }
                                    @(Html.VnrComboBoxFor(mode => mode.ScoreTypeID, _ScoreTypeID))
                                </div>
                            </div>
                        </div>
                        @*<div class="hrm_box">
                            <div>
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(model => model.PlanID)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var _PlanID = new ComboBoxBuilderInfo()
                                        {
                                            DataTextField = "PlanName",
                                            DataValueField = "ID",
                                            Url = _hrm_Hre_Service + "Tra_GetData/GetMultiPlanName",
                                            StyleCss = "Width:200px",
                                            Placeholder = ConstantDisplay.HRM_Common_PleaseSelect.TranslateString(),
                                        };
                                    }
                                    @(Html.VnrComboBoxFor(mode => mode.PlanID, _PlanID))
                                </div>
                            </div>
                        </div>*@
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="commandToolBarWidge">
    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    <div style="float:right">
        <script>
                function GetScreenName() {
                    return {
                        screenName: '@screen'
                    };
                }
        </script>
        <div class="FieldValue" style="margin-top: 0;">
            @{
                var screenName = new DropDownListBuilderInfo()
                {
                    Name = "ddlScreenName",
                    DataTextField = "ExportName",
                    DataValueField = "ID",
                    Url = @_hrm_Hre_Service + "Cat_GetData/GetScreenName",
                    StyleCss = "width:200px;",
                    Data = "GetScreenName",
                };
            }
            @Html.VnrDropDownList(screenName)

            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport", Content = ConstantDisplay.HRM_Common_Export_Button.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateTemplate", Content = ConstantDisplay.HRM_Common_CreateTemplate_Button.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
        </div>
    </div>
</div>

<div>
    <!--Khai báo các thông tin cho Grid-->
    @{
        string[] valueFields = new string[]
                            {
                             
                Tra_ReportTraineeResultModel.FieldNames.CodeEmp,
                Tra_ReportTraineeResultModel.FieldNames.ProfileName,
                Tra_ReportTraineeResultModel.FieldNames.E_UNIT,
                Tra_ReportTraineeResultModel.FieldNames.E_DIVISION,
                Tra_ReportTraineeResultModel.FieldNames.E_DEPARTMENT,
                Tra_ReportTraineeResultModel.FieldNames.E_TEAM,
                Tra_ReportTraineeResultModel.FieldNames.E_SECTION,
                Tra_ReportTraineeResultModel.FieldNames.RequirementTrainName,
                Tra_ReportTraineeResultModel.FieldNames.CourseCode,
                Tra_ReportTraineeResultModel.FieldNames.CourseName,
                Tra_ReportTraineeResultModel.FieldNames.ClassCode,
                Tra_ReportTraineeResultModel.FieldNames.ClassName,
                Tra_ReportTraineeResultModel.FieldNames.Score1,
                Tra_ReportTraineeResultModel.FieldNames.Score2,
                Tra_ReportTraineeResultModel.FieldNames.Score3,
                Tra_ReportTraineeResultModel.FieldNames.StatusView,
                Tra_ReportTraineeResultModel.FieldNames.StartDate,
                Tra_ReportTraineeResultModel.FieldNames.EndDate,
                Tra_ReportTraineeResultModel.FieldNames.Result,
                Tra_ReportTraineeResultModel.FieldNames.TrainLevelName,
       

                            };


        Dictionary<string, int> sizeFields = new Dictionary<string, int>()
                            {
                 
                {Tra_ReportTraineeResultModel.FieldNames.CodeEmp,110},
                {Tra_ReportTraineeResultModel.FieldNames.ProfileName,130},
                {Tra_ReportTraineeResultModel.FieldNames.E_DEPARTMENT,135},
                {Tra_ReportTraineeResultModel.FieldNames.E_DIVISION,135},
                {Tra_ReportTraineeResultModel.FieldNames.E_SECTION,135},
                {Tra_ReportTraineeResultModel.FieldNames.E_TEAM,135},
                {Tra_ReportTraineeResultModel.FieldNames.E_UNIT,135},
                {Tra_ReportTraineeResultModel.FieldNames.RequirementTrainName,135},

                {Tra_ReportTraineeResultModel.FieldNames.CourseCode,130},
                {Tra_ReportTraineeResultModel.FieldNames.CourseName,130},
                {Tra_ReportTraineeResultModel.FieldNames.ClassCode,130},
                {Tra_ReportTraineeResultModel.FieldNames.ClassName,130},
                {Tra_ReportTraineeResultModel.FieldNames.Score1,100},
                {Tra_ReportTraineeResultModel.FieldNames.Score2,100},
                {Tra_ReportTraineeResultModel.FieldNames.Score3,100},
                    {Tra_ReportTraineeResultModel.FieldNames.StatusView,90},
                {Tra_ReportTraineeResultModel.FieldNames.StartDate,90},
                {Tra_ReportTraineeResultModel.FieldNames.EndDate,90},
                {Tra_ReportTraineeResultModel.FieldNames.Result,100},
                {Tra_ReportTraineeResultModel.FieldNames.TrainLevelName,110},
            

                            };

        Dictionary<string, string> displayFields = new Dictionary<string, string>()
                            {
            
                {Tra_ReportTraineeResultModel.FieldNames.CodeEmp, ConstantDisplay.HRM_Att_Report_CodeEmp},
                {Tra_ReportTraineeResultModel.FieldNames.ProfileName, ConstantDisplay.HRM_Tra_Trainee_ProfileID},
                {Tra_ReportTraineeResultModel.FieldNames.E_UNIT, ConstantDisplay.HRM_Hre_Report_E_UNIT},
                {Tra_ReportTraineeResultModel.FieldNames.E_DIVISION, ConstantDisplay.HRM_Hre_Report_E_DIVISION},
                {Tra_ReportTraineeResultModel.FieldNames.E_DEPARTMENT, ConstantDisplay.HRM_Hre_Report_E_DEPARTMENT},
                {Tra_ReportTraineeResultModel.FieldNames.E_SECTION, ConstantDisplay.HRM_Hre_Report_E_SECTION},
                {Tra_ReportTraineeResultModel.FieldNames.E_TEAM, ConstantDisplay.HRM_Hre_Report_E_TEAM},
                {Tra_ReportTraineeResultModel.FieldNames.CourseCode,  ConstantDisplay.HRM_Tra_Course_Code},
                {Tra_ReportTraineeResultModel.FieldNames.CourseName,  ConstantDisplay.HRM_Tra_Class_CourseName},
                {Tra_ReportTraineeResultModel.FieldNames.ClassCode,  ConstantDisplay.HRM_Tra_Class_Code},
                {Tra_ReportTraineeResultModel.FieldNames.ClassName,  ConstantDisplay.HRM_Tra_Trainee_ClassID},
                {Tra_ReportTraineeResultModel.FieldNames.Score1,  ConstantDisplay.HRM_Tra_ReportTraineeResult_Score1},
                {Tra_ReportTraineeResultModel.FieldNames.Score2,  ConstantDisplay.HRM_Tra_ReportTraineeResult_Score2},
                {Tra_ReportTraineeResultModel.FieldNames.Score3,  ConstantDisplay.HRM_Tra_ReportTraineeResult_Score3},
                {Tra_ReportTraineeResultModel.FieldNames.RequirementTrainName,  ConstantDisplay.HRM_Tra_RequirementTrain_RequirementTrainName},
                
                     {Tra_ReportTraineeResultModel.FieldNames.StatusView, ConstantDisplay.HRM_Att_Report_Status},
                {Tra_ReportTraineeResultModel.FieldNames.StartDate,  ConstantDisplay.HRM_Tra_Class_StartDate},
                {Tra_ReportTraineeResultModel.FieldNames.EndDate,  ConstantDisplay.HRM_Tra_Class_EndDate},
                {Tra_ReportTraineeResultModel.FieldNames.Result,  ConstantDisplay.HRM_Tra_Trainee_Result},
                {Tra_ReportTraineeResultModel.FieldNames.TrainLevelName,  ConstantDisplay.HRM_Tra_Trainee_TrainLevelID},
           

                            };

        var grid = new GridBuilderInfo
        {
            Name = "gridTra_ReportTraineeResult",
            ValueFields=valueFields,
            SizeFields=sizeFields,
            DisplayFields=displayFields,
            ReadActionUrl = _hrm_Hre_Service + "Tra_GetData/GetReportTraineeResult/",
            ReadData = "filterFieldInfo",
            ShowEditIcon = false,
            ShowCheckAll = false,
            ShowCheckbox = false
        };
    }

    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<Tra_ReportTraineeResultModel>(grid))
</div>


@{
    var listValueField = grid.ValueFields;
    var valueFields1 = string.Empty;
    if (listValueField != null)
    {
        for (int i = 0; i < listValueField.Count(); i++)
        {
            valueFields1 += "," + listValueField[i];
        }
    }
}
@Html.Hidden("valueFieldsGrid", valueFields1)
