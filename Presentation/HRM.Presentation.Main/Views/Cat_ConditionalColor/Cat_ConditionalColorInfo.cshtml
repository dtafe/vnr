@using HRM.Infrastructure.Utilities
@using System.Collections
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Category.Models;
@model Cat_ConditionalColorModel

@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    IList<SelectListItem> ilCondition = Enum.GetValues(typeof(EnumDropDown.Condition))
        .Cast<EnumDropDown.Condition>()
        .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
        .ToList();
}
<script>
    SetFieldRequired();
    $(document).ready(function () {
        
        // var ColorCode1 = $("#ColorCode1").data("kendoColorPicker");
        var ColorCode1 = $("#ColorCode1").val();
        var BGColorCode1 = $("#BGColorCode1").data("kendoColorPicker");

        var ColorCode = $("#ColorCode").val();
        try {
            ColorCode1.element.attr("value") = ColorCode;
            ColorCode = kendo.parseColor(ColorCode);
            ColorCode1.value(ColorCode);
        } catch (ex) {

        }
        var BGColorCode = $("#BGColorCode").val();
        try {
            BGColorCode = kendo.parseColor(BGColorCode);
            BGColorCode1.value(BGColorCode);
        } catch (ex) {

        }



    });
    function select() {
        
        var _objectName = $('#ConditionalColorName').val();
        $.ajax({
            url: '@_hrm_Hr_Service' + 'Cat_GetData/GetMultiChildField',
            data: { objectName: _objectName },
            type: 'Get',
            success: function (data) {
                $("#PropertyName").kendoComboBox({
                    dataTextField: "Name",
                    dataValueField: "Name",
                    dataSource: data
                });

            }
        });
    }
    function pickerSelect(e) {
        
        $("#ColorCode").val(e.value);
    }
    function pickerSelect1(e) {
        
        $("#BGColorCode").val(e.value);
    }
    function onSaveNew() {
        var dataCheck = data[''];

        onSaveAndContinue($('#form_Cat_ConditionalColor'), '@_hrm_Hr_Service', 'api/Cat_ConditionalColor/', '@ConstantControlName.HRM_HR_Cat_ConditionalColor_Grid_Name', '@ConstantControlName.HRM_HR_Cat_ConditionalColor_PopUp_Name'); return false;

    }

    function onSaveClose() {
        onSaveAndClose($('#form_Cat_ConditionalColor'), '@_hrm_Hr_Service', 'api/Cat_ConditionalColor/', '@ConstantControlName.HRM_HR_Cat_ConditionalColor_Grid_Name', '@ConstantControlName.HRM_HR_Cat_ConditionalColor_PopUp_Name'); return false;

    }
    function onSaveDataPopUp() {

        onlySave($('#form_Cat_ConditionalColor'), '@_hrm_Hr_Service', 'api/Cat_ConditionalColor/', '@ConstantControlName.HRM_HR_Cat_ConditionalColor_Grid_Name'); return false;
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Cat_ConditionalColor" }))
{
    @Html.HiddenFor(model => model.ID)
    <div>

        <div class="FieldTitle150">
            @Html.VnrLabelFor(mode => mode.ConditionalCode)
            @{
    var txtCode = new TextBoxBuilderInfo()
    {
        Width = 300,
        Name = "WoundedSoldierTypes_Code",
        Value = Model != null ? Model.ConditionalCode : null,
    };
            }
        </div>
        <div class="FieldValue">

            @Html.VnrTextBoxFor(mode => mode.ConditionalCode, txtCode)

        </div>
    </div>
    <div>
        <div class="FieldTitle150">
            @Html.VnrLabelFor(mode => mode.ConditionalColorName)
        </div>
        <div class="FieldValue">

            @{
    var _objectName = new ComboBoxBuilderInfo()
    {
        Name = "ConditionalColorName",
        DataTextField = "Name",
        DataValueField = "Name",
        Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiObjectName",
        Placeholder = ConstantDisplay.HRM_Category_ConditionalColor_ConditionalColorName.TranslateString(),
        StyleCss = "Width:300px",
        Value = Model == null ? string.Empty : Model.ConditionalColorName,
        EventChange = "select",
    };
            }
            @(Html.VnrComboBoxFor(mode => mode.ConditionalColorName, _objectName))

        </div>
        <div style="clear: both;"></div>
    </div>
    <div>
        <div class="FieldTitle150">
            @Html.VnrLabelFor(mode => mode.PropertyName)
        </div>
        <div class="FieldValue">
            @Html.VnrTextBoxFor(model => model.PropertyName, "width:300px")
        </div>
        <div style="clear: both;"></div>
    </div>
    <div>
        <div class="FieldTitle150">
        </div>
        <div class="FieldValue">
            @{
    var Condition = new DropDownListBuilderInfo()
    {
        BindTo = ilCondition,
        DataTextField = "Text",
        DataValueField = "Value",
        StyleCss = "width:300px"
    };
            }
            @Html.VnrDropDownListFor(model => model.Condition, Condition)
        </div>
        <div style="clear: both;"></div>
    </div>
    <div>
        <div class="FieldTitle150">
        </div>
        <div class="FieldValue">
            @Html.VnrTextBoxFor(model => model.Value)
        </div>
        <div style="clear: both;"></div>
    </div>
    <div>

        <div class="FieldTitle150">
            @Html.VnrLabelFor(mode => mode.ColorCode)
        </div>
        <div class="FieldValue">
            @Html.VnrTextBoxFor(mode => mode.ColorCode,"width:300px")
            @(Html.Kendo().ColorPicker()
            .Name("ColorCode1")
                .Value("#22cc22")
                .Events(events => events
                .Select("pickerSelect")))
        </div>
    </div>
    <div>

        <div class="FieldTitle150">
            @Html.VnrLabelFor(mode => mode.BGColorCode)
        </div>
        <div class="FieldValue">

            @Html.VnrTextBoxFor(mode => mode.BGColorCode, "width:300px")
            @(Html.Kendo().ColorPicker()
        .Name("BGColorCode1")
                .Value("#22cc22")
                .Events(events => events
                    .Select("pickerSelect1")))

        </div>
    </div>

    <div>
        <div class="FieldTitle150" style="width: 30px;"></div>
        <div class="FieldValue">
            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-CONDITIONALCOLOR", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveNew", Name = "save-New-CONDITIONALCOLOR", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-CONDITIONALCOLOR", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
        </div>
    </div>
}
