@using System.Collections

@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.Hr.Models
@{
    IList<SelectListItem> listStopWorkType = Enum.GetValues(typeof(EnumDropDown.StopWorkType))
 .Cast<EnumDropDown.StopWorkType>()
 .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() }).OrderBy(p=>p.Text)
 .ToList();

    IList<SelectListItem> listTypeSuspense = Enum.GetValues(typeof(EnumDropDown.TypeSuspense))
    .Cast<EnumDropDown.TypeSuspense>()
    .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() }).OrderBy(p=>p.Text)
    .ToList();

    IList<SelectListItem> listTypeOfStop = Enum.GetValues(typeof(EnumDropDown.TypeOfStop))
   .Cast<EnumDropDown.TypeOfStop>()
   .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() }).OrderBy(p=>p.Text)
   .ToList();
    
    Layout = null;
    var _Hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
}

@model Hre_ProfileModel
<script>
    function onChanged(e) {
        debugger;
        var typeSus = $("#TypeSuspense").data("kendoDropDownList");
        var typeStop = $("#TypeOfStopID").data("kendoComboBox");
        var stopWorkType = e.sender._old;
        if (stopWorkType == '@EnumDropDown.StopWorkType.E_SUSPENSE.ToString()') {
            typeSus.readonly(false);
            typeStop.readonly();
            typeStop.readonly(true);
            $("#DivTypeSuspense").show();
            $("#DivTypeOfStop").hide();
        } else if (stopWorkType == '@EnumDropDown.StopWorkType.E_STOP.ToString()') {
            typeSus.readonly();
            typeStop.readonly(false);
            $("#DivTypeSuspense").hide();
            $("#DivTypeOfStop").show();
        }
    }
</script>
<div class="VnRMain">
    <table style="width:100%">
        <tbody>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                <td valign="top">
                    <div style="display: block; padding-top: 10px; float: left; width:100%">
                        <fieldset>
                            <legend>
                                @ConstantDisplay.HRM_HR_Profile_Quit.TranslateString()
                            </legend>
                            <div class="hrm_box">
                                @Html.HiddenFor(model => model.ID)
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelForNoneIcon(model => model.StopWorkType)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _StopWorkType = new DropDownListBuilderInfo()
                                            {
                                                DataTextField = "Text",
                                                DataValueField = "Value",
                                                BindTo = listStopWorkType,
                                                Value = (Model == null || Model.StopWorkType == null) ? null : Model.StopWorkType,
                                                EventChange = "onChanged"
                                            };
                                        }
                                        @Html.VnrDropDownListFor(model => model.StopWorkType, _StopWorkType)
                                    </div>
                                </div>
                                <div>
                                    <div id="DivTypeSuspense" hidden="hidden">
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle170">
                                                @Html.VnrLabelForNoneIcon(model => model.TypeSuspense)
                                            </div>
                                            <div class="FieldValue">
                                                @{
                                                    var _TypeSuspense = new DropDownListBuilderInfo()
                                                    {
                                                        DataTextField = "Text",
                                                        DataValueField = "Value",
                                                        BindTo = listTypeSuspense,

                                                        Value = (Model == null || Model.TypeSuspense == null) ? null : Model.TypeSuspense

                                                    };
                                                }
                                                @Html.VnrDropDownListFor(model => model.TypeSuspense, _TypeSuspense)
                                            </div>
                                        </div>
                                    </div>
                                    <div id="DivTypeOfStop" hidden="hidden">
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle170">
                                                @Html.VnrLabelForNoneIcon(model => model.TypeOfStopID)
                                            </div>
                                            <div class="FieldValue">
                                                @{
                                                    var _TypeOfStopID = new ComboBoxBuilderInfo()
                                                    {
                                                        DataTextField = "NameEntityName",
                                                        DataValueField = "ID",
                                                        Url=@_Hrm_Hre_Service+"Cat_GetData/GetMultiTypeOfStop",
                                                        Value = Model == null ? string.Empty : Model.TypeOfStopID.ToString(),
                                                        StyleCss="width:200px",
                                                        Placeholder = @ConstantDisplay.HRM_Common_PleaseSelect.TranslateString()
                                                    };
                                                }
                                                @Html.VnrComboBoxFor(model => model.TypeOfStopID, _TypeOfStopID).Text(Model != null ? Model.TypeOfStopName != null?Model.TypeOfStopName.ToString():string.Empty:string.Empty)
                                            </div>
                                        </div>
                                    </div>
                                    </div>
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelForNoneIcon(model => model.ResReasonID)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _resignReasonID = new ComboBoxBuilderInfo()
                                            {
                                                DataTextField = "ResignReasonName",
                                                DataValueField = "ID",
                                                Url = @_Hrm_Hre_Service + "Cat_GetData/GetMultiResignReason",
                                                Value = Model == null ? string.Empty : Model.ResReasonID.ToString()
                                            };
                                        }
                                        @Html.VnrComboBoxFor(mode => mode.ResReasonID, _resignReasonID).Text(Model == null ? string.Empty : Model.ResignReasonName)
                                    </div>
                                </div>
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelForNoneIcon(model => model.RequestDate)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var requestDate = new DatePickerBuilderInfo() {
                                                Name = "RequestDate"
                                            };
                                        }
                                        @Html.VnrDatePickerFor(model => model.RequestDate, requestDate)
                                    </div>
                                </div>
                            
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelForNoneIcon(model => model.DateQuitRequest)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var DateQuitRequest = new DatePickerBuilderInfo()
                                            {
                                                Name = "DateQuit"
                                            };
                                        }
                                        @Html.VnrDatePickerFor(model => model.DateQuitRequest, DateQuitRequest)
                                    </div>
                                </div>
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelForNoneIcon(model => model.ProfileSign)
                                    </div>
                                    <div class="FieldValue">
                                        @Html.VnrTextBoxFor(model => model.ProfileSign, "Width: 150px")
                                    </div>
                                </div>
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelForNoneIcon(model => model.DateQuit)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var dateQuit = new DatePickerBuilderInfo()
                                            {
                                                Name = "ProfileQuit_DateQuit"
                                            };
                                        }
                                        @Html.VnrDatePickerFor(model => model.DateQuit, dateQuit)
                                    </div>
                                </div>
                              
                               
                            </div>
                            <div style="float: left">
                          
                            
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelForNoneIcon(model => model.ResignNo)
                                    </div>
                                    <div class="FieldValue">
                                        @Html.VnrTextBoxFor(mode => mode.ResignNo, "Width: 150px")
                                    </div>
                                </div>
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelForNoneIcon(model => model.DateQuitSign)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var DateQuitSign = new DatePickerBuilderInfo()
                                            {
                                                Name = "ProfileQuit_DateQuitSign"
                                            };
                                        }
                                        @Html.VnrDatePickerFor(model => model.DateQuitSign, DateQuitSign)
                                    </div>
                                </div>
                            
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelForNoneIcon(model => model.ReceiveHealthIns)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var ReceiveHealthIns = new CheckBoxBuilderInfo()
                                            {
                                            };
                                            if (Model != null)
                                            {
                                                if (Model.ReceiveHealthIns == true)
                                                {
                                                    ReceiveHealthIns.Value = true;
                                                }
                                                else
                                                {
                                                    ReceiveHealthIns.Value = false;
                                                }
                                            }
                                        }
                                        @Html.VnrCheckBoxFor(model => model.ReceiveHealthIns, ReceiveHealthIns)
                                    </div>
                                </div>
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelForNoneIcon(model => model.ReceiveHealthInsDate)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _ReceiveHealthInsDate = new DatePickerBuilderInfo()
                                            {
                                                Name = "ProfileQuit_ReceiveHealthInsDate"
                                            };
                                        }
                                        @Html.VnrDatePickerFor(model => model.ReceiveHealthInsDate, _ReceiveHealthInsDate)
                                    </div>
                                </div>
                                <div class="DivContentTitleValue" id="div33">
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelForNoneIcon(model => model.IsBlackList)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var IsBlackList = new CheckBoxBuilderInfo()
                                            {
                                            };
                                            if (Model != null)
                                            {
                                                if (Model.IsBlackList == true)
                                                {
                                                    IsBlackList.Value = true;
                                                }
                                                else
                                                {
                                                    IsBlackList.Value = false;
                                                }
                                            }
                                        }
                                        @Html.VnrCheckBoxFor(model => model.IsBlackList, IsBlackList)
                                    </div>
                                </div>
                                <div>   
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle170">
                                                @Html.VnrLabelForNoneIcon(model => model.ResonBackList)
                                            </div>
                                            <div class="FieldValue">
                                                @Html.VnrTextAreaFor(model => model.ResonBackList)
                                            </div>
                                     </div>
                                </div>
                            </div>                  
                        </fieldset>
                    </div>
                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
        </tbody>
    </table>
</div>

<script>
    $(document).ready(function () {
        debugger;
        var _stopWorkType = $("#StopWorkType").data("kendoDropDownList");
        var _typeSuspend = $("#TypeSuspense").data("kendoDropDownList");
        var _typeStop = $("#TypeOfStopID").data("kendoComboBox");
        if (_stopWorkType._old == '@EnumDropDown.StopWorkType.E_SUSPENSE.ToString()') {
            _typeSuspend.readonly(false);
            _typeStop.readonly();
            $("#DivTypeSuspense").show();
            $("#DivTypeOfStop").hide();
        } else if (_stopWorkType._old == '@EnumDropDown.StopWorkType.E_STOP.ToString()') {
            _typeStop.readonly(false);
            _typeSuspend.readonly();
            $("#DivTypeOfStop").show();
            $("#DivTypeSuspense").hide();
        }
    });
</script>


























