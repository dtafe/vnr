@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
}
@using HRM.Infrastructure.Security
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.HrmSystem.Models
@using HRM.Presentation.Hr.Models
@using HRM.Presentation.UI.Controls.Kendo

@model HRM.Presentation.Hr.Models.Hre_ProfileModel
@{
    var profileID = Guid.Empty;
    var ProfileName = string.Empty;
    if (Model != null)
    {
        profileID = Model.ID;
        ProfileName = Model.ProfileName;
    }
}
@{
    var window = new WindowBuilderInfo
    {
        Name = ConstantControlName.HRM_HR_Relative_PopUp_Name,
        Visible = false,
        Width = 1200,
        LoadContentFrom = @_hrm_Main_Web + "Hre_Profile/RelativeInfo?profileID=" + profileID + "&ProfileName=" + ProfileName
    };
}
@(Html.VnrWindow(window))
@{
    var windowError = new WindowBuilderInfo
    {
        Name = "windowError",
        Visible = false,
        Height = 150,
        Width = 300,
        Title = "Thông Báo Lỗi",
        Content = "<br><br><center><b>Chưa Có Nhân Viên!!!</b></center>"
    };
}
@(Html.VnrWindow(windowError))
<script type="text/javascript">


    var selectedIds = [];
    var checkedNodes = [];

    var gridName = '@ConstantControlName.HRM_HR_RelativeProfile_Grid_Name';
    var popUpName = '@ConstantControlName.HRM_HR_Relative_PopUp_Name';
    var titleEditPopUpRelative = '@Html.Raw(ConstantDisplay.HRM_HR_Relative_PopUp_Edit_Title.TranslateString())';
    var titleCreatePopUpRelative = '@Html.Raw(ConstantDisplay.HRM_HR_Relative_PopUp_Create_Title.TranslateString())';

    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        //Show Hide Panel
        ShowHidePanel();
        //
        $("#btnSearch").click(function () {
            ReadGrid("grid_RelativeProfile");
        });
        EditGridPopUp(gridName, popUpName, '@_hrm_Main_Web' + "Hre_Profile/RelativeInfo/", '@ConstantPermission.Hre_Relatives', titleEditPopUpRelative);
    });


    //Khởi tạo điều kiện tìm kiếm
    function filterFieldInfo() {
        return {
            ProfileName: null,
            CodeEmp: null
        };
    }

    //Xử Lý grid
    GridCheckbox("grid_RelativeProfile");

    //Xử lý nút Create
    $("#btnCreateRelatives").click(function () {
        // KendoRouteMapping('#_hrm_Main_Web/Hre_Relatives/Create/', '_hrm_Main_Web', '@_hrm_Main_Web');
        // PopUpCreate("windowWorkHistory", "Create Retives Info", '@ConstantPermission.Hre_Relatives');
        
        var x = '@profileID';
        if (x == '') {
            PopUpCreate("windowError");
        }
         else {
             var url = '@_hrm_Main_Web' + "Hre_Profile/RelativeInfo/";
            PopUpEdit('@ConstantControlName.HRM_HR_Relative_PopUp_Name', url, SelectID, titleCreatePopUpRelative);
        }
    });

    //Xử Lý button delete
    $('#btnDelete_Relatives').click(function (e) {
        //  e.preventDefault();
        DeleteSelected("grid_RelativeProfile", '@_hrm_Main_Web' + "Hre_Profile/RemoveSelectedRelative/", selectedIds, '@ConstantPermission.Hre_Relatives');
    })

</script>
<div style="padding-top:3px; width:100%">
    <div class="commandToolBarWidge">
        <div class="GridTitle">
            @Html.VnrLabel(ConstantDisplay.HRM_HR_Relative.TranslateString())
        </div>
        <div style="float:right">
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateRelatives", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete_Relatives", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
        </div>
        <div class="clear"></div>
    </div>
    <div>
        <!--Khai báo các thông tin cho Grid-->
        @{

        var valueFields = new[]
        {
            Hre_RelativesModel.FieldNames.RelativeName,
            Hre_RelativesModel.FieldNames.Career,
            Hre_RelativesModel.FieldNames.Gender,
            Hre_RelativesModel.FieldNames.YearOfBirth,
            Hre_RelativesModel.FieldNames.CountryName,
            Hre_RelativesModel.FieldNames.RelativeTypeName,          
            Hre_RelativesModel.FieldNames.ProfileName,
            Hre_RelativesModel.FieldNames.CodeEmp,
            Hre_RelativesModel.FieldNames.JobTitleName
        };

        Dictionary<string, int> sizeFields = new Dictionary<string, int>()
        {
            {Hre_RelativesModel.FieldNames.ProfileName, 120},
            {Hre_RelativesModel.FieldNames.CodeEmp, 120},
            {Hre_RelativesModel.FieldNames.RelativeName, 120},
            {Hre_RelativesModel.FieldNames.JobTitleName, 120},
            {Hre_RelativesModel.FieldNames.DependantName, 120},
            {Hre_RelativesModel.FieldNames.Gender, 100},
            {Hre_RelativesModel.FieldNames.Career, 120},
            {Hre_RelativesModel.FieldNames.YearOfBirth, 120},
            {Hre_RelativesModel.FieldNames.CountryName, 120},
            {Hre_RelativesModel.FieldNames.RelativeTypeName, 120}
        };

        Dictionary<string, string> displayFields = new Dictionary<string, string>()
        {
            {Hre_RelativesModel.FieldNames.RelativeName, ConstantDisplay.HRM_HR_Relatives_RelativeName},
            {Hre_RelativesModel.FieldNames.Career, ConstantDisplay.HRM_HR_Relatives_Career},
            {Hre_RelativesModel.FieldNames.Gender, ConstantDisplay.HRM_HR_Relatives_Gender},
            {Hre_RelativesModel.FieldNames.YearOfBirth, ConstantDisplay.HRM_HR_Relatives_YearOfBirth},
            {Hre_RelativesModel.FieldNames.CountryName, ConstantDisplay.HRM_HR_Relatives_CountryName},
            {Hre_RelativesModel.FieldNames.RelativeTypeName, ConstantDisplay.HRM_HR_Relatives_RelativeTypeName},
            {Hre_RelativesModel.FieldNames.ProfileName, ConstantDisplay.HRM_HR_Relatives_ProfileName},
            {Hre_RelativesModel.FieldNames.CodeEmp, ConstantDisplay.HRM_HR_Profile_CodeEmp},
            {Hre_RelativesModel.FieldNames.JobTitleName, ConstantDisplay.HRM_Category_JobTitle_JobTitleName}
        };

        var grid = new GridBuilderInfo
        {
            Name = "grid_RelativeProfile",
            ValueFields = valueFields,
           // ReadActionUrl = _hrm_Hr_Service + "Hre_GetData/GetRelativesList",
            ReadActionUrl = _hrm_Hr_Service + "Hre_GetData/GetRelativeByProfileID?profileID=" + profileID,
            SizeFields = sizeFields,
            AutoBind = true,
            GridHeight = 550,
            GridWidth = Common.ScreenWidth - 260,
            ShowCheckAll = false,
            DisplayFields = displayFields,
           // ReadData = "filterFieldInfo",
        };
        }

        <!--Khởi tạo Grid-->
        @(Html.VnrGrid<Hre_RelativesModel>(grid))
    </div>
    </div>
    <script>
        $("#grid_RelativeProfile .k-grid-pager").css('display', 'none');
    </script>
