@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.Attendance.Models

@using HRM.Infrastructure.Security




@model Att_AttendanceTableModel
@{
    Layout = null;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
}
<style>
    .tableLeft {
        float: left;
        width: 500px;
        display: block;
    }
        .tableLeft .FieldTitle{
            width:170px
        }
</style>
<script type="text/javascript">
    //$("#tabselect").val("reloadADV");

    $(document).ready(function () {
        
        resizeControl('gridAtt_AttendanceTableItem', 200);
        $.ajax({
            type: 'POST',
            url: '@_hrm_Hr_Service' + 'Att_GetData/GetAttendanceTableByProIDandCutOID',
            data: filterFieldInfo_Reload(),
            dataType: 'json',
            success: function (result) {
                
                if (result != null) {
                    $("#VL_StdWorkDayCount").html(result.StdWorkDayCount);
                    $("#VL_RealWorkDayCount").html((Math.round(result.RealWorkDayCount * 100) / 100).toString());
                    $("#VL_PaidWorkDayCount").html((Math.round(result.PaidWorkDayCount * 100) / 100).toString());
                    $("#VL_PaidLeaveDays").html((Math.round(result.PaidLeaveDays * 100) / 100).toString());
                    $("#VL_AnlDayTaken").html(result.AnlDayTaken);
                    $("#VL_AnlDayAvailable").html(result.AnlDayAvailable);
                    $("#VL_NightShiftHours").html(result.NightShiftHours);
                    $("#VL_LateEarlyDeductionHours").html((Math.round(result.LateEarlyDeductionHours * 100) / 100).toString());
                    $("#VL_Note").html(result.Note);
                    var str = '';

                    if (result.Overtime1Name != null && result.Overtime1Hours != 0) {
                        str = '<div class="DivContentTitleValue" id="div13">'
                                    + '<div class="FieldTitle">' + result.Overtime1Name + ' </div> '
                                    + '<div class="FieldValueView60x15">' + (Math.round(result.Overtime1Hours * 100) / 100).toString() + ' (h)</div> </div>';
                    }
                    if (result.Overtime2Name != null && result.Overtime2Hours != 0) {
                        str += '<div class="DivContentTitleValue" id="div13">'
                                    + '<div class="FieldTitle">' + result.Overtime2Name + ' </div> '
                                    + '<div class="FieldValueView60x15">' + (Math.round(result.Overtime2Hours * 100) / 100).toString() + ' (h)</div> </div>';
                    }
                    if (result.Overtime3Name != null && result.Overtime3Hours != 0) {
                        str += '<div class="DivContentTitleValue" id="div13">'
                                    + '<div class="FieldTitle">' + result.Overtime3Name + ' </div> '
                                    + '<div class="FieldValueView60x15">' + (Math.round(result.Overtime3Hours * 100) / 100).toString() + ' (h)</div> </div>';
                    }
                    if (result.Overtime4Name != null && result.Overtime4Hours != 0) {
                        str += '<div class="DivContentTitleValue" id="div13">'
                                    + '<div class="FieldTitle">' + result.Overtime4Name + ' </div> '
                                    + '<div class="FieldValueView60x15">' + (Math.round(result.Overtime4Hours * 100) / 100).toString() + ' (h)</div> </div>';
                    }
                    if (result.Overtime5Name != null && result.Overtime5Hours != 0) {
                        str += '<div class="DivContentTitleValue" id="div13">'
                                    + '<div class="FieldTitle">' + result.Overtime5Name + ' </div> '
                                    + '<div class="FieldValueView60x15">' + (Math.round(result.Overtime5Hours * 100) / 100).toString() + ' (h)</div> </div>';
                    }
                    if (result.Overtime6Name != null && result.Overtime6Hours != 0) {
                        str += '<div class="DivContentTitleValue" id="div13">'
                                    + '<div class="FieldTitle">' + result.Overtime6Name + ' </div> '
                                    + '<div class="FieldValueView60x15">' + (Math.round(result.Overtime6Hours * 100) / 100).toString() + ' (h)</div> </div>';
                    }
                    $("#divOvertime").empty();
                    $("#divOvertime").append(str);

                    var strLD = '<div class="DivContentTitleValue" id="div13">'
                                    + '<div class="FieldTitle170">' + '@ConstantDisplay.HRM_Attendance_AttendanceTable_AnlDayTaken.TranslateString()' + ' </div> '
                                    + '<div class="FieldValueView60x15">' + result.AnlDayTaken + '</div> </div>';
                    if (result.LeaveDay1Name != null && result.LeaveDay1Hours != 0) {
                        strLD += '<div class="DivContentTitleValue" id="div13">'
                                    + '<div class="FieldTitle170">' + result.LeaveDay1Name + ' </div> '
                                    + '<div class="FieldValueView60x15">' + result.LeaveDay1Hours + ' (h) </div> </div>';
                    }
                    if (result.LeaveDay2Name != null && result.LeaveDay2Hours != 0) {
                        strLD += '<div class="DivContentTitleValue" id="div13">'
                                    + '<div class="FieldTitle170">' + result.LeaveDay2Name + ' </div> '
                                    + '<div class="FieldValueView60x15">' + result.LeaveDay2Hours + ' (h) </div> </div>';
                    }
                    if (result.LeaveDay3Name != null && result.LeaveDay3Hours != 0) {
                        strLD += '<div class="DivContentTitleValue" id="div13">'
                                    + '<div class="FieldTitle170">' + result.LeaveDay3Name + ' </div> '
                                    + '<div class="FieldValueView60x15">' + result.LeaveDay3Hours + ' (h) </div> </div>';
                    }
                    if (result.LeaveDay4Name != null && result.LeaveDay4Hours != 0) {
                        strLD += '<div class="DivContentTitleValue" id="div13">'
                                    + '<div class="FieldTitle170">' + result.LeaveDay4Name + ' </div> '
                                    + '<div class="FieldValueView60x15">' + result.LeaveDay4Hours + ' (h) </div> </div>';
                    }
                    $("#divLeaveday").empty();
                    $("#divLeaveday").append(strLD);

                }
            },
            error: function (result) {
                
                window.ShowNotificationProcessor("Lỗi trong quá trình xử lý !");
            }
        });
    });


    $("#btnCompute").click(function () {
        debugger;
        $.ajax({
            type: 'POST',
            url: '@_hrm_Hr_Service' + 'Att_GetData/ComputeAttendanceForProfile',
            data: filterFieldInfo_Reload(),
            dataType: 'json',
            success: function (data) {
                onSelectRow();
            },
            error: function (data) {
                window.ShowNotificationProcessor("Lỗi trong quá trình xử lý !");
            }
        });

        //Xử Lý Grid
        GridCheckbox("gridAtt_ComputeAttendance");

    });
    $("#btnExport").click(function () {
        var grid = $('#gridAtt_AttendanceTableItem').data("kendoGrid");
        var count = grid.dataSource._data.toJSON().length;
        if (count == 0) {
            ExportAllFail();
            return;
        }
        var urlGetData = '@_hrm_Hr_Service'  + "Att_GetData/GetAttendanceDetailByProIDandCutOID";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo_Reload(true);
        
        ExportAll(urlGetData, dataParameter, urlDownload, '@ConstantPermission.Hre_ProfileAttendance');
    });
</script>
<div style="margin-top:3px">
    <div style="width:100%">
        <table style="width:100%">
            <tbody>
                <div class="commandToolBarWidge" id="anchor">
                    <div class="GridTitle">
                        @ConstantDisplay.HRM_Att_AttendanceTable.TranslateString()
                    </div>
                    <div style="float:right">
                        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCompute", Content = ConstantDisplay.HRM_Attendance_CalculateAttendance.TranslateString(), ImageUrl = ConstantPath.IconBtnCompute })
                    </div>
                    <div class="clear"></div>
                </div>
                <tr>
                    <td valign="top">
                        <div>
                            <div style="display: block;">
                                <fieldset>
                                    <div style="float: left; padding-right: 60px">
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle170">
                                                @Html.VnrLabelForNoneIcon(model => model.StdWorkDayCount)
                                            </div>
                                            <div class="FieldValueView60x15" id="VL_StdWorkDayCount">
                                                @Html.DisplayFor(model => model.StdWorkDayCount)
                                            </div>
                                        </div>
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle170">
                                                @Html.VnrLabelForNoneIcon(model => model.RealWorkDayCount)
                                            </div>
                                            <div class="FieldValueView60x15" id="VL_RealWorkDayCount">
                                                @Html.DisplayFor(model => model.RealWorkDayCount)
                                            </div>
                                        </div>
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle170">
                                                @Html.VnrLabelForNoneIcon(model => model.PaidWorkDayCount)
                                            </div>
                                            <div class="FieldValueView60x15" id="VL_PaidWorkDayCount">
                                                @Html.DisplayFor(model => model.PaidWorkDayCount)
                                            </div>
                                        </div>
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle170">
                                                @Html.VnrLabelForNoneIcon(model => model.PaidLeaveDays)
                                            </div>
                                            <div class="FieldValueView60x15" id="VL_PaidLeaveDays">
                                                @Html.DisplayFor(model => model.PaidLeaveDays)
                                            </div>
                                        </div>
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle170">
                                                @Html.VnrLabelForNoneIcon(model => model.AnlDayAvailable)
                                            </div>
                                            <div class="FieldValueView60x15" id="VL_AnlDayAvailable">
                                                @Html.DisplayFor(model => model.AnlDayAvailable)
                                            </div>
                                        </div>
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle170">
                                                @Html.VnrLabelForNoneIcon(model => model.NightShiftHours)
                                            </div>
                                            <div class="FieldValueView60x15" id="VL_NightShiftHours">
                                                @Html.DisplayFor(model => model.NightShiftHours)
                                            </div>
                                        </div>
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle170">
                                                @Html.VnrLabelForNoneIcon(model => model.LateEarlyDeductionHours)
                                            </div>
                                            <div class="FieldValueView60x15" id="VL_LateEarlyDeductionHours">
                                                @Html.DisplayFor(model => model.LateEarlyDeductionHours)
                                            </div>
                                        </div>

                                    </div>
                                    <div id="divOvertime" style="float: left; padding-right: 40px; width: 200px; min-height: 1px;">
                                    </div>
                                    <div id="divLeaveday" style="float: left; padding-right: 40px">
                                    </div>
                                </fieldset>
                            </div>
                            <div>
                                <fieldset>
                                    <div class="DivContentTitleValue" id="div13" style="margin-top:-5px">
                                        <div class="FieldTitle170">
                                            @Html.VnrLabelForNoneIcon(model => model.Note)
                                        </div>
                                        <div class="FieldValueView" id="VL_Note" style="width:680px; height:15px">
                                            @Html.DisplayFor(model => model.Note)
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>
                    </td>
                    <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
                </tr>
            </tbody>
        </table>
    </div>

    <div>
        <div class="commandToolBarWidge" id="anchor">
            <div class="GridTitle">
                @Html.VnrLabel(ConstantDisplay.HRM_Attendance_AttendanceTableItem_Title.TranslateString())
            </div>
            <div style="float:right">
                @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport", Content = ConstantAction.HRM_Common_Export.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
            </div>
            <div class="clear"></div>
        </div>
        <!--Khai báo các thông tin cho Grid-->
        @{
            string[] valueFields = new string[]
                    {
                        Att_AttendanceTableItemModel.FieldNames.WorkDate,
                        Att_AttendanceTableItemModel.FieldNames.FirstInTime,
                        Att_AttendanceTableItemModel.FieldNames.LastOutTime,
                        Att_AttendanceTableItemModel.FieldNames.ShiftName,
                        //Att_AttendanceTableItemModel.FieldNames.WorkHours,
                        Att_AttendanceTableItemModel.FieldNames.LateEarlyMinutes,
                        Att_AttendanceTableItemModel.FieldNames.UnpaidLeaveHours,
                        Att_AttendanceTableItemModel.FieldNames.PaidLeaveHours,
                        Att_AttendanceTableItemModel.FieldNames.WorkPaidHours,
                        Att_AttendanceTableItemModel.FieldNames.NightShiftHours,
                        Att_AttendanceTableItemModel.FieldNames.TotalOvertimeHours,
                        //Att_AttendanceTableItemModel.FieldNames.OvertimeTypeName,
                    };
            Dictionary<string, int> sizeFields = new Dictionary<string, int>()
                    {
                        {Att_AttendanceTableItemModel.FieldNames.WorkDate,90},
                        {Att_AttendanceTableItemModel.FieldNames.FirstInTime,70},
                        {Att_AttendanceTableItemModel.FieldNames.LastOutTime,70},
                        //{Att_AttendanceTableItemModel.FieldNames.WorkHours,120},
                        {Att_AttendanceTableItemModel.FieldNames.ShiftName,90},
                        {Att_AttendanceTableItemModel.FieldNames.LateEarlyMinutes,120},
                        {Att_AttendanceTableItemModel.FieldNames.UnpaidLeaveHours,95},
                        {Att_AttendanceTableItemModel.FieldNames.PaidLeaveHours,100},
                        {Att_AttendanceTableItemModel.FieldNames.WorkPaidHours,80},
                        {Att_AttendanceTableItemModel.FieldNames.NightShiftHours,80},
                        {Att_AttendanceTableItemModel.FieldNames.TotalOvertimeHours,90},
                        //{Att_AttendanceTableItemModel.FieldNames.OvertimeTypeName,110},
                    };

            Dictionary<string, string> displayFields = new Dictionary<string, string>()
                    {
                        {Att_AttendanceTableItemModel.FieldNames.WorkDate,ConstantDisplay.HRM_Attendance_WorkDay_WorkDate},
                        {Att_AttendanceTableItemModel.FieldNames.FirstInTime,ConstantDisplay.HRM_Attendance_WorkDay_FirstInTime},
                        {Att_AttendanceTableItemModel.FieldNames.LastOutTime,ConstantDisplay.HRM_Attendance_WorkDay_LastOutTime},
                        //{Att_AttendanceTableItemModel.FieldNames.WorkHours,ConstantDisplay.HRM_Attendance_AttendanceTableItem_WorkHours},
                        {Att_AttendanceTableItemModel.FieldNames.ShiftName,ConstantDisplay.HRM_Category_Shift_ShiftName},
                        {Att_AttendanceTableItemModel.FieldNames.LateEarlyMinutes,ConstantDisplay.HRM_Attendance_AttendanceTableItem_LateEarlyMinutes},
                        {Att_AttendanceTableItemModel.FieldNames.UnpaidLeaveHours,ConstantDisplay.HRM_Attendance_AttendanceTableItem_UnpaidLeaveHours},
                        {Att_AttendanceTableItemModel.FieldNames.PaidLeaveHours,ConstantDisplay.HRM_Attendance_AttendanceTableItem_PaidLeaveHours},
                        {Att_AttendanceTableItemModel.FieldNames.WorkPaidHours,ConstantDisplay.HRM_Attendance_AttendanceTableItem_WorkPaidHours},
                        {Att_AttendanceTableItemModel.FieldNames.NightShiftHours,ConstantDisplay.HRM_Attendance_AttendanceTableItem_NightShiftHours},
                        {Att_AttendanceTableItemModel.FieldNames.TotalOvertimeHours,ConstantDisplay.HRM_Attendance_AttendanceTableItem_OvertimeHours},
                        //{Att_AttendanceTableItemModel.FieldNames.OvertimeTypeName,ConstantDisplay.HRM_Attendance_AttendanceTableItem_OvertimeTypeName},
                    };

            Dictionary<string, string> formatFields = new Dictionary<string, string>()
                    {
                        //{Att_AttendanceTableItemModel.FieldNames.WorkHours, ConstantFormat.HRM_Format_Number_Double},
                        {Att_AttendanceTableItemModel.FieldNames.UnpaidLeaveHours, ConstantFormat.HRM_Format_Number_Double},
                        {Att_AttendanceTableItemModel.FieldNames.PaidLeaveHours, ConstantFormat.HRM_Format_Number_Double},
                        {Att_AttendanceTableItemModel.FieldNames.WorkPaidHours, ConstantFormat.HRM_Format_Number_Double},
                        {Att_AttendanceTableItemModel.FieldNames.NightShiftHours, ConstantFormat.HRM_Format_Number_Double},
                        {Att_AttendanceTableItemModel.FieldNames.TotalOvertimeHours, ConstantFormat.HRM_Format_Number_Double},
                        {Att_AttendanceTableItemModel.FieldNames.FirstInTime, ConstantFormat.HRM_Format_HourMinSecond},
                        {Att_AttendanceTableItemModel.FieldNames.LastOutTime, ConstantFormat.HRM_Format_HourMinSecond},
                    };

            var grid = new GridBuilderInfo
            {
                Name = "gridAtt_AttendanceTableItem",
                ValueFields = valueFields,
                SizeFields = sizeFields,
                DisplayFields = displayFields,
                FormatFields = formatFields,
                ReadActionUrl = _hrm_Hr_Service + "Att_GetData/GetAttendanceDetailByProIDandCutOID",
                ReadData = "filterFieldInfo_Reload",
                GridWidth = Common.ScreenWidth - 260,
                ShowEditIcon = false,
                ShowCheckbox = false,
                AutoBind=true,
            };
        }
        <!--Khởi tạo Grid-->
        @(Html.VnrGrid<Att_AttendanceTableItemModel>(grid))
    </div>
    </div>

@{
    var valueFields1 = ",ProfileName,CodeEmp";
    for (int i = 0; i < valueFields.Count(); i++)
    {
        valueFields1 += "," + valueFields[i];
    }
}
<script>
    $(document).ready(function () {
        $("#valueFieldsGrid").val('@valueFields1');
    });
</script>
@*@Html.Hidden("valueFieldsGrid", valueFields1)*@