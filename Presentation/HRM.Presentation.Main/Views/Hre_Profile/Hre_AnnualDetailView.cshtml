@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.Attendance.Models

@using VnResource.Helper.Data;
@using HRM.Infrastructure.Security;
@model HRM.Presentation.Attendance.Models.Att_AnnualLeaveModel
@{
    Layout = null;
    ViewBag.Title = "AnnualDetailView Index";
    string[] valueFields = null;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
}
<script type="text/javascript">

    function filterFieldInfo_AnnualDetailView() {
        return {
            ProfileID: SelectID,
            YearAnnual: $('#YearAnnual').val(),
            IsExport: false,
            ValueFields: $('#valueFieldsGrid').val()
        };
    }

    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {

        resizeControl('gridTab_AnnualDetailView', 200);
        //Show Hide Panel
        ShowHidePanel();

        //
        $("#btnSearch").click(function () {
            ReadGrid("gridTab_AnnualDetailView");
        });
        ShowAnnualLeaveByProfileId();

    });

    //Xử Lý grid
    //GridCheckbox("gridTab_CompensationDetailView");


    //Xử Lý button xuat
    $('#btnExport_AnnualDetailView').click(function () {
        var grid = $('#gridTab_AnnualDetailView').data("kendoGrid");
        if (grid.dataSource.total() == 0) {
            ExportAllFail();
            return;
        }
        var urlGetData = '@_hrm_Hr_Service' + "Att_GetData/ExportAnnualDetailByProfileId/";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo_AnnualDetailView(true);
        ExportAll(urlGetData, dataParameter, urlDownload, '@ConstantPermission.Att_AnnualDetailView');
    });

    function ShowAnnualLeaveByProfileId() {
        $.ajax({
            type: 'POST',
            url: '@_hrm_Hr_Service' + 'Att_GetData/GetAnnualLeaveByProfileId',
            data: filterFieldInfo_AnnualDetailView(),
            dataType: 'json',
            success: function (result) {
                debugger;
                if (result != null) {
                    $("#AnnualDetailView_MonthStart").html(result.MonthStart);
                    $("#AnnualDetailView_InitAnlValue").html(result.InitAnlValue);
                    $("#AnnualDetailView_InitSickValue").html(result.InitSickValue);
                    $("#AnnualDetailView_InitSaveSickValue").html(result.InitSaveSickValue);
                }
            },
            error: function (result) {

            }
        });
    };
    function ReLoad(e) {
        debugger;
        ReadGrid("gridTab_AnnualDetailView");
        ShowAnnualLeaveByProfileId();
    };

</script>
<div style="margin-top:3px">
    <div style="width:100%">
        <table style="width:100%">
            <tbody>
                <tr>
                    <td valign="top">
                        <div>
                            <div style="display: block;">
                                <fieldset>
                                    <div class="DivContentTitleValue">
                                        <div class="FieldTitle170">
                                            @Html.VnrLabelForNoneIcon(model => model.YearAnnual)
                                        </div>
                                        <div class="FieldValue">
                                            @{
                                                var _Year = new NumericTextBoxBuilderInfo<int>()
                                                {
                                                    Value = DateTime.Now.Year,
                                                    Format = ConstantFormat.HRM_Format_Number_Integer,
                                                    StyleCss = "width:70px"
                                                };
                                            }
                                            @Html.VnrNumericTextBoxFor(model => model.YearAnnual, _Year).Events(m => m.Change("ReLoad"))
                                        </div>
                                    </div>
                                    <div class="DivContentTitleValue">
                                        <div class="FieldTitle170">
                                            @Html.VnrLabelForNoneIcon(model => model.MonthStart)
                                        </div>
                                        <div class="FieldValueView60x15" id="AnnualDetailView_MonthStart">
                                            @Html.DisplayFor(model => model.MonthStart)
                                        </div>
                                    </div>
                                    <div class="DivContentTitleValue">
                                        <div class="FieldTitle170">
                                            @Html.VnrLabelForNoneIcon(model => model.InitAnlValue)
                                        </div>
                                        <div class="FieldValueView60x15" id="AnnualDetailView_InitAnlValue">
                                            @Html.DisplayFor(model => model.InitAnlValue)
                                        </div>
                                    </div>
                                    <div class="DivContentTitleValue">
                                        <div class="FieldTitle170">
                                            @Html.VnrLabelForNoneIcon(model => model.InitSickValue)
                                        </div>
                                        <div class="FieldValueView60x15" id="AnnualDetailView_InitSickValue">
                                            @Html.DisplayFor(model => model.InitSickValue)
                                        </div>
                                    </div>
                                    <div class="DivContentTitleValue">
                                        <div class="FieldTitle170">
                                            @Html.VnrLabelForNoneIcon(model => model.InitSaveSickValue)
                                        </div>
                                        <div class="FieldValueView60x15" id="AnnualDetailView_InitSaveSickValue">
                                            @Html.DisplayFor(model => model.InitSaveSickValue)
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>
                    </td>
                </tr>

            </tbody>
        </table>
    </div>
    <div class="clear"></div>
    <div>
        <!--Hidden field cho mỗi tab giúp xác định dữ liệu đã load rồi thì không load lại-->
        <div class="commandToolBarWidge">
            <div>
                <div style="float:right">
                    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport_AnnualDetailView", Content = ConstantAction.HRM_Common_Export.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
                </div>
            </div>
            <div class="GridTitle">
                @Html.VnrLabel(ConstantDisplay.HRM_Attendance_AnnualDetailView.TranslateString())
            </div>
            <div class="clear"></div>
        </div>
        <div style="overflow:hidden">
            @{

                valueFields = new string[]
        {
            Att_AnnualDetailModel.FieldNames.MonthInYear,
            Att_AnnualDetailModel.FieldNames.AvailableTotal,
            Att_AnnualDetailModel.FieldNames.LeaveBefTotal,
            Att_AnnualDetailModel.FieldNames.LeaveInMonthTotal,
            Att_AnnualDetailModel.FieldNames.Remain,

        };

                //Set độ rộng cho từng column
                Dictionary<string, int> sizeFields = new Dictionary<string, int>()
        {
            {Att_AnnualDetailModel.FieldNames.MonthInYear, 60},
            {Att_AnnualDetailModel.FieldNames.AvailableTotal, 164},
            {Att_AnnualDetailModel.FieldNames.LeaveBefTotal, 159},
            {Att_AnnualDetailModel.FieldNames.LeaveInMonthTotal, 149},
            {Att_AnnualDetailModel.FieldNames.Remain, 145},
        };

                //Thông tin hiển thị được dịch
                Dictionary<string, string> displayFields = new Dictionary<string, string>()
        {
            {Att_AnnualDetailModel.FieldNames.MonthInYear, ConstantDisplay.HRM_Attendance_CompensationDetailView_MonthInYear},
            {Att_AnnualDetailModel.FieldNames.AvailableTotal, ConstantDisplay.HRM_Attendance_CompensationDetailView_Available},
            {Att_AnnualDetailModel.FieldNames.LeaveBefTotal, ConstantDisplay.HRM_Attendance_CompensationDetailView_OvertimeInMonth},
            {Att_AnnualDetailModel.FieldNames.LeaveInMonthTotal, ConstantDisplay.HRM_Attendance_CompensationDetailView_LeaveInMonth},
            {Att_AnnualDetailModel.FieldNames.Remain, ConstantDisplay.HRM_Attendance_CompensationDetailView_Remain},
        };

                Dictionary<string, string> formatFields = new Dictionary<string, string>()
                        {
                            //{Att_LeaveDayModel.FieldNames.LeaveHours, ConstantFormat.HRM_Format_Number_Double},
                        };
                var grid = new GridBuilderInfo
                {
                    Name = "gridTab_AnnualDetailView",
                    ValueFields = valueFields,
                    SizeFields = sizeFields,
                    DisplayFields = displayFields,
                    FormatFields = formatFields,
                    ReadActionUrl = _hrm_Hr_Service + "Att_GetData/GetAnnualDetailByProfileId",
                    ReadData = "filterFieldInfo_AnnualDetailView",
                    ShowCheckAll = false,
                    AutoBind = true,
                    ShowCheckbox = false,
                    ShowEditIcon = false,
                    GridHeight = 200

                };
            }
            <!--Khởi tạo Grid-->
            @(Html.VnrGrid<Att_AnnualDetailModel>(grid))

        </div>
    </div>
</div>
    @{
        var valueFields1 = ",ProfileName,CodeEmp";
        for (int i = 0; i < valueFields.Count(); i++)
        {
            valueFields1 += "," + valueFields[i];
        }
    }
    <script>
        $(document).ready(function () {
            $("#valueFieldsGrid").val('@valueFields1');
        });
    </script>
