@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.Attendance.Models

@using HRM.Presentation.Hr.Models
@using HRM.Presentation.Payroll.Models;
@using HRM.Infrastructure.Security;
@{
    Layout = null;
    ViewBag.Title = "Hre_CardHistory";
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var controller = ViewContext.RouteData.Values["Controller"].ToString();
    var action = ViewContext.RouteData.Values["Action"].ToString();
    var screen = controller + "/" + action;
    var profileID = Guid.Empty;
    if (Model != null)
    {
        profileID = Model.ID;
    }
}
<script type="text/javascript">

        function onDataBoundGrid() {

            SetStyleGrid('gridPayroll_Paysips');
            //CheckedGrid("gridHre_Profile", selectedIds.join(","));
            //alert(1);
            //var field1 = ["Gender", 'Nam', 'red', '#ffffff',"="];
            //var field2 = ["Gender", 'Nữ', '#cccccc', '#ffffff',"="];
            //var field = [field1, field2];
            //SetRowColorByColor('gridHre_Profile', field);
        }


    function GetValueCompute(isPDF) {
        var checkedNodes = [];


        return {
            CutOffDurationID: $('#CutOffDurationID').val(),
            ExportId: $('#ddlScreenName').val(),
            ProfileID: SelectID,
            MethodPayroll: '@MethodPayroll.E_NORMAL.ToString()',
            ExportId: isPDF,
        };
    }

    $("#btnCompute_Payslips").click(function () {
        if ($('#CutOffDurationID').val() == "") {
            window.ShowNotificationProcessor("Chưa Chọn Kỳ Lương !"); //Chưa Dịch!
            return;
        }
        $.ajax({
            type: 'POST',
            url: '@_hrm_Hr_Service' + 'Sal_GetData/ComputePayrollByProfileID',
            data: GetValueCompute(false),
            dataType: 'json',
            async: false,
            success: function (data) {

                IsActiveProgress = true;
                ShowProgressBar(data, 'gridPayroll_Paysips');
                //var grid = $("#gridPayroll_Paysips").data("kendoGrid");
                //grid.dataSource.read();

            },
            error: function (data) {
                window.ShowNotificationProcessor("Lỗi trong quá trình xử lý !");//Chưa Dịch!
                IsActiveProgress = false;
            }
        });
    });


    function filterFieldInfo(isExport) {
        var elementPara = {
            CutOffDurationID: $('#CutOffDurationID').val(),
            ProfileID: SelectID,

        };
        if (isExport == true) {
            elementPara["ExportId"] = $('#ddlScreenName').val();
        }
        return elementPara;
    };



    $("#btnExport_Payslips").click(function () {
        var grid = $('#gridPayroll_Paysips').data("kendoGrid");
        if (grid.dataSource.total() == 0) {
            ExportAllFail();
            return;
        }
        if ($('#ddlScreenName').val() == "")
        {
            ShowNotificationProcessor("Vui lòng chọn mẫu báo cáo !");//Chưa dịch!
            return;
        }
        var urlGetData = '@_hrm_Hr_Service' + "Sal_GetData/GetPayrollTableItemByIdProfile/";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo(true);

        ExportAll(urlGetData, dataParameter, urlDownload, '@ConstantPermission.Att_TAMScanLog');

    });

    $("#btnExport_Payslips_PDF").click(function () {
        var grid = $('#gridPayroll_Paysips').data("kendoGrid");
        if (grid.dataSource.total() == 0) {
            ExportAllFail();
            return;
        }
        if ($('#ddlScreenName').val() == "") {
            ShowNotificationProcessor("Vui lòng chọn mẫu báo cáo !");//Chưa dịch!
            return;
        }
        var urlGetData = '@_hrm_Hr_Service' + "Sal_GetData/GetPayrollTableItemByIdProfile/";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo(true);
        dataParameter["ExportPDF"] = true;

        ExportAll(urlGetData, dataParameter, urlDownload, '@ConstantPermission.Att_TAMScanLog');

    });



    $("#btnSendMailPayslip").click(function () {
        if ($('#CutOffDurationID').val() == "") {
            window.ShowNotificationProcessor("Chưa Chọn Kỳ Lương !"); //Chưa Dịch!
            return;
        }
        $.ajax({
            type: 'POST',
            url: '@_hrm_Hr_Service' + 'Sal_GetData/SendMailPayslipOfProfile',
            data: GetValueCompute(false),
            dataType: 'json',
            async: false,
            success: function (data) {
                    if(data == true){
                        Notification('@ConstantDisplay.HRM_Common_SendRequest_Success.TranslateString()', '@NotificationType.Warning.ToString()');
                    }
                    else
                    {
                        Notification('@ConstantDisplay.HRM_Common_SendRequest_Fail.TranslateString()', '@NotificationType.Warning.ToString()');
                    }
            },
            error: function (data) {
                Notification('@ConstantDisplay.HRM_Common_SendRequest_Error.TranslateString()', '@NotificationType.Error.ToString()');
                IsActiveProgress = false;
            }
        });
    });

    $("#btnSendMailPayslipPDF").click(function () {
        if ($('#CutOffDurationID').val() == "") {
            window.ShowNotificationProcessor("Chưa Chọn Kỳ Lương !"); //Chưa Dịch!
            return;
        }
        $.ajax({
            type: 'POST',
            url: '@_hrm_Hr_Service' + 'Sal_GetData/SendMailPayslipOfProfile',
            data: GetValueCompute(true),
            dataType: 'json',
            async: false,
            success: function (data) {
                if (data == true) {
                    Notification('@ConstantDisplay.HRM_Common_SendRequest_Success.TranslateString()', '@NotificationType.Warning.ToString()');
                }
                else {
                    Notification('@ConstantDisplay.HRM_Common_SendRequest_Fail.TranslateString()', '@NotificationType.Warning.ToString()');
                }
            },
            error: function (data) {
                Notification('@ConstantDisplay.HRM_Common_SendRequest_Error.TranslateString()', '@NotificationType.Error.ToString()');
                IsActiveProgress = false;
            }
        });
    });

</script>
@*<script src="@Url.Content("~/Scripts/kendo/2013.3.1324/jquery.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2013.3.1324/kendo.all.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2013.3.1324/kendo.aspnetmvc.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo.modernizr.custom.js")"></script>*@
<!--Hidden field cho mỗi tab giúp xác định dữ liệu đã load rồi thì không load lại-->
@(Html.TextBox("txt_HiddenProfileCardHistory", null, new { style = "display: none" }))
<div style="padding-top:3px">
    <div class="commandToolBarWidge">
        <div class="GridTitle">
            @Html.VnrLabel(ConstantDisplay.Sal_Payslips.TranslateString())
        </div>
        <div style="float:right">
            <script>
                function GetScreenName() {
                    return {
                        screenName: '@screen'
                    };
                }
            </script>
            <div class="FieldValue" style="margin-top: 0;">
                @{
                    var screenName = new DropDownListBuilderInfo()
                    {
                        Name = "ddlScreenName",
                        DataTextField = "ExportName",
                        DataValueField = "ID",
                        Url = @_hrm_Hr_Service + "Cat_GetData/GetScreenName",
                        StyleCss = "width:200px;",
                        Data = "GetScreenName",
                    };
                }
                @Html.VnrDropDownList(screenName)
                <div class="btn-group">
                    <button type="button" class="k-button btn-default dropdown-toggle" data-toggle="dropdown">
                        <img src="@ConstantPath.IconBookmark" width="15" height="15" />
                        @ConstantAction.HRM_Common_SendRequest.TranslateString()
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu pull-right" role="menu">
                        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSendMailPayslip", Content = ConstantAction.HRM_Common_SendRequest_Excel.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
                        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSendMailPayslipPDF", Content = ConstantAction.HRM_Common_SendRequest_PDF.TranslateString(), ImageUrl = ConstantPath.IconExportPathPDF })
                    </ul>
                </div>
                <div class="btn-group">
                    <button type="button" class="k-button btn-default dropdown-toggle" data-toggle="dropdown">
                        <img src="@ConstantPath.IconExportPath" width="15" height="15" />
                        @ConstantDisplay.HRM_Common_Export_BasicSalary_Button.TranslateString()
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu pull-right" role="menu">
                        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport_Payslips", Content = ConstantDisplay.HRM_Common_Export_BasicSalary_Button.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
                        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport_Payslips_PDF", Content = ConstantDisplay.HRM_Common_Export_BasicSalary_Button_PDF.TranslateString(), ImageUrl = ConstantPath.IconExportPathPDF })
                    </ul>
                </div>
                @*@Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport_Payslips", Content = ConstantDisplay.HRM_Common_Export_BasicSalary_Button.TranslateString(), ImageUrl = ConstantPath.IconExportPath })*@
                @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCompute_Payslips", Content = ConstantDisplay.HRM_Payroll_Salary.TranslateString(), ImageUrl = ConstantPath.IconBtnCompute })
             
            </div>


        </div>
        <div class="clear"></div>
    </div>
    <div style=" width:100%;">
        <!--Khai báo các thông tin cho Grid-->
        @{
            string[] valueFields = new string[]
        {
             Sal_PayrollTableItemModel.FieldNames.OrderNo,
            Sal_PayrollTableItemModel.FieldNames.Name,
            Sal_PayrollTableItemModel.FieldNames.Value,
            Sal_PayrollTableItemModel.FieldNames.Description1,
            Sal_PayrollTableItemModel.FieldNames.Description4,

        };
            Dictionary<string, int> sizeFields = new Dictionary<string, int>()
        {
             {Sal_PayrollTableItemModel.FieldNames.OrderNo,80},
            {Sal_PayrollTableItemModel.FieldNames.Name,350},
            {Sal_PayrollTableItemModel.FieldNames.Value,110},
            {Sal_PayrollTableItemModel.FieldNames.Description1,200},
            {Sal_PayrollTableItemModel.FieldNames.Description4,200},

        };

            Dictionary<string, string> displayFields = new Dictionary<string, string>()
        {
             {Sal_PayrollTableItemModel.FieldNames.OrderNo,ConstantDisplay.HRM_Payroll_TableItem_OrderNo},
            {Sal_PayrollTableItemModel.FieldNames.Name,ConstantDisplay.HRM_Payroll_TableItem_Name},
            {Sal_PayrollTableItemModel.FieldNames.Value,ConstantDisplay.HRM_Payroll_TableItem_Value},
            {Sal_PayrollTableItemModel.FieldNames.Description1,ConstantDisplay.HRM_Payroll_TableItem_Description},
            {Sal_PayrollTableItemModel.FieldNames.Description4,ConstantDisplay.HRM_Payroll_TableItem_Description},
        };
            var hiddenFields = new[]
        {

            Sal_PayrollTableItemModel.FieldNames.Description4,

        };
            var grid = new GridBuilderInfo
            {
                Name = "gridPayroll_Paysips",
                ValueFields = valueFields,
                SizeFields = sizeFields,
                HiddenFields=hiddenFields,
                DisplayFields = displayFields,
                ReadActionUrl = @_hrm_Hr_Service + "Sal_GetData/GetPayrollTableItemByIdProfile",
                ShowCheckbox = false,
                AutoBind = true,
                ShowEditIcon = false,
                EventDataBound = "onDataBoundGrid",
             //   HiddenFields = hiddenFields,
                ReadData = "filterFieldInfo_Reload",
               // GridWidth = Common.ScreenWidth - 260,
                GridHeight = 550,

            };
            @(Html.VnrGrid<Sal_PayrollTableItemModel>(grid))
        }
    </div>


</div>
@{
    var valueFields1 = ",ProfileName,CodeEmp";
    for (int i = 0; i < valueFields.Count(); i++)
    {
        valueFields1 += "," + valueFields[i];
    }
}
<script>
    $(document).ready(function () {
        $("#valueFieldsGrid").val('@valueFields1');
    });
</script>