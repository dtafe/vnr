@using HRM.Infrastructure.Utilities;
@using System.Collections
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Hr.Models

@model Hre_MPModel


@{
    Layout = null;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    IList<SelectListItem> lstMPRank = Enum.GetValues(typeof(EnumDropDown.MPRank))
   .Cast<EnumDropDown.MPRank>()
   .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() })
   .ToList();
    Guid ProfileID = Guid.Empty;
    string aaa = ViewBag.profileID;
    if (!string.IsNullOrEmpty(aaa))
    {
        ProfileID = Common.ConvertToGuid(aaa.ToString());

    }
}
<script>
    //Gán profile id lại cho tất cả các form đư
    $("input[name=ProfileID]").val(SelectID);

    SetFieldRequiredByScreenName('Hre_MP_Tab');
    function onSaveClose() {
        onSaveAndClose($('#form_MP'), '@_hrm_Hr_Service', 'api/Hre_MP/', '@ConstantControlName.HRM_HR_MP_Grid_Name', '@ConstantControlName.HRM_HR_MP_PopUp_Name'); return false;
    }
    function onSaveDataPopUp() {
        onlySave($('#form_MP'), '@_hrm_Hr_Service', 'api/Hre_MP/', '@ConstantControlName.HRM_HR_MP_Grid_Name'); return false;
    }
    $("#ProfileName").prop('disabled', true);
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_MP" }))
{
    @Html.HiddenFor(model => model.MP_ID)

    if (Model != null)
    {
        @Html.HiddenFor(m => m.ProfileID)
    }
    else
    {
        @Html.Hidden("ProfileID", ProfileID)
    }

    <table>
        <tbody>
            <tr><td colspan="3" style=""></td></tr>
            <tr>

                <td valign="top">
                    <div class="hrm_box">
                        @Html.HiddenFor(mode => mode.ID)
                        <div>
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.FromDate)
                            </div>

                            <div class="FieldValue">
                                @{
    var FromDate = new DatePickerBuilderInfo()
    {
        StyleCss = "width:100px;",
    };
                                }
                                @Html.VnrDatePickerFor(model => model.FromDate, FromDate)
                            </div>
                        </div>
                        <div>
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.ToDate)
                            </div>

                            <div class="FieldValue">
                                @{
    var ToDate = new DatePickerBuilderInfo()
    {
        StyleCss = "width:100px;",
    };
                                }
                                @Html.VnrDatePickerFor(model => model.ToDate, ToDate)
                            </div>
                        </div>
                        <div id="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelForNoneIcon(model => model.MPRank)
                            </div>
                            <div class="FieldValue">
                                @{
    var ddlStatus = new DropDownListBuilderInfo()
    {
        StyleCss = "width:300px",
        DataTextField = "Text",
        DataValueField = "Value",
        BindTo = lstMPRank
    };
                                }
                                @Html.VnrDropDownListFor(model => model.MPRank, ddlStatus)
                            </div>
                        </div>
                        <div id="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelForNoneIcon(model => model.Notes)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextAreaFor(mode => mode.Notes)
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td style="padding-top:2px; padding-bottom:10px;">
                    <div class="LineFooterCommandEdit">
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div>
                        <div class="FieldTitle150">
                        </div>
                        <div class="FieldValue">
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-MPInfo", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-MPInfo", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        </div>
                    </div>
                </td>
            </tr>
    </table>
}