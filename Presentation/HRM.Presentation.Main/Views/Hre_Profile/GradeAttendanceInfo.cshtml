@using System.Collections;
@using HRM.Presentation.UI.Controls.Kendo;
@using HRM.Presentation.Attendance.Models;
@using HRM.Infrastructure.Utilities;


@model HRM.Presentation.Attendance.Models.Att_GradeModel

@{
    Layout = null;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    Guid ProfileID = Guid.Empty;

    string profileID = ViewBag.profileID;
    if (!string.IsNullOrEmpty(profileID))
    {
        ProfileID = Common.ConvertToGuid(profileID.ToString());
    }

}

@Html.ValidationSummary(false)
@Html.AntiForgeryToken()
<script>
    // Mặc định load tên NV
    $("#GradeAttendanceInfo_ProfileName").prop('disabled', true);
    $("#GradeAttendanceInfo_ProfileName").val($("#profileNameView").html())


    //Gán profile id lại cho tất cả các form đư
    $("input[name=ProfileID]").val(SelectID);


    SetFieldRequired();

    //Save and close
    function onSaveClose() {

        onSaveAndClose($('#form_GradeAttendance'), '@_hrm_Hr_Service', 'api/Att_Grade/', 'gridHre_CatGradeAttendance', '@ConstantControlName.HRM_Att_Grade_PopUp_Name');
        return false;
    }
    //Save
    function onSaveDataPopUp() {
        onlySave($('#form_GradeAttendance'), '@_hrm_Hr_Service', 'api/Att_Grade/', 'gridHre_CatGradeAttendance'); return false;
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_GradeAttendance" }))
{
    @Html.HiddenFor(model => model.ID)
    <div>
        @{
    if (Model != null)
    {
        @Html.HiddenFor(m => m.ProfileID)
    }
    else
    {
        @Html.Hidden("ProfileID", ProfileID)
    }
        }
    </div>

    <table>
        <tr>
            <td>
                <div style="float:left; width:100%">
                    <div id="div2">
                        <div class="FieldTitle150">
                            @Html.HiddenFor(mode => mode.ID)
                            @Html.VnrLabelFor(mode => mode.ProfileName)
                        </div>
                        <div class="FieldValue">
                            @{
                                var _ProfileName = new TextBoxBuilderInfo()
                                {
                                    Name = "GradeAttendanceInfo_ProfileName",
                                    Width = 300,
                                    Disabled = true
                                };
                                if (Model != null)
                                {
                                    _ProfileName.Value = Model == null ? string.Empty : Model.ProfileName;
                                }
                            }
                            @Html.VnrTextBoxFor(model => model.ProfileName, _ProfileName)
                        </div>
                        <div style="clear: both;"></div>
                    </div>

                    <div id="div2">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.GradeAttendanceID)
                        </div>
                        <div class="FieldValue">
                            @{
    IEnumerable valueGradeAttendance = new string[] { };
    if (Model != null)
    {
        valueGradeAttendance = new[] { new { GradeAttendanceName = Model.GradeAttendanceName, ID = Model.GradeAttendanceID } };
    }
                            }
                            @{
    var multiSelectGradeAttendanceID = new MultiSelectBuilderInfo()
    {
        Width = 300,
        DataTextField = "GradeAttendanceName",
        DataValueField = "ID",
        Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiGradeAttendance",
        Placeholder = ConstantDisplay.HRM_Category_SelectGradeAttendance.TranslateString(),
        MaxSelectedItems = 1,
        Value = valueGradeAttendance
    };
                            }
                            @(Html.VnrMultiSelectFor(mode => mode.GradeAttendanceID, multiSelectGradeAttendanceID))
                        </div>
                    </div>
                    <div id="div4">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.MonthStart)
                        </div>
                        <div class="FieldValue">
                            @{
    var datepickerMonthStart = new DatePickerBuilderInfo()
    {
        StyleCss = "width:120px",
        Value = @Html.DisplayFor(mode => mode.MonthStart).ToString(),
        Placeholder = ConstantDisplay.HRM_Att_Grade_MonthStart.TranslateString(),
        //Format = ConstantFormat.HRM_Format_MonthYear.TranslateString()
    };
                            }
                            @Html.VnrDatePickerFor(model => model.MonthStart, datepickerMonthStart).Format(ConstantFormat.HRM_Format_MonthYear.TranslateString())
                        </div>
                    </div>
                    <div id="div5">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.MonthEnd)
                        </div>
                        <div class="FieldValue">
                            @{
    var datepickerMonthEnd = new DatePickerBuilderInfo()
    {
        Value = @Html.DisplayFor(mode => mode.MonthEnd).ToString(),
        Placeholder = ConstantDisplay.HRM_Att_Grade_MonthEnd.TranslateString(),
        // Format = ConstantFormat.HRM_Format_MonthYear.TranslateString()
    };
                            }
                            @Html.VnrDatePickerFor(model => model.MonthEnd, datepickerMonthEnd).Format(ConstantFormat.HRM_Format_MonthYear.TranslateString())
                        </div>
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-GradeAttendance", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-GradeAttendance", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}
