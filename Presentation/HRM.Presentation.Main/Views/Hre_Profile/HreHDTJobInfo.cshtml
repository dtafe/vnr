
@using HRM.Infrastructure.Utilities;
@using System.Collections
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Hr.Models

@model Hre_HDTJobModel


@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    Guid ProfileID = Guid.Empty;

    string aaa = ViewBag.profileID;
    if (!string.IsNullOrEmpty(aaa))
    {
        ProfileID = Common.ConvertToGuid(aaa.ToString());
    }
}
<script>
    SetFieldRequiredByScreenName('Hre_HDTJob_Tab');

    function onSaveNew() {
        onSaveAndContinue($('#form_HDTJob'), '@_hrm_Hr_Service', 'api/Hre_HDTJob/', '@ConstantControlName.HRM_HR_Hre_HDTJob_Grid_Name', '@ConstantControlName.HRM_HR_Hre_HDTJob_PopUp_Name'); return false;
    }

    function onSaveClose() {
        onSaveAndClose($('#form_HDTJob'), '@_hrm_Hr_Service', 'api/Hre_HDTJob/', '@ConstantControlName.HRM_HR_Hre_HDTJob_Grid_Name', '@ConstantControlName.HRM_HR_Hre_HDTJob_PopUp_Name'); return false;
    }
    function onSaveDataPopUp() {
        onlySave($('#form_HDTJob'), '@_hrm_Hr_Service', 'api/Hre_HDTJob/', '@ConstantControlName.HRM_HR_Hre_HDTJob_Grid_Name'); return false;
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_HDTJob" }))
{
    @Html.HiddenFor(model => model.HDTJob_ID)
        <div>
        @{
    if (Model != null)
    {
        @Html.HiddenFor(m => m.ProfileID)
    }
    else
    {
        @Html.Hidden("ProfileID", ProfileID)
    }


        }
    </div>
    <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                        @Html.HiddenFor(mode => mode.ID)
                        @Html.VnrLabelFor(mode => mode.DateFrom)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _dateFrom = new DatePickerBuilderInfo()
                            {
                                StyleCss = "width:120px",
                                Name = "HDTJobInfo_DateFrom"
                            };
                        }
                        @Html.VnrDatePickerFor(model => model.DateFrom, _dateFrom)
                    </div>

                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.DateTo)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _dateTo = new DatePickerBuilderInfo()
                            {
                                StyleCss = "width:120px",
                                Name = "HDTJobInfo_DateTo"
                            };
                        }
                        @Html.VnrDatePickerFor(model => model.DateTo, _dateTo)
                    </div>

                </div>

                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.HDTJobTypeID)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _workplaceName = new ComboBoxBuilderInfo()
                             {
                                 Name = "HDTJobInfo_HDTJobTypeID",
                                 DataTextField = "HDTJobTypeName",
                                 DataValueField = "ID",
                                 Url = _hrm_Hr_Service + "Cat_GetData/GetMultiHDTJob",
                                 Autobind = true,
                                 StyleCss = "width:300px;",

                             };
                        }

                        @(Html.VnrComboBoxFor(mode => mode.HDTJobTypeID, _workplaceName))
                    </div>

                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Description)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(model => model.Description, "width:500px;height:100px;")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Note)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(model => model.Note, "width:500px;height:100px;")
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-HDTJob", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveNew", Name = "save-New-HDTJob", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-HDTJob", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}
