@using HRM.Presentation.Attendance.Models
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Infrastructure.Utilities

@{
    Layout = null;
    ViewBag.Title = "Hre_Roster";
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Att_Service;
}
<script src="@Url.Content("~/Scripts/kendo/2013.3.1324/jquery.min.js")"></script>
<script src="@Url.Content("~/Scripts/kendo/2013.3.1324/kendo.all.min.js")"></script>
<script src="@Url.Content("~/Scripts/kendo/2013.3.1324/kendo.aspnetmvc.min.js")"></script>
<script src="@Url.Content("~/Scripts/kendo.modernizr.custom.js")"></script>
<div class="clear"></div>
<!--Hidden field cho mỗi tab giúp xác định dữ liệu đã load rồi thì không load lại-->
@(Html.TextBox("txt_HiddenProfileBasic", null, new { style = "display: none" }))

<div style="overflow:hidden">
    <!--Khai báo các thông tin cho Grid-->
    @{
        string[] valueFields = new string[]
                            {
                                Att_RosterModel.FieldNames.Type,
                                Att_RosterModel.FieldNames.DateStart,
                                Att_RosterModel.FieldNames.DateEnd,
                                Att_RosterModel.FieldNames.MonShiftName,
                                Att_RosterModel.FieldNames.TueShiftName,
                                Att_RosterModel.FieldNames.WedShiftName,
                                Att_RosterModel.FieldNames.ThuShiftName,
                                Att_RosterModel.FieldNames.FriShiftName,
                                Att_RosterModel.FieldNames.SatShiftName,
                                Att_RosterModel.FieldNames.SunShiftName,
                                Att_RosterModel.FieldNames.Status
                            };
        Dictionary<string, int> sizeFields = new Dictionary<string, int>()
                            {
                                {Att_RosterModel.FieldNames.Type,200},
                                {Att_RosterModel.FieldNames.DateStart,150},
                                {Att_RosterModel.FieldNames.DateEnd,150},
                                {Att_RosterModel.FieldNames.MonShiftName,150},
                                {Att_RosterModel.FieldNames.TueShiftName,150},
                                {Att_RosterModel.FieldNames.WedShiftName,150},
                                {Att_RosterModel.FieldNames.ThuShiftName,150},
                                {Att_RosterModel.FieldNames.FriShiftName,150},
                                {Att_RosterModel.FieldNames.SatShiftName,150},
                                {Att_RosterModel.FieldNames.SunShiftName,150},
                                {Att_RosterModel.FieldNames.Status,150}
                            };

        Dictionary<string, string> displayFields = new Dictionary<string, string>()
                            {
                                {Att_RosterModel.FieldNames.Type, ConstantDisplay.HRM_Attendance_Roster_Type},
                                {Att_RosterModel.FieldNames.DateStart, ConstantDisplay.HRM_Attendance_Roster_DateStart},
                                {Att_RosterModel.FieldNames.DateEnd, ConstantDisplay.HRM_Attendance_Roster_DateEnd},
                                {Att_RosterModel.FieldNames.MonShiftName, ConstantDisplay.HRM_Attendance_Roster_MonShiftName},
                                {Att_RosterModel.FieldNames.TueShiftName, ConstantDisplay.HRM_Attendance_Roster_TueShiftName},
                                {Att_RosterModel.FieldNames.WedShiftName, ConstantDisplay.HRM_Attendance_Roster_WedShiftName},
                                {Att_RosterModel.FieldNames.ThuShiftName, ConstantDisplay.HRM_Attendance_Roster_ThuShiftName},
                                {Att_RosterModel.FieldNames.FriShiftName, ConstantDisplay.HRM_Attendance_Roster_FriShiftName},
                                {Att_RosterModel.FieldNames.SatShiftName, ConstantDisplay.HRM_Attendance_Roster_SatShiftName},
                                {Att_RosterModel.FieldNames.SunShiftName, ConstantDisplay.HRM_Attendance_Roster_SunShiftName},
                                {Att_RosterModel.FieldNames.Status, ConstantDisplay.HRM_Attendance_Roster_Status}
                            };
                            
        var grid = new GridBuilderInfo
        {
            Name = "gridAtt_RosterPersonal",
            ValueFields = valueFields,
            SizeFields = sizeFields,
            DisplayFields = displayFields,
            ShowCommand = true,
            ReadActionUrl = "Hre_Roster",
            Controller = "Hre_Profile",
            ReadParameter = new { id = @ViewBag.ProfileId },
            ShowNextPrevious = true,
            PageSize = 5,
            ShowPageNumber = true,
        };

    }

    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<Att_RosterModel>(grid))
</div>

@*<script>
        var idt = $("#" + '@ConstantDisplay.HRM_HR_GeneralProfile_H_IdProfile').val();

        $.ajax({
            url: '/Hre_Profile/Hre_Roster/',
            data: { id: idt },
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            success: function (result) {
                var grid = $("#gridAtt_RosterPersonal").data("kendoGrid");
                var dataSource = new kendo.data.DataSource({
                    data: result.Data
                });
                grid.setDataSource(dataSource);
                grid.dataSource.read();
            },
            error: function (e) {
                if (e.errors) {
                    var message = "Errors:\n";
                    $.each(e.errors, function (key, value) {
                        if ('errors' in value) {
                            $.each(value.errors, function () {
                                message += this + "\n";
                            });
                        }
                    });
                    alert(message);
                }
            }
        });
    </script>*@

