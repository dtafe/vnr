@using HRM.Infrastructure.Utilities

@using HRM.Presentation.Payroll.Models
@using HRM.Infrastructure.Security
@{
    Layout = null;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var guidEmpty = Guid.Empty;
}

@using HRM.Presentation.UI.Controls.Kendo

@model HRM.Presentation.Payroll.Models.Sal_SalaryInformationModel
@{
      var profileID = Guid.Empty;
        var ProfileName = string.Empty;
        if (Model != null)
        {
            profileID = Model.ID;
            ProfileName = Model.ProfileName;
        }
}
@{
    var window = new WindowBuilderInfo
    {
        Name = ConstantControlName.HRM_Sal_CostCentreSal_PopUp_Name,
        Visible = false,
        Width = 700,
        LoadContentFrom = @_hrm_Main_Web + "Hre_Profile/CodeAlocalInfo?profileID=" + profileID + "&ProfileName=" + ProfileName
    };
}
@(Html.VnrWindow(window))
@{
    var windowError = new WindowBuilderInfo
    {
        Name = "windowError",
        Visible = false,
        Height = 150,
        Width = 300,
        Title = "Thông Báo Lỗi",
        Content = "<br><br><center><b>Chưa Có Nhân Viên!!!</b></center>"
    };
}
@(Html.VnrWindow(windowError))
@{
    var windowSalaryInformationViewInfo = new WindowBuilderInfo
    {
        Name="window_Hre_SalaryInformationViewInfoEdit",
        Visible = false,
        Width = 1000,
        LoadContentFrom = @_hrm_Main_Web + "Sal_SalaryInformation/Hre_SalaryInformationViewInfo?profileID=" + profileID
    };
}
@(Html.VnrWindow(windowSalaryInformationViewInfo))
<script>

    
    var gridName = '@ConstantControlName.HRM_Sal_CostCentreSal_Grid_Name';
    var popUpName = '@ConstantControlName.HRM_Sal_CostCentreSal_PopUp_Name';
    var titleEditPopUpSal_CostCentreSal = '@Html.Raw(ConstantDisplay.HRM_Sal_CostCentreSal_PopUp_Edit_Title.TranslateString())';
    var titleCreatePopUpSal_CostCentreSal = '@Html.Raw(ConstantDisplay.HRM_Sal_CostCentreSal_PopUp_Create_Title.TranslateString())';
    var titleSalaryInformationViewInfoEdit = '@Html.Raw(ConstantDisplay.HRM_HR_SalaryInformationViewInfo_Popup_Edit_Title.TranslateString())';
    $(document).ready(function () {
        ShowHidePanel();
        
        EditGridPopUp('grid_Sal_CostCentreSal', popUpName, '@_hrm_Main_Web' + "Hre_Profile/Sal_CostCentreSalInfo/", '@ConstantPermission.Sal_CostCentreSal', titleEditPopUpSal_CostCentreSal);
    });

    $("#btnSearch").click(function () {
        
        var grid = $("grid_Sal_CostCentreSal").data("kendoGrid");
        grid.dataSource.read();
    });
    //Xử lý khi check chọn các dòng trên lưới thì lưu id của các dòng đó cào biến selectedIds ở trên
    GridCheckbox("grid_Sal_CostCentreSal");

    $("#btnSal_CostCentreSal_Create").click(function () {
        
        var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Sal_CostCentreSal');
        if (!isAccess) {
            return;
        }
        @*var x = $('#@Html.FieldIdFor(model => model.ID)').val();*@
        var x = '@Model.ID';
        if (x == '') {
            PopUpCreate("windowError");
        }
        else {
            $("#" + '@ConstantControlName.HRM_Sal_CostCentreSal_PopUp_Name').data("kendoWindow").options.content.url = '@_hrm_Main_Web' + "Hre_Profile/Sal_CostCentreSalInfo?id=" + SelectID;
            
            PopUpCreate('@ConstantControlName.HRM_Sal_CostCentreSal_PopUp_Name', titleCreatePopUpSal_CostCentreSal, '@ConstantPermission.Sal_CostCentreSal');
        }
    });



    $("#btnSal_CostCentreSal_Delete").click(function (e) {
        
        if (selectedIds.length == 0) {
            DeleteFail();
            return;
        }
        DeleteSelected("grid_Sal_CostCentreSal", '@_hrm_Main_Web' + "Hre_Profile/RemoveSelectedSal_CostCentreSal/", selectedIds, '@ConstantPermission.Sal_CostCentreSal');
        return false;
    });

    function Edit_SalaryInformationView()
    {
        debugger;
        var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Sal_CostCentreSal');
        if(!isAccess)
        {
            return;
        }
        var _profileID = $('#ProfileID').val();
        if (_profileID == '00000000-0000-0000-0000-000000000000')
        {
            ShowNotificationProcessor('@ConstantDisplay.HRM_HR_SalaryInformationView_NotSalaryInformation.TranslateString()');
            return;
        }
        var url = '@_hrm_Main_Web' + "Sal_SalaryInformation/Hre_SalaryInformationViewInfo/";
        PopUpEdit("window_Hre_SalaryInformationViewInfoEdit", url, SelectID, titleSalaryInformationViewInfoEdit)
    }
    </script>

<script>
    $(document).ready(function () {
        
       
        $("#ReceiveSocialIns").click(function () {
            return false;
        });
        $("#ReceiveHealthIns").click(function () {
            return false;
        });

        $("#IsRegisterSocialIns").click(function () {
            return false;
        });
        $("#IsRegisterHealthIns").click(function () {
            return false;
        });
        $("#IsRegisterUnEmploymentIns").click(function () {
            return false;
        });
    });
</script>
<div class="VnRMain" style="height:580px;">
    <div>
    <table style="width: 100%; height:16px">
        <tbody>
            <tr>
                <td valign="top"> 
                    <div style="display:block; padding-top:10px;">
                        <fieldset>
                            @*<legend>
                                @ConstantDisplay.HRM_HR_Profile_SocialInsurance.TranslateString()
                            </legend>*@
                            <legend>
                               @ConstantDisplay.HRM_HR_SalaryInformationViewInfo_Title.TranslateString() <a class="link-back" onclick="Edit_SalaryInformationView()" style="padding-left:3px"><b>[@ConstantDisplay.HRM_HR_SalaryInformationView_Edit.TranslateString()]</b></a>
                            </legend>
                            
                            <div style="float:left; width:100%">
                                <div style="float:left; padding-right:70px">
                                    <div class="DivContentTitleValue" id="div13">
                                        <div class="FieldTitle170">
                                            @Html.VnrLabelForNoneIcon(model => model.IsCash)
                                            @Html.HiddenFor(model=>model.ProfileID)
                                        </div>
                                        <div class="FieldValue">
                                            @{
                                                var IsIsCash = new CheckBoxBuilderInfo()
                                                {
                                                };
                                                if (Model != null)
                                                {
                                                    if (Model.IsCash == true)
                                                    {
                                                        IsIsCash.Value = true;
                                                    }
                                                    else
                                                    {
                                                        IsIsCash.Value = false;
                                                    }
                                                }
                                            }
                                            @Html.VnrCheckBoxFor(model => model.IsCash, IsIsCash)
                                        </div>
                                    </div>
                                    <div class="DivContentTitleValue" id="div13" >
                                        <div class="FieldTitle170">
                                            @Html.VnrLabelForNoneIcon(model => model.CurrencyName)
                                        </div>
                                        <div class="FieldValueView">
                                            @Html.DisplayFor(model => model.CurrencyName)
                                        </div>
                                    </div>
                                    <div class="DivContentTitleValue" id="div13">
                                        <div class="FieldTitle170">
                                            @Html.VnrLabelForNoneIcon(model => model.BankName)
                                        </div>
                                        <div class="FieldValueView">
                                            @Html.DisplayFor(model => model.BankName)
                                        </div>
                                    </div>
                                    <div class="DivContentTitleValue" id="div13">
                                        <div class="FieldTitle170">
                                            @Html.VnrLabelForNoneIcon(model => model.BankBrandName)
                                        </div>
                                        <div class="FieldValueView">
                                            @Html.VnrDisplayFor(model => model.BankBrandName)
                                        </div>
                                    </div>
                                    <div class="DivContentTitleValue" id="div13">
                                        <div class="FieldTitle170">
                                            @Html.VnrLabelForNoneIcon(model => model.AccountName)
                                        </div>
                                        <div class="FieldValueView">
                                            @Html.VnrDisplayFor(model => model.AccountName)
                                        </div>
                                    </div>
                                    <div class="DivContentTitleValue" id="div13">
                                        <div class="FieldTitle170">
                                            @Html.VnrLabelForNoneIcon(model => model.AccountNo)
                                        </div>
                                        <div class="FieldValueView">
                                            @Html.DisplayFor(model => model.AccountNo)
                                        </div>
                                    </div>
                                    <div class="DivContentTitleValue" id="div13">
                                        <div class="FieldTitle170">
                                            @Html.VnrLabelForNoneIcon(model => model.SwiftCode)
                                        </div>
                                        <div class="FieldValueView">
                                            @Html.DisplayFor(model => model.SwiftCode)
                                        </div>
                                    </div>
                                    <div class="DivContentTitleValue" id="div13">
                                        <div class="FieldTitle170">
                                            @Html.VnrLabelForNoneIcon(model => model.SortCode)
                                        </div>
                                        <div class="FieldValueView">
                                            @Html.DisplayFor(model => model.SortCode)
                                        </div>
                                    </div>
                                    <div class="DivContentTitleValue" id="div13">
                                        <div class="FieldTitle170">
                                            @Html.VnrLabelForNoneIcon(model => model.AmountTransfer)
                                        </div>
                                        <div class="FieldValueView">
                                            @Html.DisplayFor(model => model.AmountTransfer)
                                        </div>
                                    </div>
                                </div>
                                <div style="float:left">
                                    <div style="float:left; padding-right:70px">
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle170">
                                                @Html.VnrLabelForNoneIcon(model => model.IsCash2)
                                            </div>
                                            <div class="FieldValue">
                                                @{
                                                    var IsIsCash2 = new CheckBoxBuilderInfo()
                                                    {
                                                    };
                                                    if (Model != null)
                                                    {
                                                        if (Model.IsCash2 == true)
                                                        {
                                                            IsIsCash2.Value = true;
                                                        }
                                                        else
                                                        {
                                                            IsIsCash2.Value = false;
                                                        }
                                                    }
                                                }
                                                @Html.VnrCheckBoxFor(model => model.IsCash2, IsIsCash2)
                                            </div>
                                        </div>
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle170">
                                                @Html.VnrLabelForNoneIcon(model => model.CurrencyName2)
                                            </div>
                                            <div class="FieldValueView">
                                                @Html.DisplayFor(model => model.CurrencyName2)
                                            </div>
                                        </div>
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle170">
                                                @Html.VnrLabelForNoneIcon(model => model.BankName2)
                                            </div>
                                            <div class="FieldValueView">
                                                @Html.DisplayFor(model => model.BankName2)
                                            </div>
                                        </div>
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle170">
                                                @Html.VnrLabelForNoneIcon(model => model.BankBrandName2)
                                            </div>
                                            <div class="FieldValueView">
                                                @Html.VnrDisplayFor(model => model.BankBrandName2)
                                            </div>
                                        </div>
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle170">
                                                @Html.VnrLabelForNoneIcon(model => model.AccountName2)
                                            </div>
                                            <div class="FieldValueView">
                                                @Html.VnrDisplayFor(model => model.AccountName2)
                                            </div>
                                        </div>
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle170">
                                                @Html.VnrLabelForNoneIcon(model => model.AccountNo2)
                                            </div>
                                            <div class="FieldValueView">
                                                @Html.DisplayFor(model => model.AccountNo2)
                                            </div>
                                        </div>
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle170">
                                                @Html.VnrLabelForNoneIcon(model => model.SwiftCode2)
                                            </div>
                                            <div class="FieldValueView">
                                                @Html.DisplayFor(model => model.SwiftCode2)
                                            </div>
                                        </div>
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle170">
                                                @Html.VnrLabelForNoneIcon(model => model.SortCode2)
                                            </div>
                                            <div class="FieldValueView">
                                                @Html.DisplayFor(model => model.SortCode2)
                                            </div>
                                        </div>
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle170">
                                                @Html.VnrLabelForNoneIcon(model => model.AmountTransfer2)
                                            </div>
                                            <div class="FieldValueView">
                                                @Html.DisplayFor(model => model.AmountTransfer2)
                                            </div>
                                        </div>
                                </div>
                                  
                                </div>
                                </div>
                        </fieldset>
                    </div>
                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
        </tbody>
    </table>
        </div>
    <div style=" display: block; padding-top: 10px; ">
            <div class="commandToolBarWidge">
                <div class="GridTitle">
                    @Html.VnrLabel(ConstantDisplay.Sal_CodeAlocal_List.TranslateString())
                </div>
                @*<div style="float:right">
                @Html.VnrButton(new ButtonBuilderInfo() { Name = "CodeAlocal_Create", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
                @Html.VnrButton(new ButtonBuilderInfo() { Name = "CodeAlocal_Delete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
            </div>*@
                <div style="float:right">
                    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSal_CostCentreSal_Create", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
                    @*@Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSal_CostCentreSal_Export", Content = ConstantDisplay.HRM_Common_Export_Button.TranslateString(), ImageUrl = ConstantPath.IconExportPath })*@
                    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSal_CostCentreSal_Delete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
                </div>
                <div class="clear"></div>
            </div>
        @*<div style="overflow:hidden">*@
            <div>
            <!--Khai báo các thông tin cho Grid-->
            @{
                string[] valueFields = new string[]
                            {
                                Sal_CostCentreSalModel.FieldNames.CostCentreName,
                                Sal_CostCentreSalModel.FieldNames.Rate,
                                Sal_CostCentreSalModel.FieldNames.ElementName,
                                Sal_CostCentreSalModel.FieldNames.DateStart
                            };
                Dictionary<string, int> sizeFields = new Dictionary<string, int>()
                            {
                                {Sal_CostCentreSalModel.FieldNames.CostCentreName,100},
                                {Sal_CostCentreSalModel.FieldNames.DateStart,95},
                                {Sal_CostCentreSalModel.FieldNames.ElementName,150},
                                {Sal_CostCentreSalModel.FieldNames.Rate,55}
                            };

                Dictionary<string, string> displayFields = new Dictionary<string, string>()
                            {
                                {Sal_CostCentreSalModel.FieldNames.CostCentreName, ConstantDisplay.HRM_Category_CostCentre_CostCentreName},
                                {Sal_CostCentreSalModel.FieldNames.DateStart, ConstantDisplay.HRM_Payroll_Costcentre_DateStart},
                                {Sal_CostCentreSalModel.FieldNames.Rate, ConstantDisplay.HRM_Payroll_Costcentre_Rate},
                                {Sal_CostCentreSalModel.FieldNames.ElementName,ConstantDisplay.HRM_Payroll_CodeAlocal_ElementType}
                            };
                var grid = new GridBuilderInfo
                {
                    Name = "grid_Sal_CostCentreSal",
                    //ReadActionUrl = _hrm_hre_Service + "Hre_GetData/GetCodeAlocalByProfileID",
                    ReadActionUrl = _hrm_hre_Service + "Hre_GetData/GetSalCostCentreSalByProfileID",
                    ValueFields = valueFields,
                    SizeFields = sizeFields,
                    DisplayFields = displayFields,
                    PageSize = 50,
                    GridHeight = 250,
                    ShowCheckAll = false,
                    AutoBind = true,
                    ReadData = "filterFieldInfo_Reload",
                };
            }
            <!--Khởi tạo Grid-->
            @(Html.VnrGrid<Sal_CostCentreSalModel>(grid))
        </div>
    </div>

</div>
<div class="clear"></div>
