@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.Attendance.Models

@using VnResource.Helper.Data;
@using HRM.Infrastructure.Security;
@model HRM.Presentation.Hr.Models.Hre_ProfileModel
@{
    Layout = null;
    ViewBag.Title = ConstantDisplay.HRM_Attendance_Overtime.TranslateString();
    string[] valueFields = null;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    IList<SelectListItem> overtimeStatus = Enum.GetValues(typeof(EnumDropDown.OverTimeStatus))
        .Cast<EnumDropDown.OverTimeStatus>()
        .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
        .ToList();

    IList<SelectListItem> lstMethodPayment = Enum.GetValues(typeof(EnumDropDown.MethodPayment))
    .Cast<EnumDropDown.MethodPayment>()
    .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
    .ToList();
    var profileID = Guid.Empty;
    var ProfileName = string.Empty;
}
@{
    var window = new WindowBuilderInfo
    {
        Name = ConstantControlName.HRM_Att_Overtime_PopUp_Name,
        Visible = false,
        LoadContentFrom = @_hrm_Main_Web + "Hre_Profile/OvertimeInfo?profileID=" + profileID + "&ProfileName=" + ProfileName
    };
}
@{
    var windowError = new WindowBuilderInfo
    {
        Name = "windowError",
        Visible = false,
        Height = 150,
        Width = 300,
        Title = "Thông Báo Lỗi",
        Content = "<br><br><center><b>Chưa Có Nhân Viên!!!</b></center>"
    };
}
@(Html.VnrWindow(windowError))
@(Html.VnrWindow(window))

<script type="text/javascript">

    var gridName = '@ConstantControlName.HRM_Att_Overtime_Grid_Name';
    var popUpName = '@ConstantControlName.HRM_Att_Overtime_PopUp_Name';
    var titleEditPopUpOvertime = '@Html.Raw(ConstantDisplay.HRM_Attendance_Overtime_PopUp_Edit_Title.TranslateString())';
    var titleCreatePopUpOvertime = '@Html.Raw(ConstantDisplay.HRM_Attendance_Overtime_PopUp_Create_Title.TranslateString())';



    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        resizeControl('gridTab_OvertimeView', 200);
        //Show Hide Panel
        ShowHidePanel();
        //
        $("#btnSearch").click(function () {
            ReadGrid("gridTab_OvertimeView");
        });
        @*EditGridPopUp('gridTab_OvertimeView', popUpName, '@_hrm_Main_Web' + "Hre_Profile/OvertimeInfo/", '@ConstantPermission.Att_Overtime', titleEditPopUpOvertime);*@
        
        $("#gridTab_OvertimeView").on("click", ".gridEditImgButton", function (e) {
            var grid = $('#gridTab_OvertimeView').data("kendoGrid");
            var selectedItem = grid.dataItem(grid.select());

            if (selectedItem.Status == "Duyệt" || selectedItem.Status == "E_APPROVED") {
                ErrorMessages("Tăng Ca Đã Duyệt Không Được Phép Chỉnh Sửa!");
                return;
            }
            if (selectedItem.Status == "Từ Chối" || selectedItem.Status == "E_REJECTED") {
                ErrorMessages("Tăng Ca Đã Từ Chối Không Được Phép Chỉnh Sửa!");
                return;
            }
            else {
                EditGridPopUp('gridTab_OvertimeView', popUpName, '@_hrm_Main_Web' + "Hre_Profile/OvertimeInfo/", '@ConstantPermission.Att_Overtime', titleEditPopUpLeaveday);
            }
        });

    });
    //Xử Lý grid
    GridCheckbox("gridTab_OvertimeView");

    $("#btnExport_Overtime").click(function () {
        var grid = $('#gridTab_OvertimeView').data("kendoGrid");
        if (grid.dataSource.total() == 0) {
            ExportAllFail();
            return;
        }
        var urlGetData = '@_hrm_Hr_Service' + "Att_GetData/GetOvertimeByProIDandCutOID/";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo_Reload(true);
        ExportAll(urlGetData, dataParameter, urlDownload, '@ConstantPermission.Att_Overtime');
    });

    $("#btnCreate_Overtime").click(function () {
        
        var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Att_Overtime');
        if (!isAccess) {
            return;
        }

        @*var ProfileID = null;
        var ProfileName = null;
        ProfileName = $("#ProfileNameGenarel").val();
        ProfileID = $("#" + '@ConstantDisplay.HRM_HR_GeneralProfile_H_IdProfile').val();
        alert(ProfileName);*@
        KendoRouteMapping('#Hrm_Main_Web/Att_Overtime/AnalysisProfile?ProfileID=' + SelectID + "&ProfileName=" + $("#profileNameView").html(), 'Hrm_Main_Web', '@_hrm_Main_Web');
    });

    //Xử Lý button delete
    $('#btnDelete_Overtime').click(function (e) {
        e.preventDefault();
        var grid = $('#gridTab_OvertimeView').data("kendoGrid");
        var selectedItem = grid.dataItem(grid.select());
        if (selectedItem.Status != "Duyệt" && selectedItem.Status != "E_APPROVED") {
            @*DeleteSelected("gridTab_OvertimeView", '@_hrm_Main_Web' + "Att_Overtime/RemoveSelected/", selectedIds.join(","), '@ConstantPermission.Att_Overtime');
            return false;*@
            var recordids = [];
            for (var i = 0; i < selectedIds.length; i++) {
                recordids.push(selectedIds[i]);
            }
            if (recordids.length == selectedIds.length) {
                DeleteSelectedConfirm("gridTab_OvertimeView", '@_hrm_Main_Web' + "Att_Overtime/RemoveSelected/", selectedIds, '@ConstantPermission.Att_Overtime');
                return false;
            }
            DeleteSelecteds("gridTab_OvertimeView", '@_hrm_Main_Web' + "Att_Overtime/RemoveSelected/", selectedIds, recordids, '@ConstantPermission.Att_Overtime');
            return false;

        } else {
            ErrorMessages("Tăng Ca Đã Duyệt Không Được Phép Xóa!");
        }
        return false;
    })

</script>

<div class="clear"></div>

<div style="margin-top:3px">
    <!--Hidden field cho mỗi tab giúp xác định dữ liệu đã load rồi thì không load lại-->
    <div class="commandToolBarWidge">
        <div class="GridTitle">
            @Html.VnrLabel(ConstantDisplay.HRM_Attendance_Overtime.TranslateString())
        </div>
        <div style="float:right">
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreate_Overtime", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport_Overtime", Content = ConstantAction.HRM_Common_Export.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete_Overtime", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
        </div>
        <div class="clear"></div>
    </div>
    <div style="overflow:hidden">
        @{
            
            
            Dictionary<object, object[]> foreignKey = new Dictionary<object, object[]>()
        {

            {Att_WorkdayModel.FieldNames.Status,new object[]
               { "Value", "Text", overtimeStatus, ConstantDisplay.HRM_Attendance_Overtime_Status,""}},
                  {Att_OvertimeModel.FieldNames.MethodPayment,new object[]
               { "Value", "Text", lstMethodPayment, ConstantDisplay.HRM_Attendance_Overtime_MethodPayment,""}},
        };
            valueFields = new string[]
        {
            Att_OvertimeModel.FieldNames.WorkDate,
            Att_OvertimeModel.FieldNames.ShiftName,
            Att_OvertimeModel.FieldNames.OvertimeTypeName,
            Att_OvertimeModel.FieldNames.RegisterHours,
            Att_OvertimeModel.FieldNames.ApproveHours,
            Att_OvertimeModel.FieldNames.Status,
            Att_OvertimeModel.FieldNames.MethodPayment,
            Att_OvertimeModel.FieldNames.ReasonOT,
            Att_OvertimeModel.FieldNames.UserApproveName1,
            Att_OvertimeModel.FieldNames.UserApproveName2
        };

            Dictionary<string, int> sizeFields = new Dictionary<string, int>()
        {
            {Att_OvertimeModel.FieldNames.WorkDate, 90},
            {Att_OvertimeModel.FieldNames.ShiftName, 90},
            {Att_OvertimeModel.FieldNames.OvertimeTypeName, 100},
            {Att_OvertimeModel.FieldNames.RegisterHours, 80},
            {Att_OvertimeModel.FieldNames.ApproveHours, 80},
            {Att_OvertimeModel.FieldNames.Status, 100},
            {Att_OvertimeModel.FieldNames.MethodPayment, 110},
            {Att_OvertimeModel.FieldNames.ReasonOT, 130},
            {Att_OvertimeModel.FieldNames.UserApproveName1, 120},
            {Att_OvertimeModel.FieldNames.UserApproveName2, 120}
        };

            Dictionary<string, string> displayFields = new Dictionary<string, string>()
        {
            {Att_OvertimeModel.FieldNames.WorkDate, ConstantDisplay.HRM_Attendance_Overtime_WorkDate},
            {Att_OvertimeModel.FieldNames.ShiftName, ConstantDisplay.HRM_Attendance_Overtime_ShiftID},
            {Att_OvertimeModel.FieldNames.OvertimeTypeName, ConstantDisplay.HRM_Attendance_Overtime_OvertimeTypeID},
            {Att_OvertimeModel.FieldNames.RegisterHours, ConstantDisplay.HRM_Attendance_Overtime_RegisterHours},
            {Att_OvertimeModel.FieldNames.ApproveHours, ConstantDisplay.HRM_Attendance_Overtime_ApproveHours},
            {Att_OvertimeModel.FieldNames.Status, ConstantDisplay.HRM_Attendance_Overtime_Status},
            {Att_OvertimeModel.FieldNames.MethodPayment, ConstantDisplay.HRM_Attendance_Overtime_MethodPayment},
            {Att_OvertimeModel.FieldNames.ReasonOT, ConstantDisplay.HRM_Attendance_Overtime_ReasonOT},
            {Att_OvertimeModel.FieldNames.UserApproveName1, ConstantDisplay.HRM_Attendance_Overtime_UserApproveID},
            {Att_OvertimeModel.FieldNames.UserApproveName2, ConstantDisplay.HRM_Attendance_Overtime_UserApproveID2}
        };

            Dictionary<string, string> formatFields = new Dictionary<string, string>()
        {
            {Att_OvertimeModel.FieldNames.WorkDate, ConstantFormat.HRM_Format_Grid_LongDate}
        };

            var grid = new GridBuilderInfo
            {
                Name = "gridTab_OvertimeView",
                ValueFields = valueFields,
                SizeFields = sizeFields,
                DisplayFields = displayFields,
                ShowDeleteButton = true,
                DeleteActionUrl = _hrm_Main_Web + "/Att_Overtime/Remove/",
                ReadActionUrl = _hrm_Hr_Service + "Att_GetData/GetOvertimeByProIDandCutOID",
                ReadData = "filterFieldInfo_Reload",
                GridWidth = Common.ScreenWidth - 260,
                ForeignKey = foreignKey,
                AutoBind = true
            };
        }
        <!--Khởi tạo Grid-->
        @(Html.VnrGrid<Att_OvertimeModel>(grid))

    </div>
</div>
@{
    var valueFields1 = ",ProfileName,CodeEmp";
    for (int i = 0; i < valueFields.Count(); i++)
    {
        valueFields1 += "," + valueFields[i];
    }
}
<script>
    $(document).ready(function () {
        $("#valueFieldsGrid").val('@valueFields1');
    });
</script>