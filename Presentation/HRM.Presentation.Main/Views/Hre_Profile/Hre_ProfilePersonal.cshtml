@using System.Collections
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Hr.Models
@{
    Layout = null;
    var _Hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
}

@model Hre_ProfileModel

@{
    IList<SelectListItem> listGender = Enum.GetValues(typeof(EnumDropDown.Gender))
        .Cast<EnumDropDown.Gender>()
        .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() })
        .ToList();

    IList<SelectListItem> listMarriageStatus = Enum.GetValues(typeof(EnumDropDown.MarriageStatus))
    .Cast<EnumDropDown.MarriageStatus>()
    .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() })
    .ToList();

    IList<SelectListItem> lstDay = Common.Day();
    IList<SelectListItem> lstMonth = Common.Month();
    //IList<SelectListItem> listBloodType = Enum.GetValues(typeof(EnumDropDown.BloodType))
    //.Cast<EnumDropDown.BloodType>()
    //.Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() })
    //.ToList();
}
<script>
    SetFieldRequired();
</script>
<div class="VnRMain">
    <table style="width:100%">
        <tbody>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                <td valign="top">
                        <div style=" display: block; padding-top:10px;">
                            <fieldset>
                                <legend>
                                    @ConstantDisplay.HRM_HR_Profile_Personal.TranslateString()
                                </legend>
                            </fieldset>
                            <div style=" display: block; padding-top: 10px; float: left; padding-right: 50px">
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelForNoneIcon(model => model.NameEnglish)
                                    </div>
                                    <div class="FieldValue">
                                        @Html.VnrTextBoxFor(model => model.NameEnglish)
                                    </div>
                                </div>
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelForNoneIcon(model => model.Gender)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var ddlGender = new DropDownListBuilderInfo()
                                            {
                                                DataTextField = "Text",
                                                DataValueField = "Value",
                                                BindTo = listGender
                                            };
                                        }
                                        @Html.VnrDropDownListFor(model => model.Gender, ddlGender)
                                    </div>
                                </div>
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelForNoneIcon(model => model.DayOfBirth)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var ddlDay = new DropDownListBuilderInfo()
                                            {
                                                Name = "DayOfBirth",
                                                DataTextField = "Text",
                                                DataValueField = "Value",
                                              //  FilterType = FilterType.Contains,
                                                StyleCss = "width:65px",
                                                BindTo = lstDay,
                                                OptionLabel = string.Empty,
                                                Value = Model == null ? string.Empty : Model.DayOfBirth.ToString()
                                            };
                                        }
                                        @Html.VnrDropDownListFor(model => model.DayOfBirth, ddlDay)
                                        @{
                                            var ddlMonth = new DropDownListBuilderInfo()
                                            {
                                                Name = "MonthOfBirth",
                                                DataTextField = "Text",
                                                DataValueField = "Value",
                                               // FilterType = FilterType.Contains,
                                                StyleCss = "width:65px",
                                                BindTo = lstMonth,
                                                OptionLabel = string.Empty,
                                                Value = Model == null ? string.Empty : Model.MonthOfBirth.ToString()
                                            };
                                        }

                                        @Html.VnrDropDownListFor(model => model.MonthOfBirth, ddlMonth)
                                        @Html.Kendo().MaskedTextBoxFor(model => model.YearOfBirth).Mask("0000")
                                    </div>
                                </div>
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelForNoneIcon(model => model.PlaceOfBirth)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var comboboxPlaceOfBirth = new ComboBoxBuilderInfo()
                                            {
                                                DataTextField = "ProvinceName",
                                                DataValueField = "ProvinceName",
                                                FilterType = FilterType.Contains,
                                                Url = _Hrm_Hre_Service + "Cat_GetData/GetMultiProvince",
                                                Value = Model == null ? string.Empty : Model.PlaceOfBirth
                                            };
                                        }
                                        @Html.VnrComboBoxFor(model => model.PlaceOfBirth, comboboxPlaceOfBirth).Text(Model == null ? string.Empty : Model.PlaceOfBirth)
                                    </div>
                                </div>
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelForNoneIcon(model => model.MarriageStatus)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var ddlxMarriageStatus = new DropDownListBuilderInfo()
                                            {
                                                DataTextField = "Text",
                                                DataValueField = "Value",
                                                BindTo = listMarriageStatus
                                            };
                                        }
                                        @Html.VnrDropDownListFor(model => model.MarriageStatus, ddlxMarriageStatus)
                                    </div>
                                </div>
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelForNoneIcon(model => model.EducationLevelID)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _EducationLevelName = new ComboBoxBuilderInfo()
                                             {
                                                 DataTextField = "NameEntityName",
                                                 DataValueField = "ID",
                                                 Url = _Hrm_Hre_Service + "Cat_GetData/GetMultiEducationLevel",
                                                 Value = Model == null ? string.Empty : Model.EducationLevelID.ToString(),
                                             };
                                        }
                                        @(Html.VnrComboBoxFor(mode => mode.EducationLevelID, _EducationLevelName).Text(Model == null ? string.Empty : Model.EducationLevelName))
                                    </div>
                                </div>
                            </div>
                            <div style=" display: block; padding-top: 10px; float: left">
                             
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelForNoneIcon(model => model.NationalityID)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _NationalityName = new ComboBoxBuilderInfo()
                                             {
                                                 DataTextField = "CountryName",
                                                 DataValueField = "ID",
                                                 Url = _Hrm_Hre_Service + "Cat_GetData/GetMultiCountry",
                                                 Value = Model == null ? string.Empty : Model.NationalityID.ToString(),
                                             };
                                        }
                                        @(Html.VnrComboBoxFor(mode => mode.NationalityID, _NationalityName).Text(Model == null ? string.Empty : Model.NationalityName))
                                    </div>
                                </div>
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelForNoneIcon(model => model.EthnicID)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _EthnicName = new ComboBoxBuilderInfo()
                                             {
                                                 DataTextField = "EthnicGroupName",
                                                 DataValueField = "ID",
                                                 Url = _Hrm_Hre_Service + "Cat_GetData/GetMultiEthnicGroup",
                                                 Value = Model == null ? string.Empty : Model.EthnicID.ToString(),
                                             };
                                        }
                                        @(Html.VnrComboBoxFor(mode => mode.EthnicID, _EthnicName).Text(Model == null ? string.Empty : Model.EthnicGroupName))
                                    </div>
                                </div>
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelForNoneIcon(model => model.ReligionID)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _religionName = new ComboBoxBuilderInfo()
                                             {
                                                 DataTextField = "ReligionName",
                                                 DataValueField = "ID",
                                                 Url = _Hrm_Hre_Service + "Cat_GetData/GetMultiReligion",
                                                 Value = Model == null ? string.Empty : Model.ReligionID.ToString(),
                                             };
                                        }
                                        @(Html.VnrComboBoxFor(mode => mode.ReligionID, _religionName).Text(Model == null ? string.Empty : Model.ReligionName))
                                    </div>
                                </div>
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelForNoneIcon(model => model.Height)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var height = new NumericTextBoxBuilderInfo<double>()
                                            {
                                                Min = 0
                                            };
                                        }
                                        @Html.VnrNumericTextBoxFor(model => model.Height, height)
                                    </div>
                                </div>
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelForNoneIcon(model => model.Weight)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var weight = new NumericTextBoxBuilderInfo<double>()
                                            {
                                                Min = 0
                                            };
                                        }
                                        @Html.VnrNumericTextBoxFor(model => model.Weight, weight)
                                        @Html.ValidationMessageFor(model => model.Weight)
                                    </div>
                                </div>
                            </div>
                        </div>
                    <div style=" display: block; padding-top:10px;">
                        <fieldset>
                            <legend>
                                @ConstantDisplay.HRM_HR_Profile_AdditionalInfo.TranslateString()
                            </legend>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelForNoneIcon(model => model.IDNo)
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrTextBoxFor(model => model.IDNo)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelForNoneIcon(model => model.IDDateOfIssue)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var iDDateOfIssue = new DatePickerBuilderInfo() { };
                                    }
                                    @Html.VnrDatePickerFor(model => model.IDDateOfIssue, iDDateOfIssue)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle150">
                                    @Html.VnrLabelForNoneIcon(model => model.IDPlaceOfIssue)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var iDPlaceOfIssue = new ComboBoxBuilderInfo()
                                        {
                                            DataTextField = "ProvinceName",
                                            DataValueField = "ProvinceName",
                                            FilterType = FilterType.Contains,
                                            Url = _Hrm_Hre_Service + "Cat_GetData/GetMultiProvince",
                                            Value = Model == null ? string.Empty : Model.IDPlaceOfIssue
                                        };
                                    }
                                    @Html.VnrComboBoxFor(model => model.IDPlaceOfIssue, iDPlaceOfIssue).Text(Model == null ? string.Empty : Model.IDPlaceOfIssue)
                                </div>
                            </div>
                        </fieldset>
                    </div>
                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
        </tbody>
    </table>
</div>
@*<script>
    $(document).ready(function () {
        
        var dataSourceMonth = new kendo.data.DataSource({
            data: [
                   { text: "1", value: "1" },
                   { text: "2", value: "2" },
                   { text: "3", value: "3" },
                   { text: "4", value: "4" },
                   { text: "5", value: "5" },
                   { text: "6", value: "6" },
                   { text: "7", value: "7" },
                   { text: "8", value: "8" },
                   { text: "9", value: "9" },
                   { text: "10", value: "10" },
                   { text: "11", value: "11" },
                   { text: "12", value: "12" }
            ]
        });
        var ddlMonth = $("#MonthOfBirth").data("kendoDropDownList").setDataSource(dataSourceMonth);
        ddlMonth.refresh();

        var dataSourceDay = new kendo.data.DataSource({
            data: [
                   { text: "1", value: "1" },
                   { text: "2", value: "2" },
                   { text: "3", value: "3" },
                   { text: "4", value: "4" },
                   { text: "5", value: "5" },
                   { text: "6", value: "6" },
                   { text: "7", value: "7" },
                   { text: "8", value: "8" },
                   { text: "9", value: "9" },
                   { text: "10", value: "10" },
                   { text: "11", value: "11" },
                   { text: "12", value: "12" },
                   { text: "13", value: "13" },
                   { text: "14", value: "14" },
                   { text: "15", value: "15" },
                   { text: "16", value: "16" },
                   { text: "17", value: "17" },
                   { text: "18", value: "18" },
                   { text: "19", value: "19" },
                   { text: "20", value: "20" },
                   { text: "21", value: "21" },
                   { text: "22", value: "22" },
                   { text: "23", value: "23" },
                   { text: "24", value: "24" },
                   { text: "25", value: "25" },
                   { text: "26", value: "26" },
                   { text: "27", value: "27" },
                   { text: "28", value: "28" },
                   { text: "29", value: "29" },
                   { text: "30", value: "30" },
                   { text: "31", value: "31" }
            ]
        });
      var ddlDay =  $("#DayOfBirth").data("kendoDropDownList").setDataSource(dataSourceDay);
      ddlDay.refresh();
    });
</script>*@
<script>
    $(document).ready(function () {
        document.getElementById("YearOfBirth").style.width = "65px" ;
    });
</script>




