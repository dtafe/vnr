@using HRM.Infrastructure.Security
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.HrmSystem.Models
@using HRM.Presentation.Hr.Models
@using HRM.Presentation.UI.Controls.Kendo

@model Hre_ProfileModel

@{
    Layout = null;
    var _hrm_hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var Hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var Hrm_Hre_Web = ConstantPathWeb.Hrm_Main_Web;
}

@{
    var window = new WindowBuilderInfo
    {
        Name = ConstantControlName.HRM_HR_WorkHistory_PopUp_Name,
        Visible = false,
        Width = 1000,
        LoadContentFrom = Hrm_Hre_Web + "Hre_Profile/WorkHistoryInfo?id=" + Model.ID,
    };
}
@(Html.VnrWindow(window))
@{
    var windowError = new WindowBuilderInfo
    {
        Name = "windowError",
        Visible = false,
        Height = 150,
        Width = 300,
        Title = "Thông Báo Lỗi",
        Content = "<br><br><center><b>Chưa Có Nhân Viên!!!</b></center>"
    };
}
@(Html.VnrWindow(windowError))

<script type="text/javascript">

    var gridName = '@ConstantControlName.HRM_HR_WorkHistory_Grid_Name';
    var popUpName = '@ConstantControlName.HRM_HR_WorkHistory_PopUp_Name';
    var titleEditPopUpWorkHistory = '@Html.Raw(ConstantDisplay.HRM_HR_WorkHistory_PopUp_Edit_Title.TranslateString())';
    var titleCreatePopUpWorkHistory = '@Html.Raw(ConstantDisplay.HRM_HR_WorkHistory_PopUp_Create_Title.TranslateString())';
    $(document).ready(function () {
        ShowHidePanel();
        EditGridPopUp(gridName, popUpName, '@Hrm_Hre_Web' + "Hre_Profile/WorkHistoryInfo/", '@ConstantPermission.Hre_WorkHistory', titleEditPopUpWorkHistory);
    });

    $("#btnSearch").click(function () {
        
        var grid = $("gridWorkHistory").data("kendoGrid");
        grid.dataSource.read();
    });
    //Xử lý khi check chọn các dòng trên lưới thì lưu id của các dòng đó cào biến selectedIds ở trên
    GridCheckbox("gridWorkHistory");

    //Tạo mới Quá Trình Công Tác
    $("#WorkHistoryView_Create").click(function () {
        
        var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Hre_WorkHistory');
        if (!isAccess) {
            return;
        }
        @*var x = $('#@Html.FieldIdFor(model => model.ID)').val();*@
        var x = '@Model.ID';

        if (x == '') {
            PopUpCreate("windowError");
        }
        else {
            //[Hien.Nguyen] Do control windown bị Cache ko lấy url mới, chưa có cách giải quyết nên làm cách củ chuối này
            $("#windowWorkHistory").data("kendoWindow").options.content.url = '@Hrm_Hre_Web' + "Hre_Profile/WorkHistoryInfo?id=" + '@Model.ID';
            
            PopUpCreate('@ConstantControlName.HRM_HR_WorkHistory_PopUp_Name', titleCreatePopUpWorkHistory, '@ConstantPermission.Hre_WorkHistory');
        }
    });


    //Xóa Quá Trình Công Tác
    $('#WorkHistoryView_Delete').click(function (e) {
        @*var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Hre_ProfileQuit');
        if (!isAccess) {
            return;
        }*@
        if (selectedIds == "") {
            DeleteFail();
            return;
        }

        DeleteSelected("gridWorkHistory", '@Hrm_Hre_Web' + "Hre_Profile/RemoveSelectedWorkHistory/", selectedIds, '@ConstantPermission.Hre_WorkHistory');
        return false;
    });
</script>
<div style="height:480px">
    <div>
        <table style="width:100%">
            <tbody>
                <tr>
                    <td valign="top">
                        <div>
                            <div style="display: block; padding-top: 10px;">
                                <fieldset>
                                    <legend>
                                        @ConstantDisplay.HRM_HRM_WorkHistory.TranslateString()
                                    </legend>
                                    <div style="float: left; padding-right: 100px">
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle">
                                                @Html.HiddenFor(model => model.ID)
                                                @Html.VnrLabelForNoneIcon(model => model.OrgStructureName)
                                            </div>
                                            <div class="FieldValueView">
                                                @Html.DisplayFor(model => model.OrgStructureName)
                                            </div>
                                        </div>
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle">
                                                @Html.VnrLabelForNoneIcon(model => model.JobTitleName)
                                            </div>
                                            <div class="FieldValueView">
                                                @Html.DisplayFor(model => model.JobTitleName)
                                                @Html.Hidden("ProfileID")
                                            </div>
                                        </div>
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle">
                                                @Html.VnrLabelForNoneIcon(model => model.PositionName)
                                            </div>
                                            <div class="FieldValueView">
                                                @Html.DisplayFor(model => model.PositionName)
                                            </div>
                                        </div>
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle">
                                                @Html.VnrLabelForNoneIcon(model => model.EmployeeTypeName)
                                            </div>
                                            <div class="FieldValueView">
                                                @Html.DisplayFor(model => model.EmployeeTypeName)
                                            </div>
                                        </div>
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle">
                                                @Html.VnrLabelForNoneIcon(model => model.DateOfEffect)
                                            </div>
                                            <div class="FieldValueView">
                                                @Html.VnrDisplayFor(model => model.DateOfEffect)
                                            </div>
                                        </div>
                                    </div>
                                    <div style="float: left; padding-right: 30px">
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle">
                                                @Html.VnrLabelForNoneIcon(model => model.CostCentreName)
                                            </div>
                                            <div class="FieldValueView">
                                                @Html.DisplayFor(model => model.CostCentreName)
                                            </div>
                                        </div>
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle">
                                                @Html.VnrLabelForNoneIcon(model => model.WorkPlaceName)
                                            </div>
                                            <div class="FieldValueView">
                                                @Html.DisplayFor(model => model.WorkPlaceName)
                                            </div>
                                        </div>
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle">
                                                @Html.VnrLabelForNoneIcon(model => model.SupervisorName)
                                            </div>
                                            <div class="FieldValueView">
                                                @Html.DisplayFor(model => model.SupervisorName)
                                            </div>
                                        </div>
                                        <div class="DivContentTitleValue" id="div13">
                                            <div class="FieldTitle">
                                                @Html.VnrLabelForNoneIcon(model => model.HighSupervisorName)
                                            </div>
                                            <div class="FieldValueView">
                                                @Html.DisplayFor(model => model.HighSupervisorName)
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>

                    </td>
                    <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
                </tr>
            </tbody>
        </table>
    </div>
    <div style=" display: block; padding-top: 10px; ">
        <div class="commandToolBarWidge" id="anchor">
            <div class="GridTitle">
                @Html.VnrLabel(ConstantDisplay.HR_WorkHistory_List.TranslateString())
            </div>
            <div style="float:right">
                @Html.VnrButton(new ButtonBuilderInfo() { Name = "WorkHistoryView_Create", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
                @Html.VnrButton(new ButtonBuilderInfo() { Name = "WorkHistoryView_Delete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
            </div>
            <div class="clear"></div>
        </div>
        <div style="overflow:hidden">
            <!--Khai báo các thông tin cho Grid-->
            @{
                string[] valueFields = new string[]
                            {
                                Hre_WorkHistoryModel.FieldNames.DateEffective,
                                Hre_WorkHistoryModel.FieldNames.JobTitleName,
                                Hre_WorkHistoryModel.FieldNames.PositionName,
                                Hre_WorkHistoryModel.FieldNames.OrgStructureName,
                                Hre_WorkHistoryModel.FieldNames.WorkLocation
                            };
                Dictionary<string, int> sizeFields = new Dictionary<string, int>()
                            {
                                {Hre_WorkHistoryModel.FieldNames.DateEffective,100},
                                {Hre_WorkHistoryModel.FieldNames.JobTitleName,120},
                                {Hre_WorkHistoryModel.FieldNames.PositionName,120},
                                {Hre_WorkHistoryModel.FieldNames.OrgStructureName,120},
                                {Hre_WorkHistoryModel.FieldNames.WorkLocation,110}
                            };

                Dictionary<string, string> displayFields = new Dictionary<string, string>()
                            {
                                {Hre_WorkHistoryModel.FieldNames.DateEffective, ConstantDisplay.HRM_HR_WorkHistory_DateEffective},
                                {Hre_WorkHistoryModel.FieldNames.JobTitleName, ConstantDisplay.HRM_HR_WorkHistory_JobTitleID},
                                {Hre_WorkHistoryModel.FieldNames.PositionName, ConstantDisplay.HRM_HR_WorkHistory_PositionID},
                                {Hre_WorkHistoryModel.FieldNames.OrgStructureName, ConstantDisplay.HRM_HR_WorkHistory_OrgStructureID},
                                {Hre_WorkHistoryModel.FieldNames.WorkLocation, ConstantDisplay.HRM_HR_WorkHistory_WorkLocation}
                            };
                var filterable = new Dictionary<string, bool>()
                            {
                               {Hre_WorkHistoryModel.FieldNames.DateEffective,true},
                               {Hre_WorkHistoryModel.FieldNames.JobTitleName,true},
                                {Hre_WorkHistoryModel.FieldNames.PositionName,true},
                                {Hre_WorkHistoryModel.FieldNames.OrgStructureName,true},
                                {Hre_WorkHistoryModel.FieldNames.WorkLocation,true},
                            };

                var grid = new GridBuilderInfo
                {
                    Name = "gridWorkHistory",
                    ReadActionUrl = _hrm_hre_Service + "Hre_GetData/GetWorkHistoryByProfileID?profileID=" + Model.ID,
                    //  ReadData = "filterFieldInfo",
                    ValueFields = valueFields,
                    SizeFields = sizeFields,
                    DisplayFields = displayFields,
                    PageSize = 10,
                    GridHeight = 370,
                    ShowCheckAll = false,
                    AutoBind = true
                };
            }

            <!--Khởi tạo Grid-->
            @(Html.VnrGrid<Hre_WorkHistoryModel>(grid))
        </div>
    </div>
</div>


<!--Hidden field cho mỗi tab giúp xác định dữ liệu đã load rồi thì không load lại-->
@(Html.TextBox(ConstantDisplay.HRM_Hr_GeneralProfile_HiddenField_Tab[1], null, new { @class = "k-input k-textbox", style = "display: none" }))
<script>
    $("#gridWorkHistory .k-grid-pager").css('display', 'none');
</script>