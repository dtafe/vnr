@using HRM.Infrastructure.Utilities;
@using System.Collections
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Attendance.Models


@model HRM.Presentation.Attendance.Models.Att_RosterModel

@{
    Layout = null;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    Guid ProfileID = Guid.Empty;

    string aaa = ViewBag.profileID;
    if (!string.IsNullOrEmpty(aaa))
    {
        ProfileID = Common.ConvertToGuid(aaa.ToString());
    }

}
@{
    IList<SelectListItem> listStatus = Enum.GetValues(typeof(AttendanceDataStatus))
      .Cast<AttendanceDataStatus>()
      .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
      .ToList();
    IList<SelectListItem> listRosterType = Enum.GetValues(typeof(RosterType))
    .Cast<RosterType>()
    .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
    .ToList();

}
@Html.ValidationSummary(false)
@Html.AntiForgeryToken()
<script>
    SetFieldRequired();
</script>
<script>
    $("#RosterInfo_ProfileName").val($("#profileNameView").text())


    //Gán profile id lại cho tất cả các form đư
    $("input[name=ProfileID]").val(SelectID);


    //$(document).ready(function () {
    //    alert(SelectID);

    //});
    SetFieldRequiredByScreenName('Att_Roster_Tab');
    var data = SetCharacteFieldRequired();

    function onSaveClose() {

        onSaveAndClose($('#form_Roster'), '@_hrm_Hr_Service', 'api/Att_Roster/', 'gridTab_RosterView', '@ConstantControlName.HRM_Att_Roster_PopUp_Name');
        return false;
    }
    function onSaveDataPopUp() {

        onlySave($('#form_Roster'), '@_hrm_Hr_Service', 'api/Att_Roster/', 'gridTab_RosterView'); return false;
    }
    $("#ProfileName").prop('disabled', true);

    document.getElementById("RosterInfo_Status").readOnly = true;

    $('#btn_Copy').click(function (e) {
        var _value = $('#RosterInfo_MonShiftID').val();

        if (_value == "") {
            ShowNotificationProcessor("Vui lòng chọn ca cho thứ hai trước khi copy cho các ngày khác");
        }
        else {
            var tue = $('#RosterInfo_TueShiftID').data("kendoDropDownList");
            tue.value(_value);
            var web = $('#RosterInfo_WedShiftID').data("kendoDropDownList");
            web.value(_value);
            var thur = $('#RosterInfo_ThuShiftID').data("kendoDropDownList");
            thur.value(_value);
            var fri = $('#RosterInfo_FriShiftID').data("kendoDropDownList");
            fri.value(_value);
            var sat = $('#RosterInfo_SatShiftID').data("kendoDropDownList");
            sat.value(_value);
            var sun = $('#RosterInfo_SunShiftID').data("kendoDropDownList");
            sun.value(_value);
        }

    });


</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Roster" }))
{
    @Html.HiddenFor(model => model.Roster_ID)
    <div>
        @{



    if (Model != null)
    {
        @Html.HiddenFor(m => m.ProfileID)
    }
    else
    {
        @Html.Hidden("ProfileID", ProfileID)
    }
        }
    </div>

    <table>
        <tr>
            <td>
                <div>
                    <div style="float:left; width:50%">
                        <div id="div2">
                            <div class="FieldTitle150">
                                @Html.HiddenFor(mode => mode.ID)
                                @Html.VnrLabelFor(mode => mode.ProfileName)
                            </div>
                            <div class="FieldValue">
                                @{
    var _ProfileName = new TextBoxBuilderInfo()
    {
        Width = 300,
        Name = "RosterInfo_ProfileName",
        Disabled = true
    };
    if (Model != null)
    {
        _ProfileName.Value = Model == null ? string.Empty : Model.ProfileName;
    }
                                }
                                @Html.VnrTextBoxFor(model => model.ProfileName, _ProfileName)
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.Type)
                            </div>
                            <div class="FieldValue">
                                @{
    var dropdownType = new DropDownListBuilderInfo()
    {

        Name = "RosterInfo_Type",
        DataTextField = "Text",
        DataValueField = "Value",
        BindTo = listRosterType,
        StyleCss = "width:290px;",
        OptionLabel = @ConstantDisplay.HRM_Attendance_Roster_SelectRosterType.TranslateString()
    };
                                }
                                @(Html.VnrDropDownListFor(mode => mode.Type, dropdownType))
                            </div>

                        </div>
                        <div id="div3">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(m => m.DateStart)
                            </div>
                            <div class="FieldValue">
                                @{
    var datepickerDateStart = new DatePickerBuilderInfo()
    {
        Value = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1).ToString(),
        Name = "RosterInfo_DateStart",
        StyleCss = "width:120px;",
        Placeholder = ConstantDisplay.HRM_HR_Profile_DateFrom.TranslateString(),
    };
                                }
                                @Html.VnrDatePickerFor(model => model.DateStart, datepickerDateStart)
                            </div>

                        </div>
                        <div id="div4">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(m => m.DateEnd)
                            </div>
                            <div class="FieldValue">
                                @{
    var datepickerDateEnd = new DatePickerBuilderInfo()
    {
        //Value = new DateTime(DateTime.Now.Year, DateTime.Now.Month + 1, 1).AddDays(-1).ToString(),
        Name = "RosterInfo_DateEnd",
        StyleCss = "width:120px;",
        Placeholder = ConstantDisplay.HRM_HR_Profile_DateTo.TranslateString(),
    };
    if (DateTime.Now.Month + 1 > 12)
    {
        datepickerDateEnd.Value = new DateTime(DateTime.Now.Year + 1, (DateTime.Now.Month - 11), 1).AddDays(-1).ToShortDateString();
    }
    else
    {
        datepickerDateEnd.Value = new DateTime(DateTime.Now.Year, DateTime.Now.Month + 1, 1).AddDays(-1).ToShortDateString();
    }
                                }
                                @Html.VnrDatePickerFor(model => model.DateEnd, datepickerDateEnd)
                            </div>

                        </div>
                        <div id="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.Status)
                            </div>
                            <div class="FieldValue">
                                @{
    var dropdownStatus = new DropDownListBuilderInfo()
    {
        StyleCss = "width:300px;",
        Name = "RosterInfo_Status",
        DataTextField = "Text",
        DataValueField = "Value",
        BindTo = listStatus,
        OptionLabel = @ConstantDisplay.HRM_Category_SelectStatus.TranslateString(),
        Value = AttendanceDataStatus.E_SUBMIT.ToString(),
    };
                                }
                                @(Html.VnrDropDownListFor(mode => mode.Status, dropdownStatus))
                            </div>

                        </div>
                        <div id="div7">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.MonShiftID)
                            </div>
                            <div class="FieldValue">
                                @{
    var dropdownMonShiftID = new DropDownListBuilderInfo()
    {
        StyleCss = "width:270px;",
        Name = "RosterInfo_MonShiftID",
        DataTextField = "ShiftName",
        DataValueField = "ID",
        Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiShift",
        Value = @Html.DisplayFor(mode => mode.MonShiftID).ToString(),
        Enable = true,
        OptionLabel = @ConstantDisplay.HRM_Category_SelectShift.TranslateString()
    };
                                }
                                @(Html.VnrDropDownListFor(mode => mode.MonShiftID, dropdownMonShiftID))
                                @Html.VnrButton(new ButtonBuilderInfo() { Name = "btn_Copy", ImageUrl = ConstantPath.IconCopyPath })
                            </div>
                        </div>
                        <div id="div7">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.TueShiftID)
                            </div>
                            <div class="FieldValue">
                                @{
    var dropdownTueShiftID = new DropDownListBuilderInfo()
    {
        StyleCss = "width:270px;",
        Name = "RosterInfo_TueShiftID",
        DataTextField = "ShiftName",
        DataValueField = "ID",
        Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiShift",
        Value = @Html.DisplayFor(mode => mode.TueShiftID).ToString(),
        OptionLabel = @ConstantDisplay.HRM_Category_SelectShift.TranslateString(),
        Enable = true,
    };
                                }
                                @(Html.VnrDropDownListFor(mode => mode.TueShiftID, dropdownTueShiftID))
                            </div>

                        </div>
                        <div id="div7">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.WedShiftID)
                            </div>
                            <div class="FieldValue">
                                @{
    var dropdownWedShiftID = new DropDownListBuilderInfo()
    {
        StyleCss = "width:270px;",
        Name = "RosterInfo_WedShiftID",
        DataTextField = "ShiftName",
        DataValueField = "ID",
        Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiShift",
        Value = @Html.DisplayFor(mode => mode.WedShiftID).ToString(),
        OptionLabel = @ConstantDisplay.HRM_Category_SelectShift.TranslateString(),
        Enable = true,
    };
                                }
                                @(Html.VnrDropDownListFor(mode => mode.WedShiftID, dropdownWedShiftID))
                            </div>

                        </div>
                        <div id="div7">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.ThuShiftID)
                            </div>
                            <div class="FieldValue">
                                @{
    var dropdownThuShiftID = new DropDownListBuilderInfo()
    {
        StyleCss = "width:270px;",
        Name = "RosterInfo_ThuShiftID",
        DataTextField = "ShiftName",
        DataValueField = "ID",
        Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiShift",
        Value = @Html.DisplayFor(mode => mode.ThuShiftID).ToString(),
        Enable = true,
        OptionLabel = @ConstantDisplay.HRM_Category_SelectShift.TranslateString()
    };
                                }
                                @(Html.VnrDropDownListFor(mode => mode.ThuShiftID, dropdownThuShiftID))

                            </div>

                        </div>
                    </div>
                    <div style="width:50%; display:block; float:left">
                        <div id="div7">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.FriShiftID)
                            </div>
                            <div class="FieldValue">
                                @{
    var dropdownFriShiftID = new DropDownListBuilderInfo()
    {
        StyleCss = "width:300px;",
        Name = "RosterInfo_FriShiftID",
        DataTextField = "ShiftName",
        DataValueField = "ID",
        Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiShift",
        Value = @Html.DisplayFor(mode => mode.FriShiftID).ToString(),
        Enable = true,
        OptionLabel = @ConstantDisplay.HRM_Category_SelectShift.TranslateString()
    };
                                }
                                @(Html.VnrDropDownListFor(mode => mode.FriShiftID, dropdownFriShiftID))
                            </div>

                        </div>
                        <div id="div7">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.SatShiftID)
                            </div>
                            <div class="FieldValue">
                                @{
    var dropdownSatShiftID = new DropDownListBuilderInfo()
    {
        StyleCss = "width:300px;",
        Name = "RosterInfo_SatShiftID",
        DataTextField = "ShiftName",
        DataValueField = "ID",
        Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiShift",
        Value = @Html.DisplayFor(mode => mode.SatShiftID).ToString(),
        Enable = true,
        OptionLabel = @ConstantDisplay.HRM_Category_SelectShift.TranslateString()
    };
                                }
                                @(Html.VnrDropDownListFor(mode => mode.SatShiftID, dropdownSatShiftID))
                            </div>

                        </div>
                        <div id="div7">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.SunShiftID)
                            </div>
                            <div class="FieldValue">
                                @{
    var dropdownSunShiftID = new DropDownListBuilderInfo()
    {
        StyleCss = "width:300px;",
        Name = "RosterInfo_SunShiftID",
        DataTextField = "ShiftName",
        DataValueField = "ID",
        Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiShift",
        Value = @Html.DisplayFor(mode => mode.SunShiftID).ToString(),
        Enable = true,
        OptionLabel = @ConstantDisplay.HRM_Category_SelectShift.TranslateString()
    };
                                }
                                @(Html.VnrDropDownListFor(mode => mode.SunShiftID, dropdownSunShiftID))
                            </div>
                        </div>
                        <div id="div8">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.UserApproveID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    IEnumerable valueUserApprove = new string[] { };
                                    if (Model != null)
                                    {
                                        valueUserApprove = new[] { new { UserInfoName = Model.UserApproveIDName, ID = Model.UserApproveID } };
                                    }
                                }
                                @{
                                    var multiSelectUserApproveID = new MultiSelectBuilderInfo()
                                    {
                                        Width = 298,
                                        Name = "RosterInfo_UserApproveID",
                                        DataTextField = "UserInfoName",
                                        DataValueField = "ID",
                                        Url = @_hrm_Sys_Service + "Sys_GetData/GetMultiUserApproved_" + ApproveType.E_ROSTER.ToString(),
                                        Placeholder = ConstantDisplay.HRM_System_SelectUserApprove.TranslateString(),
                                        MaxSelectedItems = 1,
                                        Value = valueUserApprove
                                    };
                                }
                                @(Html.VnrMultiSelectFor(mode => mode.UserApproveID, multiSelectUserApproveID))
                            </div>
                        </div>
                        <div id="div9">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.UserApproveID2)
                            </div>
                            <div class="FieldValue">
                                @{
                                    IEnumerable valueUserApprove2 = new string[] { };
                                    if (Model != null)
                                    {
                                        valueUserApprove2 = new[] { new { UserInfoName = Model.UserApprove2IDName, ID = Model.UserApproveID2 } };
                                    }
                                }
                                @{
                                    var multiSelectUserApproveID2 = new MultiSelectBuilderInfo()
                                    {
                                        Width = 298,
                                        Name = "RosterInfo_UserApproveID2",
                                        DataTextField = "UserInfoName",
                                        DataValueField = "ID",
                                        Url = @_hrm_Sys_Service + "Sys_GetData/GetMultiUserApproved_" + ApproveType.E_ROSTER.ToString(),
                                        Placeholder = ConstantDisplay.HRM_System_SelectUserApprove.TranslateString(),
                                        MaxSelectedItems = 1,
                                        Value = valueUserApprove2
                                    };
                                }
                                @(Html.VnrMultiSelectFor(mode => mode.UserApproveID2, multiSelectUserApproveID2))
                            </div>
                        </div>
                        <div id="div13">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.Comment)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextAreaFor(model => model.Comment, "min-width: 300px; min-height: 100px")
                                @Html.ValidationMessageFor(model => model.Comment)
                            </div>
                        </div>
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-Roster", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-Roster", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}
