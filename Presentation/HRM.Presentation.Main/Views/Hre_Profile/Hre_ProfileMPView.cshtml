@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
}
@using HRM.Infrastructure.Security
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.HrmSystem.Models
@using HRM.Presentation.Hr.Models
@using HRM.Presentation.UI.Controls.Kendo

@model HRM.Presentation.Hr.Models.Hre_ProfileModel
@{
    var profileID = Guid.Empty;
    var ProfileName = string.Empty;
    if (Model != null)
    {
        profileID = Model.ID;
        ProfileName = Model.ProfileName;
    }
}
@{
    var window = new WindowBuilderInfo
    {
        Name = ConstantControlName.HRM_HR_MP_PopUp_Name,
        Visible = false,
        Width = 700,
        LoadContentFrom = @_hrm_Main_Web + "Hre_Profile/MPInfo?profileID=" + profileID + "&ProfileName=" + ProfileName
    };
}
@(Html.VnrWindow(window))
@{
    var windowError = new WindowBuilderInfo
    {
        Name = "windowError",
        Visible = false,
        Height = 150,
        Width = 300,
        Title = "Thông Báo Lỗi",
        Content = "<br><br><center><b>Chưa Có Nhân Viên!!!</b></center>"
    };
}
@(Html.VnrWindow(windowError))
<script type="text/javascript">


    var selectedIds = [];
    var checkedNodes = [];

    var gridName = '@ConstantControlName.HRM_HR_MP_Grid_Name';
    var popUpName = '@ConstantControlName.HRM_HR_MP_PopUp_Name';
    var titleEditPopUpMP = '@Html.Raw(ConstantDisplay.HRM_HR_MP_PopUp_Edit_Title.TranslateString())';
    var titleCreatePopUpMP = '@Html.Raw(ConstantDisplay.HRM_HR_MP_PopUp_Create_Title.TranslateString())';

    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        //Show Hide Panel
        ShowHidePanel();
        //
        $("#btnSearch").click(function () {
            ReadGrid("gridMP");
        });
        EditGridPopUp(gridName, popUpName, '@_hrm_Main_Web' + "Hre_Profile/MPInfo/", '@ConstantPermission.Hre_MP', titleEditPopUpMP);
    });


    //Khởi tạo điều kiện tìm kiếm
    function filterFieldInfo() {
        return {
            ProfileName: null,
            CodeEmp: null
        };
    }

    //Xử Lý grid
    GridCheckbox("gridMP");

    //Xử lý nút Create
    $("#btnCreate_MP").click(function () {
        var x = '@profileID';
        if (x == '') {
            PopUpCreate("windowError");
        }
         else {
             var url = '@_hrm_Main_Web' + "Hre_Profile/MPInfo/";
            PopUpEdit('@ConstantControlName.HRM_HR_MP_PopUp_Name', url, SelectID, titleCreatePopUpMP);
        }
    });

    //Xử Lý button delete
    $('#btnDelete_MP').click(function (e) {
        DeleteSelected("gridMP", '@_hrm_Main_Web' + "Hre_Profile/RemoveSelectedMP/", selectedIds, '@ConstantPermission.Hre_MP');
    })

</script>
<div style="padding-top:3px; width:100%">
    <div class="commandToolBarWidge">
        <div class="GridTitle">
            @Html.VnrLabel(ConstantDisplay.HR_MP.TranslateString())
        </div>
        <div style="float:right">
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreate_MP", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete_MP", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
        </div>
        <div class="clear"></div>
    </div>
    <div>
        <!--Khai báo các thông tin cho Grid-->
        @{
        var valueFields = new[]
        {
            Hre_MPModel.FieldNames.FromDate,
            Hre_MPModel.FieldNames.ToDate,
            Hre_MPModel.FieldNames.MPRankView,
            Hre_MPModel.FieldNames.Notes,
        };

        Dictionary<string, int> sizeFields = new Dictionary<string, int>()
        {
            {Hre_MPModel.FieldNames.FromDate, 130},
            {Hre_MPModel.FieldNames.ToDate, 130},
            {Hre_MPModel.FieldNames.MPRankView, 130},
            {Hre_MPModel.FieldNames.Notes, 130},
        };

        Dictionary<string, string> displayFields = new Dictionary<string, string>()
        {
            {Hre_MPModel.FieldNames.FromDate, ConstantDisplay.HRM_Hre_MP_FromDate},
            {Hre_MPModel.FieldNames.ToDate, ConstantDisplay.HRM_Hre_MP_ToDate},
            {Hre_MPModel.FieldNames.MPRankView, ConstantDisplay.HRM_Hre_MP_MPRank},
            {Hre_MPModel.FieldNames.Notes, ConstantDisplay.HRM_Hre_MP_Notes},
        };

        var grid = new GridBuilderInfo
        {
            Name = "gridMP",
            ValueFields = valueFields,
            ReadActionUrl = _hrm_Hr_Service + "Rec_GetData/GetMPByProfileID?profileID=" + profileID,
            SizeFields = sizeFields,
            AutoBind = true,
            GridHeight = 550,
            GridWidth = Common.ScreenWidth - 260,
            ShowCheckAll = false,
            DisplayFields = displayFields,
        };
        }

        <!--Khởi tạo Grid-->
        @(Html.VnrGrid<Hre_MPModel>(grid))
    </div>
    </div>
    <script>
        $("#gridMP .k-grid-pager").css('display', 'none');
    </script>
