@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@model HRM.Presentation.Hr.Models.Fin_PurchaseRequestItemModel

@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
  //  var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    Guid ContractID = Guid.Empty;
    string aaa = ViewBag.contractID;
    if (!string.IsNullOrEmpty(aaa))
    {
        ContractID = Common.ConvertToGuid(aaa.ToString());
    }
}
<script>
    SetFieldRequiredByScreenName("PurchaseRequestItemInfo")
    //SetFieldRequired();
    $(document).ready(function () {
        $("#PurchaseRequestID").val($("#PruchaseRequest_ID").val());
    });

    function onSaveClose() {
        //if (CheckValidate(data) && !checkDuplicationCode()) {
        onSaveAndClose($('#form_cat_PurchaseRequestItem'), '@_hrm_Hr_Service', 'api/Fin_PurchaseRequestItem/', 'grid_PurchaseRequestItem', 'windowPurchaseRequestItem'); return false;
        //}
    }

    function onSaveDataPopUp() {
      
        onlySave($('#form_cat_PurchaseRequestItem'), '@_hrm_Hr_Service', 'api/Fin_PurchaseRequestItem/', 'grid_PurchaseRequestItem');

    }
    
    function onSaveNew() {

        onlySave($('#form_cat_PurchaseRequestItem'), '@_hrm_Hr_Service', 'api/Fin_PurchaseRequestItem/', 'grid_PurchaseRequestItem');

    }
    function CostCentreChanged(e) {
        
        var item = e.sender._old;
        $.ajax({
            url: '@_hrm_Hr_Service' + "Hre_GetData/GetDataByCostCentreID",
            data: { costcentreID: item },
            type: 'POST',
            datatype: 'json',
            success: function (data) {
                
                $("#CateCodeType").val(data.CateCodeType);
                $("#Name").val(data.Name);
            }

        });
    }

    function ItemChanged(e) {
        
        var item = e.sender._old;
        $.ajax({
            url: '@_hrm_Hr_Service' + "Hre_GetData/GetDataByItemID",
            data: { itemID: item },
            type: 'POST',
            datatype: 'json',
            success: function (data) {
                
                $("#PurchaseItemName").val(data.PurchaseItemName);
                $("#PurchaseItemCost").val(data.PurchaseItemCost);
            }

        });

    }

</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_cat_PurchaseRequestItem" }))
{
    @Html.HiddenFor(model => model.PruchaseRequestItem_ID)
    if (Model != null)
    {
        @Html.HiddenFor(mode => mode.PurchaseRequestID)
    }
    else
    {
         @Html.HiddenFor(mode => mode.PurchaseRequestID, ContractID)
    }
    <table>
        <tr>
            <td>
                <div class="DivContentTitleValue" id="div13">
                    <div class="FieldTitle150">
                        @Html.VnrLabelForNoneIcon(model => model.CostCenterID)
                    </div>
                    <div class="FieldValue">
                        <script>
                            function filterProvinces() {
                                
                                var budget = $("#BudgetOwnerID").data("kendoComboBox");
                                               return {
                                                   budgetOwnerID: $("#BudgetOwnerID").val(),
                                               functionFilter: $("#BudgetOwnerID").data("kendoComboBox").input.val()
                                             };
                            }
                        </script>
                        @{
                             var tCostCenterID = new ComboBoxBuilderInfo()
                            {
                                Name = "CostCenterID",
                                StyleCss = "Width: 300px",
                                DataTextField = "Code",
                                DataValueField = "ID",
                                ServerFilter = true,
                                FilterType = FilterType.Contains,
                                Url = _hrm_Hr_Service + "Cat_GetData/GetCostCentreCascading/",
                                Data = "filterProvinces",
                                //Autobind = true,
                                Placeholder = "Vui Lòng Chọn ...",
                                Value = Model == null ? string.Empty : Model.CostCenterID.ToString(),
                                EventChange = "CostCentreChanged"
                            };
                        }
                        @Html.VnrComboBoxFor(model => model.CostCenterID, tCostCenterID).Text(Model == null ? string.Empty : Model.Name)

                    </div>
                    <script>
                        $(document).ready(function () {
                            
                            var item = $("#CostCenterID").data("kendoComboBox")._old;

                             $.ajax({
            url: '@_hrm_Hr_Service' + "Hre_GetData/GetDataByCostCentreID",
            data: { costcentreID: item },
            type: 'POST',
            datatype: 'json',
            success: function (data) {
                
                $("#CateCodeType").val(data.CateCodeType);
                $("#Name").val(data.Name);
            }

        });
                        });
                    </script>
                </div>
               
                    <div>
                        <div class="FieldTitle150">
                            @Html.VnrLabelForNoneIcon(mode => mode.CateCodeType)
                        </div>
                        <div class="FieldValue">
                            @{
    var CateCodeType = new TextBoxBuilderInfo()
    {
        Width = 300,
                                Readonly = true
                            };
                            }
                            @Html.VnrTextBoxFor(mode => mode.CateCodeType,CateCodeType)

                        </div>
                    </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelForNoneIcon(mode => mode.Name)
                    </div>
                    <div class="FieldValue">
                        @{
                        var Name = new TextBoxBuilderInfo()
                        {
                            Width = 300,
                            Readonly = true
                        };
                        }
                        @Html.VnrTextBoxFor(mode => mode.Name, Name)
                    </div>
                </div>
                <div class="DivContentTitleValue" id="div13">
                    <div class="FieldTitle150">
                        @Html.VnrLabelForNoneIcon(model => model.ProjectID)
                    </div>
                    <div class="FieldValue">
                        <script>
                            function filterProjects() {
                                
                                var budget = $("#BudgetOwnerID").data("kendoComboBox");
                                               return {
                                              budgetOwnerID: $("#BudgetOwnerID").val(),
                                               functionFilter: $("#BudgetOwnerID").data("kendoComboBox").input.val()
                                             };
                                         }
                        </script>
                        @{
                                var tProjectID = new ComboBoxBuilderInfo()
                               {
                                   Name = "PurchaseRequestItemInfo_ProjectID",
                                   StyleCss = "Width: 300px",
                                   DataTextField = "ProjectName",
                                   DataValueField = "ID",
                                   ServerFilter = true,
                                   FilterType = FilterType.Contains,
                                   Url = _hrm_Hr_Service + "Cat_GetData/GetProjectCascading/",
                                   Data = "filterProjects",
                                  // Autobind = true,
                                   Placeholder = "Vui Lòng Chọn ...",
                                   Value = Model == null ? string.Empty : Model.ProjectID.ToString()
                               };
                        }
                        @Html.VnrComboBoxFor(model => model.ProjectID, tProjectID).Text(Model == null ? string.Empty : Model.ProjectName)

                    </div>
                </div>
                <div class="DivContentTitleValue" id="div13">
                    <div class="FieldTitle150">
                        @Html.VnrLabelForNoneIcon(model => model.ItemID)
                    </div>
                    <div class="FieldValue">
                        <script>
                            function filterItems() {
                                
                                var budget = $("#BudgetOwnerID").data("kendoComboBox");
                                               return {
                                                  budgetOwnerID: budget._old,
                                               functionFilter: $("#BudgetOwnerID").data("kendoComboBox").input.val()
                                             };
                                         }
                        </script>
                        @{
                         var tItemID = new ComboBoxBuilderInfo()
                                   {
                                       Name = "ItemID",
                                       StyleCss = "Width: 300px",
                                       DataTextField = "PurchaseItemName",
                                       DataValueField = "ID",
                                       ServerFilter = true,
                                       FilterType = FilterType.Contains,
                                       Url = _hrm_Hr_Service + "Cat_GetData/GetItemCascading/",
                                       Data = "filterItems",
                                      // Autobind = true,
                                       Placeholder = "Vui Lòng Chọn ...",
                                       Value = Model == null ? string.Empty : Model.ItemID.ToString(),
                                       EventChange = "ItemChanged"
                                   };
                        }
                        @Html.VnrComboBoxFor(model => model.ItemID, tItemID).Text(Model == null ? string.Empty : Model.PurchaseItemName)

                    </div>
                </div>
                <script>
                    $(document).ready(function () {
                        var item = $("#ItemID").data("kendoComboBox")._old;
                         $.ajax({
            url: '@_hrm_Hr_Service' + "Hre_GetData/GetDataByItemID",
            data: { itemID: item },
            type: 'POST',
            datatype: 'json',
            success: function (data) {
                
                $("#PurchaseItemName").val(data.PurchaseItemName);
                $("#PurchaseItemCost").val(data.PurchaseItemCost);
            }

        });
                    });
                </script>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelForNoneIcon(mode => mode.PurchaseItemName)
                    </div>
                    <div class="FieldValue">
                        @{
    var PurchaseItemName = new TextBoxBuilderInfo()
    {
        Width = 300,
        Readonly = true
    };
                        }
                        @Html.VnrTextBoxFor(mode => mode.PurchaseItemName, PurchaseItemName)

                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelForNoneIcon(mode => mode.PurchaseItemCost)
                    </div>
                    <div class="FieldValue">
                        @{
    var PurchaseItemCost = new TextBoxBuilderInfo()
    {
        Width = 300,
        Readonly = true
    };
                        }
                        @Html.VnrTextBoxFor(mode => mode.PurchaseItemCost, PurchaseItemCost)
                    </div>
                </div>
                       
                    <div id="div4">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.Quantity)
                        </div>
                        <div class="FieldValue">
                            @{

                             var Quantity = new NumericTextBoxBuilderInfo<int>()
                                {
                                    StyleCss = "width:150px",
                                    Name = "PRItem_Quantity"
                                };
                            }
                            @(Html.VnrNumericTextBoxFor(model => model.Quantity, Quantity))
                            @*@(Html.Kendo().NumericTextBoxFor(model => model.PaidRate))*@
                        </div>
                        <div style="clear: both;"></div>
                    </div>

                <div id="div4">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.UnitPrice)
                    </div>
                    <div class="FieldValue">
                        @{

                        var UnitPrice = new NumericTextBoxBuilderInfo<double>()
                        {
                            StyleCss = "width:150px",
                            Name = "PRItem_UnitPrice"
                        };
                        }
                        @(Html.VnrNumericTextBoxFor(model => model.UnitPrice, UnitPrice))
                        @*@(Html.Kendo().NumericTextBoxFor(model => model.PaidRate))*@
                    </div>
                    <div style="clear: both;"></div>
                </div>

                <div id="div4">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Amount)
                    </div>
                    <div class="FieldValue">
                        @{

                         var Amount = new NumericTextBoxBuilderInfo<double>()
                        {
                            StyleCss = "width:150px",
                            Name = "PRItem_Amount",
                            
                        };
                        }
                        @(Html.VnrNumericTextBoxFor(model => model.Amount, Amount))
                        @*@(Html.Kendo().NumericTextBoxFor(model => model.PaidRate))*@
                    </div>
                    <div style="clear: both;"></div>
                </div>


                
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-PurchaseRequestItems", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveNew", Name = "save-New-PurchaseRequestItems", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "saveclose-PurchaseRequestItems", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
    
   
}
<script>
    $(document).ready(function () {
        var quantity = document.getElementById("PRItem_Quantity");
        var unitPrice = document.getElementById("PRItem_UnitPrice");

        if (quantity.value == "") {
            quantity.value = 0;
        }
        if (unitPrice.value == "") {
            unitPrice.value = 0;
        }
        var total = parseFloat(quantity.value) * parseFloat(unitPrice.value);
        var amount = $("#PRItem_Amount").data("kendoNumericTextBox");
        amount.readonly();
        amount.value(total);
    });
    function Cal() {
        
        var quantity = document.getElementById("PRItem_Quantity");
        var unitPrice = document.getElementById("PRItem_UnitPrice");
        
        if (quantity.value == "") {
            quantity.value = 0;
        }
        if (unitPrice.value == "") {
            unitPrice.value = 0;
        }
        var total = parseFloat(quantity.value) * parseFloat(unitPrice.value);
        var amount = $("#PRItem_Amount").data("kendoNumericTextBox");
        amount.readonly();
        amount.value(total);
    }
    $("#PRItem_Quantity").change(function () {
        
        Cal();
    });
    $("#PRItem_UnitPrice").change(function () {
        Cal();
    });
</script>
