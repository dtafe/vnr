@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@model HRM.Presentation.Laundry.Models.Lau_LockerModel
@{
    ViewBag.Title = "LauLocker";
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var userId = Model == null ? Guid.Empty : Model.ID;
}

<script>
    var data = SetCharacteFieldRequired();

    function checkDuplicationLauLocker() {
        var _Code = $("#LockerInfo_Code").val();
        var isduplicate = false;
        var _ID = '@userId';
        var paramLL = {
            tableName: 'LMS_LockerLMS',
            columnName: 'Code',
            keyword: _Code,
            ID: _ID
        };
        
        isduplicate = checkDuplicate('@_hrm_Sys_Service', 'Sys_GetData', 'CheckDuplicate', paramLL, "Code");
        return isduplicate;
    }

    function onlySavePopUp() {
        if (CheckValidate(data) && !checkDuplicationLauLocker()) {
            onlySave($('#form_lau_LauLocker'), '@_hrm_Hre_Service', 'api/Lau_Locker/', 'grid_Lau_Locker','windowLauLocker');
        }
        return false;
    }

    function onSave() {
        if (CheckValidate(data) && !checkDuplicationLauLocker()) {
            onSaveAndContinue($('#form_lau_LauLocker'), '@_hrm_Hre_Service', 'api/Lau_Locker/', 'grid_Lau_Locker', 'windowLauLocker');
        }
        return false;
    }

    function onSaveClose() {
        if (CheckValidate(data) && !checkDuplicationLauLocker()) {
            onSaveAndClose($('#form_lau_LauLocker'), '@_hrm_Hre_Service', 'api/Lau_Locker/', 'grid_Lau_Locker', 'windowLauLocker');
        }
        return false;
    }
</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_lau_LauLocker" }))
{
    @Html.HiddenFor(model => model.ID)
     <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.LockerLMSName)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.LockerLMSName,"width:300px")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">
                        @{
                            var txtCode = new TextBoxBuilderInfo()
                            {
                                Name = "LockerInfo_Code",
                                CssStyle = "width:300px",

                            };
                            if (Model != null)
                            {
                                txtCode.Value = Model == null ? string.Empty : Model.Code;
                            }
                        }
                        @Html.VnrTextBoxFor(mode => mode.Code, txtCode)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Note)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Note, "width:500px;height:100px;")
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onlySavePopUp", Name = "only-save-lauLocker", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-lauLocker", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-lauLocker", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
 </table>

}

