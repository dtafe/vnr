@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Evaluation.Models
@model Eva_SalesTypeModel

@{
    Layout = null;
    //var _hrm_hre_Service = ConstantPathWeb.Hrm_Eva_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var salesTypeId = Model == null ? Guid.Empty : Model.ID;
    IList<SelectListItem> lstSalesTypeGroup = Enum.GetValues(typeof(SalesTypeGroup))
    .Cast<SalesTypeGroup>()
    .Select(x => new SelectListItem { Value = EnumDropDown.GetEnumDescription(x), Text = EnumDropDown.GetEnumDescription(x) })
    .ToList();
}
<script>
    SetFieldRequired();
   

    function onSave() {
        //if (!checkDuplicationSalesType()) {
            onSaveAndContinue($('#form_Eva_SalesType'), '@_hrm_hre_Service', 'api/Eva_SalesType/', 'gridEvaSalesType', 'windowEvaSalesType');
       // }
        return false;
    }

    function onSaveClose() {
       // if (!checkDuplicationSalesType()) {
            onSaveAndClose($('#form_Eva_SalesType'), '@_hrm_hre_Service', 'api/Eva_SalesType/', 'gridEvaSalesType', 'windowEvaSalesType');
        //}
        return false;
    }

    function onSaveDataPopUp() {
        
        //if (!checkDuplicationSalesType()) {
            onlySave($('#form_Eva_SalesType'), '@_hrm_hre_Service', 'api/Eva_SalesType/', 'gridEvaSalesType');
       // }
        return false;
    }
</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Eva_SalesType" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div style="display:block; padding-top:10px;">
                    <div id="dvCode">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.Code)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(mode => mode.Code, "width: 300px")
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="dvSalesTypeName">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.SalesTypeName)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(mode => mode.SalesTypeName, "width: 300px")
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="dvSalesTypeName">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.SalesTypeGroup)
                        </div>
                        <div class="FieldValue">
                            @{
                            var salesTypeGroup = new DropDownListBuilderInfo()
                            {
                                BindTo = lstSalesTypeGroup,
                                Value = Model != null ? Model.SalesTypeGroup : null,
                                StyleCss = "width:300px;"
                            };
                            }
                            @Html.VnrDropDownListFor(model => model.SalesTypeGroup, salesTypeGroup)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="dvNote">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.Note)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextAreaFor(mode => mode.Note, "width:500px;height:100px;")
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                </div>

            </td>

        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle" style="width: 170px;">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-SalesType", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-SalesType", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-SalesType", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>

                </div>
            </td>
        </tr>
    </table>
}

