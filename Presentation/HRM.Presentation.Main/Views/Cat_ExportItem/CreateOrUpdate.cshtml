@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Category.Models
@model CatExportItemModel

@{
    ViewBag.Title = ConstantDisplay.HRM_Category_ExportItem.TranslateString();
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
}

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Cat_ExportItem" }))
{
    @Html.HiddenFor(model => model.ID)
    <div id="div3">
        <div class="FieldTitle">
            @Html.VnrLabelFor(mode => mode.ExportItemCode)
        </div>
        <div class="FieldValue">
            @(Html.VnrTextBoxFor(model => model.ExportItemCode))
        </div>
        <div style="clear: both;"></div>
    </div>

    <div id="div2">
        <div class="FieldTitle">
            @Html.VnrLabelFor(mode => mode.ExportID)
        </div>
        <div class="FieldValue">
            @{
    var mtsExport = new MultiSelectBuilderInfo()
    {
        DataTextField = CatExportItemModel.FieldNames.ExportName,
        DataValueField = CatExportItemModel.FieldNames.ID,
        Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiExport",
        Placeholder = ConstantDisplay.HRM_Category_SelectExport.TranslateString(),
        MaxSelectedItems = 1,
        Value = new string[] { @Html.DisplayFor(mode => mode.ExportID).ToString() }
    };
            }
            @Html.VnrMultiSelectFor(mode => mode.ExportID, mtsExport)
        </div>
        <div style="clear: both;"></div>
    </div>


    <div id="div4">
        <div class="FieldTitle">
            @Html.VnrLabelFor(mode => mode.DataField)
        </div>
        <div class="FieldValue">
            @(Html.VnrTextBoxFor(model => model.DataField))
        </div>
        <div style="clear: both;"></div>
    </div>

    <div id="div5">
        <div class="FieldTitle">
            @Html.VnrLabelFor(mode => mode.ExcelField)
        </div>
        <div class="FieldValue">
            @{
    var _ExcelField = new TextBoxBuilderInfo() { 
        Name = "ExportItem_ExcelField",
        CssStyle = "width:150px"
    };
            if(Model != null){
                _ExcelField.Value = Model.ExcelField == null ? string.Empty : Model.ExcelField;
            }    
            }
            @(Html.VnrTextBoxFor(model => model.ExcelField,_ExcelField))
        </div>
        <div style="clear: both;"></div>
    </div>

    <div id="div6">
        <div class="FieldTitle">
            @Html.VnrLabelFor(mode => mode.FormatString)
        </div>
        <div class="FieldValue">
            @(Html.VnrTextBoxFor(model => model.FormatString))
        </div>
        <div style="clear: both;"></div>
    </div>

    <div id="div7">
        <div class="FieldTitle">
            @Html.VnrLabelFor(mode => mode.IsFixedCell)
        </div>
        <div class="FieldValue">
            @(Html.VnrCheckBoxFor(model => model.IsFixedCell))
        </div>
        <div style="clear: both;"></div>
    </div>

    <div id="div8">
        <div class="FieldTitle">
            @Html.VnrLabelFor(mode => mode.Description)
        </div>
        <div class="FieldValue">
            @(Html.VnrTextAreaFor(model => model.Description))
        </div>
        <div style="clear: both;"></div>
    </div>

    <div>
        <div class="FieldTitle">

        </div>
        <div class="FieldValue">
            <input type="button" value="@ConstantAction.HRM_Common_Save.TranslateString()" onclick="onCreateOrEditGrid($('#form_Cat_ExportItem'), '@_hrm_Hr_Service', 'api/CatExportItem/', 'grid_Cat_ExportItem'); return false;" class="k-button" />
        </div>
    </div>
}

