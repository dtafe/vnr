@model HRM.Presentation.Training.Models.Tra_AddPointModel
@using HRM.Infrastructure.Utilities
@*@model System.Data.DataTable*@
@{
    Layout = null;
    ViewBag.Title = "AddPoint";
    <link href="http://cdn.kendostatic.com/2014.1.416/styles/kendo.common.min.css" rel="stylesheet" type="text/css" />
    <link href="http://cdn.kendostatic.com/2014.1.416/styles/kendo.dataviz.min.css" rel="stylesheet" type="text/css" />
    <link href="http://cdn.kendostatic.com/2014.1.416/styles/kendo.default.min.css" rel="stylesheet" type="text/css" />
    <link href="http://cdn.kendostatic.com/2014.1.416/styles/kendo.dataviz.default.min.css" rel="stylesheet" type="text/css" />
    <script src="http://cdn.kendostatic.com/2014.1.416/js/jquery.min.js"></script>
    <script src="http://cdn.kendostatic.com/2014.1.416/js/kendo.all.min.js"></script>
    <script src="http://cdn.kendostatic.com/2014.1.416/js/kendo.aspnetmvc.min.js"></script>
    
    var _hrm_Hre_Service = HRM.Infrastructure.Utilities.ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = HRM.Infrastructure.Utilities.ConstantPathWeb.Hrm_Main_Web;
}
@(Html.Kendo().Notification()
    .Name("notification")
    .Width("18em")
    .Templates(t =>
    {
        t.Add().Type("time").ClientTemplate("<div style='padding: .6em 1em'>Time is: <span class='timeWrap'>#: time #</span></div>");
    })
)
@if (Model.ActionStatus == null)
{
      

@(Html.Kendo().Grid<dynamic>()
    .Name("Grid")
    .Columns(columns =>
    {
        foreach (System.Data.DataColumn column in Model.Table.Columns)
        {
            if (column.ColumnName == "ID")
            {
                columns.Bound(column.ColumnName).Hidden(true);
            }
            else
            {
                columns.Bound(column.ColumnName);
            }
        }
        columns.Command(command => { command.Edit(); }).Width(160);
    })
    .Pageable()
    .Sortable()
    .Filterable().AutoBind(true)
        //.Groupable()
    .DataSource(dataSource => dataSource
        .Ajax()
            .Model(model =>
                {
                    //var id = Model.PrimaryKey[0].ColumnName;
                    model.Id("ID");
                    foreach (System.Data.DataColumn column in Model.Table.Columns)
                    {
                        var field = model.Field(column.ColumnName, column.DataType);

                        if (column.ColumnName == "ID" || column.ColumnName == "CodeEmp" || column.ColumnName == "ProfileName")
                        {
                            field.Editable(false);
                        }
                    }
                })
                            .Read(read => read.Action("GetDataAddPoint", "Tra_Trainee", new { ids = Model.Ids }))
                .Update(update => update.Action("Save", "Tra_Trainee"))
        )
            .Editable(ed => ed.Mode(Kendo.Mvc.UI.GridEditMode.PopUp)).Events(x => x.Save("SaveChanges")).Events(m=>m.Edit("EvenEdit"))
)
    <script type="text/javascript">
    function EvenEdit() {
        $("label[for=ID]").parent().hide();
        $("label[for=ID]").parent().next().hide();
    };
    //Even save change
    function SaveChanges(e) {
        //Biến lưu tên cột trong table
        var ArrayField = Object.keys(e.model.defaults);

        //Biến lưu giá trị (Key,Value)
        var Result = {};
        
        //Duyệt ra tất cả các field để lấy dữ liệu
        for (var i = 0; i < ArrayField.length; i++)
        {
            Result[ArrayField[i]] = e.model[ArrayField[i]];
        }

        // Lấy mã màu
        $.ajax({
            url: '@_hrm_Hre_Service' + "Tra_GetData/UpdateScoreInTraineeTopic",
            type: "POST",
            data: { model: Result },
            error: function () {
            
            },
            success: function (data) {
             
            }
        });
    };
</script>
}
else if (Model.ActionStatus == ConstantMessages.PlsChooseTraineeSameClass.ToString())
{
    <script>
        $(document).ready(function () {
            debugger;
            var popupNotification = $("#notification").data("kendoNotification");
            popupNotification.show('@Html.Raw(Model.ActionStatus.TranslateString())');
            
        });
        
    </script>
}else if(Model.ActionStatus == ConstantMessages.CourseNoHaveTopic.ToString())
{
    <script>
        $(document).ready(function () {
            debugger;
            var popupNotification = $("#notification").data("kendoNotification");
            popupNotification.show('@Html.Raw(Model.ActionStatus.TranslateString())');
            
        });
        
    </script>
}

  

