@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.Training.Models
@using HRM.Infrastructure.Utilities

@using System.Collections
@using HRM.Infrastructure.Security

@model Tra_TraineeModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    IList<SelectListItem> listTraineeStatus = Enum.GetValues(typeof(EnumDropDown.TraineeStatus))
 .Cast<EnumDropDown.TraineeStatus>()
 .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() })
 .ToList();
}
@{
    var window = new WindowBuilderInfo
    {
        Name = "windownTra_CostCenterDetail",
        Visible = false,
        Width = 700,
        LoadContentFrom = @_hrm_Main_Web + "Tra_Trainee/Tra_CostCenterDetailInfo/",
    };
}
@(Html.VnrWindow(window))
<script type="text/javascript">
    SetFieldRequired();
    $("#btnCreateCostCentreDetail").click(function () {
        PopUpCreate("windownTra_CostCenterDetail", "Tạo Mới Chi Phí Đào Tạo", '@HRM.Infrastructure.Security.ConstantPermission.Tra_RequirementTrainDetail')
    });
</script>

<div class="VnRMain">
    <table style="width:100%">
        <tbody>

            <tr><td colspan="3" style=""></td></tr>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                <td valign="top">
                    <div style="display: block; padding-top: 10px;">
                        <div style="float:left; width:100%">
                            <div style="float: left; width: 500px">
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.HiddenFor(mode => mode.ID)
                                        @Html.VnrLabelFor(mode => mode.ProfileID)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            IEnumerable valueProfile = new string[] { };
                                            if (Model != null)
                                            {
                                                valueProfile = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
                                            }
                                        }
                                        @{
                                            var Profile = new MultiSelectBuilderInfo()
                                             {
                                                 DataTextField = Tra_TraineeModel.FieldNames.ProfileName,
                                                 DataValueField = "ID",
                                                 Url = @_hrm_Hr_Service + "HrMultiSelect/GetMultiProfile",
                                                 Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                                                 Value = valueProfile,
                                                 MaxSelectedItems = 1,
                                                 Width = 200

                                             };
                                        }
                                        @(Html.VnrMultiSelectFor(mode => mode.ProfileID, Profile))
                                    </div>
                                </div>
                                <div id="div4" class="DivContentTitleValue">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.ClassID)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            IEnumerable valueClass = new string[] { };
                                            if (Model != null)
                                            {
                                                valueClass = new[] { new { ClassName = Model.ClassName, ID = Model.ClassID } };
                                            }
                                        }
                                        @{
                                            var _Class = new MultiSelectBuilderInfo
                                            {
                                                DataTextField = "ClassName",
                                                DataValueField = "ID",
                                                Url = @_hrm_Hr_Service + "Tra_GetData/GetMultiClass",
                                                MaxSelectedItems = 1,
                                                Placeholder = ConstantDisplay.HRM_Category_SelectClass.TranslateString(),
                                                Value = valueClass,
                                                Width = 200
                                            };
                                        }
                                        @Html.VnrMultiSelectFor(mode => mode.ClassID, _Class)
                                    </div>
                                    <div id="div13">
                                        <div class="FieldTitle150">
                                            @Html.VnrLabelForNoneIcon(model => model.Status)
                                        </div>
                                        <div class="FieldValue">
                                            @{
                                                var ddlStatus = new DropDownListBuilderInfo()
                                                {
                                                    DataTextField = "Text",
                                                    DataValueField = "Value",
                                                    BindTo = listTraineeStatus
                                                };
                                            }
                                            @Html.VnrDropDownListFor(model => model.Status, ddlStatus)
                                        </div>
                                    </div>
                                    <div id="div13">
                                        <div class="FieldTitle150">
                                            @Html.VnrLabelFor(mode => mode.TrainLevelID)
                                        </div>
                                        <div class="FieldValue">
                                            @{
                                                var _TrainLevelID = new ComboBoxBuilderInfo()
                                                  {
                                                      DataTextField = "TrainLevelName",
                                                      DataValueField = "ID",
                                                      FilterType = FilterType.Contains,
                                                      Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiTrainLevel",
                                                      Value = Model == null ? string.Empty : Model.TrainLevelName
                                                  };
                                            }
                                            @Html.VnrComboBoxFor(model => model.TrainLevelID, _TrainLevelID).Text(Model == null ? string.Empty : Model.TrainLevelName)
                                        </div>
                                    </div>
                                    <div id="div13">
                                        <div class="FieldTitle150">
                                            @Html.VnrLabelFor(mode => mode.Reason)
                                        </div>
                                        <div class="FieldValue">
                                           @Html.VnrTextAreaFor(mode => mode.Reason)
                                        </div>
                                    </div>
                                    <div id="div13">
                                        <div class="FieldTitle150">
                                            @Html.VnrLabelFor(mode => mode.Result)
                                        </div>
                                        <div class="FieldValue">
                                            @{
                                                var _Result = new NumericTextBoxBuilderInfo<double>()
                                                {
                                                    StyleCss = "width:100px"
                                                };
                                            }
                                            @Html.VnrNumericTextBoxFor(model => model.Result, _Result)
                                        </div>
                                    </div>
                                    <div id="div13">
                                        <div class="FieldTitle150">
                                            @Html.VnrLabelFor(mode => mode.RankingID)
                                        </div>
                                        <div class="FieldValue">
                                            @{
                                                var _RankingID = new ComboBoxBuilderInfo()
                                                  {
                                                      DataTextField = "RankingName",
                                                      DataValueField = "ID",
                                                      FilterType = FilterType.Contains,
                                                      Url = @_hrm_Hr_Service + "Tra_GetData/GetMultiRanking",
                                                      Value = Model == null ? string.Empty : Model.RankingName
                                                  };
                                            }
                                            @Html.VnrComboBoxFor(model => model.RankingID, _RankingID).Text(Model == null ? string.Empty : Model.RankingName)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div style="float: left; width: 500px;">
                                <div id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.CostCenter)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _CostCenter = new NumericTextBoxBuilderInfo<double>()
                                            {
                                                StyleCss = "width:100px"
                                            };
                                        }
                                        @Html.VnrNumericTextBoxFor(model => model.CostCenter, _CostCenter)
                                    </div>
                                </div>
                                <div id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.CostCenterCompanyPay)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _CostCenterCompanyPay = new NumericTextBoxBuilderInfo<double>()
                                            {
                                                StyleCss = "width:100px"
                                            };
                                        }
                                        @Html.VnrNumericTextBoxFor(model => model.CostCenterCompanyPay, _CostCenterCompanyPay)
                                    </div>
                                </div>
                                <div id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.CommitmentTimeWork)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var CommitmentTimeWork = new DatePickerBuilderInfo()
                                            {
                                                StyleCss = "width:100px;"

                                            };
                                        }
                                        @Html.VnrDatePickerFor(model => model.CommitmentTimeWork, CommitmentTimeWork)
                                    </div>
                                </div>
                                <div id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.CommitmentOther)
                                    </div>
                                    <div class="FieldValue">
                                        @Html.VnrTextAreaFor(mode => mode.CommitmentOther)
                                    </div>
                                </div>
                                <div id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.TeacherComment)
                                    </div>
                                    <div class="FieldValue">
                                        @Html.VnrTextAreaFor(mode => mode.TeacherComment)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
            <tr>
                <td class="Box_Bottom_Left"></td>
                <td class="Box_Bottom_Mid"></td>
                <td class="Box_Bottom_Right"></td>
            </tr>
        </tbody>
    </table>
</div>

@* Vì demo gấp nên làm theo yêu cầu của thai.le *@

@*<div class="commandToolBarWidge">
    <div class="GridTitle">
        @Html.VnrLabel(ConstantDisplay.HRM_HR_Tra_CostCenterTraining.TranslateString())
    </div>
    <div style="float:right">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateCostCentreDetail", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
    </div>
    <div class="clear"></div>
</div>*@
@*<div>
 
    @{


        var valueFieldsRequirementTrainDetail = new[]
                        {
                            Tra_CostCenterDetailModel.FieldNames.STT,
                            Tra_CostCenterDetailModel.FieldNames.CostCenterName,
                            Tra_CostCenterDetailModel.FieldNames.Amount,
                            Tra_CostCenterDetailModel.FieldNames.Description,
                           
                        };

        var sizeFieldsRequirementTrainDetail = new Dictionary<string, int>()
                        {
                            {Tra_CostCenterDetailModel.FieldNames.STT,80},
                            {Tra_CostCenterDetailModel.FieldNames.CostCenterName,80},
                            {Tra_CostCenterDetailModel.FieldNames.Amount,140},
                            {Tra_CostCenterDetailModel.FieldNames.Description, 120},

                        };


        var displayFieldsRequirementTrainDetail = new Dictionary<string, string>()
                        {
                            {Tra_CostCenterDetailModel.FieldNames.STT, "STT"},
                            {Tra_CostCenterDetailModel.FieldNames.CostCenterName, ConstantDisplay.HRM_Tra_CostCenterDetail_CostCenterName},
                            {Tra_CostCenterDetailModel.FieldNames.Amount, ConstantDisplay.HRM_Tra_CostCenterDetail_Amount},
                            {Tra_CostCenterDetailModel.FieldNames.Description, ConstantDisplay.HRM_Tra_CostCenterDetail_Description},
                           
                        };

        var grid_RequirementTrainDetail = new GridBuilderInfo
        {

            Name = "grid_RequirementTrainDetail_info",
            ValueFields = valueFieldsRequirementTrainDetail,
            SizeFields = sizeFieldsRequirementTrainDetail,
            DisplayFields = displayFieldsRequirementTrainDetail,
            ReadActionUrl = _hrm_Hr_Service + "Tra_GetData/GetRequirementTrainDetailByRequirementTrainID",
            AutoBind = true,
            ShowDeleteButton = true,
            GridHeight = 220,
            ShowCheckAll = false,
            ReadData = "filterFieldInfo"
        };
    }
    @(Html.VnrGrid<Tra_CostCenterDetailModel>(grid_RequirementTrainDetail))
</div>*@