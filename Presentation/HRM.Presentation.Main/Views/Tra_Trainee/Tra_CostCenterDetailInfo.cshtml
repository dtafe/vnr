@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Payroll.Models
@using HRM.Presentation.Training.Models
@using System.Collections;

@model Tra_CostCenterDetailModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;



}

<script>
    SetFieldRequired();
    //document.getElementById("TraRequirementTrainDetailInfo_TopicName").readOnly = true;
    function onSave() {
        $("#RequirementTrainID").val($("#RequirementTrain_ID").val());
        onSaveAndContinue($('#form_Tra_RequirementTrainDetail'), '@_hrm_Hr_Service', 'api/Tra_RequirementTrainDetail/', 'grid_RequirementTrainDetail_info', 'windownTra_RequirementTrainDetail');
        return false;
    }

    function onSaveClose() {
        $("#RequirementTrainID").val($("#RequirementTrain_ID").val());
        onSaveAndClose($('#form_Tra_RequirementTrainDetail'), '@_hrm_Hr_Service', 'api/Tra_RequirementTrainDetail/', 'grid_RequirementTrainDetail_info', 'windownTra_RequirementTrainDetail');
        return false;
    }

    function onSaveDataPopUp() {
        $("#RequirementTrainID").val($("#RequirementTrain_ID").val());
        onlySave($('#form_Tra_RequirementTrainDetail'), '@_hrm_Hr_Service', 'api/Tra_RequirementTrainDetail/', 'grid_RequirementTrainDetail_info'); return false;
    }
    function showTopic(e) {
        debugger;
        var courseID = e.sender._old;
        $.ajax({
            type: 'POST',
            url: '@_hrm_Hr_Service' + 'Tra_GetData/GetTopicByCourseId',
            data: { courceid: courseID },
            dataType: 'json',
            async: false,
            success: function (data) {
                debugger;
                document.getElementById("TraRequirementTrainDetailInfo_TopicName").value = data;
            }
        });
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Tra_RequirementTrainDetail" }))
{
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(mode => mode.TraineeID)
    <table>
        <tr>
            <td>
                @*<div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(model => model.RequirementTrainName)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrDisplayFor(model=>model.RequirementTrainName)
                    </div>
                </div>*@
       
              
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(model => model.CostCenterID)
                    </div>
                    <div class="FieldValue">
                        @{
                             var _CostCenterID = new ComboBoxBuilderInfo()
                            {
                                StyleCss = "width:300px",
                                Name = "TraCostCenterDetailInfo_CostCenterID",
                                DataTextField = "NameEntityName",
                                DataValueField = "ID",
                                Url = @_hrm_Hr_Service + "Tra_GetData/GetMultiTraCostCenter",
                              //  EventChange = "showTopic"
                            };
                        }
                        @Html.VnrComboBoxFor(model => model.CostCenterID, _CostCenterID).Text(Model != null && Model.CostCenterName != null ? Model.CostCenterName : string.Empty)
                    </div>
                </div>

                <div id="div13">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Amount)
                    </div>
                    <div class="FieldValue">
                        @{
                        var _Amount = new NumericTextBoxBuilderInfo<double>()
                            {
                                StyleCss = "width:100px",
                                Name = "TraCostCenterDetailInfo_Amount"
                            };
                        }
                        @Html.VnrNumericTextBoxFor(model => model.Amount, _Amount)
                    </div>
                </div>
                <div id="div13">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Description)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Description)
                    </div>
                </div>

              
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>

                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-TraCostCenterDetail", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-TraCostCenterDetail", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-TraCostCenterDetail", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
        @Html.HiddenFor(mode => mode.ID)
    </table>
}
