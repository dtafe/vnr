@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@model HRM.Presentation.Laundry.Models.Lau_MachineOfLineModel
@{
    ViewBag.Title = "MachineOfLineInfo";
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
}

<script>
    //var Validator = CheckValidate();
    var data = SetCharacteFieldRequired();

    function onSave() {

        if (CheckValidate(data)) {
            onSaveAndContinue($('#form_lau_MachineOfLine'), '@_hrm_Hre_Service', 'api/MachineOfLine/', 'grid_Lau_MachineOfLine', 'windowLauManchineOfLine'); return false;

        }
        return false;
    }

    function onSaveClose() {
        if (CheckValidate(data)) {
            onSaveAndClose($('#form_lau_MachineOfLine'), '@_hrm_Hre_Service', 'api/MachineOfLine/', 'grid_Lau_MachineOfLine', 'windowLauManchineOfLine'); return false;
        }
        return false;
    }
</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_lau_MachineOfLine" }))
{
    @Html.HiddenFor(model => model.ID)

    
     <table>
        <tr>
            <td>
                <div id="div2">
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(model => model.LineName)
                    </div>

                    <div class="FieldValue">
                        @{
                            var LineName = new MultiSelectBuilderInfo
                        {
                            DataTextField = "LineName",
                            DataValueField = "ID",
                            Url = @_hrm_Hre_Service + "Lau_GetData/GetMultiLine",
                            MaxSelectedItems = 1,                            
                            Placeholder = ConstantDisplay.HRM_Laundry_MachineOfLine_PlaceHolder.TranslateString(),
                            Autobind = true,
                            Value = new string[] { @Html.DisplayFor(mode => mode.LineID).ToString() }     
                        };
                        }
                        @Html.VnrMultiSelectFor(mode => mode.LineID, LineName)
                    </div>

                </div>



                <div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.Code, "width:300px")
                        @Html.ValidationMessageFor(model => model.Code)
                    </div>
                </div>
               
                <div style="width:550px; display:block; float:left">
                    <div id="div2">
                        <div class="FieldTitle">
                            @Html.VnrLabel(@ConstantDisplay.HRM_Common_Search_Duration.TranslateString())
                        </div>
                        <div class="FieldValue">
                            @{
                                var DateStart = new DatePickerBuilderInfo()
                                {
                                    Placeholder = ConstantDisplay.HRM_Attendance_DateFrom.TranslateString(),
                                    StyleCss = "width:100px"
                                };
                            }
                            @Html.VnrDatePickerFor(model => model.DateFrom, DateStart)
                            @{
                                var DateEnd = new DatePickerBuilderInfo()
                                {
                                    Placeholder = ConstantDisplay.HRM_Attendance_DateTo.TranslateString(),
                                    StyleCss = "width:100px"
                                };
                            }
                            @Html.VnrDatePickerFor(model => model.DateTo, DateEnd)
                        </div>
                    </div>
                </div>
                <div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.Notes)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Notes)
                        @Html.ValidationMessageFor(model => model.Notes)
                    </div>
                </div>


            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-lauMachineOfLine", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-lauMachineOfLine", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })


                    </div>
                </div>
            </td>
        </tr>
 </table>

}

