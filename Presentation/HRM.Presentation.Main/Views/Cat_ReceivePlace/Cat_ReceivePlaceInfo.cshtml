@using HRM.Infrastructure.Utilities;
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Infrastructure.Security;
@using HRM.Presentation.Category.Models;
@using HRM.Presentation.Evaluation.Models

@model Cat_ReceivePlaceModel

@{
    Layout = null;

    var _Hrm_Eva_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _Hrm_Eva_Web = ConstantPathWeb.Hrm_Eva_Web;

    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
}

<script type="text/javascript">
    SetFieldRequired();
   
    function onSaveDataPopUpReceivePlace() {
        onlySave($('#form_Cat_ReceivePlace'), '@_hrm_Hr_Service', 'api/Cat_ReceivePlace/', '@ConstantControlName.HRM_Category_ReceivePlace_Grid_Name'); return false;
        };

    function onSaveReceivePlace() {
        onSaveAndContinue($('#form_Cat_ReceivePlace'), '@_hrm_Hr_Service', 'api/Cat_ReceivePlace/', '@ConstantControlName.HRM_Category_ReceivePlace_Grid_Name', '@ConstantControlName.HRM_Category_ReceivePlace_Window_Name');
        return false;
    };

    function onSaveCloseReceivePlace() {
        onSaveAndClose($('#form_Cat_ReceivePlace'), '@_hrm_Hr_Service', 'api/Cat_ReceivePlace/', '@ConstantControlName.HRM_Category_ReceivePlace_Grid_Name','@ConstantControlName.HRM_Category_ReceivePlace_Window_Name');
        return false;
    };

</script>

@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Cat_ReceivePlace" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div id="div2">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">
                        @(Html.VnrTextBoxFor(model => model.Code, "width: 300px"))
                    </div>
                </div>
                <div id="div2">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.ReceivePlace)
                    </div>
                    <div class="FieldValue">
                        @(Html.VnrTextBoxFor(model => model.ReceivePlace, "width: 300px"))
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Note)
                    </div>
                    <div class="FieldValue">

                        @Html.VnrTextAreaFor(mode => mode.Note, "width:500px;height:100px;")
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUpReceivePlace", Name = "save-ReceivePlace", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveReceivePlace", Name = "save-continue-ReceivePlace", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveCloseReceivePlace", Name = "save-close-ReceivePlace", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}

