@using HRM.Infrastructure.Utilities;
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.Category.Models;
@using HRM.Infrastructure.Security;

@model Cat_ReceivePlaceSearchModel
@{
    ViewBag.Title = HRM.Infrastructure.Utilities.ConstantDisplay.HRM_Category_RelativeType.TranslateString();
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    // va_hrm_Main_WebWeb = ConstantPathWeb.Hrm_Cat_Web;
    string[] valueFields = null;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
}

@{
    var window = new WindowBuilderInfo
    {
        Name = ConstantControlName.HRM_Category_ReceivePlace_Window_Name,
        Visible = false,
        Width = 700,
        LoadContentFrom = @_hrm_Main_Web + "Cat_ReceivePlace/Cat_ReceivePlaceInfo/",
    };
}
@(Html.VnrWindow(window))
<script type="text/javascript">
    var titleEditPopUp = '@Html.Raw(ConstantDisplay.HRM_Cat_ReceivePlace_PopUp_Update_Title.TranslateString())';
    var titleCreatePopUp = '@Html.Raw(ConstantDisplay.HRM_Cat_ReceivePlace_PopUp_Create_Title.TranslateString())';
    //Dieu kien tim kiem
    function filterFieldInfo(isExport) {
        return {
            ReceivePlace: $('#Cat_ReceivePlace').val(),
            IsExport: isExport,
            ValueFields: $('#valueFieldsGrid').val()
        };
    }



    $("#btnSearch").click(function () {
        debugger;
        ReadGrid('@ConstantControlName.HRM_Category_ReceivePlace_Grid_Name');
    });

    $("#btnCreate").click(function () {
        debugger;
        PopUpCreate('@ConstantControlName.HRM_Category_ReceivePlace_Window_Name', titleCreatePopUp, '@ConstantPermission.Cat_ReceivePlace_Create');
    });

    GridCheckbox("gridCatDisciplinedTypes");
    $('#btnDelete').click(function (e) {
        if (selectedIds == "") {
            DeleteFail();
            return;
        }
        e.preventDefault();
        DeleteSelected("@ConstantControlName.HRM_Category_ReceivePlace_Grid_Name", '@_hrm_Main_Web' + "Cat_ReceivePlace/RemoveSelected/", selectedIds.join(","), '@ConstantPermission.Cat_ReceivePlace_Delete');
        return false;
    });
    $(document).ready(function () {
        debugger;
        var url = '@_hrm_Main_Web' + "Cat_ReceivePlace/Cat_ReceivePlaceInfo/";
        EditGridPopUp('@ConstantControlName.HRM_Category_ReceivePlace_Grid_Name', '@ConstantControlName.HRM_Category_ReceivePlace_Window_Name', url, '@ConstantPermission.Cat_ReceivePlace_Edit', titleEditPopUp);
    });
</script>

<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->

            <div class="contendSearchWidge">
                <form action="#" method="POST" id="form-search">
                    <div id="div2">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(m => m.ReceivePlace)
                        </div>
                        <div class="FieldValue">
                            @{
                                var _ReceivePlace = new TextBoxBuilderInfo()
                                {
                                    Name = "Cat_ReceivePlace"
                                };
                            }
                            @Html.VnrTextBox(_ReceivePlace)
                        </div>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>

<div class="commandToolBarWidge" id="anchor">
    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreate", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    <div style="float: right">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnChangeColumnCat_ReceivePlace", Content = ConstantDisplay.HRM_ChangeColumn.TranslateString(), ImageUrl = ConstantPath.Hrm_ChangeColumnIcon })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
    </div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @{
        var columnMode = string.Empty;
        var defaultColumnMode = string.Empty;
        var userId = Session[SessionObjects.UserId];
        //Lấy tên lưới cộng thêm tên của control và action để tránh trùng nhau
        var gridControlName = ConstantControlName.HRM_Category_ReceivePlace_Grid_Name + "__Cat_ReceivePlace_Index";
        HRM.Presentation.Main.Controllers.Sys_ColumnModeController control = new HRM.Presentation.Main.Controllers.Sys_ColumnModeController();
        //Get thông tin cấu hình trong database
        GridBuilderModel gridInfo = control.GetGridBuilderInfo(userId + "," + gridControlName);

        var grid = new GridBuilderInfo
        {
            Name = ConstantControlName.HRM_Category_ReceivePlace_Grid_Name,
            ShowCommand = false,
            ReadActionUrl = _hrm_Hr_Service + "Cat_GetData/GetListReceivePlace/",
            ReadData = "filterFieldInfo",
        };

        if (gridInfo != null && gridInfo.ValueFields != null && gridInfo.ValueFields.Any())
        {
            grid.ValueFields = gridInfo.ValueFields;
            grid.SizeFields = gridInfo.SizeFields;
            grid.Filterable = gridInfo.FilterFields;
            grid.DisplayFields = gridInfo.DisplayFields;
            grid.LockedFields = gridInfo.LockedFields;
            grid.GroupFields = gridInfo.GroupFields;
            if (gridInfo.PageSize > 0)
            {
                grid.PageSize = gridInfo.PageSize;
            }
            columnMode = gridInfo.StringXml;
        }
        else
        {
            grid.ValueFields = new[]
            {
               Cat_ReceivePlaceModel.FieldNames.Code,
               Cat_ReceivePlaceModel.FieldNames.ReceivePlace,
               Cat_ReceivePlaceModel.FieldNames.Note,
               
            };

            grid.SizeFields = new Dictionary<string, int>()
            {
                {Cat_ReceivePlaceModel.FieldNames.Code,200},
                {Cat_ReceivePlaceModel.FieldNames.ReceivePlace,220},
                {Cat_ReceivePlaceModel.FieldNames.Note,120},
            };

            grid.Filterable = new Dictionary<string, bool>()
            {
                {Cat_ReceivePlaceModel.FieldNames.Code,true},
                {Cat_ReceivePlaceModel.FieldNames.ReceivePlace,true},
            };

            grid.DisplayFields = new Dictionary<string, string>()
            {
                {Cat_ReceivePlaceModel.FieldNames.Code,ConstantDisplay.HRM_Category_ReceivePlace_Code},
                {Cat_ReceivePlaceModel.FieldNames.ReceivePlace,ConstantDisplay.HRM_Category_ReceivePlace},
                {Cat_ReceivePlaceModel.FieldNames.Note,ConstantDisplay.HRM_Category_ReceivePlace_Note},
            };
            defaultColumnMode = control.SetDefaultGridBuilderInfo(grid);
        }
    //var grid = new GridBuilderInfo
    //{
    //    Name = ConstantControlName.HRM_Category_SourceAds_Grid_Name,
    //    ValueFields = valueFields,
    //    SizeFields = sizeFields,
    //    DisplayFields = displayFields,
    //    Filterable = filterable,
    //    ShowCommand = false,
    //    ReadActionUrl = _hrm_Hr_Service + "Cat_GetData/GetSourceAdsList/",
    //    ReadData = "filterFieldInfo",
    //};
    }

    @(Html.VnrGrid<Cat_ReceivePlaceModel>(grid))
    <script>
        ClickButtonChangeColum("btnChangeColumnCat_ReceivePlace", "Cat_ReceivePlaceModel");
        $(document).ready(function () {
            $("#" + '@ConstantControlName.HRM_ChangeColum_Grid_Name').val('@gridControlName');
            $("#" + '@ConstantControlName.HRM_ChangeColum_ColumMode_Name').val('@Html.Raw(columnMode)');
            $("#" + '@ConstantControlName.HRM_ChangeColum_Default_ColumMode_Name').val('');
            $("#" + '@ConstantControlName.HRM_ChangeColum_Default_ColumMode_Name').val('@Html.Raw(defaultColumnMode)');
        });
    </script>
</div>










@{
    var listValueField = grid.ValueFields;
    var valueFields1 = string.Empty;
    if (listValueField != null)
    {
        for (int i = 0; i < listValueField.Count(); i++)
        {
            valueFields1 += "," + listValueField[i];
        }
    }
}
@Html.Hidden("valueFieldsGrid", valueFields1)