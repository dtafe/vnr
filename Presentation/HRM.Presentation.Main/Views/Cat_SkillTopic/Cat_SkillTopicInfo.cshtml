@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Payroll.Models
@using HRM.Presentation.Category.Models

@model Cat_SkillTopicModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Cat_Service = ConstantPathWeb.Hrm_Hre_Service;
}

<script>
    //SetFieldRequired();
    SetFieldRequiredByScreenName("Cat_SkillTopic");
    function onSave() {

        $("#SkillID").val($("#Skill_ID").val());
        onSaveAndContinue($('#form_Cat_SkillTopic'), '@_hrm_Hr_Service', 'api/Cat_SkillTopic/', 'grid_SkillTopic_info', 'windownCat_SkillTopic');
        return false;
    }

    function onSaveClose() {
        $("#SkillID").val($("#Skill_ID").val());
        onSaveAndClose($('#form_Cat_SkillTopic'), '@_hrm_Hr_Service', 'api/Cat_SkillTopic/', 'grid_SkillTopic_info', 'windownCat_SkillTopic');
        debugger;
        return false;
    }

    function onSaveDataPopUp() {
        $("#SkillID").val($("#Skill_ID").val());
        onlySave($('#form_Cat_SkillTopic'), '@_hrm_Hr_Service', 'api/Cat_SkillTopic/', 'grid_SkillTopic_info');
        return false;
    }

</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Cat_SkillTopic" }))
{
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(mode => mode.SkillID)
    <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(model => model.SkillTopicName)
                    </div>
                    <div class="FieldValue">
                        @{
                         var _SkillTopicName = new TextBoxBuilderInfo()
                            {
                                Name = "CatSkillTopicInfo_SkillTopicName",
                                Width=300
                            };
                            if(Model !=null)
                            {
                                _SkillTopicName.Value = Model.SkillTopicName == null ? string.Empty : Model.SkillTopicName;
                            }
                        }
                        @Html.VnrTextBoxFor(model => model.SkillTopicName, _SkillTopicName)
                    </div>
                </div>

                <div id="div3">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(model => model.TopicID)

                    </div>
                        <div class="FieldValue">
                            @{
                            var _TopicID = new ComboBoxBuilderInfo
                                    {
                                        Name = "CatSkillTopicInfo_TopicID",
                                        DataTextField = "TopicName",
                                        DataValueField = "ID",
                                        Url = _hrm_Cat_Service + "Cat_GetData/GetMultiTopic",
                                        StyleCss = "width:300px;",
                                        ServerFilter = true
                                    };
                            }
                            @Html.VnrComboBoxFor(mode => mode.TopicID, _TopicID).Text(Model!=null?Model.TopicName!=null?Model.TopicName.ToString():string.Empty:string.Empty)
                        </div>
                    </div>
                <div id="div2">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Note)

                    </div>
                    <div class="FieldValue">
                        @{
                        var _Description = new TextAreaBuilderInfo()
                        {

                        };
                        }
                        @Html.VnrTextAreaFor(model => model.Note, "width:500px;height: 100px")
                    </div>
                </div>

            </td>
        </tr>
        <tr></tr>
        <tr></tr>
        <tr></tr>
        <tr style="height:20px">
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr style="height:20px">
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>

                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-CatSkillTopicInfo", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-CatSkillTopicInfo", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-CatSkillTopicInfo", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}

