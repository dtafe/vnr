@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using System.Collections;
@using HRM.Presentation.Hr.Models
@using HRM.Infrastructure.Security
@using HRM.Presentation.Payroll.Models;

@model Sal_BasicSalaryModel

@{
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Cat_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Hr_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    //if (Model != null)
    //{
    //    Model.GrossAmount = String.Format("{0:0,0}",double.Parse(Model.GrossAmount));
    //}

    IList<SelectListItem> lstStatusBasicSalary = Enum.GetValues(typeof(EnumDropDown.Sal_BasicSalaryStatus)).Cast<EnumDropDown.Sal_BasicSalaryStatus>()
    .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) }).ToList();
}

<script>
    var userLG = $('#UserLoginId').val();
    SetFieldRequiredByScreenName('Sal_BasicSalary');
    function changeGrossAmountMoney1(e) {
        $("#BasicSalary1_GrossAmount").val(e.sender._value);
    };
    function onSave() {
        onSaveAndContinue($('#form_Sal_BasicSalary'), '@_hrm_Hr_Service', 'api/Sal_BasicSalary/', 'gridSal_BasicSalary', 'windowSal_BasicSalary');
        return false;
    }
    function onSaveClose() {
        onSaveAndClose($('#form_Sal_BasicSalary'), '@_hrm_Hr_Service', 'api/Sal_BasicSalary/', 'gridSal_BasicSalary', 'windowSal_BasicSalary'); return false;
    };

    function onSaveDataPopUp() {
        var rs = onlySave($('#form_Sal_BasicSalary'), '@_hrm_Hr_Service', 'api/Sal_BasicSalary/', 'gridSal_BasicSalary');
    };

    function FilterRankRate() {
        var ClassRate = $("#BasicSalaryInfo1_ClassRateID").data("kendoComboBox");
        var RankRate = $("#BasicSalaryInfo1_RankRateID").data("kendoComboBox");
        var value = ClassRate.value();
        var text = RankRate.text();
        return {
            text: text,
            SalaryClassID: value,
        };
    };

    function onChanged(e) {
        debugger
        $.ajax({
            url: '@_hrm_Hr_Service' + "Hre_GetData/GetDataBySalaryRankID",
            data: { rankID: e.sender._old },
            type: 'POST',
            datatype: 'json',
            success: function (data) {
                debugger;
                var salary = $("#BasicSalary1_GrossAmount").data("kendoNumericTextBox");
                salary.value(data.SalaryStandard);
                Cal();
            }
        });
    };
</script>


<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Sal_BasicSalary" }))
{
    @Html.HiddenFor(model => model.BasicSalary_ID)

    <table style="width:100%">
        <tbody>
            <tr><td colspan="3" style=""></td></tr>
            <tr>
                <td valign="top">
                    <div style="overflow: hidden;">
                        <div style="display: block">
                            <div>
                                <fieldset>
                                    <legend>
                                        @ConstantDisplay.HRM_HR_ContractCondition.TranslateString()
                                    </legend>
                                    <div style="float:left; width:100%">
                                        <div style="float:left; width:50%">
                                            <div id=" div1">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(mode => mode.ProfileID)
                                                    @Html.HiddenFor(mode => mode.ID)
                                                </div>
                                                <div class="FieldValue">
                                                    @{
    IEnumerable valueProfile = new string[] { };
    if (Model != null)
    {
        valueProfile = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
    }
                                                    }
                                                    @{
    var Profile = new MultiSelectBuilderInfo()
    {
        Name = "SalBasicSalaryInfo_ProfileID",
        DataTextField = Hre_RewardModel.FieldNames.ProfileName,
        DataValueField = Hre_RewardModel.FieldNames.ID,
        Url = @_hrm_Hr_Service + "HrMultiSelect/GetMultiProfile",
        Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
        MaxSelectedItems = 1,
        Value = valueProfile,
        Width = 300
    };
                                                    }
                                                    @(Html.VnrMultiSelectFor(mode => mode.ProfileID, Profile))
                                                </div>
                                                <div style="clear: both;"></div>
                                            </div>
                                            <div id="div10" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(mode => mode.JobLevel)
                                                </div>
                                                <div class="FieldValue">
                                                    @{
    var JobLevel = new NumericTextBoxBuilderInfo<int>()
   {
       Name = "BasicSalaryInfo1_JobLevel",
       StyleCss = "width:150px",
       Format = ConstantFormat.HRM_Format_Number_Double
   };
                                                    }
                                                    @Html.VnrNumericTextBoxFor(model => model.JobLevel, JobLevel)
                                                </div>
                                            </div>
                                            <div id="div4" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(mode => mode.DecisionNo)
                                                </div>
                                                <div class="FieldValue">
                                                    @{
    var _DecisionNo = new TextBoxBuilderInfo()
{
    Name = "BasicSalaryInfo1_DecisionNo",
    Width = 300

};
    if (Model != null)
    {
        _DecisionNo.Value = Model == null ? string.Empty : Model.DecisionNo;
    }
                                                    }
                                                    @Html.VnrTextBoxFor(model => model.DecisionNo, _DecisionNo)
                                                </div>

                                            </div>
                                            <div id="div9" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(mode => mode.DateOfEffect)
                                                </div>
                                                <div class="FieldValue">
                                                    @{
    var _dateOfEffect = new DatePickerBuilderInfo()
    {
        Name = "BasicSalaryInfo1_DateOfEffect",
        StyleCss = "width:120px"
    };
                                                    }
                                                    @Html.VnrDatePickerFor(model => model.DateOfEffect, _dateOfEffect)
                                                </div>
                                            </div>
                                        </div>
                                        <div style="float:left; width: 50%">
                                            <div id="div3" class="DivContentTitleValue">
                                                <div class="FieldTitle170">
                                                    @Html.VnrLabelFor(mode => mode.SalaryJobGroupID)
                                                </div>
                                                <div class="FieldValue">
                                                    @{
    var SalaryJobGroup = new ComboBoxBuilderInfo()
 {
     Name = "BasicSalaryInfo1_SalaryJobGroupID",
     DataTextField = "SalaryJobGroupName",
     DataValueField = "ID",
     Url = _hrm_Cat_Service + "Cat_GetData/GetMultiSalaryJobGroup",
     StyleCss = "width:250px;",
     Value = Model == null ? string.Empty : Model.SalaryJobGroupID.ToString(),
 };
                                                    }
                                                    @(Html.VnrComboBoxFor(mode => mode.SalaryJobGroupID, SalaryJobGroup).Text(Model == null ? string.Empty : Model.SalaryJobGroupName))
                                                </div>
                                            </div>
                                            <div id="Div_RankBasicSal">
                                                <div id="div3" class="DivContentTitleValue">
                                                    <div class="FieldTitle170">
                                                        @Html.VnrLabelFor(mode => mode.ClassRateID)
                                                    </div>
                                                    <div class="FieldValue">
                                                        @{
    var SalaryClass = new ComboBoxBuilderInfo()
{
    Name = "BasicSalaryInfo1_ClassRateID",
    DataTextField = "SalaryClassName",
    DataValueField = "ID",
    Url = _hrm_Cat_Service + "Cat_GetData/GetMultiSalaryClass",
    StyleCss = "width:250px;",
    Value = Model == null ? string.Empty : Model.ClassRateID.ToString(),
    //EventChange = "ChangeClassRate",

};
                                                        }
                                                        @(Html.VnrComboBoxFor(mode => mode.ClassRateID, SalaryClass).Text(Model == null ? string.Empty : Model.SalaryClassName))
                                                    </div>
                                                </div>
                                                <div id="div3" class="DivContentTitleValue">
                                                    <div class="FieldTitle170">
                                                        @Html.VnrLabelFor(mode => mode.RankRateID)
                                                    </div>
                                                    <div class="FieldValue">
                                                        @{
    var SalaryRank = new ComboBoxBuilderInfo()
{
    Name = "BasicSalaryInfo1_RankRateID",
    DataTextField = "SalaryRankName",
    DataValueField = "ID",
    Url = _hrm_Cat_Service + "Cat_GetData/GetMultiSalaryRank",
    StyleCss = "width:250px;",
    Value = Model == null ? string.Empty : Model.RankRateID.ToString(),
    ServerFilter = true,
    Data = "FilterRankRate",
    CascadeFrom = "BasicSalaryInfo1_ClassRateID",
    EventChange = "onChanged",
};
                                                        }
                                                        @(Html.VnrComboBoxFor(mode => mode.RankRateID, SalaryRank).Text(Model == null ? string.Empty : Model.SalaryRankName))
                                                    </div>
                                                </div>
                                            </div>
                                            <div id="div3" class="DivContentTitleValue">
                                                <div class="FieldTitle170">
                                                    @Html.VnrLabelFor(mode => mode.SalAdjustmentCampaignID)
                                                </div>
                                                <div class="FieldValue">
                                                    @{
    var SalAdjustmentCampaign = new ComboBoxBuilderInfo()
     {
         Name = "BasicSalaryInfo1_SalAdjustmentCampaignID",
         DataTextField = "SalAdjustmentCampaignName",
         DataValueField = "ID",
         Url = _hrm_Cat_Service + "Cat_GetData/GetMultiSalaryAdjCampaign",
         StyleCss = "width:250px;",
         Value = Model == null ? string.Empty : Model.SalAdjustmentCampaignID.ToString(),
     };
                                                    }
                                                    @(Html.VnrComboBoxFor(mode => mode.SalAdjustmentCampaignID, SalAdjustmentCampaign).Text(Model == null ? string.Empty : Model.SalAdjustmentCampaignName))
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                            <div style="display:block">
                                <fieldset>
                                    <legend>
                                        @ConstantDisplay.HRM_HR_SalaryContractInformation.TranslateString()
                                    </legend>
                                    <div style="float:left;width: 100%">
                                        <div style="float:left;width:50%">
                                            <div id="div4" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(mode => mode.GrossAmount)
                                                </div>

                                                <div class="FieldValue">
                                                    @{
    var numberic = new NumericTextBoxBuilderInfo<double>()
    {
        Name = "BasicSalary1_GrossAmount",
        Value = Model != null && Model.GrossAmount != null ? double.Parse(Model.GrossAmount) : 0,
        Format = ConstantFormat.HRM_Format_Money,
    };
                                                    }
                                                    @Html.VnrNumericTextBoxFor(m => m.GrossAmountMoney, numberic).Events(m => m.Change("changeGrossAmountMoney1"))
                                                    @Html.HiddenFor(m => m.GrossAmount, new { id = "BasicSalary1_GrossAmount" })
                                                    @{
    var CurrencyName = new ComboBoxBuilderInfo()
     {
         Name = "BasicSalaryInfo1_CurrencyID",
         DataTextField = "CurrencyName",
         DataValueField = "ID",
         Url = _hrm_Cat_Service + "Cat_GetData/GetMultiCurrency",
         StyleCss = "width:60px;",
         //   Index = 0,
         Value = Model == null ? string.Empty : Model.CurrencyID.ToString(),
         //  Autobind = true,
     };
                                                    }
                                                    @(Html.VnrComboBoxFor(mode => mode.CurrencyID, CurrencyName).Text(Model == null ? string.Empty : Model.CurrencyName))
                                                </div>

                                            </div>
                                            @*<div id="div10" class="DivContentTitleValue">
                                                                                               <div class="FieldTitle150">
                                                                                                   @Html.VnrLabelFor(mode => mode.InsuranceAmount)
                                                                                               </div>
                                                                                               <div class="FieldValue">
                                                                                                   @{
                                                   var InsuranceAmount = new NumericTextBoxBuilderInfo<double>()
                                                {
                                                    Name = "BasicSalaryInfo1_InsuranceAmount",
                                                    //StyleCss = "width:100px",
                                                    Format = ConstantFormat.HRM_Format_Money,
                                                };
                                                                                                   }
                                                                                                   @Html.VnrNumericTextBoxFor(model => model.InsuranceAmount, InsuranceAmount)

                                                                                                   @{
                                                   var CurrencyName1 = new ComboBoxBuilderInfo()
                                                    {
                                                        Name = "BasicSalaryInfo1_CurrencyID1",
                                                        DataTextField = "CurrencyName",
                                                        DataValueField = "ID",
                                                        Url = _hrm_Cat_Service + "Cat_GetData/GetMultiCurrency",
                                                        StyleCss = "width:60px;",
                                                        //      Index = 0,
                                                        Value = Model == null ? string.Empty : Model.CurrencyID1.ToString(),
                                                        // Autobind = true,
                                                    };
                                                                                                   }
                                                                                                   @(Html.VnrComboBoxFor(mode => mode.CurrencyID1, CurrencyName1).Text(Model == null ? string.Empty : Model.CurrencyName1))
                                                                                               </div>
                                                                                           </div>*@
                                            <div id="div10" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(mode => mode.PersonalRate)
                                                </div>
                                                <div class="FieldValue">
                                                    @{
    var PersonalRate = new NumericTextBoxBuilderInfo<double>()
   {
       Name = "BasicSalaryInfo1_PersonalRate",
       StyleCss = "width:150px",
       Format = ConstantFormat.HRM_Format_Number_Double
   };
                                                    }
                                                    @Html.VnrNumericTextBoxFor(model => model.PersonalRate, PersonalRate)
                                                </div>
                                            </div>
                                            <div id="div10" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(mode => mode.AmountTotal)
                                                </div>
                                                <div class="FieldValue">
                                                    <div style="float:left">
                                                        @{
    var AmountTotal = new NumericTextBoxBuilderInfo<double>()
 {
     Name = "BasicSalaryInfo1_AmountTotal",
     StyleCss = "width:150px",
     Format = ConstantFormat.HRM_Format_Money,
 };
                                                        }
                                                        @Html.VnrNumericTextBoxFor(model => model.AmountTotal, AmountTotal)

                                                                                                         
                                                           

                                                    </div>

                                                </div>
                                            </div>
                                            <div class="DivContentTitleValue">
                                                <div id="div7">
                                                    <div class="FieldTitle150">
                                                        @Html.VnrLabelFor(mode => mode.Status)
                                                    </div>
                                                    <div class="FieldValue">
                                                        @{
    var _Status = new DropDownListBuilderInfo()
    {
        Name = "BasicSalaryInfo1_Status",
        BindTo = lstStatusBasicSalary,
        DataTextField = "Text",
        DataValueField = "Value",
        Value = EnumDropDown.Sal_BasicSalaryStatus.E_WATTING_APPROVED.ToString(),
        StyleCss = "width:300px"
    };
                                                        }
                                                        @Html.VnrDropDownListFor(mode => mode.Status, _Status)
                                                        @Html.ValidationMessageFor(model => model.Status)
                                                    </div>
                                                    <div style="clear: both;"></div>
                                                </div>

                                            </div>

                                        </div>
                                        <div style="float:left; width:50%">
                                            <div id="div3" class="DivContentTitleValue">
                                                <div class="FieldTitle170">
                                                    @Html.VnrLabelFor(mode => mode.AllowanceAmount1)
                                                </div>
                                                <div class="FieldValue">
                                                    <div style="float:left">

                                                        @{
                                                            var AllowanceAmount1 = new NumericTextBoxBuilderInfo<double>()
                                                          {
                                                              Name = "BasicSalaryInfo1_AllowanceAmount1",
                                                              StyleCss = "width:150px",
                                                              Format = ConstantFormat.HRM_Format_Money,
                                                          };
                                                        }
                                                        @Html.VnrNumericTextBoxFor(model => model.AllowanceAmount1, AllowanceAmount1)
                                                        @{
                                                            var CurrencyName1 = new ComboBoxBuilderInfo()
                                                             {
                                                                 Name = "BasicSalaryInfo1_CurrencyID1",
                                                                 DataTextField = "CurrencyName",
                                                                 DataValueField = "ID",
                                                                 Url = _hrm_Cat_Service + "Cat_GetData/GetMultiCurrency",
                                                                 StyleCss = "width:60px;",
                                                                 //  Index = 0,
                                                                 Value = Model == null ? string.Empty : Model.CurrencyID1.ToString(),
                                                                 // Autobind = true,
                                                             };
                                                        }
                                                        @(Html.VnrComboBoxFor(mode => mode.CurrencyID1, CurrencyName1).Text(Model == null ? string.Empty : Model.CurrencyName1))

                                                    </div>
                                                </div>
                                            </div>
                                            <div id="div3" class="DivContentTitleValue">
                                                <div class="FieldTitle170">
                                                    @Html.VnrLabelFor(mode => mode.AllowanceAmount2)
                                                </div>
                                                <div class="FieldValue">
                                                    <div style="float:left">
                                                      @{
                                                            var AllowanceAmount2 = new NumericTextBoxBuilderInfo<double>()
                                                          {
                                                              Name = "BasicSalaryInfo1_AllowanceAmount2",
                                                              StyleCss = "width:150px",
                                                              Format = ConstantFormat.HRM_Format_Money,
                                                          };
                                                        }
                                                        @Html.VnrNumericTextBoxFor(model => model.AllowanceAmount2, AllowanceAmount2)

                                                        @{
                                                            var CurrencyName2 = new ComboBoxBuilderInfo()
                                                             {
                                                                 Name = "BasicSalaryInfo1_CurrencyID2",
                                                                 DataTextField = "CurrencyName",
                                                                 DataValueField = "ID",
                                                                 Url = _hrm_Cat_Service + "Cat_GetData/GetMultiCurrency",
                                                                 StyleCss = "width:60px;",
                                                                 // Index = 0,
                                                                 Value = Model == null ? string.Empty : Model.CurrencyID2.ToString(),
                                                                 // Autobind = true,
                                                             };
                                                        }
                                                        @(Html.VnrComboBoxFor(mode => mode.CurrencyID2, CurrencyName2).Text(Model == null ? string.Empty : Model.CurrencyName2))

                                                    </div>
                                                </div>
                                            </div>
                                            <div id="div3" class="DivContentTitleValue">
                                                <div class="FieldTitle170">
                                                    @Html.VnrLabelFor(mode => mode.AllowanceAmount3)
                                                </div>
                                                <div class="FieldValue">
                                                    <div style="float:left">

                                                        @{
                                                            var AllowanceAmount3 = new NumericTextBoxBuilderInfo<double>()
                                                          {
                                                              Name = "BasicSalaryInfo1_AllowanceAmount3",
                                                              StyleCss = "width:150px",
                                                              Format = ConstantFormat.HRM_Format_Money,
                                                          };
                                                        }
                                                        @Html.VnrNumericTextBoxFor(model => model.AllowanceAmount3, AllowanceAmount3)
                                                        @{
                                                        var CurrencyName3 = new ComboBoxBuilderInfo()
                                                         {
                                                             Name = "BasicSalaryInfo1_CurrencyID3",
                                                             DataTextField = "CurrencyName",
                                                             DataValueField = "ID",
                                                             Url = _hrm_Cat_Service + "Cat_GetData/GetMultiCurrency",
                                                             StyleCss = "width:60px;",
                                                             //   Index = 0,
                                                             Value = Model == null ? string.Empty : Model.CurrencyID3.ToString(),
                                                             //  Autobind = true,
                                                         };
                                                        }
                                                        @(Html.VnrComboBoxFor(mode => mode.CurrencyID3, CurrencyName3).Text(Model == null ? string.Empty : Model.CurrencyName3))

                                                    </div>
                                                </div>
                                            </div>

                                            <div id="div3" class="DivContentTitleValue">
                                                <div class="FieldTitle170">
                                                    @Html.VnrLabelFor(mode => mode.AllowanceAmount4)
                                                </div>
                                                <div class="FieldValue">
                                                    <div style="float:left">

                                                        @{
                                                            var AllowanceAmount4 = new NumericTextBoxBuilderInfo<double>()
                                                          {
                                                              Name = "BasicSalaryInfo1_AllowanceAmount4",
                                                              StyleCss = "width:150px",
                                                              Format = ConstantFormat.HRM_Format_Money,
                                                          };
                                                                                                                }
                                                        @Html.VnrNumericTextBoxFor(model => model.AllowanceAmount4, AllowanceAmount4)
                                                        @{
                                                            var CurrencyName4 = new ComboBoxBuilderInfo()
                                                             {
                                                                 Name = "BasicSalaryInfo1_CurrencyID4",
                                                                 DataTextField = "CurrencyName",
                                                                 DataValueField = "ID",
                                                                 Url = _hrm_Cat_Service + "Cat_GetData/GetMultiCurrency",
                                                                 StyleCss = "width:60px;",
                                                                 //   Index = 0,
                                                                 Value = Model == null ? string.Empty : Model.CurrencyID4.ToString(),
                                                                 //  Autobind = true,
                                                             };
                                                        }
                                                        @(Html.VnrComboBoxFor(mode => mode.CurrencyID4, CurrencyName4).Text(Model == null ? string.Empty : Model.CurrencyName4))

                                                    </div>
                                                </div>
                                            </div>
                                            <div id="div3" class="DivContentTitleValue">
                                                <div class="FieldTitle170">
                                                    @Html.VnrLabelFor(mode => mode.AllowanceAmount5)
                                                </div>
                                                <div class="FieldValue">
                                                    <div style="float:left">
                                                       @{
                                                            var AllowanceAmount5 = new NumericTextBoxBuilderInfo<double>()
                                                          {
                                                              Name = "BasicSalaryInfo1_AllowanceAmount5",
                                                              StyleCss = "width:150px",
                                                              Format = ConstantFormat.HRM_Format_Money,
                                                          };
                                                        }
                                                        @Html.VnrNumericTextBoxFor(model => model.AllowanceAmount5, AllowanceAmount5)
                                                        @{
                                                            var CurrencyName5 = new ComboBoxBuilderInfo()
                                                             {
                                                                 Name = "BasicSalaryInfo1_CurrencyID5",
                                                                 DataTextField = "CurrencyName",
                                                                 DataValueField = "ID",
                                                                 Url = _hrm_Cat_Service + "Cat_GetData/GetMultiCurrency",
                                                                 StyleCss = "width:60px;",
                                                                 //   Index = 0,
                                                                 Value = Model == null ? string.Empty : Model.CurrencyID5.ToString(),
                                                                 //  Autobind = true,
                                                             };
                                                        }
                                                        @(Html.VnrComboBoxFor(mode => mode.CurrencyID5, CurrencyName5).Text(Model == null ? string.Empty : Model.CurrencyName5))

                                                    </div>
                                                </div>
                                            </div>

                                            <div id="div3" class="DivContentTitleValue">
                                                <div class="FieldTitle170">
                                                    @Html.VnrLabelFor(mode => mode.AllowanceAmount6)
                                                </div>
                                                <div class="FieldValue">
                                                    <div style="float:left">

                                                        @{
                                                            var AllowanceAmount6 = new NumericTextBoxBuilderInfo<double>()
                                                          {
                                                              Name = "BasicSalaryInfo1_AllowanceAmount6",
                                                              StyleCss = "width:150px",
                                                              Format = ConstantFormat.HRM_Format_Money,
                                                          };
                                                        }
                                                        @Html.VnrNumericTextBoxFor(model => model.AllowanceAmount6, AllowanceAmount6)
                                                        @{
                                                            var CurrencyName6 = new ComboBoxBuilderInfo()
                                                             {
                                                                 Name = "BasicSalaryInfo1_CurrencyID6",
                                                                 DataTextField = "CurrencyName",
                                                                 DataValueField = "ID",
                                                                 Url = _hrm_Cat_Service + "Cat_GetData/GetMultiCurrency",
                                                                 StyleCss = "width:60px;",
                                                                 //   Index = 0,
                                                                 Value = Model == null ? string.Empty : Model.CurrencyID6.ToString(),
                                                                 //  Autobind = true,
                                                             };
                                                        }
                                                        @(Html.VnrComboBoxFor(mode => mode.CurrencyID6, CurrencyName6).Text(Model == null ? string.Empty : Model.CurrencyName6))

                                                    </div>
                                                </div>
                                            </div>

                                            <div id="div9" class="DivContentTitleValue">
                                                <div class="FieldTitle170">
                                                    @Html.VnrLabelFor(mode => mode.Note)
                                                </div>
                                                <div class="FieldValue">
                                                    @Html.VnrTextAreaFor(model => model.Note, "width:300px;height:100px;")
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td style="padding-top:2px; padding-bottom:10px;">
                    <div class="LineFooterCommandEdit">
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div>
                        <div class="FieldTitle150">
                        </div>
                        <div class="FieldValue">
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-sal_basiclaryinfo", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-basiclaryinfo", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-sal_basiclaryinfo", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        </div>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
}
<script>
    $(document).ready(function () {


        $.ajax({
            type: 'POST',
            url: '@_hrm_Sys_Service' + 'Sys_GetData/GetPermissionApproved',
            data: { userID: userLG, permissionCheck: '@ApproveType.E_BASICSALARY.ToString()' },
            success: function (data) {
                debugger;
                var dropdownlist = $("#BasicSalaryInfo1_Status").data("kendoDropDownList");
                if (data == "True") {
                    dropdownlist.readonly(false);
                    dropdownlist.value('@AttendanceDataStatus.E_APPROVED.ToString()');
                } else {
                    dropdownlist.readonly(true);
                }
            }
        });


        //var _currencyGrossAmount = $("#BasicSalaryInfo1_CurrencyID").data("kendoComboBox");
        //var _currencyTotalAmount = $("#BasicSalaryInfo1_CurrencyID51").data("kendoComboBox");
        //var _currencyInsuranceAmount = $("#BasicSalaryInfo1_CurrencyID1").data("kendoComboBox");
        //_currencyTotalAmount.text(_currencyGrossAmount.text());
        //_currencyInsuranceAmount.text(_currencyGrossAmount.text());
        //_currencyInsuranceAmount.value(_currencyGrossAmount.value());

        var _grossAmount = document.getElementById("BasicSalary1_GrossAmount");
        grossAmountValue = _grossAmount.value.replace(".00", "").replace(/,/g, "");
        var _allowance1 = document.getElementById("BasicSalaryInfo1_AllowanceAmount1");
        var _allowance2 = document.getElementById("BasicSalaryInfo1_AllowanceAmount2");
        var _allowance3 = document.getElementById("BasicSalaryInfo1_AllowanceAmount3");
        var _allowance4 = $("#BasicSalaryInfo1_AllowanceAmount4").data("kendoNumericTextBox");
        var _allowance5 = $("#BasicSalaryInfo1_AllowanceAmount5").data("kendoNumericTextBox");
        var _allowance6 = $("#BasicSalaryInfo1_AllowanceAmount6").data("kendoNumericTextBox");
        if (grossAmountValue == "") {
            grossAmountValue = 0;
        }
        if (_allowance1._value == null) {
            _allowance1._value = 0;
        }
        if (_allowance2._value == null) {
            _allowance2._value = 0;
        }
        if (_allowance3._value == null) {
            _allowance3._value = 0;
        }
        if (_allowance4._value == null) {
            _allowance4._value = 0;
        }
        if (_allowance5._value == null) {
            _allowance5._value = 0;
        }
        if (_allowance6._value == null) {
            _allowance6._value = 0;
        }
        var total = parseFloat(_grossAmount.value) + parseFloat(_allowance1._value) + parseFloat(_allowance2._value) + parseFloat(_allowance3._value) + parseFloat(_allowance4._value) + parseFloat(_allowance5._value) + parseFloat(_allowance6._value);
        var numerictextbox = $("#BasicSalaryInfo1_AmountTotal").data("kendoNumericTextBox");
        if (numerictextbox != undefined)
        {
            numerictextbox.value(total);
        }
       
    });
    function Cal() {

        var x = "";
        var _grossAmount = document.getElementById("BasicSalary1_GrossAmount");
        grossAmountValue = _grossAmount.value.replace(".00", "").replace(/,/g, "");
        var _allowance1 = $("#BasicSalaryInfo1_AllowanceAmount1").data("kendoNumericTextBox");
        var _allowance2 = $("#BasicSalaryInfo1_AllowanceAmount2").data("kendoNumericTextBox");
        var _allowance3 = $("#BasicSalaryInfo1_AllowanceAmount3").data("kendoNumericTextBox");
        var _allowance4 = $("#BasicSalaryInfo1_AllowanceAmount4").data("kendoNumericTextBox");
        var _allowance5 = $("#BasicSalaryInfo1_AllowanceAmount5").data("kendoNumericTextBox");
        var _allowance6 = $("#BasicSalaryInfo1_AllowanceAmount6").data("kendoNumericTextBox");
        if (grossAmountValue == "") {
            grossAmountValue = 0;
        }
        if (_allowance1._value == null) {
            _allowance1._value = 0;
        }
        if (_allowance2._value == null) {
            _allowance2._value = 0;
        }
        if (_allowance3._value == null) {
            _allowance3._value = 0;
        }
        if (_allowance4._value == null) {
            _allowance4._value = 0;
        }
        if (_allowance5._value == null) {
            _allowance5._value = 0;
        }
        if (_allowance6._value == null) {
            _allowance6._value = 0;
        }
        var total = parseFloat(grossAmountValue) + parseFloat(_allowance1._value) + parseFloat(_allowance2._value) + parseFloat(_allowance3._value) + parseFloat(_allowance4._value) + parseFloat(_allowance5._value) + parseFloat(_allowance6._value);
        var numerictextbox = $("#BasicSalaryInfo1_AmountTotal").data("kendoNumericTextBox");
        if (numerictextbox != undefined) {
            numerictextbox.value(total);
        }
    }

    $("#BasicSalaryInfo1_CurrencyID").change(function () {

        var _currencyGrossAmount = $("#BasicSalaryInfo1_CurrencyID").data("kendoComboBox");
        //var _currencyTotalAmount = $("#BasicSalaryInfo1_CurrencyID51").data("kendoComboBox");
        //var _currencyInsuranceAmount = $("#BasicSalaryInfo1_CurrencyID1").data("kendoComboBox");
        //_currencyTotalAmount.text(_currencyGrossAmount.text());
        //_currencyInsuranceAmount.value(_currencyGrossAmount.value());
        //_currencyInsuranceAmount.text(_currencyGrossAmount.text());
    });

    $("#BasicSalary1_GrossAmount").change(function () {

        Cal();
    });

    $("#BasicSalaryInfo1_AllowanceAmount1").change(function () {
        Cal();
    });

    $("#BasicSalaryInfo1_AllowanceAmount1").keyup(function () {

        Cal();
    });

    $("#BasicSalaryInfo1_AllowanceAmount2").change(function () {
        Cal();
    });

    $("#BasicSalaryInfo1_AllowanceAmount2").keyup(function () {
        Cal();
    });

    $("#BasicSalaryInfo1_AllowanceAmount3").change(function () {
        Cal();
    });

    $("#BasicSalaryInfo1_AllowanceAmount3").keyup(function () {
        Cal();
    });


    $("#BasicSalaryInfo1_AllowanceAmount4").change(function () {
        Cal();
    });

    $("#BasicSalaryInfo1_AllowanceAmount4").keyup(function () {
        Cal();
    });


    $("#BasicSalaryInfo1_AllowanceAmount5").change(function () {
        Cal();
    });

    $("#BasicSalaryInfo1_AllowanceAmount5").keyup(function () {
        Cal();
    });


    $("#BasicSalaryInfo1_AllowanceAmount6").change(function () {
        Cal();
    });

    $("#BasicSalaryInfo1_AllowanceAmount6").keyup(function () {
        Cal();
    });



</script>


<script>
    $(document).ready(function () {
        debugger;
        $.ajax({
            type: 'POST',
            url: '@_hrm_Hr_Service' + "Hre_GetData/IsInputGeneralCandidateManual/",
            dataType: 'json',
            async: false,
            success: function (returnValue) {
                debugger;
                if (returnValue == true) {
                    $("#Div_RankBasicSal").hide();
                }
                else {
                    $("#Div_RankBasicSal").show();
                }
            },
        });
    });
</script>