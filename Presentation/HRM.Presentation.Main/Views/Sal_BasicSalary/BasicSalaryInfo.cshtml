@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using System.Collections;
@using HRM.Presentation.Hr.Models
@using HRM.Infrastructure.Security
@using HRM.Presentation.Payroll.Models;

@model Sal_BasicSalaryModel

@{
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Cat_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Hr_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;

    Guid ProfileID = Guid.Empty;
    var ProfileName = string.Empty;

    string profileid = ViewBag.profileID;
    if (!string.IsNullOrEmpty(profileid))
    {
        ProfileID = Common.ConvertToGuid(profileid.ToString());
    }
}

<script>
    SetFieldRequiredByScreenName('Sal_BasicSalary_Tab');
    function changeGrossAmountMoney(e) {
        $("#BasicSalary_GrossAmount").val(e.sender._value);
    };

    function onSaveClose() {
        onSaveAndClose($('#form_hreProfile_BasicSalary'), '@_hrm_Hr_Service', 'api/Sal_BasicSalary/', 'gridPayroll_BasicSalary', 'windowBasicSalary'); return false;
    };
    function onSaveDataPopUp() {

        var rs = onlySave($('#form_hreProfile_BasicSalary'), '@_hrm_Hr_Service', 'api/Sal_BasicSalary/', 'gridPayroll_BasicSalary');
    };
    function FilterRankRate() {
        var ClassRate = $("#BasicSalaryInfo_ClassRateID").data("kendoComboBox");
        var RankRate = $("#BasicSalaryInfo_RankRateID").data("kendoComboBox");
        var value = ClassRate.value();
        var text = RankRate.text();
        return {
            text: text,
            SalaryClassID: value,
        };
    };
    function ChangeClassRate() {
        $("#BasicSalaryInfo_RankRateID").data("kendoComboBox").dataSource.read();
    };
    function onChanged(e) {
        debugger
        $.ajax({
            url: '@_hrm_Hr_Service' + "Hre_GetData/GetDataBySalaryRankID",
            data: { rankID: e.sender._old },
            type: 'POST',
            datatype: 'json',
            success: function (data) {
                debugger;
                var salary = $("#BasicSalary_GrossAmount").data("kendoNumericTextBox");
                salary.value(data.SalaryStandard);
                Cal();
            }
        });
    }
</script>


<script type="text/javascript">
    SetFieldRequired();
    var gridName = '@ConstantControlName.HRM_HR_AppendixContract_Grid_Name.TranslateString()';
    var popUpName = '@ConstantControlName.HRM_HR_AppendixContract_PopUp_Name.TranslateString()';
    var titleEditPopUp = '@Html.Raw(ConstantDisplay.HRM_HR_AppendixContract_PopUp_Edit_Title.TranslateString())';
    var titleCreatePopUp = '@Html.Raw(ConstantDisplay.HRM_HR_AppendixContract_PopUp_Create_Title.TranslateString())';
    $(document).ready(function () {
        $("#BasicSalaryInfo_ProfileName").val($("#profileNameView").text());
        $("#BasicSalaryInfo_ProfileID").val(SelectID);
        //$("#BasicSalary_ID").val(SelectID);

    });


</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_hreProfile_BasicSalary" }))
{
    @Html.HiddenFor(model => model.BasicSalary_ID)
    @Html.HiddenFor(m => m.ProfileID, new { id = "BasicSalaryInfo_ProfileID" })

    <table>
        <tbody>
            <tr><td colspan="3" style=""></td></tr>
            <tr>
                <td valign="top">
                    <div style="overflow: hidden;">
                        <div style="display: block">
                            <div>
                                <fieldset>
                                    <legend>
                                        @ConstantDisplay.HRM_HR_ContractCondition.TranslateString()
                                    </legend>
                                    <div style="float:left; width:100%">
                                        <div style="float:left; width:50%">
                                            <div id=" div1">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(mode => mode.ProfileID)
                                                </div>
                                                <div class="FieldValue">
                                                    @{
    var _ProfileName = new TextBoxBuilderInfo()
    {
        Name = "BasicSalaryInfo_ProfileName",
        CssStyle = "Width: 300px",
        Disabled = true
    };
    if (Model != null)
    {
        _ProfileName.Value = Model == null ? string.Empty : Model.ProfileName;
    }
                                                    }
                                                    @Html.VnrTextBoxFor(model => model.ProfileName, _ProfileName)
                                                </div>

                                            </div>
                                            <div id="div10" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(mode => mode.JobLevel)
                                                </div>
                                                <div class="FieldValue">
                                                    @{
    var JobLevel = new NumericTextBoxBuilderInfo<int>()
   {
       Name = "BasicSalaryInfo_JobLevel",
       StyleCss = "width:150px",
       Format = ConstantFormat.HRM_Format_Number_Double
   };
                                                    }
                                                    @Html.VnrNumericTextBoxFor(model => model.JobLevel, JobLevel)
                                                </div>
                                            </div>
                                            <div id="div4" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(mode => mode.DecisionNo)
                                                </div>
                                                <div class="FieldValue">
                                                    @{
    var _DecisionNo = new TextBoxBuilderInfo()
{
    Name = "BasicSalaryInfo_DecisionNo",
    Width = 300

};
    if (Model != null)
    {
        _DecisionNo.Value = Model == null ? string.Empty : Model.DecisionNo;
    }
                                                    }
                                                    @Html.VnrTextBoxFor(model => model.DecisionNo, _DecisionNo)
                                                </div>
                                            </div>
                                            <div id="div9" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(mode => mode.DateOfEffect)
                                                </div>
                                                <div class="FieldValue">
                                                    @{
    var _dateOfEffect = new DatePickerBuilderInfo()
    {
        StyleCss = "width:120px",
        Name = "BasicSalaryInfo_DateOfEffect"
    };
                                                    }
                                                    @Html.VnrDatePickerFor(model => model.DateOfEffect, _dateOfEffect)
                                                </div>
                                            </div>
                                        </div>
                                        <div style="float:left; width: 50%">
                                            <div id="div3" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(mode => mode.SalaryJobGroupID)
                                                </div>
                                                <div class="FieldValue">
                                                    @{
    var SalaryJobGroup = new ComboBoxBuilderInfo()
 {
     Name = "BasicSalaryInfo_SalaryJobGroupID",
     DataTextField = "SalaryJobGroupName",
     DataValueField = "ID",
     Url = _hrm_Cat_Service + "Cat_GetData/GetMultiSalaryJobGroup",
     StyleCss = "width:300px;",
     Value = Model == null ? string.Empty : Model.SalaryJobGroupID.ToString(),
 };
                                                    }
                                                    @(Html.VnrComboBoxFor(mode => mode.SalaryJobGroupID, SalaryJobGroup).Text(Model == null ? string.Empty : Model.SalaryJobGroupName))
                                                </div>
                                            </div>
                                            <div id="div3" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(mode => mode.ClassRateID)
                                                </div>
                                                <div class="FieldValue">
                                                    @{
    var SalaryClass = new ComboBoxBuilderInfo()
{
    Name = "BasicSalaryInfo_ClassRateID",
    DataTextField = "SalaryClassName",
    DataValueField = "ID",
    Url = _hrm_Cat_Service + "Cat_GetData/GetMultiSalaryClass",
    StyleCss = "width:300px;",
    Value = Model == null ? string.Empty : Model.ClassRateID.ToString(),
    //EventChange = "ChangeClassRate",
};
                                                    }
                                                    @(Html.VnrComboBoxFor(mode => mode.ClassRateID, SalaryClass).Text(Model == null ? string.Empty : Model.SalaryClassName))
                                                </div>
                                            </div>
                                            <div id="div3" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(mode => mode.RankRateID)
                                                </div>
                                                <div class="FieldValue">
                                                    @{
    var SalaryRank = new ComboBoxBuilderInfo()
{
    Name = "BasicSalaryInfo_RankRateID", 
    DataTextField = "SalaryRankName",
    DataValueField = "ID",
    Url = _hrm_Cat_Service + "Cat_GetData/GetMultiSalaryRank",
    StyleCss = "width:300px;",
    Value = Model == null ? string.Empty : Model.RankRateID.ToString(),
    ServerFilter = true,
    Data = "FilterRankRate",
    EventChange = "onChanged",
    CascadeFrom = "BasicSalaryInfo_ClassRateID",
};
                                                    }
                                                    @(Html.VnrComboBoxFor(mode => mode.RankRateID, SalaryRank).Text(Model == null ? string.Empty : Model.SalaryRankName))
                                                </div>
                                            </div>
                                            <div id="div3" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(mode => mode.SalAdjustmentCampaignID)
                                                </div>
                                                <div class="FieldValue">
                                                    @{
    var SalAdjustmentCampaign = new ComboBoxBuilderInfo()
     {
         Name = "BasicSalaryInfo_SalAdjustmentCampaignID",
         DataTextField = "SalAdjustmentCampaignName",
         DataValueField = "ID",
         Url = _hrm_Cat_Service + "Cat_GetData/GetMultiSalaryAdjCampaign",
         StyleCss = "width:300px;",
         Value = Model == null ? string.Empty : Model.SalAdjustmentCampaignID.ToString(),
     };
                                                    }
                                                    @(Html.VnrComboBoxFor(mode => mode.SalAdjustmentCampaignID, SalAdjustmentCampaign).Text(Model == null ? string.Empty : Model.SalAdjustmentCampaignName))
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                            <div style="display:block">
                                <fieldset>
                                    <legend>
                                        @ConstantDisplay.HRM_HR_SalaryContractInformation.TranslateString()
                                    </legend>
                                    <div style="float:left;width: 100%">
                                        <div style="float:left;width:50%">
                                            <div id="div4" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(mode => mode.GrossAmount)
                                                </div>
                                                <div class="FieldValue">
                                                    @{
    var numberic = new NumericTextBoxBuilderInfo<double>()
    {
        StyleCss = "width:150px;",
        Name = "BasicSalary_GrossAmount",
        Value = Model != null && Model.GrossAmount != null ? double.Parse(Model.GrossAmount) : 0,
        Format = ConstantFormat.HRM_Format_Money
    };
                                                    }
                                                    @Html.VnrNumericTextBoxFor(m => m.GrossAmountMoney, numberic).Events(m => m.Change("changeGrossAmountMoney"))
                                                    @Html.HiddenFor(m => m.GrossAmount, new { id = "BasicSalary_GrossAmount" })

                                                    @{
    var CurrencyName = new ComboBoxBuilderInfo()
     {
         Name = "BasicSalaryInfo_CurrencyID",
         DataTextField = "CurrencyName",
         DataValueField = "ID",
         Url = _hrm_Cat_Service + "Cat_GetData/GetMultiCurrency",
         StyleCss = "width:60px;",
         Value = Model == null ? string.Empty : Model.CurrencyID.ToString(),
     };
                                                    }
                                                    @(Html.VnrComboBoxFor(mode => mode.CurrencyID, CurrencyName).Text(Model == null ? string.Empty : Model.CurrencyName))
                                                </div>

                                            </div>
                                            @*<div id="div10" class="DivContentTitleValue">
                                                                                               <div class="FieldTitle150">
                                                                                                   @Html.VnrLabelFor(mode => mode.InsuranceAmount)
                                                                                               </div>
                                                                                               <div class="FieldValue">
                                                                                                   @{
                                                   var InsuranceAmount = new NumericTextBoxBuilderInfo<double>()
                                                {
                                                    Name = "BasicSalaryInfo_InsuranceAmount",
                                                    //StyleCss = "width:100px",
                                                    Format = ConstantFormat.HRM_Format_Money

                                                };
                                                                                                   }
                                                                                                   @Html.VnrNumericTextBoxFor(model => model.InsuranceAmount, InsuranceAmount)

                                                                                                   @{
                                                   var CurrencyName1 = new ComboBoxBuilderInfo()
                                                    {
                                                        Name = "BasicSalaryInfo_CurrencyID1",
                                                        DataTextField = "CurrencyName",
                                                        DataValueField = "ID",
                                                        Url = _hrm_Cat_Service + "Cat_GetData/GetMultiCurrency",
                                                        StyleCss = "width:60px;",
                                                        Value = Model == null ? string.Empty : Model.CurrencyID1.ToString(),
                                                    };
                                                                                                   }
                                                                                                   @(Html.VnrComboBoxFor(mode => mode.CurrencyID1, CurrencyName1).Text(Model == null ? string.Empty : Model.CurrencyName1))
                                                                                               </div>
                                                                                           </div>*@
                                            <div id="div4" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(mode => mode.PersonalRate)
                                                </div>
                                                <div class="FieldValue">
                                                    @{
    var PersonalRate = new NumericTextBoxBuilderInfo<double>()
   {
       Name = "BasicSalaryInfo_PersonalRate",
       StyleCss = "width:150px",
       Format = ConstantFormat.HRM_Format_Number_Double
   };
                                                    }
                                                    @Html.VnrNumericTextBoxFor(model => model.PersonalRate, PersonalRate)
                                                </div>
                                            </div>
                                            <div id="div10" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(mode => mode.AmountTotal)
                                                </div>
                                                <div class="FieldValue">
                                                    @{
    var AmountTotal = new NumericTextBoxBuilderInfo<double>()
 {
     Name = "BasicSalaryInfo_AmountTotal",
     StyleCss = "width:150px",
     Format = ConstantFormat.HRM_Format_Money
 };
                                                    }
                                                    @Html.VnrNumericTextBoxFor(model => model.AmountTotal, AmountTotal)


                                                </div>
                                            </div>
                                        </div>
                                        <div style="float:left; width: 50%">
                                            <div id="div3" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(mode => mode.AllowanceAmount1)
                                                </div>
                                                <div class="FieldValue">
                                                    <div style="float:left">

                                                        @{
    var AllowanceAmount1 = new NumericTextBoxBuilderInfo<double>()
  {
      Name = "BasicSalaryInfo_AllowanceAmount1",
      StyleCss = "width:150px",
      Format = ConstantFormat.HRM_Format_Money
  };
                                                        }
                                                        @Html.VnrNumericTextBoxFor(model => model.AllowanceAmount1, AllowanceAmount1)
                                                        @{
    var _CurrencyName1 = new ComboBoxBuilderInfo()
     {
         Name = "BasicSalaryInfo_CurrencyID1",
         DataTextField = "CurrencyName",
         DataValueField = "ID",
         Url = _hrm_Cat_Service + "Cat_GetData/GetMultiCurrency",
         StyleCss = "width:60px;",
         Value = Model == null ? string.Empty : Model.CurrencyID1.ToString(),
     };
                                                        }
                                                        @(Html.VnrComboBoxFor(mode => mode.CurrencyID1, _CurrencyName1).Text(Model == null ? string.Empty : Model.CurrencyName1))

                                                    </div>
                                                </div>
                                            </div>
                                            <div id="div3" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(mode => mode.AllowanceAmount2)
                                                </div>
                                                <div class="FieldValue">
                                                    <div style="float:left">

                                                        @{
    var AllowanceAmount2 = new NumericTextBoxBuilderInfo<double>()
  {
      Name = "BasicSalaryInfo_AllowanceAmount2",
      StyleCss = "width:150px",
      Format = ConstantFormat.HRM_Format_Money

  };
                                                        }
                                                        @Html.VnrNumericTextBoxFor(model => model.AllowanceAmount2, AllowanceAmount2)

                                                        @{
    var _CurrencyName2 = new ComboBoxBuilderInfo()
     {
         Name = "BasicSalaryInfo_CurrencyID2",
         DataTextField = "CurrencyName",
         DataValueField = "ID",
         Url = _hrm_Cat_Service + "Cat_GetData/GetMultiCurrency",
         StyleCss = "width:60px;",
         Value = Model == null ? string.Empty : Model.CurrencyID2.ToString(),
     };
                                                        }
                                                        @(Html.VnrComboBoxFor(mode => mode.CurrencyID2, _CurrencyName2).Text(Model == null ? string.Empty : Model.CurrencyName2))

                                                    </div>
                                                </div>
                                            </div>
                                            <div id="div3" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(mode => mode.AllowanceAmount3)
                                                </div>
                                                <div class="FieldValue">
                                                    <div style="float:left">

                                                        @{
                                                                    var AllowanceAmount3 = new NumericTextBoxBuilderInfo<double>()
                                                                  {
                                                                      Name = "BasicSalaryInfo_AllowanceAmount3",
                                                                      StyleCss = "width:150px",
                                                                      Format = ConstantFormat.HRM_Format_Money
                                                                  };
                                                        }
                                                        @Html.VnrNumericTextBoxFor(model => model.AllowanceAmount3, AllowanceAmount3)
                                                        @{
                                                                var _CurrencyName3 = new ComboBoxBuilderInfo()
                                                                 {
                                                                     Name = "BasicSalaryInfo_CurrencyID3",
                                                                     DataTextField = "CurrencyName",
                                                                     DataValueField = "ID",
                                                                     Url = _hrm_Cat_Service + "Cat_GetData/GetMultiCurrency",
                                                                     StyleCss = "width:60px;",
                                                                     Value = Model == null ? string.Empty : Model.CurrencyID3.ToString(),
                                                                 };
                                                        }
                                                        @(Html.VnrComboBoxFor(mode => mode.CurrencyID3, _CurrencyName3).Text(Model == null ? string.Empty : Model.CurrencyName3))

                                                    </div>
                                                </div>
                                            </div>
                                            <div class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(model => model.AllowanceAmount4)
                                                </div>
                                                <div class="FieldValue">
                                                    <div style="float:left">
                                                        @{
                                                            var _AllowanceAmount4 = new NumericTextBoxBuilderInfo<double>()
                                                            {
                                                                Name = "BasicSalaryInfo_AllowanceAmount4",
                                                                StyleCss="width:150px",
                                                                Format=ConstantFormat.HRM_Format_Money
                                                            };
                                                        }
                                                        @Html.VnrNumericTextBoxFor(model => model.AllowanceAmount4, _AllowanceAmount4)
                                                        @{
                                                        var _CurrencyName4 = new ComboBoxBuilderInfo()
                                                         {
                                                             Name = "BasicSalaryInfo_CurrencyID4",
                                                             DataTextField = "CurrencyName",
                                                             DataValueField = "ID",
                                                             Url = _hrm_Cat_Service + "Cat_GetData/GetMultiCurrency",
                                                             StyleCss = "width:60px;",
                                                             Value = Model == null ? string.Empty : Model.CurrencyID4.ToString(),
                                                         };
                                                        }
                                                        @(Html.VnrComboBoxFor(mode => mode.CurrencyID4, _CurrencyName4).Text(Model == null ? string.Empty : Model.CurrencyName4))
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(model => model.AllowanceAmount5)
                                                </div>
                                                <div class="FieldValue">
                                                    <div style="float:left">
                                                        @{
                                             var _AllowanceAmountName5 = new NumericTextBoxBuilderInfo<double>()
                                                {
                                                    Name = "BasicSalaryInfo_AllowanceAmount5",
                                                    StyleCss = "width:150px",
                                                    Format = ConstantFormat.HRM_Format_Money
                                                };
                                                }
                                                @Html.VnrNumericTextBoxFor(model => model.AllowanceAmount5, _AllowanceAmountName5)
                                                @{
                                                var _CurrencyID5 = new ComboBoxBuilderInfo()
                                                 {
                                                     Name = "BasicSalaryInfo_CurrencyID5",
                                                     DataTextField = "CurrencyName",
                                                     DataValueField = "ID",
                                                     Url = _hrm_Cat_Service + "Cat_GetData/GetMultiCurrency",
                                                     StyleCss = "width:60px;",
                                                     Value = Model == null ? string.Empty : Model.CurrencyID5.ToString(),
                                                 };
                                                        }
                                                        @(Html.VnrComboBoxFor(mode => mode.CurrencyID5, _CurrencyID5).Text(Model == null ? string.Empty : Model.CurrencyName5))
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(model => model.AllowanceAmount6)
                                                </div>
                                                <div class="FieldValue">
                                                    <div style="float:left">
                                                        @{
                                                        var _AllowanceAmount6 = new NumericTextBoxBuilderInfo<double>()
                                                           {
                                                               Name = "BasicSalaryInfo_AllowanceAmount6",
                                                               StyleCss = "width:150px",
                                                               Format = ConstantFormat.HRM_Format_Money
                                                           };
                                                        }
                                                        @Html.VnrNumericTextBoxFor(model => model.AllowanceAmount6, _AllowanceAmount6)
                                                        @{
                                                            var _CurrencyID6 = new ComboBoxBuilderInfo()
                                                            {
                                                                Name = "BasicSalaryInfo_CurrencyID6",
                                                                DataTextField = "CurrencyName",
                                                                DataValueField = "ID",
                                                                Url = _hrm_Cat_Service + "Cat_GetData/GetMultiCurrency",
                                                                StyleCss = "width:60px;",
                                                                Value = Model == null ? string.Empty : Model.CurrencyID6.ToString(),
                                                            };
                                                            }
                                                        @(Html.VnrComboBoxFor(mode => mode.CurrencyID6, _CurrencyID6).Text(Model == null ? string.Empty : Model.CurrencyName6))
                                                    </div>
                                                </div>
                                            </div>

                                            <div id="div9" class="DivContentTitleValue">
                                                <div class="FieldTitle150">
                                                    @Html.VnrLabelFor(mode => mode.Note)
                                                </div>
                                                <div class="FieldValue">
                                                    @Html.VnrTextAreaFor(model => model.Note, "width:300px;height:100px;")
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td style="padding-top:2px; padding-bottom:10px;">
                    <div class="LineFooterCommandEdit">
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div>
                        <div class="FieldTitle150">
                        </div>
                        <div class="FieldValue">
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-basicsalaryinfo", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @*@Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveNew", Name = "save-New-Relative", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })*@
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-basicsalaryinfo", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        </div>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
}
<script>
    $(document).ready(function () {
        var _currencyGrossAmount = $("#BasicSalaryInfo_CurrencyID").data("kendoComboBox");
        _currencyGrossAmount.value('VND');
     //   var _currencyTotalAmount = $("#BasicSalaryInfo_CurrencyID5").data("kendoComboBox");
        //_currencyTotalAmount.value('VND');
        //var _currencyInsuranceAmount = $("#BasicSalaryInfo_CurrencyID1").data("kendoComboBox");
        //_currencyTotalAmount.text(_currencyGrossAmount.text());
        //_currencyInsuranceAmount.text(_currencyGrossAmount.text());
        //_currencyInsuranceAmount.value(_currencyGrossAmount.value());
        var _grossAmount = document.getElementById("BasicSalary_GrossAmount");
        grossAmountValue = _grossAmount.value.replace(".00", "").replace(/,/g, "");
        var _allowance1 = document.getElementById("BasicSalaryInfo_AllowanceAmount1");
        var _allowance2 = document.getElementById("BasicSalaryInfo_AllowanceAmount2");
        var _allowance3 = document.getElementById("BasicSalaryInfo_AllowanceAmount3");
        var _allowance4 = document.getElementById("BasicSalaryInfo_AllowanceAmount4");
        var _allowance5 = document.getElementById("BasicSalaryInfo_AllowanceAmount5");
        var _allowance6 = document.getElementById("BasicSalaryInfo_AllowanceAmount6");
        if (grossAmountValue == "") {
            grossAmountValue = 0;
        }
        if (_allowance1._value == null) {
            _allowance1._value = 0;
        }
        if (_allowance2._value == null) {
            _allowance2._value = 0;
        }
        if (_allowance3._value == null) {
            _allowance3._value = 0;
        }
        if (_allowance4._value == null) {
            _allowance4._value = 0;
        }
        if (_allowance5._value == null) {
            _allowance5._value = 0;
        }
        if (_allowance6._value == null) {
            _allowance6._value = 0;
        }
        var total = parseFloat(_grossAmount.value) + parseFloat(_allowance1._value) + parseFloat(_allowance2._value) + parseFloat(_allowance3._value) + parseFloat(_allowance4._value) + parseFloat(_allowance5._value) + parseFloat(_allowance6._value);
        var numerictextbox = $("#BasicSalaryInfo_AmountTotal").data("kendoNumericTextBox");
        numerictextbox.value(total);
    });
    function Cal() {

        var x = "";
        var _grossAmount = document.getElementById("BasicSalary_GrossAmount");
        grossAmountValue = _grossAmount.value.replace(".00", "").replace(/,/g, "");

        var _allowance1 = $("#BasicSalaryInfo_AllowanceAmount1").data("kendoNumericTextBox");
        var _allowance2 = $("#BasicSalaryInfo_AllowanceAmount2").data("kendoNumericTextBox");
        var _allowance3 = $("#BasicSalaryInfo_AllowanceAmount3").data("kendoNumericTextBox");
        var _allowance4 = $("#BasicSalaryInfo_AllowanceAmount4").data("kendoNumericTextBox");
        var _allowance5 = $("#BasicSalaryInfo_AllowanceAmount5").data("kendoNumericTextBox");
        var _allowance6 = $("#BasicSalaryInfo_AllowanceAmount6").data("kendoNumericTextBox");
        if (grossAmountValue == "") {
            grossAmountValue = 0;
        }
        if (_allowance1._value == null) {
            _allowance1._value = 0;
        }
        if (_allowance2._value == null) {
            _allowance2._value = 0;
        }
        if (_allowance3._value == null) {
            _allowance3._value = 0;
        }
        if (_allowance4._value == null) {
            _allowance4._value = 0;
        }
        if (_allowance5._value == null) {
            _allowance5._value = 0;
        }
        if (_allowance6._value == null) {
            _allowance6._value = 0;
        }
        var total = parseFloat(grossAmountValue) + parseFloat(_allowance1._value) + parseFloat(_allowance2._value) + parseFloat(_allowance3._value) + parseFloat(_allowance4._value) + parseFloat(_allowance5._value) + parseFloat(_allowance6._value);
        var numerictextbox = $("#BasicSalaryInfo_AmountTotal").data("kendoNumericTextBox");
        numerictextbox.value(total);
    }
    $("#BasicSalary_GrossAmount").change(function () {

        Cal();
    });

    $("#BasicSalaryInfo_AllowanceAmount1").change(function () {
        Cal();
    });

    $("#BasicSalaryInfo_AllowanceAmount1").keyup(function () {

        Cal();
    });
    //$("#BasicSalaryInfo1_AllowanceAmount1").addEventListener("input", function () {
    //    Cal();
    //}, false);
    $("#BasicSalaryInfo_AllowanceAmount2").change(function () {
        Cal();
    });

    $("#BasicSalaryInfo_AllowanceAmount2").keyup(function () {
        Cal();
    });

    $("#BasicSalaryInfo_AllowanceAmount3").change(function () {
        Cal();
    });

    $("#BasicSalaryInfo_AllowanceAmount3").keyup(function () {
        Cal();
    });

    $("#BasicSalaryInfo_AllowanceAmount4").change(function () {
        Cal();
    });

    $("#BasicSalaryInfo_AllowanceAmount4").keyup(function () {
        Cal();
    });

    $("#BasicSalaryInfo_AllowanceAmount5").change(function () {
        Cal();
    });

    $("#BasicSalaryInfo_AllowanceAmount5").keyup(function () {
        Cal();
    });
    $("#BasicSalaryInfo_AllowanceAmount6").change(function () {
        Cal();
    });

    $("#BasicSalaryInfo_AllowanceAmount6").keyup(function () {
        Cal();
    });

    $("#BasicSalaryInfo_CurrencyID").change(function () {

        var _currencyGrossAmount = $("#BasicSalaryInfo_CurrencyID").data("kendoComboBox");
      //  var _currencyTotalAmount = $("#BasicSalaryInfo_CurrencyID5").data("kendoComboBox");
        //var _currencyInsuranceAmount = $("#BasicSalaryInfo_CurrencyID1").data("kendoComboBox");
       // _currencyTotalAmount.text(_currencyGrossAmount.text());
        //_currencyInsuranceAmount.text(_currencyGrossAmount.text());
        //_currencyInsuranceAmount.value(_currencyGrossAmount.value());
    });

</script>