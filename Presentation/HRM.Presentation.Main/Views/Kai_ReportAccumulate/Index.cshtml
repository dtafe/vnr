@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Payroll.Models
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Infrastructure.Security
@model HRM.Presentation.Payroll.Models.Kai_ReportKaizenDetailModel

@{
    ViewBag.Title = "Index";
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var controller = ViewContext.RouteData.Values["Controller"].ToString();
    var action = ViewContext.RouteData.Values["Action"].ToString();
    var screen = controller + "/" + action;
}

@Html.Hidden("Screen", screen)

<script>
    SetFieldRequired();
    var checkedNodes = [];
    //var selectedIds = [];

    var isCreateTemplate = false;
    var isCreateTemplateForDynamicGrid = false;
    //Khởi tạo điều kiện tìm kiếm
    function filterFieldInfo(isExport) {
        var elementPara = {
            DateFrom: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateFrom").val()),
            DateTo: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateTo").val()),
            RateDetail:$('#@Html.FieldIdFor(model=>model.RateDetail)').val(),
            OrgStructureID: checkedNodes.join(','),
            IsCreateTemplate: isCreateTemplate,
            IsCreateTemplateForDynamicGrid: isCreateTemplateForDynamicGrid,
        };
        if (isExport == true) {
            elementPara["ExportId"] = $('#ddlScreenName').val();
        }
        return elementPara;
    }

    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        //Show Hide Panel
        ShowHidePanel();
        //
        $("#btnSearch").click(function () {
            debugger;
            var datefrom = $("#DateFrom").val();
            var dateto = $("#DateTo").val();
            if (datefrom == "") {
                ShowNotificationProcessor("Error,Từ Ngày Không Được Rỗng !");
                return;
            }
            if (dateto == "") {
                ShowNotificationProcessor("Error,Đến Ngày Không Được Rỗng !");
                return;
            }
            var treeView = $("#treeviewOrg").data("kendoTreeView");
            checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes)
            //var grid = $('#gridKai_ReportKaizenDetail').data("kendoGrid");
            //grid.dataSource.read();
            $.ajax({
                url: '@_hrm_Hr_Service' + "Hre_GetData/GetReportKaizenAccumulate",
                data: filterFieldInfo(false),
                type: 'POST',
                datatype: 'json',
                success: function(data)
                {
                    debugger;
                    if (data[0] == 'error')
                    {
                        ShowNotificationProcessor(data[1]);
                        return;
                    }
                    else
                    {
                        var grid = VnrGridDynamic;
                        grid.gridName = "gridKai_ReportKaizenDetail";
                        grid.DataSource = data.Data;
                        grid.PageSize = 50;
                        VnrGridDynamicControl(grid);
                        CloseHre_ProgressBar();
                    }
                }
            });
            checkedNodes = [];
        });
    });
    $("#btnExport").click(function () {
        //showAjaxLoading()
        var isAccess = checkPermission(PrivilegeType.Export, '@ConstantPermission.Hre_ReportProfileNew');
        if (!isAccess) {
            return;
        }
        isCreateTemplate = false;
        isCreateTemplateForDynamicGrid = true;
        if ($('#ddlScreenName').val() == "") {
            ExportFail();
            return;
        }
        var urlGetData = '@_hrm_Hre_Service' + "Hre_GetData/GetReportKaizenAccumulate/";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo(true);
        ExportAll(urlGetData, dataParameter, urlDownload);
        checkedNodes = [];
    });

    $("#btnCreateTemplate").click(function () {
        isCreateTemplate = true;
        isCreateTemplateForDynamicGrid = true;
        CreateTemplate('@_hrm_Hre_Service' + "Hre_GetData/GetReportKaizenAccumulate", filterFieldInfo(true));
    });

</script>

<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            <div class="contendSearchWidge" style="overflow:visible">
                <div class="hrm_box">
                    <div id="div2">
                        <div class="FieldTitle">
                            @Html.Label(@ConstantDisplay.HRM_Common_Search_Month.TranslateString())
                        </div>
                        <div class="FieldValue">
                            @{
                                var DateFrom = new DatePickerBuilderInfo()
                                {
                                    Value = @Html.DisplayFor(mode => mode.DateFrom).ToString(),
                                    StyleCss = "width:100px;",
                                    Placeholder = ConstantDisplay.HRM_HR_Profile_MonthFrom.TranslateString()
                                };

                            }
                            @Html.VnrDatePickerFor(mode => mode.DateFrom, DateFrom).Format(ConstantFormat.HRM_Format_MonthYear)
                            @{
                                var DateTo = new DatePickerBuilderInfo()
                                {
                                    Value = @Html.DisplayFor(mode => mode.DateTo).ToString(),
                                    StyleCss = "width:100px;",
                                    Placeholder = ConstantDisplay.HRM_HR_Profile_MonthTo.TranslateString()
                                };

                            }
                            @Html.VnrDatePickerFor(mode => mode.DateTo, DateTo).Format(ConstantFormat.HRM_Format_MonthYear)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div14">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.OrgStructureID)
                        </div>
                        <div class="FieldValue">
                            <div class="FieldValue">
                                @Html.Partial("EditorTemplates/OrgStructureTreeViewDropdown")
                            </div>

                        </div>
                    </div>
                </div>
                <div class="hrm_box">
                    <div id="div15">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(model=>model.RateDetail)
                        </div>
                        <div class="FieldValue">
                            @{
                                var _RateDetail = new NumericTextBoxBuilderInfo<int>()
                                {
                                    Format=ConstantFormat.HRM_Format_Int
                                };
                            }
                            @Html.VnrNumericTextBoxFor(model => model.RateDetail, _RateDetail)
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
<div class="commandToolBarWidge">

    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    <div style="float:right">
        <script>
            function GetScreenName() {
                return {
                    screenName: '@screen'
                };
            }
        </script>
        <div class="FieldValue" style="margin-top: 0;">
            @{
                var screenName = new DropDownListBuilderInfo()
                {
                    Name = "ddlScreenName",
                    DataTextField = "ExportName",
                    DataValueField = "ID",
                    Url = @_hrm_Hr_Service + "Cat_GetData/GetScreenName",
                    StyleCss = "width:200px;",
                    Data = "GetScreenName",
                };
            }
            @Html.VnrDropDownList(screenName)

            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport", Content = ConstantDisplay.HRM_Common_Export_Button.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateTemplate", Content = ConstantDisplay.HRM_Common_CreateTemplate_Button.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
        </div>
    </div>
</div>
@*<div>
    <!--Khai báo các thông tin cho Grid-->
    @using HRM.Presentation.UI.Controls.Kendo
    @{
        string[] valueFields = new string[]
        {
           Kai_ReportKaizenDetailModel.FieldNames.CodeEmp,
           Kai_ReportKaizenDetailModel.FieldNames.ProfileName,
              Kai_ReportKaizenDetailModel.FieldNames.E_UNIT,
                       Kai_ReportKaizenDetailModel.FieldNames.E_DIVISION,
                Kai_ReportKaizenDetailModel.FieldNames.E_DEPARTMENT,
                 Kai_ReportKaizenDetailModel.FieldNames.E_TEAM,
                Kai_ReportKaizenDetailModel.FieldNames.E_SECTION,


           Kai_ReportKaizenDetailModel.FieldNames.KaizenName,
           Kai_ReportKaizenDetailModel.FieldNames.MonthReport,
           Kai_ReportKaizenDetailModel.FieldNames.YearReport,
           //Kai_ReportKaizenDetailModel.FieldNames.CategoryName,
           //Kai_ReportKaizenDetailModel.FieldNames.MarkIdea,
           Kai_ReportKaizenDetailModel.FieldNames.MarkPerform,
           //Kai_ReportKaizenDetailModel.FieldNames.SumMark,
           //Kai_ReportKaizenDetailModel.FieldNames.SumAmount,
           Kai_ReportKaizenDetailModel.FieldNames.Accumulate,

        };
        Dictionary<string, int> sizeFields = new Dictionary<string, int>()
        {

           {Kai_ReportKaizenDetailModel.FieldNames.CodeEmp,80},
           { Kai_ReportKaizenDetailModel.FieldNames.ProfileName,140},
         {Kai_ReportKaizenDetailModel.FieldNames.E_DEPARTMENT,135},
                {Kai_ReportKaizenDetailModel.FieldNames.E_DIVISION,135},
                {Kai_ReportKaizenDetailModel.FieldNames.E_SECTION,135},
                {Kai_ReportKaizenDetailModel.FieldNames.E_TEAM,135},
                {Kai_ReportKaizenDetailModel.FieldNames.E_UNIT,135},

           {Kai_ReportKaizenDetailModel.FieldNames.KaizenName,100},
           {Kai_ReportKaizenDetailModel.FieldNames.MonthReport,100},
           {Kai_ReportKaizenDetailModel.FieldNames.YearReport,100},
           //{Kai_ReportKaizenDetailModel.FieldNames.CategoryName,100},
           //{Kai_ReportKaizenDetailModel.FieldNames.MarkIdea,100},
           {Kai_ReportKaizenDetailModel.FieldNames.MarkPerform,100},
           //{Kai_ReportKaizenDetailModel.FieldNames.SumMark,100},
           //{Kai_ReportKaizenDetailModel.FieldNames.SumAmount,100},
           {Kai_ReportKaizenDetailModel.FieldNames.Accumulate,100},

    };

        Dictionary<string, string>
            displayFields = new Dictionary<string, string>
                ()
            {
           {Kai_ReportKaizenDetailModel.FieldNames.CodeEmp,ConstantDisplay.HRM_Att_Report_CodeEmp},
           {Kai_ReportKaizenDetailModel.FieldNames.ProfileName,ConstantDisplay.HRM_Att_Report_ProfileName},
                        {Kai_ReportKaizenDetailModel.FieldNames.E_UNIT, ConstantDisplay.HRM_Hre_Report_E_UNIT},
                {Kai_ReportKaizenDetailModel.FieldNames.E_DIVISION, ConstantDisplay.HRM_Hre_Report_E_DIVISION},
                {Kai_ReportKaizenDetailModel.FieldNames.E_DEPARTMENT, ConstantDisplay.HRM_Hre_Report_E_DEPARTMENT},
                {Kai_ReportKaizenDetailModel.FieldNames.E_SECTION, ConstantDisplay.HRM_Hre_Report_E_SECTION},
                {Kai_ReportKaizenDetailModel.FieldNames.E_TEAM, ConstantDisplay.HRM_Hre_Report_E_TEAM},

           {Kai_ReportKaizenDetailModel.FieldNames.KaizenName,ConstantDisplay.HRM_Kai_KaiZenData_KaizenName},
           {Kai_ReportKaizenDetailModel.FieldNames.MonthReport,ConstantDisplay.HRM_Att_Report_Month},
           {Kai_ReportKaizenDetailModel.FieldNames.YearReport,ConstantDisplay.HRM_Attendance_AnnualDetail_Year},
           //{Kai_ReportKaizenDetailModel.FieldNames.CategoryName,ConstantDisplay.HRM_Kai_Category_CategoryID},
           //{Kai_ReportKaizenDetailModel.FieldNames.MarkIdea,ConstantDisplay.HRM_Kai_KaiZenData_MarkIdea},
           {Kai_ReportKaizenDetailModel.FieldNames.MarkPerform,ConstantDisplay.HRM_Kai_KaiZenData_MarkPerform},
           //{Kai_ReportKaizenDetailModel.FieldNames.SumMark,ConstantDisplay.HRM_Kai_KaiZenData_SumMark},
           //{Kai_ReportKaizenDetailModel.FieldNames.SumAmount,ConstantDisplay.HRM_Kai_KaiZenData_SumAmount},
           {Kai_ReportKaizenDetailModel.FieldNames.Accumulate,ConstantDisplay.HRM_Kai_KaiZenData_Accumulate},
            };

        Dictionary<string, string>
        formatFields = new Dictionary<string, string>
            ()
            {
           
           {Kai_ReportKaizenDetailModel.FieldNames.MarkPerform,ConstantFormat.HRM_Format_Int},
          
           {Kai_ReportKaizenDetailModel.FieldNames.Accumulate,ConstantFormat.HRM_Format_Int},
            };

        var grid = new GridBuilderInfo
        {
            ShowCheckbox = false,
            ShowEditIcon = false,
            Name = "gridKai_ReportKaizenDetail",
            ValueFields = valueFields,
            SizeFields = sizeFields,
            DisplayFields = displayFields,
            ReadActionUrl = _hrm_Hre_Service + "Hre_GetData/GetReportKaizenAccumulate",
            ReadData = "filterFieldInfo",
            FormatFields = formatFields
        };
    }
    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<Kai_ReportKaizenDetailModel>(grid))
</div>*@
<div id="gridKai_ReportKaizenDetail">

</div>
