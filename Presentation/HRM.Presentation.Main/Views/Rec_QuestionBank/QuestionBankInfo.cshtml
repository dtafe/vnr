@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@using System.Collections
@using HRM.Presentation.Recruitment.Models
@model Rec_QuestionBankModel

@{
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
   IEnumerable lstQuestionTypeID = null;
        if(Model!=null)
        {
             lstQuestionTypeID = new[] { new { QuestionTypeName = Model.QuestionTypeName, ID = Model.QuestionTypeID } };
            
        }

}
<script>
    SetFieldRequired();
   
    function onSave() {
        onSaveAndContinue($('#form_Rec_QuestionBank'), '@_hrm_Hre_Service', 'api/Rec_QuestionBank/', 'gridQuestionBank', 'windowQuestionBank');
        return false;
    }

    function onSaveClose() {
        onSaveAndClose($('#form_Rec_QuestionBank'), '@_hrm_Hre_Service', 'api/Rec_QuestionBank/', 'gridQuestionBank', 'windowQuestionBank');
        return false;
    }

    function onSaveDataPopUp() {
        
        onlySave($('#form_Rec_QuestionBank'), '@_hrm_Hre_Service', 'api/Rec_QuestionBank/', 'gridQuestionBank');
        return false;
    }
</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Rec_QuestionBank" }))
{
    @Html.HiddenFor(model => model.ID)
    <table style="width:100%">
        <tr>
            <td>
                <div style="display:block">
                    <div>
                        <div class="FieldTitle150 ">
                            @Html.VnrLabelFor(mode => mode.QuestionBankName)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(model => model.QuestionBankName, "width: 300px")
                        </div>
                    </div>


                    <div>
                        <div class="FieldTitle150 ">
                            @Html.VnrLabelFor(mode => mode.QuestionTypeID)
                        </div>
                        <div class="FieldValue">
                            @{
                            var QuestionTypeID = new MultiSelectBuilderInfo
                            {
                                Width=300,
                                DataTextField = "QuestionTypeName",
                                DataValueField = "ID",
                                Url = @_hrm_Hre_Service + "Rec_GetData/GetMultiRec_QuestionType",
                                MaxSelectedItems = 1,
                                Placeholder = ConstantDisplay.HRM_Recruitment_SelectQuestionType.TranslateString(),
                                Value = lstQuestionTypeID
                            };
                            }
                            @Html.VnrMultiSelectFor(mode => mode.QuestionTypeID, QuestionTypeID)
                        </div>
                    </div>

                    <div>
                        <div class="FieldTitle150 ">
                            @Html.VnrLabelFor(mode => mode.Length)
                        </div>
                        <div class="FieldValue">
                            @{
                            var Length = new NumericTextBoxBuilderInfo<int>()
                            {
                                Name = "QuestionBank_Length",
                                StyleCss = "width:150px",
                                Format = ConstantFormat.HRM_Format_Int,
                                
                            };
                                
                            }
                            @Html.VnrNumericTextBoxFor(model => model.Length, Length)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div>
                        <div class="FieldTitle150 ">
                            @Html.VnrLabelFor(mode => mode.AnswerViewCol)
                        </div>
                        <div class="FieldValue">
                            @{
                            var AnswerViewCol = new NumericTextBoxBuilderInfo<int>()
                            {
                                Name = "QuestionBank_AnswerViewCol",
                                StyleCss = "width:150px",
                                Format = ConstantFormat.HRM_Format_Int,

                            };

                            }
                            @Html.VnrNumericTextBoxFor(model => model.AnswerViewCol, AnswerViewCol)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div>
                        <div class="FieldTitle150 ">
                            @Html.VnrLabelFor(mode => mode.PointMin)
                        </div>
                        <div class="FieldValue">
                            @{
                                var PointMin = new NumericTextBoxBuilderInfo<double>()
                                {
                                    StyleCss = "width:150px",
                                    Format = ConstantFormat.HRM_Format_Int,
                                    Value = Model != null && Model.PointMin.HasValue ? Model.PointMin.Value : 0

                                };

                            }
                            @Html.VnrNumericTextBoxFor(model => model.PointMin, PointMin)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div>
                        <div class="FieldTitle150 ">
                            @Html.VnrLabelFor(mode => mode.PointMax)
                        </div>
                        <div class="FieldValue">
                            @{
                                var PointMax = new NumericTextBoxBuilderInfo<double>()
                                {
                                    StyleCss = "width:150px",
                                    Format = ConstantFormat.HRM_Format_Int,
                                    Value = Model != null && Model.PointMax.HasValue ? Model.PointMax.Value : 0

                                };

                            }
                            @Html.VnrNumericTextBoxFor(model => model.PointMax, PointMax)
                        </div>
                        <div style="clear: both;"></div>
                    </div>



                    <div >
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.IsPublic)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrCheckBoxFor(mode => mode.IsPublic)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                </div>

            </td>

        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-QuestionBank", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-QuestionBank", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-QuestionBank", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>

                </div>
            </td>
        </tr>
    </table>
}

