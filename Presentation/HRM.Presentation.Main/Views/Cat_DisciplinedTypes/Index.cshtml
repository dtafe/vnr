@using HRM.Infrastructure.Utilities;
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.Category.Models;
@using HRM.Infrastructure.Security;

@model Cat_DisciplinedTypesSearchModel
@{
    ViewBag.Title = HRM.Infrastructure.Utilities.ConstantDisplay.HRM_Category_RelativeType.TranslateString();
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
   // va_hrm_Main_WebWeb = ConstantPathWeb.Hrm_Cat_Web;
    string[] valueFields = null;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
}
@{
    var window = new WindowBuilderInfo
    {
        Name = "windowCatDisciplinedTypes",
        Visible = false,
        Width = 700,
        LoadContentFrom = @_hrm_Main_Web + "Cat_DisciplinedTypes/DisciplinedTypesInfo/",
    };
}
@(Html.VnrWindow(window))

<script type="text/javascript">
    //Biến để lưu id của các dòng đã check chọn
    var titleEditPopUp = '@Html.Raw(ConstantDisplay.HRM_Category_DisciplinedTypes_Update_Title.TranslateString())';
    var titleCreatePopUp = '@Html.Raw(ConstantDisplay.HRM_Category_DisciplinedTypes_Create_Title.TranslateString())';

     
    //Khởi tạo điều kiện tìm kiếm
    function filterFieldInfo(isExport) {
        return {
            DisciplinedTypesName: $("#SDisciplinedTypesName").val(),
            IsExport: isExport,
            ValueFields: $('#valueFieldsGrid').val()
        };
    }

    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        //Show Hide Panel
        ShowHidePanel();
        //
        $("#btnSearch").click(function () {

            var grid = $('#gridCatDisciplinedTypes').data("kendoGrid");
            grid.dataSource.read();
        });
        //Xử lý nút Edit
        @*var isAccess = checkPermission(PrivilegeType.Modify, '@ConstantPermission.Cat_DisciplinedTypes');
        if (!isAccess) {
            return;
        }*@
        var url = '@_hrm_Main_Web' + "Cat_DisciplinedTypes/DisciplinedTypesInfo/";
        EditGridPopUp("gridCatDisciplinedTypes", "windowCatDisciplinedTypes", url, '@ConstantPermission.Cat_DisciplinedTypes', titleEditPopUp);
    });

    $("#btnCreate").click(function () {
        @*var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Cat_DisciplinedTypes');
        if (!isAccess) {
            return;
        }*@
        PopUpCreate("windowCatDisciplinedTypes", titleCreatePopUp, '@ConstantPermission.Cat_DisciplinedTypes');
    });


    GridCheckbox("gridCatDisciplinedTypes");
    //Xử lý nút Delete
 

    $('#btnDelete').click(function (e) {
       @*var isAccess = checkPermission(PrivilegeType.Delete, '@ConstantPermission.Cat_RelativeType');
        if (!isAccess) {
            return;
        }*@
        if (selectedIds == "") {
            DeleteFail();
            return;
        }
        e.preventDefault();
        DeleteSelected("gridCatDisciplinedTypes", '@_hrm_Main_Web' + "Cat_DisciplinedTypes/RemoveSelected/", selectedIds.join(","), '@ConstantPermission.Cat_DisciplinedTypes');
        return false;
    });



    $("#btnExportAll").click(function () {
        
        var grid = $('#gridCatDisciplinedTypes').data("kendoGrid");
        if (grid.dataSource._data.length == 0) {
            ExportAllFail();
            return;
        }
        var urlGetData = '@_hrm_Hr_Service' + "Cat_GetData/ExportAllDisciplinedTypesList/";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo(true);
        ExportAll(urlGetData, dataParameter, urlDownload, '@ConstantPermission.Cat_OrgStructure');
    });

</script>


<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->

            <div class="contendSearchWidge">
                <form action="#" method="POST" id="form-search">
                    <div id="div2">
                        <div class="FieldTitle170">
                            @Html.VnrLabelFor(model => model.DisciplinedTypesName)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBox("SDisciplinedTypesName", "width:200px")
                        </div>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>

<div class="commandToolBarWidge" id="anchor">
    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreate", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    <div style="float: right">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExportAll", Content = ConstantDisplay.HRM_Common_ExportDropdown_Title.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnChangeColumnDisciplinedTypes", Content = ConstantDisplay.HRM_ChangeColumn.TranslateString(), ImageUrl = ConstantPath.Hrm_ChangeColumnIcon })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
    </div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @using HRM.Presentation.Category.Models
    @using HRM.Presentation.UI.Controls.Kendo
    @{
        var columnMode = string.Empty;
        var defaultColumnMode = string.Empty;
        var userId = Session[SessionObjects.UserId];
        //Lấy tên lưới cộng thêm tên của control và action để tránh trùng nhau
        var gridControlName = ConstantControlName.HRM_gridCatDisciplinedTypes_Name + "__Cat_DisciplinedTypes_Index";
        HRM.Presentation.Main.Controllers.Sys_ColumnModeController control = new HRM.Presentation.Main.Controllers.Sys_ColumnModeController();
        //Get thông tin cấu hình trong database
        GridBuilderModel gridInfo = control.GetGridBuilderInfo(userId + "," + gridControlName);

        var grid = new GridBuilderInfo
        {
            Name = ConstantControlName.HRM_gridCatDisciplinedTypes_Name,
            ReadActionUrl = @_hrm_Hr_Service + "Cat_GetData/GetDisciplinedTypesList/",
            ShowCommand = false,
            ReadData = "filterFieldInfo"
        };

        if (gridInfo != null && gridInfo.ValueFields != null && gridInfo.ValueFields.Any())
        {
            grid.ValueFields = gridInfo.ValueFields;
            grid.SizeFields = gridInfo.SizeFields;
            grid.Filterable = gridInfo.FilterFields;
            grid.DisplayFields = gridInfo.DisplayFields;
            grid.LockedFields = gridInfo.LockedFields;
            grid.GroupFields = gridInfo.GroupFields;
            if (gridInfo.PageSize > 0)
            {
                grid.PageSize = gridInfo.PageSize;
            }
            columnMode = gridInfo.StringXml;
        }
        else
        {
            grid.ValueFields = new string[]
            {
                Cat_DisciplinedTypesModel.FieldNames.Code,
                Cat_DisciplinedTypesModel.FieldNames.DisciplinedTypesName,
                Cat_DisciplinedTypesModel.FieldNames.Notes,
                Cat_DisciplinedTypesModel.FieldNames.UserUpdate,
                Cat_DisciplinedTypesModel.FieldNames.DateUpdate,
            };

            grid.SizeFields = new Dictionary<string, int>()
            {
                {Cat_DisciplinedTypesModel.FieldNames.DisciplinedTypesName, 160},
                {Cat_DisciplinedTypesModel.FieldNames.Code, 80},
                 {Cat_DisciplinedTypesModel.FieldNames.Notes, 200},
                {Cat_DisciplinedTypesModel.FieldNames.UserUpdate, 110},
                {Cat_DisciplinedTypesModel.FieldNames.DateUpdate, 100},

            };

            grid.DisplayFields = new Dictionary<string, string>()
            {
                {Cat_DisciplinedTypesModel.FieldNames.DisciplinedTypesName, ConstantDisplay.HRM_Category_DisciplinedTypes_DisciplinedTypesName},
                {Cat_DisciplinedTypesModel.FieldNames.Code, ConstantDisplay.HRM_Category_DisciplinedTypes_Code},
                {Cat_DisciplinedTypesModel.FieldNames.Notes, ConstantDisplay.HRM_Category_DisciplinedTypes_Notes},
                {Cat_DisciplinedTypesModel.FieldNames.UserUpdate, ConstantDisplay.HRM_Attendance_Overtime_UserUpdate},
                {Cat_DisciplinedTypesModel.FieldNames.DateUpdate, ConstantDisplay.HRM_Attendance_Overtime_DateUpdate},

            };
            defaultColumnMode = control.SetDefaultGridBuilderInfo(grid);
        }
        //var grid = new GridBuilderInfo
        //{
        //    Name = "gridCatDisciplinedTypes",
        //    ValueFields = valueFields,
        //    SizeFields = sizeFields,
        //    DisplayFields = displayFields,
        //    ReadActionUrl = @_hrm_Hr_Service + "Cat_GetData/GetDisciplinedTypesList/",
        //    ShowCommand = false,
        //    ReadData = "filterFieldInfo"
        //};
    }
    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<Cat_DisciplinedTypesModel>(grid))
    <script>
        ClickButtonChangeColum("btnChangeColumnDisciplinedTypes", "Cat_DisciplinedTypesModel");
        $(document).ready(function () {
            $("#" + '@ConstantControlName.HRM_ChangeColum_Grid_Name').val('@gridControlName');
            $("#" + '@ConstantControlName.HRM_ChangeColum_ColumMode_Name').val('@Html.Raw(columnMode)');
            $("#" + '@ConstantControlName.HRM_ChangeColum_Default_ColumMode_Name').val('');
            $("#" + '@ConstantControlName.HRM_ChangeColum_Default_ColumMode_Name').val('@Html.Raw(defaultColumnMode)');
        });
    </script>
</div>
@{
    var listValueField = grid.ValueFields;
    var valueFields1 = string.Empty;
    if (listValueField != null)
    {
        for (int i = 0; i < listValueField.Count(); i++)
        {
            valueFields1 += "," + listValueField[i];
        }
    }
}
@Html.Hidden("valueFieldsGrid", valueFields1)