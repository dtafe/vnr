@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@using System.Collections
@model HRM.Presentation.Category.Models.CatLateEarlyRuleModel

@{
    ViewBag.Title = "CatLeaveDayTypeInfo";
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
}
<script>
    var data = SetCharacteFieldRequired();

    function onSave() {
        if (CheckValidate(data)) {
            onSaveAndContinue($('#form_Cat_LateEarlyRule'), '@_hrm_Hr_Service', 'api/CatLateEarlyRule/', 'grid_Cat_LateEarlyRule', 'windowCatLateEarlyRule');
        }
        return false;
    }

    function onSaveClose() {
        if (CheckValidate(data)) {
            onSaveAndClose($('#form_Cat_LateEarlyRule'), '@_hrm_Hr_Service', 'api/CatLateEarlyRule/', 'grid_Cat_LateEarlyRule', 'windowCatLateEarlyRule');
        }
        return false;
    }
    function onSaveDataPopUp() {
        
        if (CheckValidate(data)) {
          
                onlySave($('#form_Cat_LateEarlyRule'), '@_hrm_Hr_Service', 'api/CatLateEarlyRule/', 'grid_Cat_LateEarlyRule'); return false;
           
        }
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Cat_LateEarlyRule" }))
{
    @Html.HiddenFor(model => model.ID)
     

     <table>
        <tr>
            <td>
                <div id="div2">
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.GradeCfgName)
                    </div>
                    <div class="FieldValue">
                        @*@{
                IEnumerable valueGrade = new string[] { };
                if(Model!=null){
                    valueGrade = new[] { new { Id = Model.GradeCfgID } };
                }
                }*@
                        @{
    var _CatGradeId = new MultiSelectBuilderInfo()
    {
        DataTextField = "GradeCfgName",
        DataValueField = "ID",
        Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiCatGrade",
        Placeholder = ConstantDisplay.HRM_Category_SelectGradeAttendance.TranslateString(),
        Autobind = true,
        MaxSelectedItems = 1,
        Value = new string[] { @Html.DisplayFor(m => m.GradeCfgID).ToString() }
    };
                        }
                        @(Html.VnrMultiSelectFor(mode => mode.GradeCfgID, _CatGradeId))
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div4">
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.MinValue)
                    </div>
                    <div class="FieldValue">
                        @{

    var MinValue = new NumericTextBoxBuilderInfo<double>() { 
        Format = "n0"
    };
                        }
                        @(Html.VnrNumericTextBoxFor(model => model.MinValue, MinValue))
                        @*@(Html.Kendo().NumericTextBoxFor(model => model.PaidRate))*@
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div5">
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.MaxValue)
                    </div>
                    <div class="FieldValue">
                        @{

    var MaxValue = new NumericTextBoxBuilderInfo<double>() { 
        Format = "n0"
    };
                        }
                        @(Html.VnrNumericTextBoxFor(model => model.MaxValue, MaxValue))
                        @*@(Html.Kendo().NumericTextBoxFor(model => model.SocialRate))*@
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div4">
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.RoundValue)
                    </div>
                    <div class="FieldValue">
                        @{

    var RoundValue = new NumericTextBoxBuilderInfo<double>() { 
        Format = "n0"
    };
                        }
                        @(Html.VnrNumericTextBoxFor(model => model.RoundValue, RoundValue))
                        @*@(Html.Kendo().NumericTextBoxFor(model => model.PaidRate))*@
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.Comment)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Comment)
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle">
                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-LateEaryRule", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-catLateEarlyRule", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-catLateEarlyRule", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>

            </td>
        </tr>
 </table>
}


