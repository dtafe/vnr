@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Recruitment.Models
@model Rec_RecCostDetailModel

@{
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    IList<SelectListItem> lstStatus = Enum.GetValues(typeof(RecruitmentCampaignStatus))
        .Cast<RecruitmentCampaignStatus>()
        .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) }).OrderBy(p => p.Text)
        .ToList();
    var userId = Session[SessionObjects.UserId];
}
<script>
    SetFieldRequired();

    function onSaveClose() {
        $("#UserID").val('@userId');
        $("#RecCampaignID").val($("#RecruitmentCampaign_ID").val());
        onSaveAndClose($('#form_Rec_RecCostDetail'), '@_hrm_Hre_Service', 'api/Rec_RecCostDetail/', 'grid_Rec_RecCostDetail', '@ConstantControlName.HRM_Rec_RecCostDetail_PopUp_Name');
        return false;
    }

    function onSaveDataPopUp() {
        $("#UserID").val('@userId');
        $("#RecCampaignID").val($("#RecruitmentCampaign_ID").val());
        onlySave($('#form_Rec_RecCostDetail'), '@_hrm_Hre_Service', 'api/Rec_RecCostDetail/', 'grid_Rec_RecCostDetail');
        return false;
    }
</script>
<style>
    label {
        min-width: 100px;
    }
</style>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Rec_RecCostDetail" }))
{
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.RecCampaignID)
    @Html.HiddenFor(model => model.UserID)
    <div>
        <table style="width:100%">
            <tr>
                <td>
                    <div style="display:block">
                            <div>
                                <div class="FieldTitle150 ">
                                    @Html.VnrLabelFor(mode => mode.CostName)
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrTextBoxFor(mode => mode.CostName, "width: 300px")
                                </div>
                            </div>
                            <div>
                                <div class="FieldTitle150 ">
                                    @Html.VnrLabelFor(mode => mode.Amount)
                                </div>
                                <div class="FieldValue">
                                    @{
    var Amount = new NumericTextBoxBuilderInfo<double>()
    {
        StyleCss = "width:150px",
        Format = ConstantFormat.HRM_Format_Money

    };

                                    }
                                    @Html.VnrNumericTextBoxFor(mode => mode.Amount, Amount).Value(Model != null && Model.Amount.HasValue ? Model.Amount.Value : 0)
                                </div>
                            </div>
                            <div>
                                <div class="FieldTitle150 ">
                                    @Html.VnrLabelFor(mode => mode.Description)
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrTextAreaFor(model => model.Description)
                                </div>
                            </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td style="padding-top:2px; padding-bottom:10px;">
                    <div class="LineFooterCommandEdit">
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div>
                        <div class="FieldTitle150 ">
                        </div>
                        <div class="FieldValue">
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-Rec_RecCostDetail", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-Rec_RecCostDetail", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        </div>

                    </div>
                </td>
            </tr>
        </table>
    </div>
}

