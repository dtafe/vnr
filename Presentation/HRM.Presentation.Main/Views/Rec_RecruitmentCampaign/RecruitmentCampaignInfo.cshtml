@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Recruitment.Models
@model Rec_RecruitmentCampaignModel

@{
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    IList<SelectListItem> lstStatus = Enum.GetValues(typeof(RecruitmentCampaignStatus))
        .Cast<RecruitmentCampaignStatus>()
        .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) }).OrderBy(p => p.Text)
        .ToList();
}
<script>
    SetFieldRequired();


    function onSave() {
        onSaveAndContinue($('#form_Rec_RecruitmentCampaign'), '@_hrm_Hre_Service', 'api/Rec_RecruitmentCampaign/', '@ConstantControlName.HRM_grid_Rec_gridRecruitmentCampaign_Grid_Name', '@ConstantControlName.HRM_grid_Rec_gridRecruitmentCampaign_PopUp_Name');
        return false;
    }

    function onSaveClose() {
        onSaveAndClose($('#form_Rec_RecruitmentCampaign'), '@_hrm_Hre_Service', 'api/Rec_RecruitmentCampaign/', '@ConstantControlName.HRM_grid_Rec_gridRecruitmentCampaign_Grid_Name', '@ConstantControlName.HRM_grid_Rec_gridRecruitmentCampaign_PopUp_Name');
        return false;
    }

    function onSaveDataPopUp() {

        onlySave($('#form_Rec_RecruitmentCampaign'), '@_hrm_Hre_Service', 'api/Rec_RecruitmentCampaign/', '@ConstantControlName.HRM_grid_Rec_gridRecruitmentCampaign_Grid_Name');
        return false;
    }
</script>
<style>
    label {
        min-width: 100px;
    }
</style>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Rec_RecruitmentCampaign" }))
{
    @Html.HiddenFor(model => model.ID)
    <div>
        <table style="width:100%">
            <tr>
                <td>
                    <div style="display:block">
                        <fieldset>
                            <legend>
                                @ConstantDisplay.HRM_Rec_RecruitmentCampaign.TranslateString()
                            </legend>

                            <div style="float:left; width:50%">
                                <div>
                                    <div class="FieldTitle150 ">
                                        @Html.VnrLabelFor(mode => mode.RecruitmentCampaignName)
                                    </div>
                                    <div class="FieldValue">
                                        @Html.VnrTextBoxFor(mode => mode.RecruitmentCampaignName, "width: 300px")
                                    </div>
                                </div>
                                <div>
                                    <div class="FieldTitle150 ">
                                        @Html.VnrLabelFor(mode => mode.DateStart)
                                    </div>
                                    <div class="FieldValue">
                                        @{
    var txtDateStart = new DatePickerBuilderInfo()
    {
        StyleCss = "width:120px",
        Format = ConstantFormat.HRM_Format_DayMonthYear,
    };
                                        }
                                        @Html.VnrDatePickerFor(mode => mode.DateStart, txtDateStart)
                                    </div>
                                </div>
                                <div>
                                    <div class="FieldTitle150 ">
                                        @Html.VnrLabelFor(mode => mode.DateEnd)
                                    </div>
                                    <div class="FieldValue">
                                        @{
    var txtDateEnd = new DatePickerBuilderInfo()
    {
        StyleCss = "width:120px",
        Format = ConstantFormat.HRM_Format_DayMonthYear,
    };
                                        }
                                        @Html.VnrDatePickerFor(mode => mode.DateEnd, txtDateEnd)
                                    </div>
                                </div>
                                <div>
                                    <div class="FieldTitle150 ">
                                        @Html.VnrLabelFor(mode => mode.Budget)
                                    </div>
                                    <div class="FieldValue">
                                        @{
    var Budget = new NumericTextBoxBuilderInfo<double>()
    {
        StyleCss = "width:150px",
        Format = ConstantFormat.HRM_Format_Money

    };

                                        }
                                        @Html.VnrNumericTextBoxFor(mode => mode.Budget, Budget).Value(Model != null && Model.Budget.HasValue ? Model.Budget.Value : 0)
                                    </div>
                                </div>
                                <div>
                                    <div class="FieldTitle150 ">
                                        @Html.VnrLabelFor(mode => mode.SalaryMinBudget)
                                    </div>
                                    <div class="FieldValue">
                                        @{
    var SalaryMinBudget = new NumericTextBoxBuilderInfo<double>()
    {
        StyleCss = "width:150px",
        Format = ConstantFormat.HRM_Format_Money

    };
                                        }
                                        @Html.VnrNumericTextBoxFor(mode => mode.SalaryMinBudget, SalaryMinBudget).Value(Model != null && Model.SalaryMinBudget.HasValue ? Model.SalaryMinBudget.Value : 0)
                                    </div>
                                </div>
                                <div>
                                    <div class="FieldTitle150 ">
                                        @Html.VnrLabelFor(mode => mode.SalaryMaxBudget)
                                    </div>
                                    <div class="FieldValue">
                                        @{
    var SalaryMaxBudget = new NumericTextBoxBuilderInfo<double>()
    {
        StyleCss = "width:150px",
        Format = ConstantFormat.HRM_Format_Money

    };
                                        }
                                        @Html.VnrNumericTextBoxFor(mode => mode.SalaryMaxBudget, SalaryMaxBudget).Value(Model != null && Model.SalaryMaxBudget.HasValue ? Model.SalaryMaxBudget.Value : 0)
                                    </div>
                                </div>

                            </div>

                            <div style="float:left; width:50%">
                                <div>
                                    <div class="FieldTitle150 ">
                                        @Html.VnrLabelFor(mode => mode.SalaryCampaignBudget)
                                    </div>
                                    <div class="FieldValue">
                                        @{
    var SalaryCampaignBudget = new NumericTextBoxBuilderInfo<double>()
    {
        StyleCss = "width:150px",
        Format = ConstantFormat.HRM_Format_Money

    };
                                        }
                                        @Html.VnrNumericTextBoxFor(mode => mode.SalaryCampaignBudget, SalaryCampaignBudget).Value(Model != null && Model.SalaryCampaignBudget.HasValue ? Model.SalaryCampaignBudget.Value : 0)
                                    </div>
                                </div>
                                <div>
                                    <div class="FieldTitle150 ">
                                        @Html.VnrLabelFor(mode => mode.SalaryCurrentBudget)
                                    </div>
                                    <div class="FieldValue">
                                        @{
    var SalaryCurrentBudget = new NumericTextBoxBuilderInfo<double>()
    {
        StyleCss = "width:150px",
        Format = ConstantFormat.HRM_Format_Money

    };
                                        }
                                        @Html.VnrNumericTextBoxFor(mode => mode.SalaryCurrentBudget, SalaryCurrentBudget).Value(Model != null && Model.SalaryCurrentBudget.HasValue ? Model.SalaryCurrentBudget.Value : 0)
                                    </div>
                                </div>

                                <div>
                                    <div class="FieldTitle150 ">
                                        @Html.VnrLabelFor(mode => mode.Status)
                                    </div>
                                    <div class="FieldValue">
                                        @{
    var Status = new DropDownListBuilderInfo()
    {
        DataTextField = "Text",
        DataValueField = "Value",
        StyleCss = "width:300px",
        BindTo = lstStatus,
        OptionLabel = ConstantDisplay.HRM_Category_SelectStatus.TranslateString(),

    };
                                        }
                                        @Html.VnrDropDownListFor(mode => mode.Status, Status).Value(Model != null && !string.IsNullOrEmpty(Model.Status) ? Model.Status : null)
                                    </div>
                                </div>

                                <div>
                                    <div class="FieldTitle150 ">
                                        @Html.VnrLabelFor(mode => mode.Source)
                                    </div>
                                    <div class="FieldValue">
                                        @Html.VnrTextBoxFor(model => model.Source, "width: 300px")
                                    </div>
                                    <div style="clear: both;"></div>
                                </div>
                            </div>

                            <div>
                                <div class="FieldTitle150 ">
                                    @Html.VnrLabelFor(mode => mode.Description)
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrTextAreaFor(model => model.Description, "width: 780px; height:100px;")
                                </div>
                                <div style="clear: both;"></div>
                            </div>
                        </fieldset>
                    </div>
                </td>
            </tr>
            <tr>
                <td style="padding-top:2px; padding-bottom:10px;">
                    <div class="LineFooterCommandEdit">
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div>
                        <div class="FieldTitle150 ">

                        </div>
                        <div class="FieldValue">
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-RecruitmentCampaign", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-RecruitmentCampaign", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-RecruitmentCampaign", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        </div>

                    </div>
                </td>
            </tr>
        </table>
    </div>
}

