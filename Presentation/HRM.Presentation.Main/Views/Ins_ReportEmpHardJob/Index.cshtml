@using HRM.Infrastructure.Utilities
@using HRM.Infrastructure.Security
@using HRM.Presentation.Insurance.Models
@using HRM.Presentation.Main.Controllers
@using HRM.Presentation.UI.Controls.Kendo
@model Ins_ReportEmpHardJobSearchModel

@{
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var controller = ViewContext.RouteData.Values["Controller"].ToString();
    var action = ViewContext.RouteData.Values["Action"].ToString();
    var screen = controller + "/" + action;
    Layout = null;

}
@Html.Hidden("Screen", screen)

<style>
    .k-state-selected {
        color: #fff !important;
        background-color: #5A83B1 !important;
        border-color: #5A83B1 !important;
    }
</style>
<script>
    SetFieldRequired();
    var checkedNodes = [];
    var isCreateTemplate = false;
    var isCreateTemplateForDynamicGrid = false;
    function filterFieldInfo(isExport) {

        checkedNodes = [];
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes);

        var dataParameter = {
            DateFrom: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateFrom").val()),
            DateTo: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateTo").val()),
            OrgStructureID: checkedNodes.join(','),
            IsExport: isExport,
            ValueFields: $('#valueFieldsGrid').val(),
            IsCreateTemplate: isCreateTemplate,
            IsCreateTemplateForDynamicGrid: isCreateTemplateForDynamicGrid,
        };
        if (isExport == true) {
            dataParameter["ExportId"] = $('#ddlScreenName').val();
        }
        return dataParameter;
    }
    $(document).ready(function () {
        //Xử lý sự kiện click button tìm kiếm
        //$("#btnSearch").click(function () {

        //    isCreateTemplate = false;
        //    isCreateTemplateForDynamicGrid = false;
        //    var grid = $('#gridIns_ReportEmpHardJob').data("kendoGrid");
        //    grid.dataSource.read();
        //    selectedIds = [];

        //});
        //ShowHidePanel();

        //var treeView = $("#treeviewOrg").data("kendoTreeView");
        //checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes);
        //ReadGrid(gridName);
        //selectedIds = [];
        //checkedNodes = [];
        //return false;


        //@*EditGridNewPage("gridHre_Profile", '#Hrm_Hre_Web/Hre_Profile/Edit/', 'Hrm_Hre_Web', '@_hrm_Main_Web');*@
    });

    $("#btnSearch").click(function () {
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes)


        //validate
        var isactive = true;
        $.ajax({
            type: 'POST',
            url: '@_hrm_Hr_Service' + 'Ins_GetData/ReportEmpHardJobListValidate',
            data: filterFieldInfo(),
            dataType: 'json',
            async: false,
            success: function (data) {
                if (data[0] == "error") {
                    ShowNotificationProcessor(data[1]);
                    isactive = false;
                    return isactive;
                }
            }
        });
        if (isactive == false) {
            CloseHre_ProgressBar();
            return;
        }


        ShowHre_ProgressBar()
            $.ajax({
                url: '@_hrm_Hr_Service' + "Ins_GetData/GetReportEmpHardJobList",
                data: filterFieldInfo(false),
                type: 'POST',
                datatype: 'json',
                success: function (data) {
                    var grid = VnrGridDynamic;
                    grid.gridName = "gridIns_ReportEmpHardJob";
                    grid.DataSource = data.Data;
                    grid.PageSize = 50;
                    VnrGridDynamicControl(grid);
                    CloseHre_ProgressBar();
                }
            });
    });

    $("#btnExport").click(function () {
        var isAccess = checkPermission(PrivilegeType.Export, '@ConstantPermission.Ins_ReportEmpHardJob');
        if (!isAccess) {
            return;
        }
        if ($('#ddlScreenName').val() == "") {
            ExportFail();
            return;
        }

        var urlGetData = '@_hrm_Hr_Service' + '/Ins_GetData/GetReportEmpHardJobList';
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo(true);
        ExportAll(urlGetData, dataParameter, urlDownload);
    });
    $("#btnCreateTemplate").click(function () {

        isCreateTemplate = true;
        isCreateTemplateForDynamicGrid = true;
        CreateTemplate('@_hrm_Hr_Service' + '/Ins_GetData/GetReportEmpHardJobList', filterFieldInfo(true));
    });
</script>
<div id="grid_Demo"></div>

<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            <div class="contendSearchWidge" style="overflow:visible">
                <div>

                    <div class="hrm_box">
                        <div>
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.DateFrom)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var dateFrom = new DatePickerBuilderInfo()
                                    {
                                        StyleCss = "width:100px;",
                                        Placeholder = ConstantDisplay.HRM_HR_Profile_DateFrom.TranslateString(),
                                    };
                                }
                                @Html.VnrDatePickerFor(model => model.DateFrom, dateFrom).Format(ConstantFormat.HRM_Format_MonthYear)
                                @{
                                    var dateTo = new DatePickerBuilderInfo()
                                    {
                                        StyleCss = "width:100px;",
                                        Placeholder = ConstantDisplay.HRM_HR_Profile_DateTo.TranslateString(),
                                    };
                                }
                                @Html.VnrDatePickerFor(model => model.DateTo, dateTo).Format(ConstantFormat.HRM_Format_MonthYear)
                            </div>
                        </div>
                         <div>
                             <div class="FieldTitle150">
                                 @Html.VnrLabelFor(mode => mode.OrgStructureID)
                             </div>
                            <div class="FieldValue">
                                 @{
                                var org = new TreeViewDropdDownBuilderInfo()
                                {
                                    Width = "220px",
                                    Name = "treeviewOrg",
                                };
                            }
                            @Html.Partial("EditorTemplates/OrgTreeViewDropDown", org)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="commandToolBarWidge">
    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    <div style="float:right">
        <script>
            function GetScreenName() {
                return {
                    screenName: '@screen'
                };
            }
        </script>
        <div class="FieldValue" style="margin-top: 0;">
            @{
                var screenName = new DropDownListBuilderInfo()
                {
                    Name = "ddlScreenName",
                    DataTextField = "ExportName",
                    DataValueField = "ID",
                    Url = @_hrm_Hr_Service + "Cat_GetData/GetScreenName",
                    Data = "GetScreenName",
                };
            }
            @Html.VnrDropDownList(screenName)
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport", Content = ConstantAction.HRM_Common_ExportReport.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateTemplate", Content = ConstantAction.HRM_Common_CreateTemplate.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
        </div>
    </div>
</div>
<div id="gridIns_ReportEmpHardJob">

</div>