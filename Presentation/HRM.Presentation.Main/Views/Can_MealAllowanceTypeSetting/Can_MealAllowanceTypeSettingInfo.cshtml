@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using System.Collections
@model HRM.Presentation.Canteen.Models.Can_MealAllowanceTypeSettingModel

@{
    Layout = null;
    var _hrm_Can_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var mealAllowanceTypeSettingId = Model == null ? Guid.Empty : Model.ID;
}
<script>
    var data = SetCharacteFieldRequired();

    function checkDuplicationMealAllowanceTypeSetting() {
         
        var code = $("#MealAllowanceTypeSettingCode").val();
        var id = '@mealAllowanceTypeSettingId';
        var data = { tableName: "Can_MealAllowanceTypeSetting", columnName: "MealAllowanceTypeSettingCode", keyword: code, id: id };

        var isduplicate = checkDuplicate('@_hrm_Sys_Service', 'Sys_GetData', 'CheckDuplicate', data, "MealAllowanceTypeSettingCode");
        return isduplicate;
    }

    function onSaveNew() {
         
        if (CheckValidate(data)) {
            if (!checkDuplicationMealAllowanceTypeSetting()) {
                onSaveAndContinue($('#form_can_MealAllowance'), '@_hrm_Can_Service', 'api/Can_MealAllowanceTypeSetting/', '@ConstantControlName.HRM_Canteen_MealAllowanceTypeSetting_Grid_Name', '@ConstantControlName.HRM_Canteen_MealAllowanceTypeSetting_PopUp_Name'); return false;
            }
        }
    }

    function onSaveClose() {
         
        if (CheckValidate(data)) {
            if (!checkDuplicationMealAllowanceTypeSetting()) {
                onSaveAndClose($('#form_can_MealAllowance'), '@_hrm_Can_Service', 'api/Can_MealAllowanceTypeSetting/', '@ConstantControlName.HRM_Canteen_MealAllowanceTypeSetting_Grid_Name', '@ConstantControlName.HRM_Canteen_MealAllowanceTypeSetting_PopUp_Name'); return false;
            }
        }
    }
    function onSaveDataPopUp() {
         
        if (CheckValidate(data)) {
            if (!checkDuplicationMealAllowanceTypeSetting()) {
                onlySave($('#form_can_MealAllowance'), '@_hrm_Can_Service', 'api/Can_MealAllowanceTypeSetting/', '@ConstantControlName.HRM_Canteen_MealAllowanceTypeSetting_Grid_Name'); return false;
            }
        }
    }
</script>
@*<script>
    var data = SetCharacteFieldRequired();
    function onSaveNew() {
         
        if (CheckValidate(data)) {
            onSaveAndContinue($('#form_can_MealAllowance'), '@_hrm_Can_Service', 'api/Can_MealAllowanceTypeSetting/', '@ConstantControlName.HRM_Canteen_MealAllowanceTypeSetting_Grid_Name', '@ConstantControlName.HRM_Canteen_MealAllowanceTypeSetting_PopUp_Name'); return false;
        }
    }

    function onSaveClose() {
        if (CheckValidate(data)) {
            onSaveAndClose($('#form_can_MealAllowance'), '@_hrm_Can_Service', 'api/Can_MealAllowanceTypeSetting/', '@ConstantControlName.HRM_Canteen_MealAllowanceTypeSetting_Grid_Name', '@ConstantControlName.HRM_Canteen_MealAllowanceTypeSetting_PopUp_Name'); return false;
        }
    }


    //$("#CardCode").attr('readonly', true);
    @*function select(e) {
        var dataItem = $("#ProfileID").data("kendoMultiSelect");
        var rs = dataItem.value();
        $.ajax({
            url: '@_hrm_Hre_Service' + 'Hre_GetData/GetCardCodeByProfileID',
            data: { id: rs[0] },
            type: 'POST',
            success: function (data) {
                 
                $("#CardCode").val(data);
            }
        });

    };
   
</script>*@
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_can_MealAllowance" }))
{
    @Html.HiddenFor(model => model.ID)   
    
    <div id="div2">
            <div class="FieldTitle150">
                @Html.VnrLabelFor(mode => mode.MealAllowanceTypeSettingName)
            </div>
            <div class="FieldValue">
                @Html.VnrTextBoxFor(model => model.MealAllowanceTypeSettingName, "width:300px")
            </div>
            <div style="clear: both;"></div>
    </div>
    <div id="div3">
        <div class="FieldTitle150">
            @Html.VnrLabelFor(mode => mode.MealAllowanceTypeSettingCode)
        </div>
        <div class="FieldValue">
            @Html.VnrTextBoxFor(model => model.MealAllowanceTypeSettingCode, "width:300px")
        </div>
        <div style="clear: both;"></div>
    </div>
    <div>
        <div class="FieldTitle150">
            @Html.VnrLabelFor(mode => mode.DateFrom)
        </div>
        <div class="FieldValue">
            @{
            var _DateFrom = new DatePickerBuilderInfo()
            {
                Placeholder = ConstantDisplay.HRM_Attendance_DateFrom.TranslateString(),
                StyleCss = "width:120px;",
                Name = "MealAllowanceTypeSetting_DateFrom"
               
            };
            }
              @Html.VnrDatePickerFor(model => model.DateFrom, _DateFrom)
        </div>
    </div>
      <div>
        <div class="FieldTitle150">
            @Html.VnrLabelFor(mode => mode.DateTo)
        </div>
        <div class="FieldValue">
            @{
                var _DateTo = new DatePickerBuilderInfo()
                {
                    Placeholder = ConstantDisplay.HRM_Attendance_DateTo.TranslateString(),
                    StyleCss = "width:120px;",
                    Name = "MealAllowanceTypeSetting_DateTo"
                   
                };
            }
              @Html.VnrDatePickerFor(model => model.DateTo, _DateTo)
        </div>
    </div>
    <script>
        //$("#HideDate").click(function () {
        //    var r = confirm("Bạn có muốn mở ngày để chọn!");
        //    if (r == true) {
        //        var dateFrom = $("#DateFrom").data("kendoDatePicker");
        //        var dateTo = $("#DateTo").data("kendoDatePicker");
        //        dateFrom.enable(true);
        //        dateTo.enable(true);
        //    }
        //});
        //$('#HideDate').click(function () {
        //    var dateFrom = $("#DateFrom").data("kendoDatePicker");
        //    var dateTo = $("#DateTo").data("kendoDatePicker");
        //    if ($(this).is(':checked')) {
        //        var r = confirm("Bạn có muốn mở ngày để chọn!");
        //        if (r == true) {                 
        //            dateFrom.enable(true);
        //            dateTo.enable(true);                 
        //        }
        //    } else {            
        //        dateFrom.enable(false);
        //        dateTo.enable(false);
             
        //    }
           
        //});  
    </script>
    <div id="div3">
        <div class="FieldTitle150">
            @Html.VnrLabelFor(mode => mode.Amount)
        </div>
        <div class="FieldValue">
            @{
                var numericTextBoxAmount = new NumericTextBoxBuilderInfo<double>()
                {
                    StyleCss = "width:150px;",                    
                    Format = "n0",
                    Name = "MealAllowanceTypeSetting_Amount"
                }; 
            }
            @Html.VnrNumericTextBoxFor(model => model.Amount, numericTextBoxAmount)
        </div>
        <div style="clear: both;"></div>
    </div>
    
    <div id="div3">
        <div class="FieldTitle150">
            @Html.VnrLabelFor(mode => mode.IsMealAllowanceToMoney)
        </div>
        <div class="FieldValue">
            @Html.VnrCheckBoxFor(mode => mode.IsMealAllowanceToMoney)
        </div>
    </div>
    

    <div id="div5">
        <div class="FieldTitle150">
            @Html.VnrLabelFor(mode => mode.Note)
        </div>
        <div class="FieldValue">
            @Html.VnrTextAreaFor(model => model.Note, "width:500px;height:100px;")
        </div>
        <div style="clear: both;"></div>
    </div>
     <div id="div5">
            <div style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </div>
      </div>
    <div>
        <div class="FieldTitle150"></div>
        <div class="FieldValue">
            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-canMealAllowanceTypeSetting", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveNew", Name = "save-New-canMealAllowanceTypeSetting", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-canMealAllowanceTypeSetting", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
        </div>
    </div>
}
