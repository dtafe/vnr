
@using HRM.Infrastructure.Security;

@using HRM.Infrastructure.Utilities;
@model HRM.Presentation.Canteen.Models.Can_MealAllowanceTypeSettingModel
@{
    ViewBag.Title = HRM.Infrastructure.Utilities.ConstantDisplay.HRM_Canteen_MealAllowanceTypeSetting_Title.TranslateString();
    Layout = null;
    var _hrm_Can_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Can_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;   
}
@{
    var window = new WindowBuilderInfo // Cấu hình Popup
    {
        Name = ConstantControlName.HRM_Canteen_MealAllowanceTypeSetting_PopUp_Name,
        Visible = false,
        Width=700,
        //Title = ConstantDisplay.HRM_Canteen_MealAllowanceTypeSetting_Title.TranslateString(),
        LoadContentFrom = @_hrm_Can_Web + "Can_MealAllowanceTypeSetting/Can_MealAllowanceTypeSettingInfo/",
    };
}
@(Html.VnrWindow(window))
<script type="text/javascript">
    var checkedNodes = [];
     
    var gridName = '@ConstantControlName.HRM_Canteen_MealAllowanceTypeSetting_Grid_Name';
    var popUpName = '@ConstantControlName.HRM_Canteen_MealAllowanceTypeSetting_PopUp_Name';
    var titleEditPopUp = '@Html.Raw(ConstantDisplay.HRM_Canteen_MealAllowanceTypeSetting_PopUp_Edit_Title.TranslateString())';
    var titleCreatePopUp = '@Html.Raw(ConstantDisplay.HRM_Canteen_MealAllowanceTypeSetting_PopUp_Create_Title.TranslateString())';
    //Data khi tìm kiếm
    function filterFieldInfo(isExport) {

        return {
            MealAllowanceTypeSettingName: $('#SMealAllowanceTypeSettingName').val(),
            MealAllowanceTypeSettingCode: $('#SMealAllowanceTypeSettingCode').val(),
            IsExport: isExport,
            ValueFields: $('#valueFieldsGrid').val()
        };
    }

    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        $("#btnSearch").click(function () {
            //var grid = $(gridName).data("kendoGrid");
            //grid.dataSource.read();
            //selectedIds = [];

            ReadGrid(gridName);
        });
        @*var isAccess = checkPermission(PrivilegeType.Modify , '@ConstantPermission.Can_MealAllowanceTypeSetting');
        if (!isAccess) {
            return;
        }*@
        //EditGridNewPage(gridName, '#Hrm_Can_Web/Can_MealAllowanceTypeSetting/Edit/', 'Hrm_Can_Web', '@_hrm_Can_Web');
        //$("#btnSearch").click(function () {
        //
        //    ReadGrid(gridName);
        //});
        @*var isAccess = checkPermission(PrivilegeType.Modify, '@ConstantPermission.Can_MealAllowanceTypeSetting');
        if (!isAccess) {
            return;
        }*@
        var url = '@_hrm_Can_Web' + "Can_MealAllowanceTypeSetting/Can_MealAllowanceTypeSettingInfo/";
        EditGridPopUp(gridName, popUpName, url,'@ConstantPermission.Can_MealAllowanceTypeSetting', titleEditPopUp);
    });

    //Xử lý Create
    $("#btnCreate").click(function () {
        @*var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Can_MealAllowanceTypeSetting');
        if (!isAccess) {
            return;
        }*@
        PopUpCreate(popUpName, titleCreatePopUp, '@ConstantPermission.Can_MealAllowanceTypeSetting');
        // KendoRouteMapping('#Hrm_Can_Web/Can_MealAllowanceTypeSetting/Create/', 'Hrm_Can_Web', '@_hrm_Can_Web');
    });

    //Xử Lý grid
    GridCheckbox(gridName);
    //Xử lý Edit popup


    //Xử Lý button delete
    $('#btnDelete').click(function (e) {
        @*var isAccess = checkPermission(PrivilegeType.Delete, '@ConstantPermission.Can_MealAllowanceTypeSetting');
        if (!isAccess) {
            return;
        }*@
        if (selectedIds == "") {
            DeleteFail();
            return;
        }
        e.preventDefault();
        DeleteSelected(gridName, '@_hrm_Can_Web' + "Can_MealAllowanceTypeSetting/RemoveSelected/", selectedIds.join(","), '@ConstantPermission.Can_MealAllowanceTypeSetting');
        return false;
    });


    $(document).ready(function () {
        ShowHidePanel();
    });
    $("#btnExportAll").click(function () {
        @*var isAccess = checkPermission(PrivilegeType.Export, '@ConstantPermission.Can_MealAllowanceTypeSetting');
        if (!isAccess) {
            return;
        }*@
        var grid = $('#' + gridName).data("kendoGrid");
        var count = grid.dataSource._data.toJSON().length;
        if (count == 0) {
            ExportAllFail();
            return;
        }
        var urlGetData = '@_hrm_Can_Service' + "Canteen_GetData/ExportMealAllowanceTypeSetting/";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo(true);

        ExportAll(urlGetData, dataParameter, urlDownload, '@ConstantPermission.Can_MealAllowanceTypeSetting');
        checkedNodes = [];
        selectedIds = [];
    });
    @*$("#btnExportSelected").click(function () {
        if (selectedIds == "") {
            ExportSelectedFail();
            return;
        }
        var urlGetData = '@_hrm_Can_Service' + "Can_GetData/ExportSelected/";
        var urlDownload = '@_hrm_Main_Web';
        var listIds = selectedIds.join(",");
        var listFields = $('#valueFieldsGrid').val();

        ExportSelected(urlGetData, listIds, listFields, urlDownload);
    });*@
</script>


<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->

            <div class="contendSearchWidge">
                <form id="form-search">
                    <div class="hrm_box">
                        <div id="dvProfileCode">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.MealAllowanceTypeSettingName)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextBox("SMealAllowanceTypeSettingName", "width:200px;")
                            </div>
                        </div>

                        <div id="dvProfileName">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.MealAllowanceTypeSettingCode)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextBox("SMealAllowanceTypeSettingCode", "width:200px;")
                            </div>
                        </div>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>
<div class="commandToolBarWidge">
    <div style="float:left">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreate", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    </div>
    <div style="float:right">
        @*<div class="btn-group">
            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" style="height:27px;font-size:12px">
                <span class="glyphicon glyphicon-list" style="height:27px;"></span>
                @ConstantDisplay.HRM_Common_ExportDropdown_Title.TranslateString()
            </button>
            <ul class="dropdown-menu pull-right" role="menu">
                <li>@Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExportSelected", Content = ConstantAction.HRM_Common_ExportSelected.TranslateString(), ImageUrl = ConstantPath.IconExportPath, CssStyle = "border:0" })</li>
                <li>@Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExportAll", Content = ConstantAction.HRM_Common_ExportAll.TranslateString(), ImageUrl = ConstantPath.IconExportPath, CssStyle = "border:0" })</li>
            </ul>
        </div>*@
       @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExportAll", Content = ConstantAction.HRM_Common_ExportAll.TranslateString(), ImageUrl = ConstantPath.IconExportPath, CssStyle = "border:0" })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
    </div>
    <div class="clear"></div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @using HRM.Presentation.Canteen.Models
    @using HRM.Presentation.UI.Controls.Kendo
    @{
        string[] valueFields = new string[]
        {
           Can_MealAllowanceTypeSettingModel.FieldNames.MealAllowanceTypeSettingCode,
            Can_MealAllowanceTypeSettingModel.FieldNames.MealAllowanceTypeSettingName,
            Can_MealAllowanceTypeSettingModel.FieldNames.DateFrom,
            Can_MealAllowanceTypeSettingModel.FieldNames.DateTo,
            Can_MealAllowanceTypeSettingModel.FieldNames.Amount,
            Can_MealAllowanceTypeSettingModel.FieldNames.IsMealAllowanceToMoney,
            
            //Can_MealAllowanceTypeSettingModel.FieldNames.DateCreate,
            //Can_MealAllowanceTypeSettingModel.FieldNames.DateUpdate,
            Can_MealAllowanceTypeSettingModel.FieldNames.Note,
            Can_MealAllowanceTypeSettingModel.FieldNames.UserCreate,
            Can_MealAllowanceTypeSettingModel.FieldNames.DateCreate,
        };
        Dictionary<string, int> sizeFields = new Dictionary<string, int>()
        {
          {Can_MealAllowanceTypeSettingModel.FieldNames.MealAllowanceTypeSettingCode,160},
            {Can_MealAllowanceTypeSettingModel.FieldNames.MealAllowanceTypeSettingName,160},
            {Can_MealAllowanceTypeSettingModel.FieldNames.DateFrom,100},
            {Can_MealAllowanceTypeSettingModel.FieldNames.DateTo,100},
            {Can_MealAllowanceTypeSettingModel.FieldNames.Amount,170},
            {Can_MealAllowanceTypeSettingModel.FieldNames.IsMealAllowanceToMoney,170},
            
            //{Can_MealAllowanceTypeSettingModel.FieldNames.DateCreate,80},
            //{Can_MealAllowanceTypeSettingModel.FieldNames.DateUpdate,80},
            {Can_MealAllowanceTypeSettingModel.FieldNames.Note,200},
            {Can_MealAllowanceTypeSettingModel.FieldNames.UserCreate,110},
            {Can_MealAllowanceTypeSettingModel.FieldNames.DateCreate,110},
        };

        Dictionary<string, string> displayFields = new Dictionary<string, string>()
        {
            {Can_MealAllowanceTypeSettingModel.FieldNames.MealAllowanceTypeSettingCode, ConstantDisplay.HRM_Canteen_MealAllowanceTypeSetting_MealAllowanceTypeSettingCode},
            {Can_MealAllowanceTypeSettingModel.FieldNames.MealAllowanceTypeSettingName, ConstantDisplay.HRM_Canteen_MealAllowanceTypeSetting_MealAllowanceTypeSettingName},
            {Can_MealAllowanceTypeSettingModel.FieldNames.DateFrom, ConstantDisplay.HRM_Canteen_MealAllowanceTypeSetting_DateFrom},
            {Can_MealAllowanceTypeSettingModel.FieldNames.DateTo, ConstantDisplay.HRM_Canteen_MealAllowanceTypeSetting_DateTo},
            {Can_MealAllowanceTypeSettingModel.FieldNames.Amount, ConstantDisplay.HRM_Canteen_MealAllowanceTypeSetting_Amount},
            {Can_MealAllowanceTypeSettingModel.FieldNames.IsMealAllowanceToMoney, ConstantDisplay.HRM_Canteen_MealAllowanceTypeSetting_IsMealAllowanceToMoney},
            //{Can_MealAllowanceTypeSettingModel.FieldNames.DateCreate, ConstantDisplay.HRM_Canteen_MealAllowanceTypeSetting_DateCreate},
            //{Can_MealAllowanceTypeSettingModel.FieldNames.DateUpdate, ConstantDisplay.HRM_Canteen_MealAllowanceTypeSetting_DateUpdate},
            {Can_MealAllowanceTypeSettingModel.FieldNames.Note, ConstantDisplay.HRM_Canteen_MealAllowanceTypeSetting_Notes},
            {Can_MealAllowanceTypeSettingModel.FieldNames.UserCreate, ConstantDisplay.HRM_Canteen_MealAllowanceTypeSetting_UserCreate},
            {Can_MealAllowanceTypeSettingModel.FieldNames.DateCreate, ConstantDisplay.HRM_Canteen_MealAllowanceTypeSetting_DateCreate},
            

        };
        Dictionary<string, string> formatFields = new Dictionary<string, string>()
        {
            {Can_MealAllowanceTypeSettingModel.FieldNames.Amount, ConstantFormat.HRM_Format_Int},
            //{Can_MealRecordModel.FieldNames.TimeLog, ConstantFormat.HRM_Format_DayMonthYear},
            //{Can_MealRecordModel.FieldNames.Hour, ConstantFormat.HRM_Format_HourMin_TT},
            //{Can_MealRecordModel.FieldNames.DateCreate, ConstantFormat.HRM_Format_DayMonthYear_HoursMin_TT},
        };
        var grid = new GridBuilderInfo
        {
            Name = ConstantControlName.HRM_Canteen_MealAllowanceTypeSetting_Grid_Name,
            ValueFields = valueFields,
            SizeFields = sizeFields,
            DisplayFields = displayFields,
            FormatFields = formatFields,
            ReadActionUrl = _hrm_Can_Service + "Canteen_GetData/GetMealAllowanceTypeSettingList/",
            ReadData = "filterFieldInfo"
        };
    }
    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<Can_MealAllowanceTypeSettingModel>(grid))
</div>
@{
    var valueFields1 = string.Empty;
    for (int i = 0; i < valueFields.Count(); i++)
    {
        valueFields1 += "," + valueFields[i];
    }
}
@Html.Hidden("valueFieldsGrid", valueFields1)