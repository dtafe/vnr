@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@using System.Collections
@using HRM.Presentation.Recruitment.Models
@model Rec_RelativeModel

@{
    Layout = null;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    IEnumerable lstNameEntity = null;
    var CandidateID = Guid.Empty;
    if (ViewData["CandidateID"] != null)
    {
       CandidateID = Common.ConvertToGuid(ViewData["CandidateID"].ToString());
    }
    if (Model != null)
    {
        lstNameEntity = new[] { new { NameEntityName = Model.RelationshipName, ID = Model.RelationshipID } };
        

    }
    if (Model != null && Model.CandidateID.HasValue)
    {
        CandidateID = Model.CandidateID.Value;
    }

}
<script>
    SetFieldRequiredByScreenName('Rec_Relative');
    function Setvalue() {
        $("#RelativeBranch_Type").val('@RelativeType.E_BRANCH.ToString()');
        $("#RelationshipID_1").val($("#Relative_RelationshipID").val());
        $("#CandidateID").val('@CandidateID');
        $("#RelativeBranch_CompanyName1").val($("#RelativeBranch_CompanyName").val());
        $("#RelativeBranch_RelativeName1").val($("#RelativeBranch_RelativeName").val());
        $("#RelativeBranch_DateOrBirth1").val($("#RelativeBranch_DateOrBirth").val());
    }
    $(document).ready(function () {
        $("#Type").val('@RelativeType.E_BRANCH.ToString()');
    })
    function onSave() {
        
        Setvalue();
        onSaveAndContinue($('#form_Rec_Relative'), '@_hrm_Hre_Service', 'api/Rec_Relative/', 'gridRelativeBranch', 'windowRelativeBranch');
    }

    function onSaveClose() {
        Setvalue();
        onSaveAndClose($('#form_Rec_Relative'), '@_hrm_Hre_Service', 'api/Rec_Relative/', 'gridRelativeBranch', 'windowRelativeBranch');
    }

    function onSaveDataPopUp() {
        Setvalue();
        onlySave($('#form_Rec_Relative'), '@_hrm_Hre_Service', 'api/Rec_Relative/', 'gridRelativeBranch');
    }
</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Rec_Relative" }))
{
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.Type, new { id = "RelativeBranch_Type" })
    @Html.HiddenFor(mode => mode.CandidateID)
    @Html.HiddenFor(mode => mode.CompanyName, new { id = "RelativeBranch_CompanyName1" })
    @Html.HiddenFor(mode => mode.RelativeName, new { id = "RelativeBranch_RelativeName1" })
    @Html.HiddenFor(mode => mode.DateOrBirth, new { id = "RelativeBranch_DateOrBirth1" })
    @Html.HiddenFor(model => model.RelationshipID, new { id = "RelationshipID_1" })
    <table>
        <tr>
            <td>
                <div style="display:block">
                    <div>
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.RelativeName)
                        </div>
                        <div class="FieldValue">
                            @{
                            var txtRelativeName = new TextBoxBuilderInfo()
                            {
                                Width=300,
                                Name = "RelativeBranch_RelativeName",
                                Value = Model != null ? Model.RelativeName : null
                            };
                            }
                            @Html.VnrTextBoxFor(mode => mode.RelativeName, txtRelativeName)
                        </div>

                        <div style="clear: both;"></div>
                    </div>

                    <div>
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.RelationshipID)
                        </div>
                        <div class="FieldValue">
                            @{
    var RelationshipID = new MultiSelectBuilderInfo()
    {

        Name = "Relative_RelationshipID",
        DataTextField = "NameEntityName",
        DataValueField = "ID",
        Url = @_hrm_Hre_Service + "Cat_GetData/GetMultiCatNameEntityByType?Type=" + HRM.Infrastructure.Utilities.EnumDropDown.EntityType.E_DEPENDANT_TYPE.ToString(),
        Placeholder = ConstantDisplay.HRM_HR_SelectRelativeType.TranslateString(),
        MaxSelectedItems = 1,
        Width = 300,
        Value = lstNameEntity
    };
                            }
                            @Html.VnrMultiSelectFor(mode => mode.RelationshipID, RelationshipID)
                        </div>
                    </div>

                    <div>
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.CompanyName)
                        </div>
                        <div class="FieldValue">
                            @{
                            var txtCompanyName = new TextBoxBuilderInfo()
                            {
                                Width = 300,
                                
                                Name = "RelativeBranch_CompanyName",
                                Value = Model != null ? Model.CompanyName : null
                            };
                            }
                            @Html.VnrTextBoxFor(mode => mode.CompanyName, txtCompanyName)
                        </div>

                        <div style="clear: both;"></div>
                    </div>
                    <div>
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.DateOrBirth)
                        </div>
                        <div class="FieldValue">
                            @Html.Kendo().MaskedTextBoxFor(model => model.DateOrBirth).Mask("0000").HtmlAttributes(new { style = "width:100px", id = "RelativeBranch_DateOrBirth" })
                        </div>

                        <div style="clear: both;"></div>
                    </div>

                </div>

            </td>

        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-RelativeBranch", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-RelativeBranch", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-RelativeBranch", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>

                </div>
            </td>
        </tr>
    </table>
}

