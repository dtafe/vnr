@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@model HRM.Presentation.Category.Models.CatDayOffModel
@using HRM.Presentation.Category.Models
@using System.Collections;
@{
    ViewBag.Title = "CatDayOff";
    Layout = null;
    //var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    //var _hrm_Hr_Service = ConstantPathWeb.Hrm_Sys_Service;

    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;

    var dateOff = string.Empty;
    var DateEnd = string.Empty;

    IList<SelectListItem> listDayOffType = Enum.GetValues(typeof(EnumDropDown.DayOffType))
   .Cast<EnumDropDown.DayOffType>()
   .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) }).OrderBy(p=>p.Text)
   .ToList();

    IList<SelectListItem> listLoopType = Enum.GetValues(typeof(EnumDropDown.LoopType))
    .Cast<EnumDropDown.LoopType>()
    .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) }).OrderBy(p=>p.Text)
    .ToList();
    IList<SelectListItem> listDaysOFWeeks = Enum.GetValues(typeof(EnumDropDown.DaysOFWeeks))
    .Cast<EnumDropDown.DaysOFWeeks>()
    .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) }).OrderBy(p=>p.Text)
    .ToList();

    IList<SelectListItem> listLoopNo = new List<SelectListItem>
                                    {
                                        new SelectListItem { Text = "1", Value = "1"},
                                        new SelectListItem { Text = "2", Value = "2"},
                                        new SelectListItem { Text = "3", Value = "3"},
                                    };

}
<script>


    var data = SetCharacteFieldRequired();
    SetFieldRequired();
    function onSave() {
        debugger;
        // xử lý lưu ngày theo định dang dd/MM/yy
        var currentDate = new Date();
        var year = currentDate.getFullYear();
        var getDateOff = $("#DateOff").val();
        var getDayStart = $("#DateStart").val();
        var getDayEnd = $("#DateEnd").val();
        if (getDateOff != '')
        {
            getDateOff = getDateOff + "/" + year;
            var _dateOff = ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', getDateOff);
            var _DateStart = ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', getDayStart)
            var _DateEnd = ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', getDayEnd)
            $("#Cat_DateOff").val(_dateOff);
            $("#Cat_DateStart").val(_DateStart);
            $("#Cat_DateEnd").val(_DateEnd);
        }
        else
        {
            var _DateStart = ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', getDayStart)
            var _DateEnd = ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', getDayEnd)
            $("#Cat_DateStart").val(_DateStart);
            $("#Cat_DateEnd").val(_DateEnd);
        }

        onSaveAndContinue($('#form_cat_dateoff'), '@_hrm_Hr_Service', 'api/CatDayOff/', 'grid_DayOff', 'windowCatDayOff');

        return false;
    }

    function changeLoopType() {
        
        var type = $('#@Html.FieldIdFor(model => model.LoopType)').val();
        var dow = $("#@Html.FieldIdFor(mode => mode.DaysOFWeeks)").data("kendoDropDownList");
        var lno = $("#@Html.FieldIdFor(mode => mode.LoopNo)").data("kendoDropDownList");
        var dof = $("#@Html.FieldIdFor(mode => mode.DateOff)").data("kendoDatePicker");
        //var dof = document.getElementById('DateOff');

        if (type == '@EnumDropDown.LoopType.E_DAY.ToString()') {
            dow.enable(false);
            lno.enable(false);
            dof.enable(false);
        } else if (type == '@EnumDropDown.LoopType.E_WEEK.ToString()') {
            dow.enable(true);
            lno.enable(true);
            dof.enable(false);
        } else if (type == '@EnumDropDown.LoopType.E_MONTH.ToString()') {
            dow.enable(false);
            lno.enable(false);
            dof.enable(true);
        } else if (type == '@EnumDropDown.LoopType.E_YEAR.ToString()') {
            dow.enable(false);
            lno.enable(true);
            dof.enable(true);
        }
    }

    function onSaveClose() {
        
        debugger;

        // xử lý lưu ngày theo định dang dd/MM/yy
        var currentDate = new Date();
        var year = currentDate.getFullYear();
        var getDateOff = $("#DateOff").val();
        var getDayStart = $("#DateStart").val();
        var getDayEnd = $("#DateEnd").val();
        if (getDateOff != '') {
            getDateOff = getDateOff + "/" + year;
            var _dateOff = ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', getDateOff);
            var _DateStart = ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', getDayStart);
            var _DateEnd = ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', getDayEnd);
            $("#Cat_DateOff").val(_dateOff);
            $("#Cat_DateStart").val(_DateStart);
            $("#Cat_DateEnd").val(_DateEnd);
        }
        else {
            var _DateStart = ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', getDayStart)
            var _DateEnd = ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', getDayEnd)
            $("#Cat_DateStart").val(_DateStart);
            $("#Cat_DateEnd").val(_DateEnd);
        }

        onSaveAndClose($('#form_cat_dateoff'), '@_hrm_Hr_Service', 'api/CatDayOff/', 'grid_DayOff', 'windowCatDayOff');

        return false;
    }
    function onSaveDataPopUp() {
        debugger;
        // xử lý lưu ngày theo định dang dd/MM/yy
        var currentDate = new Date();
        var year = currentDate.getFullYear();
        var getDateOff = $("#DateOff").val();
        var getDayStart = $("#DateStart").val();
        var getDayEnd = $("#DateEnd").val();
        if (getDateOff != '') {
            getDateOff = getDateOff + "/" + year;
            var _dateOff = ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', getDateOff);
            var _DateStart = ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', getDayStart);
            var _DateEnd = ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', getDayEnd);
            $("#Cat_DateOff").val(_dateOff);
            $("#Cat_DateStart").val(_DateStart);
            $("#Cat_DateEnd").val(_DateEnd);
        }
        else {
            var _DateStart = ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', getDayStart)
            var _DateEnd = ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', getDayEnd)
            $("#Cat_DateStart").val(_DateStart);
            $("#Cat_DateEnd").val(_DateEnd);
        }
        onlySave($('#form_cat_dateoff'), '@_hrm_Hr_Service', 'api/CatDayOff/', 'grid_DayOff'); return false;


    }

    $(document).ready(function () {
        document.getElementById('DaysOFWeeks').disabled = true;
        document.getElementById('LoopNo').disabled = true;
        document.getElementById('DateOff').disabled = true;
    });
</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_cat_dateoff" }))
{
    @Html.HiddenFor(model => model.ID)

    <div>
        @{
    if (Model != null)
    {
        @Html.HiddenFor(mode => mode.Cat_DateOff)
            @Html.HiddenFor(mode => mode.Cat_DateEnd)
    }
    else
    {
        @Html.HiddenFor(mode => mode.Cat_DateOff, dateOff)
            @Html.HiddenFor(mode => mode.Cat_DateEnd, DateEnd)
    }
        }
    </div>
    <table>
        <tr>
            <td>

                <div id="div6">
                    <div class="FieldTitle150" style="width: 135px;">
                        @Html.VnrLabelFor(mode => mode.OrgStructureID)
                    </div>
                    <div class="FieldValue">
                        @{
    var org = new TreeViewDropdDownBuilderInfo()
    {
        Value = Model == null ? string.Empty : Model.OrgStructureName,
        SetFieldID = "OrgStructureID",
        SetFieldName = "OrgStructureID",
        IsShowCheckBox = false,
    };
                        }
                        @Html.Partial("EditorTemplates/OrgTreeViewDropDown", org)
                        @Html.HiddenFor(model => model.OrgStructureID)
                        @Html.HiddenFor(model => model.OrgStructureName)
                    </div>
                </div>

                <div id="div13">
                    <div class="FieldTitle150" style="width: 135px;">
                        @Html.VnrLabelFor(mode => mode.Type)
                    </div>
                    <div class="FieldValue">
                        @{
    var dropdownType = new DropDownListBuilderInfo()
    {
        Name = "DayOffInfo_Type",
        DataTextField = "Text",
        DataValueField = "Value",
        BindTo = listDayOffType,
        StyleCss = "width:300px;",
        OptionLabel = @ConstantDisplay.HRM_Category_SelectLeaveDayType.TranslateString()
    };
                        }
                        @(Html.VnrDropDownListFor(mode => mode.Type, dropdownType))
                    </div>
                    <br />
                </div>
                <div id="div13">
                    <div class="FieldTitle150" style="width: 135px;">
                        @Html.VnrLabelFor(mode => mode.LoopType)
                    </div>
                    <div class="FieldValue">
                        @{
    var _LoopType = new DropDownListBuilderInfo()
    {
        DataTextField = "Text",
        DataValueField = "Value",
        BindTo = listLoopType,
        StyleCss = "width:300px",
        EventChange = "changeLoopType"
    };
                        }
                        @(Html.VnrDropDownListFor(mode => mode.LoopType, _LoopType))
                    </div>
                </div>
                <div id="div13">
                    <div class="FieldTitle150" style="width: 135px;">
                        @Html.VnrLabelFor(mode => mode.DaysOFWeeks)
                    </div>
                    <div class="FieldValue">
                        @{
    var _dateOfWeek = new DropDownListBuilderInfo()
    {
        DataTextField = "Text",
        DataValueField = "Value",
        BindTo = listDaysOFWeeks,
        StyleCss = "width:300px"
    };
                        }
                        @(Html.VnrDropDownListFor(mode => mode.DaysOFWeeks, _dateOfWeek))
                    </div>
                </div>
                <div id="div13">
                    <div class="FieldTitle150" style="width: 135px;">
                        @Html.VnrLabelFor(mode => mode.LoopNo)
                    </div>
                    <div class="FieldValue">
                        @{
    var _LoopNo = new DropDownListBuilderInfo()
    {
        DataTextField = "Text",
        DataValueField = "Value",
        BindTo = listLoopNo,
        StyleCss = "width:300px"
    };
                        }
                        @(Html.VnrDropDownListFor(mode => mode.LoopNo, _LoopNo))
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150" style="width: 135px;">
                        @Html.VnrLabelFor(mode => mode.DateOff)
                    </div>
                    <div class="FieldValue">
                        @{
    var datepickerDateOff = new DatePickerBuilderInfo()
   {
       Placeholder = ConstantDisplay.HRM_General_DateFrom.TranslateString(),
       StyleCss = "120px",
   };
                        }
                        @Html.VnrDatePickerFor(model => model.DateOff, datepickerDateOff).Format("dd/MM")
                    </div>
                </div>

                <div>
                    <div class="FieldTitle150" style="width: 135px;">
                        @Html.VnrLabel(ConstantDisplay.HRM_Common_Search_Duration.TranslateString())
                    </div>
                    <div class="FieldValue">
                        @{
                                var _datestart = new DatePickerBuilderInfo()
                                 {
                                     Placeholder = ConstantDisplay.HRM_General_DateFrom.TranslateString(),
                                     StyleCss = "120px",
                                 };
                                if (Model == null || Model.ID == Guid.Empty)
                                {
                                    _datestart.Enable = true;
                                }
                                else
                                {
                                    _datestart.Enable = false;
                                };
                        }
                        @Html.VnrDatePickerFor(model => model.DateStart, _datestart)

                        @{
                            var _dateEnd = new DatePickerBuilderInfo()
                            {
                                Placeholder = ConstantDisplay.HRM_General_DateTo.TranslateString(),
                                StyleCss = "120px",
                            };
                            if (Model == null || Model.ID == Guid.Empty)
                            {
                                _dateEnd.Enable = true;
                            }
                            else
                            {
                                _dateEnd.Enable = false;
                            };
                        }
                        @Html.VnrDatePickerFor(model => model.DateEnd, _dateEnd)
                    </div>
                </div>

                <div>
                    <div class="FieldTitle150" style="width: 135px;">
                        @Html.VnrLabelFor(mode => mode.IsLeaveDay)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrCheckBoxFor(mode => mode.IsLeaveDay)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150" style="width: 135px;">
                        @Html.VnrLabelFor(mode => mode.Comments)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(model => model.Comments, "width:500px;height:100px;")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150" style="width: 135px;">
                        @Html.VnrLabelFor(mode => mode.Overwite)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrCheckBoxFor(model => model.Overwite)
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150" style="width: 135px;">
                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-DayOff", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-catDayoff", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-catDayoff", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}
@if (Model != null)
{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#treeviewDropdownAnotherInput").val('@Model.OrgStructureName');
            $("#OrgStructureID").val('@Model.OrgStructureID');
            @*var treeview = $("#treeviewOrg").data("kendoTreeView");
            var getitem = treeview.dataSource.get('@Model.OrgStructureID');
            treeview.findByUid(getitem.uid);
            var selectitem = treeview.findByUid(getitem.uid);
            treeview.select(selectitem);*@
        });
        $('#@ConstantDisplay.HRM_HR_GeneralProfile_H_IdProfile').val('@Model.ID');

    </script>
}

