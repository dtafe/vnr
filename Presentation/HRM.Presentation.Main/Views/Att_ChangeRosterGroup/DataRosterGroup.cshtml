@model HRM.Presentation.Attendance.Models.Att_ChangeRosterGroupTableModel
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Infrastructure.Security;
@*@model System.Data.DataTable*@
@{
    Layout = null;

    
    var _hrm_Hre_Service = HRM.Infrastructure.Utilities.ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = HRM.Infrastructure.Utilities.ConstantPathWeb.Hrm_Main_Web;

    var title = ConstantDisplay.HRM_Att_ChangeRosterGroup_Create.TranslateString();

    IList<SelectListItem> listTraineeStatus = Enum.GetValues(typeof(EnumDropDown.TraineeStatus))
.Cast<EnumDropDown.TraineeStatus>()
.Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() })
.ToList();

    List<SelectListItem> listGroupName = new List<SelectListItem>();
    foreach (var item in Model.lstType)
    {
        listGroupName.Add(new SelectListItem { Text = item, Value = item});
    }
    
    //if (groupId == Guid.Empty)
    //{
    //    title = ConstantDisplay.HRM_System_GroupPermission_Add.TranslateString();
    //}
    var aa = Model.lstType;
    var row = 0;
    var cl = 0;
    var dataSource = Model.Table.Rows;
    
}
<script>
    var doSaveGroupPermission = function () {
        @*var isAccess = true;

        if (groupId == '@Guid.Empty.ToString()') {
            isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Sys_GroupPermission');
        } else {
            isAccess = checkPermission(PrivilegeType.Modify, '@ConstantPermission.Sys_GroupPermission');
        }
        if (!isAccess) {
            return;
        }

        if (!CheckValidate(data) || checkDuplicationGroup()) {
            return;
        }*@
        debugger;
        ShowHre_ProgressBar();
        $.ajax({
            url: '@_hrm_Hre_Service' + 'api/Att_ChangeRosterGroupTable',
            data: $('#form_att_ChangeRosterGroup').serializeArray(),
            type: 'POST',
            success: function (data) {

                if (data != "00000000-0000-0000-0000-000000000000") {
                    $("#ID").val(data);
                    groupId = data;
                }
                ShowNotificationProcessor("@ConstantDisplay.HRM_System_GroupPermissionSaveSuccess.TranslateString()");
                CloseHre_ProgressBar();
            }
        });



        return false;
    };


</script>


<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <div class="section-header">
                <div class="title">
                    <img src="@ConstantPath.PositionIconPath" alt="" width="20" height="20" />
                    @title  @Html.ActionLink("(" + ConstantDisplay.HRM_Att_ChangeRosterGroup__Back_To_List.TranslateString() + ")", "Index", "Att_ChangeRosterGroup")
                </div>
            </div>

            <div class="commandToolBarWidge">
                @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "doSaveGroupPermission", Name = "btnSaveGroupPermission", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })

                <div class="LineFooterCommandEdit">
                </div>
                <div style="clear: both;"></div>
                <br />
            </div>
            <div>

                <div class="contendSearchWidge" style="width:100%">
                    @using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_att_ChangeRosterGroupSearch" }))
                    {
                        @Html.HiddenFor(model => model.ID)

                        <div class="hrm_box">
                            <div id="dvCode">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.DateStart)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var DateStart = new DatePickerBuilderInfo()
                                        {
                                            Placeholder = ConstantDisplay.HRM_Attendance_DateFrom.TranslateString(),
                                            StyleCss = "width:100px"
                                        };
                                    }
                                    @Html.VnrDatePickerFor(model => model.DateStart, DateStart)
                                </div>
                            </div>

                       

                     

                        </div>

                   
                    }
                
                </div>
            </div>
          
            @using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_att_ChangeRosterGroup" }))
            {
                <div class="scrollit">
                    <table class="adminContent">
                        <tbody>
                            <tr>
                                <td>
                               
                                        @*<script type="text/javascript">
                                            $(document).ready(function () {
                                                @foreach (var cr in Model.AvailableRolesName)
                                                {
                                                    <text>
                                                $('#selectall-@(cr.Id)').click(function () {
                                                    var isChecked = this.checked;
                                                    $('#form_Sys_GroupPermission input[type=checkbox].allow_@(cr.Id)').each(function () {
                                                        this.checked = isChecked;

                                                    });
                                                    if (!isChecked) {
                                                        $('#form_Sys_GroupPermission input[type=checkbox].allow_@(cr.Id)').removeAttr("checked");
                                                    }
                                                });
                                                </text>
                                                }
                                            });
                                        </script>*@
                                        <table class="k-grid" cellpadding="6" cellspacing="5" rules="all" style="width: 100%; border-collapse: collapse; border: 0px solid #ccc" id="DataRoster">

                                            <thead>
                                                <tr>
                                               
                                              
                                                    @foreach (System.Data.DataColumn cr in Model.Table.Columns)
                                                    {
                                                        <th scope="col" class="k-header ">
                                                            @*<strong>@cr.Name</strong>*@
                                                            <span>
                                                               @* <input type="checkbox" id="selectall-@(cr.Id)" />*@
                                                                <label >@cr.ColumnName</label>
                                                            </span>
                                                        </th>
                                                    }
                                                </tr>
                                            </thead>
                                            <tbody style="height:500px; overflow:scroll;">
                                                @*@{
                                                    bool altRow = true;
                                                    var listResources = (Dictionary<string, List<Sys_GroupPermissionModel>>)ViewBag.listResource;
                                                }
                                                @foreach (KeyValuePair<string, List<Sys_GroupPermissionModel>> pr in listResources)
                                                {
                                                    var Sys_GroupPermissionModels = pr.Value.Where(p => p != null).ToList();
                                                    //foreach (var sysGroupPermissionModel in Sys_GroupPermissionModels)
                                                    //[Hien.Nguyen] Edit vòng lặp foreach thành for
                                                    for (int i = 0; i < Sys_GroupPermissionModels.Count; i++)
                                                    {
                                                        altRow = !altRow;
                                                        <tr name="@(Sys_GroupPermissionModels[i].Category == "Module" ? Sys_GroupPermissionModels[i].ResourceName :Sys_GroupPermissionModels[i].Category)" style="@(Sys_GroupPermissionModels[i].Category == "Module" ? "background: #067590;font-size: 12px; color: #fff; font-weight: bold;" : "")" class="@(altRow ? "altrowstyle" : "rowstyle")">
                                                            <td>
                                                                <span>@Sys_GroupPermissionModels[i].ResourceName</span>
                                                            </td>
                                                            <td>
                                                                @if (Sys_GroupPermissionModels[i].Category != "Module")
                                                                {
                                                                    <span>@Sys_GroupPermissionModels[i].ResourceNameTranslate</span>
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (Sys_GroupPermissionModels[i].Category != "Module")
                                                                {
                                                                    <span>@Sys_GroupPermissionModels[i].ResourceTypeTranslate</span>
                                                                }
                                                            </td>

                                                            @{
                                                        foreach (System.Data.DataRow cr in Model.Table.Rows)
                                                        {
                                                             
                                                        }
                                                            }
                                                        </tr>
                                                    }
                                                }*@
                                         
                                                @{
                                                    foreach (System.Data.DataRow item in Model.Table.Rows)
                                                    {
                                                      
                                                        row++;
                                                        cl = 0;
                                                        var titleColDateOfMonth = Model.Table.Columns[0].ColumnName + "_" + row;
                                                        var titleColDateOfWeek = Model.Table.Columns[1].ColumnName + "_" + row;
                                                        <tr>
                                                            <td>
                                                                <input class="k-textbox" value="@item[0]" name="@titleColDateOfMonth"/>
                                                               
                                                            </td>
                                                            <td>
                                                                <input class="k-textbox" value="@item[1]" name="@titleColDateOfWeek"/>
                                                                
                                                            </td>
                                                            @{
                                                                for (int i = 2; i < @item.ItemArray.Length; i++)
                                                                {   
                                                                  
                                                                    cl++;
                                                                    <td>
                                                                        @{
                                                                    var ddlStatus = new DropDownListBuilderInfo()
                                                                    {
                                                                        Name = Model.Table.Columns[i].ColumnName + "_" + row + "_" + cl,
                                                                        DataTextField = "Text",
                                                                        DataValueField = "Value",
                                                                        BindTo = listGroupName
                                                                    };
                                                                        }
                                                                        @Html.VnrDropDownListFor(model => model.ActionStatus, ddlStatus)
                                                                    </td>
                                                                }
                                                            }
                                                        </tr>
                                                   
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    
                                </td>
                            </tr>
                        </tbody>

                    </table>
                </div>


                @*@Html.Hidden((Guid)ViewBag.groupId + "_allow_0", "0")*@


            }
        </div>

    </div>
</div>

@*@(Html.Kendo().Notification()
    .Name("notification")
    .Width("18em")
    .Templates(t =>
    {
        t.Add().Type("time").ClientTemplate("<div style='padding: .6em 1em'>Time is: <span class='timeWrap'>#: time #</span></div>");
    })
)
@if (Model.ActionStatus == null)
{
      

@(Html.Kendo().Grid<dynamic>()
    .Name("Grid")
    .Columns(columns =>
    {
        foreach (System.Data.DataColumn column in Model.Table.Columns)
        {
            if (column.ColumnName == "ID")
            {
                columns.Bound(column.ColumnName).Hidden(true);
            }
            else
            {
                columns.Bound(column.ColumnName);
            }
        }
        columns.Command(command => { command.Edit(); }).Width(160);
    })
    .Pageable()
    .Sortable()
    .Filterable().AutoBind(true)
        //.Groupable()
    .DataSource(dataSource => dataSource
        .Ajax()
            .Model(model =>
                {
                    //var id = Model.PrimaryKey[0].ColumnName;
                    model.Id("ID");
                    foreach (System.Data.DataColumn column in Model.Table.Columns)
                    {
                        var field = model.Field(column.ColumnName, column.DataType);

                        if (column.ColumnName == "ID" || column.ColumnName == "CodeEmp" || column.ColumnName == "ProfileName")
                        {
                            field.Editable(false);
                        }
                        
                    }
                })
                                    .Read(read => read.Action("GetDataChangeRosterGroup", "Att_ChangeRosterGroup", new { ids = Model.Ids }))
                .Update(update => update.Action("Save", "Tra_Trainee"))
        )
            .Editable(ed => ed.Mode(Kendo.Mvc.UI.GridEditMode.PopUp)).Events(x => x.Save("SaveChanges")).Events(m=>m.Edit("EvenEdit"))
)
    <script type="text/javascript">
    function EvenEdit() {
        $("label[for=ID]").parent().hide();
        $("label[for=ID]").parent().next().hide();
    };
    //Even save change
    function SaveChanges(e) {
        //Biến lưu tên cột trong table
        var ArrayField = Object.keys(e.model.defaults);

        //Biến lưu giá trị (Key,Value)
        var Result = {};
        
        //Duyệt ra tất cả các field để lấy dữ liệu
        for (var i = 0; i < ArrayField.length; i++)
        {
            Result[ArrayField[i]] = e.model[ArrayField[i]];
        }

        // Lấy mã màu
        $.ajax({
            url: '@_hrm_Hre_Service' + "Tra_GetData/UpdateScoreInTraineeTopic",
            type: "POST",
            data: { model: Result },
            error: function () {
            
            },
            success: function (data) {
             
            }
        });
    };
</script>
}
else if (Model.ActionStatus == ConstantMessages.PlsChooseTraineeSameClass.ToString())
{
    <script>
        $(document).ready(function () {
            debugger;
            var popupNotification = $("#notification").data("kendoNotification");
            popupNotification.show('@Html.Raw(Model.ActionStatus.TranslateString())');
            
        });
        
    </script>
}else if(Model.ActionStatus == ConstantMessages.CourseNoHaveTopic.ToString())
{
    <script>
        $(document).ready(function () {
            debugger;
            var popupNotification = $("#notification").data("kendoNotification");
            popupNotification.show('@Html.Raw(Model.ActionStatus.TranslateString())');
            
        });
        
    </script>
}*@
@*<div>
    <script>
        document.getElementById("dateOfMonth").readOnly = true;
        document.getElementById("DateOfWeek").readOnly = true;

    </script>
</div>*@
  

