@model HRM.Presentation.Category.Models.Cat_PivotSearchModel
@using HRM.Infrastructure.Utilities
@using HRM.Infrastructure.Security

@{
    ViewBag.Title = ConstantDisplay.HRM_Category_Export.TranslateString();
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Cat_Web = ConstantPathWeb.Hrm_Cat_Web;
}

<script type="text/javascript">
     
    //Khởi tạo điều kiện tìm kiếm
    function filterFieldInfo() {
        
        return {
            PivotName: $('#SPivotName').val(),
            Code: $('#SCode').val(),
          
        };
        //var _form = $('#form-search');
        //var queryEntity = _form.serialize();
        //var entity = queryStringToJSON(queryEntity);
        //return entity;
    }

    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        //Show Hide Panel
        ShowHidePanel();
        //Jump Anchor
        jumpAnchor("anchor");
        //
        $("#btnSearch").click(function () {
            var grid = $('#grid_Cat_Pivot').data("kendoGrid");
            grid.dataSource.read();
        });
        @*var isAccess = checkPermission(PrivilegeType.Modify, '@ConstantPermission.Cat_Export');
        if (!isAccess) {
            return;
        }*@
        //Xử lý nút Edit
        EditGridNewPage("grid_Cat_Pivot", '#Hrm_Cat_Web/Cat_Pivot/Edit/', 'Hrm_Cat_Web', '@_hrm_Cat_Web');
    });
    GridCheckbox("grid_Cat_Pivot");
    $('#btnDelete').click(function (e) {
        var isAccess = checkPermission(PrivilegeType.Delete, '@ConstantPermission.Cat_Export');
        if (!isAccess) {
            return;
        }
        if (selectedIds == "") {
            DeleteFail();
            return;
        }
        e.preventDefault();

        DeleteSelected("grid_Cat_Pivot", '@_hrm_Cat_Web' + "Cat_Pivot/RemoveSelected/", selectedIds.join(","));

        return false;
    });


    $("#btnCreateCatExport").kendoButton({

        click: function (e) {
            var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Cat_Export');
            if (!isAccess) {
                return;
            }
            
            KendoRouteMapping('#Hrm_Cat_Web/Cat_Pivot/Create/', 'Hrm_Cat_Web', '@_hrm_Cat_Web');
        }
    });
    @*function showpage(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var id = dataItem.Id;
        KendoRouteMapping('#Hrm_Cat_Web/Cat_Export/Edit/' + id, 'Hrm_Cat_Web', '@_hrm_Cat_Web');
    }*@
    @*EditGridNewPage("grid_Cat_Pivot", '#Hrm_Cat_Web/Cat_Export/Edit/', 'Hrm_Cat_Web', '@_hrm_Cat_Web');*@
</script>


<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
         
                <div class="contendSearchWidge">
                    <form action="#" method="POST" id="form-search">
                        <div style="float:left">
                            <div id="div2">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(model => model.PivotName)
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrTextBox("SPivotName", "width:200px")
                                </div>
                            </div>
                            <div id="div2">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(model => model.Code)
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrTextBox("SCode", "width:200px")
                                </div>
                            </div>

                        </div>
                      
                       
                        
                    </form>
</div>
           
        </div>
    </div>
</div>
<div class="commandToolBarWidge" id="anchor">
    <div style="float:left">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateCatExport", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    </div>
    <div style="float:right">
        <div class="HideExportCate">
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport", Content = ConstantAction.HRM_Common_Export.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
        </div>
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
    </div>
    <div class="clear"></div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @using HRM.Presentation.Category.Models
    @using HRM.Presentation.UI.Controls.Kendo
    @{
        //Thông tin hiển column hiển thị
        string[] valueFields = new string[]
        {
            Cat_PivotModel.FieldNames.Code,
            Cat_PivotModel.FieldNames.PivotName,
           
            Cat_PivotModel.FieldNames.IsProtected,
            Cat_PivotModel.FieldNames.IsReadOnly,
            Cat_PivotModel.FieldNames.Description
        };

        //Set độ rộng cho từng column
        Dictionary<string, int> sizeFields = new Dictionary<string, int>()
        {
            {Cat_PivotModel.FieldNames.PivotName,150},
            {Cat_PivotModel.FieldNames.Code,80},
           
            {Cat_PivotModel.FieldNames.IsProtected,85},
            {Cat_PivotModel.FieldNames.IsReadOnly,85},
            {Cat_PivotModel.FieldNames.Description,200}

        };

        //Thông tin hiển thị được dịch
        Dictionary<string, string> displayFields = new Dictionary<string, string>()
        {
            {Cat_PivotModel.FieldNames.PivotName , ConstantDisplay.HRM_Category_Export_ExportName },
            {Cat_PivotModel.FieldNames.Code, ConstantDisplay.HRM_Category_Export_Code},
            
            {Cat_PivotModel.FieldNames.IsProtected, ConstantDisplay.HRM_Category_Export_IsProtected},
            {Cat_PivotModel.FieldNames.IsReadOnly, ConstantDisplay.HRM_Category_Export_IsReadOnly},
            {Cat_PivotModel.FieldNames.Description, ConstantDisplay.HRM_Category_Export_Description}
        };

        var grid = new GridBuilderInfo
        {
            Name = "grid_Cat_Pivot",
            ValueFields = valueFields,
            SizeFields = sizeFields,
            DisplayFields = displayFields,
            EventCustomEdit = "showpage",
            ReadActionUrl = _hrm_Hr_Service + "Cat_GetData/GetPivotList",
            ReadData = "filterFieldInfo"
        };
    }

    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<Cat_PivotModel>(grid))
</div>