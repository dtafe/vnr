@using HRM.Infrastructure.Utilities

@using HRM.Infrastructure.Security;
@model HRM.Presentation.Category.Models.Cat_ImportSearchModel

@{
    ViewBag.Title = ConstantDisplay.HRM_HR_Category_Import_Title.TranslateString();
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;

    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
}
@{
    var window = new WindowBuilderInfo
    {
        Name = "windowCatImport",
        Visible = false,
        Title = "Thông tin Cấu Hình Nhập Dữ Liệu",
        LoadContentFrom = @_hrm_Main_Web + "Cat_Import/CatImportInfo/",
    };
}
@(Html.VnrWindow(window))
<script type="text/javascript">

    //Khởi tạo điều kiện tìm kiếm
    function filterFieldInfo() {
        return {
            ImportName: $('#ImportName1').val(),
            ImportCode: $('#ImportCode1').val(),
            ObjectName: $('#ObjectName1').val(),
        };
    }

    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        //Show Hide Panel
        ShowHidePanel();
        //Jump Anchor
        jumpAnchor("anchor");
        //
        $("#btnSearch").click(function () {
            ReadGrid("gridCatImport");
        });
        //Xử lý nút Edit
        @*var isAccess = checkPermission(PrivilegeType.Modify, '@ConstantPermission.Cat_Import');
        if (!isAccess) {
            return;
        }*@
        EditGridNewPage("gridCatImport", '#Hrm_Main_Web/Cat_Import/Edit/', 'Hrm_Main_Web', '@_hrm_Main_Web');
    });

    //$("#btnCreateCatImport").click(function () {
    //    PopUpCreate("windowCatImport");
    //});

    $("#btnCreateCatImport").kendoButton({
        click: function (e) {
            var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Cat_Import');
            if (!isAccess) {
                return;
            }
            KendoRouteMapping('#Hrm_Main_Web/Cat_Import/Create/', 'Hrm_Main_Web', '@_hrm_Main_Web');
        }
    });



    //Xử Lý Grid
    GridCheckbox("gridCatImport");
    //Xử lý nút Delete
    $('#btnDelete').click(function (e) {
        var isAccess = checkPermission(PrivilegeType.Delete, '@ConstantPermission.Cat_Import');
        if (!isAccess) {
            return;
        }
        if (selectedIds == "") {
            DeleteFail();
            return;
        }
        e.preventDefault();

        DeleteSelected("gridCatImport", '@_hrm_Main_Web' + "Cat_Import/RemoveSelected/", selectedIds.join(","));

        return false;
    });

    function checkedNodeIds(nodes, checkedNodes) {
        for (var i = 0; i < nodes.length; i++) {
            if (nodes[i].checked) {
                checkedNodes.push(nodes[i].id);
            }

            if (nodes[i].hasChildren) {
                checkedNodeIds(nodes[i].children.view(), checkedNodes);
            }
        }
    }
</script>


<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            <div class="contendSearchWidge">
                <div class="hrm_box">
                    <div id="div2">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(model => model.ImportCode)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBox("ImportCode1", "Width: 200px")
                        </div>
                    </div>
                    <div id="div2">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(model => model.ImportName)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBox("ImportName1", "Width: 200px")
                        </div>
                    </div>
                    <div id="div2">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(model => model.ObjectName)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBox("ObjectName1", "Width: 200px")
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="commandToolBarWidge" id="anchor">
    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateCatImport", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    <div style="float: right">
        <div class="HideExportCate">
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport", Content = ConstantAction.HRM_Common_Export.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
        </div>
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
    </div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    <!--Khai báo các thông tin cho Grid-->
    @using HRM.Presentation.Category.Models
    @using HRM.Presentation.UI.Controls.Kendo

    @{
        string[] valueFields = new string[]
        {
            CatImportModel.FieldNames.ImportCode,
            CatImportModel.FieldNames.ImportName,
            CatImportModel.FieldNames.ObjectName,
            CatImportModel.FieldNames.SheetIndex,
            CatImportModel.FieldNames.StartRowIndex,
            CatImportModel.FieldNames.StartColumnIndex,
            CatImportModel.FieldNames.IsProtected
        };
        Dictionary<string, int> sizeFields = new Dictionary<string, int>()
        {
            {CatImportModel.FieldNames.ImportCode,80},
            { CatImportModel.FieldNames.ImportName,150},
            { CatImportModel.FieldNames.ObjectName,150},
            {CatImportModel.FieldNames.SheetIndex,90},
            {CatImportModel.FieldNames.StartRowIndex,100},
            {CatImportModel.FieldNames.StartColumnIndex,90},
            {CatImportModel.FieldNames.IsProtected,90}
        };

        Dictionary<string, string> displayFields = new Dictionary<string, string>()
        {
            {CatImportModel.FieldNames.ImportCode, ConstantDisplay.HRM_Category_Cat_Import_Code},
            {CatImportModel.FieldNames.ImportName, ConstantDisplay.HRM_Category_Cat_Import_ImportName},
            {CatImportModel.FieldNames.ObjectName, ConstantDisplay.HRM_Category_Cat_Import_ObjectName},
            {CatImportModel.FieldNames.SheetIndex, ConstantDisplay.HRM_Category_Cat_Import_SheetIndex},
            {CatImportModel.FieldNames.StartRowIndex, ConstantDisplay.HRM_Category_Cat_Import_StartRowIndex},
            {CatImportModel.FieldNames.StartColumnIndex, ConstantDisplay.HRM_Category_Cat_Import_StartColumnIndex},
            {CatImportModel.FieldNames.IsProtected, ConstantDisplay.HRM_Category_Cat_Import_IsProtected}
        };

        var grid = new GridBuilderInfo
        {
            Name = "gridCatImport",
            ValueFields = valueFields,
            SizeFields = sizeFields,
            DisplayFields = displayFields,
            ReadActionUrl = @_hrm_Hre_Service + "Cat_GetData/GetCatImport/",
            ShowCommand = false,
            ReadData = "filterFieldInfo"
        };
    }
    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<CatImportModel>(grid))
</div>
