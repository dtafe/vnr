@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.UI.Controls.Kendo.DropDownList
@using HRM.Presentation.UI.Controls.Kendo.MultiSelect
@using HRM.Presentation.Hr.Models
@using HRM.Infrastructure.Utilities

@using System.Collections;

@model Hre_ProfileQualificationModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
}


<script>
    SetFieldRequired();


    function onSave() {
        onSaveAndContinue($('#form_ProfileQualification'), '@_hrm_Hr_Service', 'api/Hre_ProfileQualification/', '@ConstantControlName.HRM_ChangeColum_Grid_Name', '@ConstantControlName.HRM_ChangeColum_PopUp_Name');
        return false;
    }

    function onSaveClose() {
        onSaveAndClose($('#form_ProfileQualification'), '@_hrm_Hr_Service', 'api/Hre_ProfileQualification/', '@ConstantControlName.HRM_ChangeColum_Grid_Name', '@ConstantControlName.HRM_ChangeColum_PopUp_Name');
        return false;
    }

    function onSaveDataPopUp() {

        onlySave($('#form_ProfileQualification'), '@_hrm_Hr_Service', 'api/Hre_ProfileQualification/', '@ConstantControlName.HRM_ChangeColum_Grid_Name');
        return false;
    }
</script>
<style>
    label {
        min-width: 100px;
    }
</style>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_ProfileQualification" }))
{
<div class="VnRMain">
    <table style="width:100%">
        <tbody>
            <tr>  
                <td valign="top">
                    <div id="div2">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.ProfileID)
                            @Html.HiddenFor(mode => mode.ID)
                        </div>
                        <div class="FieldValue">
                            @{
                                IEnumerable valueProfile = new string[] { };
                                if (Model != null)
                                {
                                    valueProfile = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
                                }
                            }
                            @{
                                var profile = new MultiSelectBuilderInfo()
                                 {
                                     Width=300,
                                     Name = "ProfileQualification_ProfileID",
                                     DataTextField = Hre_QualificationModel.FieldNames.ProfileName,
                                     DataValueField = Hre_QualificationModel.FieldNames.ID,
                                     Url = @_hrm_Hr_Service + "Hre_GetData/GetMultiProfile",
                                     Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                                     MaxSelectedItems = 1,
                                     Value = valueProfile
                                 };
                            }
                            @(Html.VnrMultiSelectFor(mode => mode.ProfileID, profile))
                        </div>

                        <div style="clear: both;"></div>
                    </div>
                    <div id="div3">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.QualificationName)
                        </div>
                        <div class="FieldValue">
                            @*@Html.VnrTextBoxFor(model => model.QualificationName)
                                @Html.ValidationMessageFor(model => model.QualificationName)*@
                            @{
                                var _QualificationName = new ComboBoxBuilderInfo()
                                {
                                    Name = "ProfileQualification_QualificationName",
                                    DataTextField = "QualificationName",
                                    DataValueField = "QualificationName",
                                    Url = _hrm_Hr_Service + "Cat_GetData/GetMultiQualification",
                                    StyleCss = "width:300px;",
                                    Value = Model == null ? string.Empty : Model.QualificationName,
                                    Autobind = true
                                };
                            }
                            @(Html.VnrComboBoxFor(mode => mode.QualificationName, _QualificationName))
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div2">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.SpecialLevelID)
                        </div>
                        <div class="FieldValue">
                            @{
                                var _CommunistPartyPositionName = new ComboBoxBuilderInfo()
                                {
                                    Name = "ProfileQualification_SpecialLevelID",
                                    DataTextField = "NameEntityName",
                                    DataValueField = "ID",
                                    Url = _hrm_Hr_Service + "Cat_GetData/GetMultiQualificationLevel",
                                    StyleCss = "width:200px;",
                                    Value = Model == null ? string.Empty : Model.SpecialLevelID.ToString(),
                                    Autobind = true
                                };
                            }
                            @(Html.VnrComboBoxFor(mode => mode.SpecialLevelID, _CommunistPartyPositionName))
                        </div>
                        <br />
                    </div>
                    <div id="div3">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.FieldOfTraining)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(model => model.FieldOfTraining,"Width: 300px")
                            @Html.ValidationMessageFor(model => model.FieldOfTraining,"Width: 300px")
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div3">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.TrainingPlace)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(model => model.TrainingPlace,"Width: 300px")
                            @Html.ValidationMessageFor(model => model.TrainingPlace,"Width: 300px")
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div3">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.TrainingAddress)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextAreaFor(model => model.TrainingAddress, "Width: 300px")
                            @Html.ValidationMessageFor(model => model.TrainingAddress,"Width: 300px")
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div3">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.DateStart)
                        </div>
                        <div class="FieldValue">
                            @{
                                var dateStart = new DatePickerBuilderInfo()
                                {
                                    Name = "ProfileQualification_DateStart",
                                    StyleCss = "width:120px;"
                                };
                            }
                            @Html.VnrDatePickerFor(model => model.DateStart, dateStart)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div3">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.DateFinish)
                        </div>
                        <div class="FieldValue">
                            @{
                                var dateFinish = new DatePickerBuilderInfo()
                                {
                                    Name = "ProfileQualification_DateFinish",
                                    StyleCss = "width:120px;"
                                };
                            }
                            @Html.VnrDatePickerFor(model => model.DateFinish, dateFinish)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div3">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.CertificateName)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(model => model.CertificateName, "Width: 300px")
                            @Html.ValidationMessageFor(model => model.CertificateName, "Width: 300px")
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div3">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.GraduationDate)
                        </div>
                        <div class="FieldValue">
                            @{
                                var graduationDate = new DatePickerBuilderInfo()
                                {
                                    Name = "ProfileQualification_GraduationDate",
                                    StyleCss = "width:120px;"
                                };
                            }
                            @Html.VnrDatePickerFor(model => model.GraduationDate, graduationDate)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                   
                </td>
            </tr>
            <tr>
                <td style="padding-top:2px; padding-bottom:10px;">
                    <div class="LineFooterCommandEdit">
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div>
                        <div class="FieldTitle150">

                        </div>
                        <div class="FieldValue">
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-RecruitmentCampaign", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-RecruitmentCampaign", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-RecruitmentCampaign", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        </div>

                    </div>
                </td>
            </tr>

        </tbody>
    </table>
</div>
}