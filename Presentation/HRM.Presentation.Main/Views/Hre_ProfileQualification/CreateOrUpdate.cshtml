@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.UI.Controls.Kendo.DropDownList
@using HRM.Presentation.UI.Controls.Kendo.MultiSelect
@using HRM.Presentation.Hr.Models
@using HRM.Infrastructure.Utilities

@using System.Collections;

@model Hre_ProfileQualificationModel
@{
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
}
<script>
    SetFieldRequired();
</script>
<div class="VnRMain">
    <table style="width:100%">
        <tbody>
            @*<tr>
                <td class="Box_Top_Left"></td>
                <td valign="middle" class="Box_Top_Mid"></td>
                <td class="Box_Top_Right"></td>
            </tr>*@
            <tr><td colspan="3" style=""></td></tr>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                <td valign="top">
                    <div id="div2">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.ProfileID)
                            @Html.HiddenFor(mode => mode.ID)
                        </div>
                        <div class="FieldValue">
                            @{
                                IEnumerable valueProfile = new string[] { };
                                if (Model != null)
                                {
                                    valueProfile = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
                                }
                            }
                            @{
                                var profile = new MultiSelectBuilderInfo()
                                 {
                                     DataTextField = Hre_QualificationModel.FieldNames.ProfileName,
                                     DataValueField = Hre_QualificationModel.FieldNames.ID,
                                     Url = @_hrm_Hr_Service + "Hre_GetData/GetMultiProfile",
                                     Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                                     MaxSelectedItems = 1,
                                     Value = valueProfile
                                 };
                            }
                            @(Html.VnrMultiSelectFor(mode => mode.ProfileID, profile))
                        </div>

                        <div style="clear: both;"></div>
                    </div>
                    <div id="div3">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.QualificationName)
                        </div>
                        <div class="FieldValue">
                            @*@Html.VnrTextBoxFor(model => model.QualificationName)
                            @Html.ValidationMessageFor(model => model.QualificationName)*@
                            @{
                                var _QualificationName = new ComboBoxBuilderInfo()
                                {
                                    DataTextField = "QualificationName",
                                    DataValueField = "QualificationName",
                                    Url = _hrm_Hr_Service + "Cat_GetData/GetMultiQualification",
                                    StyleCss = "width:200px;",
                                    Value = Model == null ? string.Empty : Model.QualificationName,
                                    Autobind = true
                                };
                            }
                            @(Html.VnrComboBoxFor(mode => mode.QualificationName, _QualificationName))
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div2">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.SpecialLevelID)
                        </div>
                        <div class="FieldValue">
                            @{
                                var _CommunistPartyPositionName = new ComboBoxBuilderInfo()
                                {
                                    DataTextField = "NameEntityName",
                                    DataValueField = "ID",
                                    Url = _hrm_Hr_Service + "Cat_GetData/GetMultiQualificationLevel",
                                    StyleCss = "width:200px;",
                                    Value = Model == null ? string.Empty : Model.SpecialLevelID.ToString(),
                                    Autobind = true
                                };
                            }
                            @(Html.VnrComboBoxFor(mode => mode.SpecialLevelID, _CommunistPartyPositionName))
                        </div>
                        <br />
                    </div>
                    <div id="div3">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.FieldOfTraining)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(model => model.FieldOfTraining)
                            @Html.ValidationMessageFor(model => model.FieldOfTraining)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div3">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.TrainingPlace)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(model => model.TrainingPlace)
                            @Html.ValidationMessageFor(model => model.TrainingPlace)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div3">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.TrainingAddress)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextAreaFor(model => model.TrainingAddress, "min-Width: 250px")
                            @Html.ValidationMessageFor(model => model.TrainingAddress)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div3">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.DateStart)
                        </div>
                        <div class="FieldValue">
                            @{
                                var dateStart = new DatePickerBuilderInfo()
                                {
                                    StyleCss="width:100px;"
                                };
                            }
                            @Html.VnrDatePickerFor(model => model.DateStart, dateStart)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div3">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.DateFinish)
                        </div>
                        <div class="FieldValue">
                            @{
                                var dateFinish = new DatePickerBuilderInfo()
                                {
                                    StyleCss = "width:100px;"
                                };
                            }
                            @Html.VnrDatePickerFor(model => model.DateFinish, dateFinish)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div3">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.CertificateName)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(model => model.CertificateName)
                            @Html.ValidationMessageFor(model => model.CertificateName)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div3">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.GraduationDate)
                        </div>
                        <div class="FieldValue">
                            @{
                                var graduationDate = new DatePickerBuilderInfo()
                                {
                                    StyleCss = "width:100px;"
                                };
                            }
                            @Html.VnrDatePickerFor(model => model.GraduationDate, graduationDate)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    @*<div id="div3">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.Notes)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextAreaFor(model => model.Notes)
                            @Html.ValidationMessageFor(model => model.Notes)
                        </div>
                        <div style="clear: both;"></div>
                    </div>*@
                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
            <tr>
                <td class="Box_Bottom_Left"></td>
                <td class="Box_Bottom_Mid"></td>
                <td class="Box_Bottom_Right"></td>
            </tr>
        </tbody>
    </table>
</div>
