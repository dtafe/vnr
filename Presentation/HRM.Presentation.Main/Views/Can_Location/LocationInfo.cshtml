@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@model HRM.Presentation.Canteen.Models.Can_LocationModel

@{
    ViewBag.Title = "Location";
    Layout = null;

    var _hrm_Can_Service = ConstantPathWeb.Hrm_Hre_Service;
    var locationId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
}

<script>

    var data = SetCharacteFieldRequired();

    function checkDuplicationLocation() {

        var _code = $("#LocationCode").val();
             var _id = '@locationId';
             var param = {
            tableName: 'Can_Location',
            columnName: 'LocationCode',
            keyword: _code,
            id: _id
        };

             var isduplicate = checkDuplicate('@_hrm_Sys_Service', 'Sys_GetData', 'CheckDuplicate', param, "LocationCode");
        
        return isduplicate;
    }
    

    function onSaveAndContinuePopUp() {
        if (CheckValidate(data)) {
            if (!checkDuplicationLocation())
            {
                onSaveAndContinue($('#form_can_location'), '@_hrm_Can_Service', 'api/Can_Location/', 'gridCan_Location', 'windowCanLocation'); return false;
            }
        }
    }
    function onSaveClosePopUp() {

        if (CheckValidate(data)) {
            if (!checkDuplicationLocation()) {
                onSaveAndClose($('#form_can_location'), '@_hrm_Can_Service', 'api/Can_Location/', 'gridCan_Location', 'windowCanLocation'); return false;
            }
        }
    }

    function onSaveDataPopUp() {

        if (CheckValidate(data)) {
            if (!checkDuplicationLocation()) {
                onlySave($('#form_can_location'), '@_hrm_Can_Service', 'api/Can_Location/', 'gridCan_Location'); return false;
            }
        }
    }

</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_can_location" }))
{
    @Html.HiddenFor(model => model.ID)


     <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.LocationName)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.LocationName, "width:300px")
                        @Html.ValidationMessageFor(model => model.LocationName)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.LocationCode)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.LocationCode, "width:300px")
                        @Html.ValidationMessageFor(model => model.LocationCode)
                    </div>
                </div>
               
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Note)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Note, "width:500px;height:100px;")
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-canLocation", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveAndContinuePopUp", Name = "save-continue-canLocation", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClosePopUp", Name = "save-close-canLocation", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
 </table>
}

