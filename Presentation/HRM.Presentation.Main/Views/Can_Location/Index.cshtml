
@using HRM.Infrastructure.Utilities;
@using HRM.Infrastructure.Security;

@model HRM.Presentation.Canteen.Models.Can_LocationModel
@{
    ViewBag.Title = HRM.Infrastructure.Utilities.ConstantDisplay.HRM_Canteen_Location_Title.TranslateString();
    Layout = null;
    var _hrm_Can_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Can_Service = ConstantPathWeb.Hrm_Hre_Service;
}
@{
    var window = new WindowBuilderInfo
    {
        Name = "windowCanLocation",
        Visible = false,
        Width=700,
        LoadContentFrom = @_hrm_Can_Web + "Can_Location/LocationInfo/",
    };
}
@(Html.VnrWindow(window))
<script type="text/javascript">
    var titleEditPopUp = '@Html.Raw(ConstantDisplay.HRM_Canteen_Location_Update.TranslateString())';
    var titleCreatePopUp = '@Html.Raw(ConstantDisplay.HRM_Canteen_Location_AddNew.TranslateString())';
    var checkedNodes = [];
     
    //Khởi tạo điều kiện tìm kiếm
    function filterFieldInfo() {
        var LocationCode = $('#@Html.FieldIdFor(model => model.LocationCode)').val();
        var LocationName = $('#@Html.FieldIdFor(model => model.LocationName)').val();
        return {
            LocationCode: $("#SLocationCode").val(),
            LocationName: $("#SLocationName").val()
        };
    }
    //function filterFieldInfo() {
    //    var _form = $('#form-search');
    //    var queryEntity = _form.serialize();
    //    var entity = queryStringToJSON(queryEntity);
    //    return entity;
    //}

    //Hàm xử lý sự kiện edit trên lưới
    @*function eEditCanteen(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var id = dataItem.Id;
        KendoRouteMapping('#Hrm_Can_Web/Can_Location/Edit/' + id, 'Hrm_Can_Web', '@_hrm_Can_Web');
    }*@

    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        //Xử lý show hide form tìm kiếm
        ShowHidePanel();
        $("#btnSearch").click(function () {
            var grid = $('#gridCan_Location').data("kendoGrid");
            grid.dataSource.read();
            checkedNodes = [];
        });
        //Xử Lý Grid
        GridCheckbox("gridCan_Location");
        //Xử lý nút Edit
        @*//EditGridNewPage("gridCan_Location", '#Hrm_Can_Web/Can_Location/Edit/', 'Hrm_Can_Web', '@_hrm_Can_Web');*@

        var url = '@_hrm_Can_Web' + "Can_Location/LocationInfo/";
        @*var isAccess = checkPermission(PrivilegeType.Modify, '@ConstantPermission.Can_Location');
        if (!isAccess) {
            return;
        }*@
        EditGridPopUp("gridCan_Location", "windowCanLocation", url,'@ConstantPermission.Can_Location', titleEditPopUp);

        //Xử lý nút Delete
        DeleteGrid("gridCan_Location", '@_hrm_Can_Web' + "Can_Location/Remove/");
        $("#btnCreate").click(function () {
            @*var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Can_Location');
            if (!isAccess) {
                return;
            }*@
            @*KendoRouteMapping('#Hrm_Can_Web/Can_Location/Create/', 'Hrm_Can_Web', '@_hrm_Can_Web');*@
            PopUpCreate("windowCanLocation", titleCreatePopUp, '@ConstantPermission.Can_Location');
        });
        $('#btnDelete').click(function (e) {
            @*var isAccess = checkPermission(PrivilegeType.Modify, '@ConstantPermission.Can_Location');
            if (!isAccess) {
                return;
            }*@
            if (selectedIds == "") {
                DeleteFail();
                return;
            }
            e.preventDefault();
            DeleteSelected("gridCan_Location", '@_hrm_Can_Web' + "Can_Location/RemoveSelected/", selectedIds.join(","), '@ConstantPermission.Can_Location');
            return false;
        });
    });
    @*function showpage(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var id = dataItem.Id;
        window.location.href = '@_hrm_Can_Web' + 'Can_Location/Edit/' + id;
    }*@
    function NewPageInsert() {
        window.location.href = '@_hrm_Can_Web' + 'Can_Location/Create';
    }
</script>


<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->

            <div class="contendSearchWidge">
                <form id="form-search">
                    <div id="div5">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.LocationName)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBox("SLocationName", "width:200px")
                        </div>
                    </div>
                    <div id="div2">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(model => model.LocationCode)
                        </div>
                        <div class="FieldValue">
                            <div class="FieldValue">
                                @Html.VnrTextBox("SLocationCode", "width:200px")
                            </div>
                        </div>
                    </div>

                </form>
            </div>

        </div>
    </div>
</div>
<div class="commandToolBarWidge">
    <div style="float:left">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreate", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    </div>
    <div style="float:right">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
    </div>
    <div class="clear"></div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @using HRM.Presentation.Canteen.Models
    @using HRM.Presentation.UI.Controls.Kendo
    @{
        string[] valueFields = new string[]
        {   Can_LocationModel.FieldNames.LocationCode,
            Can_LocationModel.FieldNames.LocationName,
            Can_LocationModel.FieldNames.Note
        };
        Dictionary<string, int> sizeFields = new Dictionary<string, int>()
        {
             {Can_LocationModel.FieldNames.LocationCode,120},
            {Can_LocationModel.FieldNames.LocationName, 150},
            {Can_LocationModel.FieldNames.Note, 200},
        };

        Dictionary<string, string> displayFields = new Dictionary<string, string>()
        {
            {Can_LocationModel.FieldNames.LocationCode, ConstantDisplay.HRM_Canteen_Location_LocationCode},
            {Can_LocationModel.FieldNames.LocationName, ConstantDisplay.HRM_Canteen_Location_LocationName},
            {Can_LocationModel.FieldNames.Note, ConstantDisplay.HRM_Canteen_Location_Notes}
        };
        var grid = new GridBuilderInfo
        {
            Name = "gridCan_Location",
            ValueFields = valueFields,
            SizeFields = sizeFields,
            DisplayFields = displayFields,
            ReadActionUrl = @_hrm_Can_Service + "Canteen_GetData/GetLocationList/",
            ReadData = "filterFieldInfo"
        };
    }
    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<HRM.Presentation.Canteen.Models.Can_LocationModel>(grid))
</div>
