@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Category.Models
@using HRM.Presentation.UI.Controls.Kendo

@model HRM.Presentation.Category.Models.Cat_HDTJobGroupModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;

    IList<SelectListItem> list = Enum.GetValues(typeof(EnumDropDown.HDTJobType))
          .Cast<EnumDropDown.HDTJobType>()
          .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
          .ToList();
}

<script>
    //var Validator = CheckValidate();
    SetFieldRequired();
    function checkDuplicationCode() {

        var _code = $("#Code").val();
        var _id = '@lineId';
        var param = {
            tableName: 'Cat_HDTJobGroup',
            columnName: 'Code',
            keyword: _code,
            id: _id

        };

        var isduplicate = checkDuplicate('@_hrm_Hr_Service', 'Sys_GetData', 'CheckDuplicate', param, "Code");

        return isduplicate;
    }

    function onSave() {
      //  if (CheckValidate(data)) {
        onSaveAndContinue($('#form_Cat_HDTJobGroup'), '@_hrm_Hr_Service', 'api/Cat_HDTJobGroup/', '@ConstantControlName.HRM_Category_HDTJobGroup_Grid_Name', '@ConstantControlName.HRM_Category_HDTJobGroup_PopUp_Name');
       // }
        return false;
    }

    function onSaveClose() {
      //  if (CheckValidate(data)) {
        onSaveAndClose($('#form_Cat_HDTJobGroup'), '@_hrm_Hr_Service', 'api/Cat_HDTJobGroup/', '@ConstantControlName.HRM_Category_HDTJobGroup_Grid_Name', '@ConstantControlName.HRM_Category_HDTJobGroup_PopUp_Name');
       // }
        return false;
    }
    function onSaveDataPopUp() {

        //    if (CheckValidate(data)) {
        //   if (!checkDuplicationCode()) {
        onlySave($('#form_Cat_HDTJobGroup'), '@_hrm_Hr_Service', 'api/Cat_HDTJobGroup/', '@ConstantControlName.HRM_Category_HDTJobGroup_Grid_Name'); return false;
        //    }
        // }
    }

</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Cat_HDTJobGroup" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150 ">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">
                        @{
    var _Code = new TextBoxBuilderInfo()
    {
        Width = 300,
        Name = "CatHDTJobGroupInfo_Code"
    };
    if (Model != null)
    {
        _Code.Value = Model == null ? string.Empty : Model.Code;
    }
                        }
                        @Html.VnrTextBoxFor(mode => mode.Code, _Code)

                    </div>
                </div>
                <div>
                    <div class="FieldTitle150 ">
                        @Html.VnrLabelFor(mode => mode.HDTJobGroupName)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.HDTJobGroupName)
                    </div>
                </div>
            
                <div>
                    <div class="FieldTitle150 ">
                        @Html.VnrLabelFor(mode => mode.Type)
                    </div>
                    <div class="FieldValue">
                        @{
    var dropdownStatus = new DropDownListBuilderInfo()
    {
        StyleCss = "width:300px",
        Name = "HDTJobGroup_Type",
        DataTextField = "Text",
        DataValueField = "Value",
        BindTo = list,
        OptionLabel = @ConstantDisplay.HRM_System_UserApprove_SelectType.TranslateString(),

    };
                        }
                        @(Html.VnrDropDownListFor(mode => mode.Type, dropdownStatus))
                    </div>

                </div>
                <div>
                    <div class="FieldTitle150 ">
                        @Html.VnrLabelFor(mode => mode.Description)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Description, "width:500px;height:100px;")
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150 ">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-Cat_HDTJobGroup", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-Cat_HDTJobGroup", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-Cat_HDTJobGroup", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })

                    </div>
                </div>
            </td>
        </tr>
    </table>
}