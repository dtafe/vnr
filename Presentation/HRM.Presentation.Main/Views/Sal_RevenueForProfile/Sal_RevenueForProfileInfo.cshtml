@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Payroll.Models

@model Sal_RevenueForProfileModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
 
   
    IList<SelectListItem> listSaleTypes = Enum.GetValues(typeof(EnumDropDown.SalesType))
     .Cast<EnumDropDown.SalesType>()
     .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() }).OrderBy(p=>p.Text)
     .ToList();

}

<script>
    SetFieldRequired();

    function onSave() {
        onSaveAndContinue($('#form_Sal_RevenueForProfile'), '@_hrm_Hr_Service', 'api/Sal_RevenueForProfile/', 'grid_Sal_RevenueForProfile', 'windowSal_RevenueForProfile');
        return false;
    }

    function onSaveClose() {
        onSaveAndClose($('#form_Sal_RevenueForProfile'), '@_hrm_Hr_Service', 'api/Sal_RevenueForProfile/', 'grid_Sal_RevenueForProfile', 'windowSal_RevenueForProfile');
        return false;
    }

    function onSaveDataPopUp() {
        onlySave($('#form_Sal_RevenueForProfile'), '@_hrm_Hr_Service', 'api/Sal_RevenueForProfile/', 'grid_Sal_RevenueForProfile'); return false;
    }

</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Sal_RevenueForProfile" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div id=" div1">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.ProfileName)
                        @Html.HiddenFor(mode => mode.ID)
                    </div>
                    <div class="FieldValue">
                        @{
    System.Collections.IEnumerable valueProfile = new string[] { };
    if (Model != null)
    {
        valueProfile = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
    }
                        }
                        @{
    var Profile = new MultiSelectBuilderInfo()
    {
        Name = "RevenueForProfileIfo_ProfileID",
        DataTextField = Sal_RevenueForProfileModel.FieldNames.ProfileName,
        DataValueField = Sal_RevenueForProfileModel.FieldNames.ID,
        Url = @_hrm_Hr_Service + "HrMultiSelect/GetMultiProfile",
        Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
        MaxSelectedItems = 1,
        Value = valueProfile,
        Width = 300
    };
                        }
                        @(Html.VnrMultiSelectFor(mode => mode.ProfileID, Profile))
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id=" div1">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Type)
                    </div>
                    <div class="FieldValue">
                        @{
    var _Type = new DropDownListBuilderInfo()
    {
        StyleCss = "width:300px",
        Name = "RevenueForProfileIfo_Type",
        DataTextField = "Text",
        DataValueField = "Value",
        BindTo = listSaleTypes
    };
                        }
                        @Html.VnrDropDownListFor(model => model.Type, _Type)
                    </div>
                </div>
                <div id=" div1">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Target)
                    </div>
                    <div class="FieldValue">
                        @{
    var _Targetr = new NumericTextBoxBuilderInfo<double>()
    {
        StyleCss = "width:150px",
        Name = "RevenueForProfileIfo_Target",
        //Format = ConstantFormat.HRM_Format_Number_Double.ToString(),
        Format = ConstantFormat.HRM_Format_Int,
    };
                        }
                        @(Html.VnrNumericTextBoxFor(model => model.Target, _Targetr))
                    </div>
                </div>
                <div id=" div1">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Actual)
                    </div>
                    <div class="FieldValue">
                        @{
    var _Actual = new NumericTextBoxBuilderInfo<double>()
    {
        StyleCss = "width:150px",
        
        Name = "RevenueForProfileIfo_Actual",
        //Format = ConstantFormat.HRM_Format_Number_Double.ToString(),
        Format = ConstantFormat.HRM_Format_Int,
    };
                        }
                        @(Html.VnrNumericTextBoxFor(model => model.Actual, _Actual))
                    </div>
                </div>
                <div id=" div1">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.DateFrom)
                    </div>
                    <div class="FieldValue">
                        @{
    var _DateFrom = new DatePickerBuilderInfo()
    {
        Name = "RevenueForProfileIfo_DateFrom",
        StyleCss = "width:120px"
    };
                        }
                        @Html.VnrDatePickerFor(model => model.DateFrom, _DateFrom)

                        @Html.VnrLabelFor(mode => mode.DateTo)

                        @{
    var _DateTo = new DatePickerBuilderInfo()
    {
        Name = "RevenueForProfileIfo_DateTo",
        StyleCss = "width:120px"
    };
                        }
                        @Html.VnrDatePickerFor(model => model.DateTo, _DateTo)
                    </div>
                </div>

                <div id=" div1">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Note)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Note, "width:500px;height:100px;")
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-RevenueForProfile", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-RevenueForProfile", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-RevenueForProfile", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}
