@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.UI.Controls.Kendo.DropDownList
@using HRM.Presentation.UI.Controls.Kendo.MultiSelect

@using HRM.Infrastructure.Utilities
@using System.Collections
@using HRM.Presentation.Payroll.Models;

@model Sal_GradeModel

@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;

}
<script>
    SetFieldRequired();


    function onSave() {

        @*var ProfileID = $('#@Html.FieldIdFor(model => model.ProfileID)').val();
        ProfileID != null ? $('#@Html.FieldIdFor(model => model.ProfileIDs)').val(ProfileID.join(',')) : null;
        checkedNodes = [];
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes);
        checkedNodes != null ? $('#@Html.FieldIdFor(model => model.OrgStructureID)').val(checkedNodes.join(',')) : null;
        $("#OrgStructureID").val(checkedNodes.join(','));*@

        onSaveAndContinue($('#form_Rec_RecruitmentCampaign'), '@_hrm_Hr_Service', 'api/Sal_Grade/', '@ConstantControlName.HRM_gridSal_Grade_Grid_Name', '@ConstantControlName.HRM_gridSal_Grade_PopUp_Name');
        return false;
    }

    function onSaveClose() {

        @*var ProfileID = $('#@Html.FieldIdFor(model => model.ProfileID)').val();
        ProfileID != null ? $('#@Html.FieldIdFor(model => model.ProfileIDs)').val(ProfileID.join(',')) : null;
        checkedNodes = [];
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes);
        checkedNodes != null ? $('#@Html.FieldIdFor(model => model.OrgStructureID)').val(checkedNodes.join(',')) : null;
        $("#OrgStructureID").val(checkedNodes.join(','));*@
        onSaveAndClose($('#form_Rec_RecruitmentCampaign'), '@_hrm_Hr_Service', 'api/Sal_Grade/', '@ConstantControlName.HRM_gridSal_Grade_Grid_Name', '@ConstantControlName.HRM_gridSal_Grade_PopUp_Name');
        return false;
    }

    function onSaveDataPopUp() {

        @*var ProfileID = $('#@Html.FieldIdFor(model => model.ProfileID)').val();
        ProfileID != null ? $('#@Html.FieldIdFor(model => model.ProfileIDs)').val(ProfileID.join(',')) : null;
        checkedNodes = [];
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes);
        checkedNodes != null ? $('#@Html.FieldIdFor(model => model.OrgStructureID)').val(checkedNodes.join(',')) : null;
        $("#OrgStructureID").val(checkedNodes.join(','));*@
        onlySave($('#form_Rec_RecruitmentCampaign'), '@_hrm_Hr_Service', 'api/Sal_Grade/', '@ConstantControlName.HRM_gridSal_Grade_Grid_Name');
        return false;
    }
</script>
<style>
    label {
        min-width: 100px;
    }
</style>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Rec_RecruitmentCampaign" }))
{

    <div class="VnRMain">
        <table style="width:100%">
            <tbody>
                <tr><td colspan="3" style=""></td></tr>
                <tr>

                    <td valign="top">
                        <div>
                            <div style="float:left; width:600px">
                                <div id="div2">
                                    <div class="FieldTitle150">
                                        @*@Html.VnrLabelFor(mode => mode.OrgStructureID)*@
                                    </div>
                                    <div class="FieldValue">
                                        @*@Html.Partial("EditorTemplates/OrgStructureTreeViewDropdown")*@
                                        @*@Html.HiddenFor(model => model.OrgStructureID)*@
                                    </div>
                                </div>
                                <div id="div1">
                                    <div class="FieldTitle150">
                                        @Html.HiddenFor(m => m.IsCreateByProfile, new { @Value = Model != null ? true : false })
                                        @(Html.HiddenFor(model => model.ProfileID))
                                        @(Html.HiddenFor(model => model.ProfileIDs))
                                        @(Html.HiddenFor(model => model.OrgStructureID))
                                        @(Html.HiddenFor(m => m.ProfileIDsExclude))
                                        @*@Html.VnrLabel(ConstantDisplay.HRM_Rec_Interview_CandidateName.TranslateString())*@
                                        @Html.VnrLabelFor(model => model.ProfileName)
                                    </div>
                                    <div class="FieldValue">
                                        @{
    IEnumerable valuepro = new string[] { };
    if (Model != null)
    {
        valuepro = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
    }

    var _ProfileIDs1 = new MultiSelectBuilderInfo
    {
        DataTextField = "ProfileName",
        DataValueField = "ID",
        Url = @_hrm_Hr_Service + "Hre_GetData/GetMultiProfile",
        //  MaxSelectedItems = 1,
        Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
        Value = valuepro,

    };
                                        }
                                        @{
    var ProfileOrOrgStructure = new HRM.Presentation.UI.Controls.VnrSelectProfileOrOrgStructure()
    {
        Name = "SelectProfileOrOrgStructure_Grade",
        ProfileMultiSelect = _ProfileIDs1,
        BindingProfileForField = "ProfileIDs",
        BindingOrgStructureForField = "OrgStructureID",
        BindingExclusionProfileForField = "ProfileIDsExclude",

    };
                                        }
                                        @Html.Partial("EditorTemplates/SelectProfileOrOrgStructure", ProfileOrOrgStructure)
                                    </div>
                                    <div style="clear: both;"></div>
                                </div>

                                <div id="div2">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.GradePayrollID)
                                    </div>
                                    <div class="FieldValue">
                                        @{
    IEnumerable valueGradeAttendance = new string[] { };
    if (Model != null)
    {
        valueGradeAttendance = new[] { new { GradeCfgName = Model.GradeCfgName, ID = Model.GradePayrollID } };
    }
                                        }
                                        @{
    var multiSelectGradeAttendanceID = new MultiSelectBuilderInfo()
    {
        Width = 300,
        Name = "Grade_GradePayrollID",
        DataTextField = "GradeCfgName",
        DataValueField = "ID",
        Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiGradePayroll",
        Placeholder = ConstantDisplay.HRM_Category_SelectCatGradePayroll.TranslateString(),
        //  MaxSelectedItems = 1,
        Value = valueGradeAttendance
    };
                                        }
                                        @(Html.VnrMultiSelectFor(mode => mode.GradePayrollID, multiSelectGradeAttendanceID))
                                    </div>
                                </div>
                                <div id="div4">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.MonthStart)
                                    </div>
                                    <div class="FieldValue">
                                        @{
    var datepickerMonthStart = new DatePickerBuilderInfo()
    {
        Name = "Grade_MonthStart",
        Value = @Html.DisplayFor(mode => mode.MonthStart).ToString(),
        Placeholder = ConstantDisplay.HRM_HR_Profile_DateFrom.TranslateString(),
        Format = ConstantFormat.HRM_Format_DayMonthYear.TranslateString(),
        StyleCss = "width:120px"
    };
                                        }
                                        @Html.VnrDatePickerFor(model => model.MonthStart, datepickerMonthStart)
                                    </div>
                                </div>
                                <div id="div5">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.MonthEnd)
                                    </div>
                                    <div class="FieldValue">
                                        @{
    var datepickerMonthEnd = new DatePickerBuilderInfo()
    {
        Name = "Grade_MonthEnd",

        Value = @Html.DisplayFor(mode => mode.MonthEnd).ToString(),
        Placeholder = ConstantDisplay.HRM_HR_Profile_DateTo.TranslateString(),
        Format = ConstantFormat.HRM_Format_DayMonthYear.TranslateString(),
        StyleCss = "width:120px"
    };
                                        }
                                        @Html.VnrDatePickerFor(model => model.MonthEnd, datepickerMonthEnd)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </td>

                </tr>
                <tr>
                    <td style="padding-top:2px; padding-bottom:10px;">
                        <div class="LineFooterCommandEdit">
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div>
                            <div class="FieldTitle150">

                            </div>
                            <div class="FieldValue">
                                @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-RecruitmentCampaign", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                                @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-RecruitmentCampaign", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                                @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-RecruitmentCampaign", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            </div>

                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
}
