@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using System.Collections

@model HRM.Presentation.Category.Models.Cat_OvertimeResonModel


@{
    ViewBag.Title = "CatOvertimeReasonInfo";
    Layout = null;
    //var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;


    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;

    var lineID = Model == null ? Guid.Empty : Model.ID;
    //var _hrm_Hr_Service = ConstantPathWeb.Hrm_Sys_Service;
}
<script>

    //var data = SetCharacteFieldRequired();
    SetFieldRequired();

    function onSave() {
        //     if (!checkDuplicationCode()) {
        
        onSaveAndContinue($('#form_Cat_OvertimeReason'), '@_hrm_Hr_Service', 'api/Cat_OvertimeReson/', 'grid_Cat_OvertimeReason', 'windowCatOvertimeReason');

        //  }
        return false;
    }

    function onSaveClose() {
        //  if (!checkDuplicationCode()) {
        onSaveAndClose($('#form_Cat_OvertimeReason'), '@_hrm_Hr_Service', 'api/Cat_OvertimeReson/', 'grid_Cat_OvertimeReason', 'windowCatOvertimeReason');

        // }
        return false;
    }
    function onSaveDataPopUp() {
        
        //     if (!checkDuplicationCode()) {
        onlySave($('#form_Cat_OvertimeReason'), '@_hrm_Hr_Service', 'api/Cat_OvertimeReson/', 'grid_Cat_OvertimeReason'); return false;
        // }
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Cat_OvertimeReason" }))
{



    <table>
        <tr>
            <td>
                <div id="div5">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">
                        @{
    var _ResignReasonCode = new TextBoxBuilderInfo()
    {
        Name = "CatOvertimeResaonInfo_Code",
        CssStyle = "width:150px"
    };
    if (Model != null)
    {
        _ResignReasonCode.Value = Model.Code == null ? string.Empty : Model.Code;
    }

                        }
                        @(Html.VnrTextBoxFor(model => model.Code, _ResignReasonCode))
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div2">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.OvertimeResonName)
                    </div>
                    <div class="FieldValue">
                        @(Html.VnrTextAreaFor(model => model.OvertimeResonName, "width:500px;height:100px;"))
                    </div>
                    <div style="clear: both;"></div>
                </div>

                <div id="div4">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.OvertimeResonNameEng)
                    </div>
                    <div class="FieldValue">
                        @(Html.VnrTextBoxFor(model => model.OvertimeResonNameEng, "width:300px"))
                    </div>
                    <div style="clear: both;"></div>
                </div>

                <div id="div4">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Description)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Description, "width:500px;height:100px;")
                    </div>
                    <div style="clear: both;"></div>
                </div>

            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150" style="width: 184px;">
                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-ResignReason", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-catResignReason", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-catResignReason", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
    @Html.HiddenFor(model => model.ID)
}


