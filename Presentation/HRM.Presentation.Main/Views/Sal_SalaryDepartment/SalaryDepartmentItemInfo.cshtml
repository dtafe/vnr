@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.Payroll.Models
@model HRM.Presentation.Payroll.Models.Sal_SalaryDepartmentItemModel

@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;

    var rcID = Guid.Empty;
    if (Model != null)
    {
        rcID = Model.ID;
    }
    IList<SelectListItem> listStatusLoadEnumSalDepartItem = Enum.GetValues(typeof(EnumDropDown.StatusLoadEnumSalDepartItem))
     .Cast<EnumDropDown.StatusLoadEnumSalDepartItem>()
     .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() }).OrderBy(p=>p.Text)
     .ToList();
}
<script>
    SetFieldRequired();
    function onSave() {
        onSaveAndContinue($('#form_cat_SalaryDepartmentItem'), '@_hrm_Hr_Service', 'api/Sal_SalaryDepartmentItem/', 'gridSal_SalDepartmentItem', 'windowSal_SalDepartmentItem');
        return false;
    }
    function onSaveClose() {
        onSaveAndClose($('#form_cat_SalaryDepartmentItem'), '@_hrm_Hr_Service', 'api/Sal_SalaryDepartmentItem/', 'gridSal_SalDepartmentItem', 'windowSal_SalDepartmentItem'); return false;
    };

    function onSaveDataPopUp() {
        var rs = onlySave($('#form_cat_SalaryDepartmentItem'), '@_hrm_Hr_Service', 'api/Sal_SalaryDepartmentItem/', 'gridSal_SalDepartmentItem');
    };

    

</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_cat_SalaryDepartmentItem" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div >
                    <fieldset>
                        <legend>
                            @ConstantDisplay.HRM_HR_Profile_Basic.TranslateString()
                        </legend>
                        <div style="float:left">
                            <div>
                                <div id=" div1">
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(mode => mode.ProfileName)
                                        @Html.HiddenFor(mode => mode.ID)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            System.Collections.IEnumerable valueProfile = new string[] { };
                                            if (Model != null)
                                            {
                                                valueProfile = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
                                            }
                                                                                }
                                                                                @{
                                            var Profile = new MultiSelectBuilderInfo()
                                            {
                                                Name = "SalaryDepartmentItemInfo_ProfileID",
                                                DataTextField = Sal_SalaryDepartmentItemModel.FieldNames.ProfileName,
                                                DataValueField = Sal_SalaryDepartmentItemModel.FieldNames.ID,
                                                Url = @_hrm_Hr_Service + "HrMultiSelect/GetMultiProfile",
                                                Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                                                MaxSelectedItems = 1,
                                                Value = valueProfile,
                                                Width = 225
                                            };
                                        }
                                        @(Html.VnrMultiSelectFor(mode => mode.ProfileID, Profile))
                                    </div>
                                    <div style="clear: both;"></div>
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle170">
                                    @Html.VnrLabelForNoneIcon(model => model.SalaryDepartmentID)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var tSalaryDepartmentID = new ComboBoxBuilderInfo()
                                      {
                                          Name = "SalaryDepartmentItemInfo_SalaryDepartmentID",
                                          StyleCss = "Width: 200px",
                                          DataTextField = "DepartmentName",
                                          DataValueField = "ID",
                                          ServerFilter = true,
                                          Url = _hrm_Hr_Service + "Sal_GetData/GetMultiDepartment/",
                                          Value = Model == null ? string.Empty : Model.SalaryDepartmentID.ToString(),
                                      };
                                    }
                                    @Html.VnrComboBoxFor(model => model.SalaryDepartmentID, tSalaryDepartmentID).Text(Model == null ? string.Empty : Model.DepartmentName)

                                </div>
                            </div>

                            <div id=" div1">
                                <div class="FieldTitle170">
                                    @Html.VnrLabelFor(mode => mode.Status)
                                </div>
                                <div class="FieldValue">
                                    @{
                                    var _Status = new DropDownListBuilderInfo()
                                    {
                                        Name = "SalaryDepartmentItemInfo_Status",
                                        DataTextField = "Text",
                                        DataValueField = "Value",
                                        BindTo = listStatusLoadEnumSalDepartItem,
                                        StyleCss="width:200px"
                                    };
                                    }
                                    @Html.VnrDropDownListFor(model => model.Status, _Status)
                                </div>
                            </div>

                        </div>
                        <div style="float:left;margin-left:50px">
                            <div id=" div1">
                                <div class="FieldTitle170">
                                    @Html.VnrLabelFor(mode => mode.Rate)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var _Rate = new NumericTextBoxBuilderInfo<double>()
                                    {
                                        Name = "SalaryDepartmentItemInfo_Rate",
                                        StyleCss = "Width: 80px",
                                        //Format = ConstantFormat.HRM_Format_Number_Double.ToString(),
                                    };
                                    }
                                    @(Html.VnrNumericTextBoxFor(model => model.Rate, _Rate))
                                </div>
                            </div>
                            <div id=" div1">
                                <div class="FieldTitle170">
                                    @Html.VnrLabelFor(mode => mode.PaidWorkHours)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var _PaidWorkHours = new NumericTextBoxBuilderInfo<double>()
                                    {
                                        Name = "SalaryDepartmentItemInfo_PaidWorkHours",
                                        StyleCss = "Width: 80px",
                                        //Format = ConstantFormat.HRM_Format_Number_Double.ToString(),
                                    };
                                    }
                                    @(Html.VnrNumericTextBoxFor(model => model.PaidWorkHours, _PaidWorkHours))
                                </div>
                            </div>
                            <div id=" div1">
                                <div class="FieldTitle170">
                                    @Html.VnrLabelFor(mode => mode.AmoutSalary)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var _AmoutSalary = new NumericTextBoxBuilderInfo<double>()
                                        {
                                            Name = "SalaryDepartmentItemInfo_AmoutSalary",
                                            StyleCss = "Width: 135px",
                                            //Format = ConstantFormat.HRM_Format_Number_Double.ToString(),
                                        };
                                    }
                                    @(Html.VnrNumericTextBoxFor(model => model.AmoutSalary, _AmoutSalary))
                                    @{
                                        var CurrencyName = new ComboBoxBuilderInfo()
                                         {
                                             Name = "SalaryDepartmentItemInfo_CurrencyID",
                                             DataTextField = "CurrencyName",
                                             DataValueField = "ID",
                                             Url = _hrm_Hr_Service + "Cat_GetData/GetMultiCurrency",
                                             StyleCss = "width:60px;",
                                             //   Index = 0,
                                             Value = Model == null ? string.Empty : Model.CurrencyID.ToString(),
                                             //  Autobind = true,
                                         };
                                    }
                                    @(Html.VnrComboBoxFor(mode => mode.CurrencyID, CurrencyName).Text(Model == null ? string.Empty : Model.CurrencyName))
                                </div>
                            </div>

                        </div>
                        
   </fieldset>

</div>
                
                <div>
                    <fieldset>
                        <legend>
                            @ConstantDisplay.HRM_Attendance_Overtime_OvertimeTypeID.TranslateString()
                        </legend>
                        <div style="float:left">
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle170">
                                    @Html.VnrLabelForNoneIcon(model => model.Overtime1TypeID)
                                </div>
                                <div class="FieldValue">
                                    @{
    var tOvertime1TypeID = new ComboBoxBuilderInfo()
  {
      Name = "SalaryDepartmentItemInfo_Overtime1TypeID",
      StyleCss = "Width: 200px",
      DataTextField = "OvertimeTypeName",
      DataValueField = "ID",
      ServerFilter = true,
      Url = _hrm_Hr_Service + "Cat_GetData/GetMultiOvertimeType/",
      Value = Model == null ? string.Empty : Model.Overtime1TypeID.ToString(),
  };
                                    }
                                    @Html.VnrComboBoxFor(model => model.Overtime1TypeID, tOvertime1TypeID).Text(Model == null ? string.Empty : Model.OvertimeTypeName)

                                </div>
                            </div>
                            <div id=" div1">
                                <div class="FieldTitle170">
                                    @Html.VnrLabelFor(mode => mode.Overtime1Hours)
                                </div>
                                <div class="FieldValue">
                                    @{
    var _Overtime1Hours = new NumericTextBoxBuilderInfo<double>()
    {
        Name = "SalaryDepartmentItemInfo_Overtime1Hours",
        StyleCss = "Width: 80px",
    };
                                    }
                                    @(Html.VnrNumericTextBoxFor(model => model.Overtime1Hours, _Overtime1Hours))
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle170">
                                    @Html.VnrLabelForNoneIcon(model => model.Overtime2TypeID)
                                </div>
                                <div class="FieldValue">
                                    @{
    var tOvertime2TypeID = new ComboBoxBuilderInfo()
  {
      Name = "SalaryDepartmentItemInfo_Overtime2TypeID",
      StyleCss = "Width: 200px",
      DataTextField = "OvertimeTypeName",
      DataValueField = "ID",
      ServerFilter = true,
      Url = _hrm_Hr_Service + "Cat_GetData/GetMultiOvertimeType/",
      Value = Model == null ? string.Empty : Model.Overtime2TypeID.ToString(),
  };
                                    }
                                    @Html.VnrComboBoxFor(model => model.Overtime2TypeID, tOvertime2TypeID).Text(Model == null ? string.Empty : Model.OvertimeTypeName1)

                                </div>
                            </div>
                            <div id=" div1">
                                <div class="FieldTitle170">
                                    @Html.VnrLabelFor(mode => mode.Overtime2Hours)
                                </div>
                                <div class="FieldValue">
                                    @{
    var _Overtime2Hours = new NumericTextBoxBuilderInfo<double>()
    {
        Name = "SalaryDepartmentItemInfo_Overtime2Hours",
        StyleCss = "Width: 80px",
    };
                                    }
                                    @(Html.VnrNumericTextBoxFor(model => model.Overtime2Hours, _Overtime2Hours))
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle170">
                                    @Html.VnrLabelForNoneIcon(model => model.Overtime3TypeID)
                                </div>
                                <div class="FieldValue">
                                    @{
    var tOvertime3TypeID = new ComboBoxBuilderInfo()
  {
      Name = "SalaryDepartmentItemInfo_Overtime3TypeID",
      StyleCss = "Width: 200px",
      DataTextField = "OvertimeTypeName",
      DataValueField = "ID",
      ServerFilter = true,
      Url = _hrm_Hr_Service + "Cat_GetData/GetMultiOvertimeType/",
      Value = Model == null ? string.Empty : Model.Overtime3TypeID.ToString(),
  };
                                    }
                                    @Html.VnrComboBoxFor(model => model.Overtime3TypeID, tOvertime3TypeID).Text(Model == null ? string.Empty : Model.OvertimeTypeName2)

                                </div>
                            </div>
                            <div id=" div1">
                                <div class="FieldTitle170">
                                    @Html.VnrLabelFor(mode => mode.Overtime3Hours)
                                </div>
                                <div class="FieldValue">
                                    @{
    var _Overtime3Hours = new NumericTextBoxBuilderInfo<double>()
    {
        Name = "SalaryDepartmentItemInfo_Overtime3Hours",
        StyleCss = "Width: 80px",
    };
                                    }
                                    @(Html.VnrNumericTextBoxFor(model => model.Overtime3Hours, _Overtime3Hours))
                                </div>
                            </div>
                        </div>

                        <div style="float:left;margin-left:80px">
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle170">
                                    @Html.VnrLabelForNoneIcon(model => model.Overtime4TypeID)
                                </div>
                                <div class="FieldValue">
                                    @{
    var tOvertime4TypeID = new ComboBoxBuilderInfo()
  {
      Name = "SalaryDepartmentItemInfo_Overtime4TypeID",
      StyleCss = "Width: 200px",
      DataTextField = "OvertimeTypeName",
      DataValueField = "ID",
      ServerFilter = true,
      Url = _hrm_Hr_Service + "Cat_GetData/GetMultiOvertimeType/",
      Value = Model == null ? string.Empty : Model.Overtime4TypeID.ToString(),
  };
                                    }
                                    @Html.VnrComboBoxFor(model => model.Overtime4TypeID, tOvertime4TypeID).Text(Model == null ? string.Empty : Model.OvertimeTypeName3)

                                </div>
                            </div>
                            <div id=" div1">
                                <div class="FieldTitle170">
                                    @Html.VnrLabelFor(mode => mode.Overtime4Hours)
                                </div>
                                <div class="FieldValue">
                                    @{
    var _Overtime4Hours = new NumericTextBoxBuilderInfo<double>()
    {
        Name = "SalaryDepartmentItemInfo_Overtime4Hours",
        StyleCss = "Width: 80px",
    };
                                    }
                                    @(Html.VnrNumericTextBoxFor(model => model.Overtime4Hours, _Overtime4Hours))
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle170">
                                    @Html.VnrLabelForNoneIcon(model => model.Overtime5TypeID)
                                </div>
                                <div class="FieldValue">
                                    @{
    var tOvertime5TypeID = new ComboBoxBuilderInfo()
  {
      Name = "SalaryDepartmentItemInfo_Overtime5TypeID",
      StyleCss = "Width: 200px",
      DataTextField = "OvertimeTypeName",
      DataValueField = "ID",
      ServerFilter = true,
      Url = _hrm_Hr_Service + "Cat_GetData/GetMultiOvertimeType/",
      Value = Model == null ? string.Empty : Model.Overtime5TypeID.ToString(),
  };
                                    }
                                    @Html.VnrComboBoxFor(model => model.Overtime5TypeID, tOvertime5TypeID).Text(Model == null ? string.Empty : Model.OvertimeTypeName4)

                                </div>
                            </div>
                            <div id=" div1">
                                <div class="FieldTitle170">
                                    @Html.VnrLabelFor(mode => mode.Overtime5Hours)
                                </div>
                                <div class="FieldValue">
                                    @{
    var _Overtime5Hours = new NumericTextBoxBuilderInfo<double>()
    {
        Name = "SalaryDepartmentItemInfo_Overtime5Hours",
        StyleCss = "Width: 80px",
    };
                                    }
                                    @(Html.VnrNumericTextBoxFor(model => model.Overtime5Hours, _Overtime5Hours))
                                </div>
                            </div>

                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle170">
                                    @Html.VnrLabelForNoneIcon(model => model.Overtime6TypeID)
                                </div>
                                <div class="FieldValue">
                                    @{
    var tOvertime6TypeID = new ComboBoxBuilderInfo()
  {
      Name = "SalaryDepartmentItemInfo_Overtime6TypeID",
      StyleCss = "Width: 200px",
      DataTextField = "OvertimeTypeName",
      DataValueField = "ID",
      ServerFilter = true,
      Url = _hrm_Hr_Service + "Cat_GetData/GetMultiOvertimeType/",
      Value = Model == null ? string.Empty : Model.Overtime6TypeID.ToString(),
  };
                                    }
                                    @Html.VnrComboBoxFor(model => model.Overtime6TypeID, tOvertime6TypeID).Text(Model == null ? string.Empty : Model.OvertimeTypeName5)

                                </div>
                            </div>
                            <div id=" div1">
                                <div class="FieldTitle170">
                                    @Html.VnrLabelFor(mode => mode.Overtime6Hours)
                                </div>
                                <div class="FieldValue">
                                    @{
    var _Overtime6Hours = new NumericTextBoxBuilderInfo<double>()
    {
        Name = "SalaryDepartmentItemInfo_Overtime6Hours",
        StyleCss = "Width: 80px",
    };
                                    }
                                    @(Html.VnrNumericTextBoxFor(model => model.Overtime6Hours, _Overtime6Hours))
                                </div>
                            </div>
                        </div>
                        
                       
    </fieldset>
</div>


            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-sal_salDepartmentItem", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-sal_salDepartmentItem", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-sal_salDepartmentItem", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>

    </table>


}
