@using HRM.Infrastructure.Utilities
@using System.Collections
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Category.Models;
@model Cat_SalaryRankModel

@{
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
}
<script>
    function  CheckSalaryMinMax() {
        debugger;
        var _SalaryMin = $('#CatSararyRank_SalaryMin').val();
        var _SalaryMax = $('#CatSararyRank_SalaryMax').val();
        if (_SalaryMin != '' && _SalaryMax != '' && _SalaryMin > _SalaryMax)
            ShowNotificationProcessor('@ConstantDisplay.HRM_Category_SalaryRank_SalaryMax.TranslateString()' + " >= " + '@ConstantDisplay.HRM_Category_SalaryRank_SalaryMin.TranslateString()');
        return;
    }
   
    SetFieldRequired();
    function onSaveNew() {
        var _SalaryMin = $('#CatSararyRank_SalaryMin').val();
        var _SalaryMax = $('#CatSararyRank_SalaryMax').val();
        if (_SalaryMin != '' && _SalaryMax != '' && _SalaryMin > _SalaryMax)
        {
            ShowNotificationProcessor('@ConstantDisplay.HRM_Category_SalaryRank_SalaryMax.TranslateString()' + " >= " + '@ConstantDisplay.HRM_Category_SalaryRank_SalaryMin.TranslateString()');
            return;
        }

        onSaveAndContinue($('#form_Cat_SalaryRank'), '@_hrm_Hre_Service', 'api/Cat_SalaryRank/', 'gridSalaryRank', 'WindownSalaryRank'); return false;
    }
    function onSaveClose() {
        var _SalaryMin = $('#CatSararyRank_SalaryMin').val();
        var _SalaryMax = $('#CatSararyRank_SalaryMax').val();
        if (_SalaryMin != '' && _SalaryMax != '' && _SalaryMin > _SalaryMax) {
            ShowNotificationProcessor('@ConstantDisplay.HRM_Category_SalaryRank_SalaryMax.TranslateString()' + " >= " + '@ConstantDisplay.HRM_Category_SalaryRank_SalaryMin.TranslateString()');
            return;
        }
        onSaveAndClose($('#form_Cat_SalaryRank'), '@_hrm_Hre_Service', 'api/Cat_SalaryRank/', 'gridSalaryRank', 'WindownSalaryRank'); return false;
    }
    function onSaveDataPopUp() {
        var _SalaryMin = $('#CatSararyRank_SalaryMin').val();
        var _SalaryMax = $('#CatSararyRank_SalaryMax').val();
        if (_SalaryMin != '' && _SalaryMax != '' && _SalaryMin > _SalaryMax) {
            ShowNotificationProcessor('@ConstantDisplay.HRM_Category_SalaryRank_SalaryMax.TranslateString()' + " >= " + '@ConstantDisplay.HRM_Category_SalaryRank_SalaryMin.TranslateString()');
            return;
        }
        onlySave($('#form_Cat_SalaryRank'), '@_hrm_Hre_Service', 'api/Cat_SalaryRank/', 'gridSalaryRank'); return false;
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Cat_SalaryRank" }))
{
    @Html.HiddenFor(model => model.ID)
    <table style="width:100%">
        <tbody>
            <tr>
                <td valign="top">
                    <div style="width:100%">
                        <div>
                            @{
                                if (Model != null)
                                {
                                    @Html.HiddenFor(model => model.ID)
                                }
                            }
                        </div>
                        
                        <div id="div3">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.SalaryClassName)
                            </div>
                            <div class="FieldValue">
                                @{
                                var _SalaryClassName = new ComboBoxBuilderInfo()
                                {
                                    Name = "SalaryRankInfo_SalaryClassID",
                                    DataTextField = "SalaryClassName",
                                    DataValueField = "ID",
                                    Url = _hrm_Hre_Service + "Cat_GetData/GetMultiSalaryClass",
                                    StyleCss = "width:300px;",
                                    Value = Model == null ? string.Empty : Model.SalaryClassID.ToString(),
                                    Autobind=true,
                                };
                                }
                                @(Html.VnrComboBoxFor(mode => mode.SalaryClassID, _SalaryClassName))
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div6">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.SalaryRankName)
                            </div>
                            <div class="FieldValue">
                                @(Html.VnrTextBoxFor(mode => mode.SalaryRankName, "width:300px"))
                            </div>
                            <div style="clear: both;"></div>
                        </div> 
                        <div id="div6">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.DateOfEffect)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var DatapickerAffec = new DatePickerBuilderInfo()
                                    {
                                        StyleCss = "width:120px",
                                        };
                                    
                                }
                                @Html.VnrDatePickerFor(mode => mode.DateOfEffect, DatapickerAffec)
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        
                        <div id="div7">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.Rate)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextBoxFor(mode => mode.Rate, "width:300px")
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div8">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.SalaryStandard)
                            </div>
                            <div class="FieldValue">
                                @{
                                var numericTextBoxSalaryStandard = new NumericTextBoxBuilderInfo<double>()
                                {
                                    StyleCss = "width:150px",
                                    Name = "CatSararyRank_SalaryStandard",
                                    Format = ConstantFormat.HRM_Format_Int
                                    };
                                }
                              @Html.VnrNumericTextBoxFor(mode => mode.SalaryStandard, numericTextBoxSalaryStandard)
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div9">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.SalaryMin)
                            </div>
                            <div class="FieldValue">
                                @{
                            var numericTextBoxSalaryMin = new NumericTextBoxBuilderInfo<double>()
                            {
                                StyleCss = "width:150px",
                                Name = "CatSararyRank_SalaryMin",
                                Format = ConstantFormat.HRM_Format_Int
                            };                                   
                                }
                                @Html.VnrNumericTextBoxFor(mode => mode.SalaryMin, numericTextBoxSalaryMin)
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div10">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.SalaryMax)
                            </div>
                            <div class="FieldValue">
                                @{
                                   var numericTextBoxSalaryMax = new NumericTextBoxBuilderInfo<double>()
                                   {
                                       StyleCss = "width:150px",
                                    Name = "CatSararyRank_SalaryMax",
                                    Format = ConstantFormat.HRM_Format_Int
                                };
                                }
                                @Html.VnrNumericTextBoxFor(mode => mode.SalaryMax, numericTextBoxSalaryMax)
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td style="padding-top:2px; padding-bottom:10px;">
                    <div class="LineFooterCommandEdit">
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div>
                        <div class="FieldTitle150">
                        </div>
                        <div class="FieldValue">
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-SalaryRank", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveNew", Name = "save-New-SalaryRank", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-SalaryRank", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        </div>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
}
