@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Infrastructure.Security
@using HRM.Infrastructure.Utilities

@model  Cat_MasterDataGroupModel
@{
    ViewBag.Title = "InsertCatImport";
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var masterDataGroupID = Guid.Empty;
    if (Model != null)
    {
        masterDataGroupID = Model.ID;
    }
}

@{
    //  string objectName = Model == null ? string.Empty : Model.ObjectName;
    string objectName = string.Empty;
    var window = new WindowBuilderInfo
    {
        Name = "windowCatMasterDataGroupItem",
        Visible = false,
        Width = 700,
        Title = ConstantDisplay.HRM_Category_ImportItem.TranslateString(),
        LoadContentFrom = _hrm_Main_Web + "Cat_MasterDataGroup/CatMasterDataGroupItemInfo?MasterDataGroupID=" + masterDataGroupID,
    };
}
@(Html.VnrWindow(window))
@{
    var windowError = new WindowBuilderInfo
    {
        Name = "windowError",
        Visible = false,
        Height = 150,
        Width = 300,
        Title = "Thông Báo Lỗi",
        Content = "<br><br><center><b>Vui Lòng Lưu nhập Dữ Liệu Trước Khi Tạo Mới Dữ Liệu Dự Án Chi Tiết!!!</b></center>"
    };
}
@(Html.VnrWindow(windowError))

<script type="text/javascript">
    SetFieldRequired();
    //Khởi tạo điều kiện tìm kiếm
    function filterFieldInfo() {
        var mstdatagroupId = $('#MasterDataGroupID1').val();
        if ('@masterDataGroupID' != '@Guid.Empty') {
            mstdatagroupId = '@masterDataGroupID';
        }
        return {
            masterDataGroupID: mstdatagroupId
        };
    }

    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        $("#btnSearch").click(function () {
            var grid = $('#grid_Cat_MasterDataGroupItem').data("kendoGrid");
            grid.dataSource.read();
        });
    });

    $("#btnCreateItem").click(function () {
        debugger;
        var x = $('#MasterDataGroupID1').val();
        if (x == '') {
            PopUpCreate("windowError");
        }
        else {
            PopUpCreate("windowCatMasterDataGroupItem");
        }
    });

    function onEditExportItemInExport(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var url = '@_hrm_Main_Web' + "Cat_Import/ImportItemInfo/";
        PopUpEdit("windowCatMasterDataGroupItem", url, dataItem.ID);
    }



    function select(e) {
        var dataItem = this.dataSource.view()[e.sender.selectedIndex];
        var rs = dataItem.Name;
        var objectID = dataItem.uid;
        $('#pr_objectName').val(rs);
    };


    function onSaveImport(e) {
        //If current value is null (replace EmployeeId with your property name)
        if (e.model.ChildFieldLevel1 != "") {
            //change the model value
            e.model.ChildFieldLevel1 = null;
            //get the currently selected value from the DDL
            var currentlySelectedValue = $(e.container.find('[data-role=dropdownlist]')[0]).data().kendoDropDownList.value();
            //set the value to the model
            e.model.set('ChildFieldLevel1', currentlySelectedValue);
        }
    }

    $('#btnDeleteItem').click(function (e) {
        var isAccess = checkPermission(PrivilegeType.Delete, '@ConstantPermission.Cat_MasterDataGroup');
        if (!isAccess) {
            return;
        }
        if (selectedIds == "") {
            DeleteFail();
            return;
        }
        e.preventDefault();
        DeleteSelected("grid_Cat_MasterDataGroupItem", '@_hrm_Main_Web' + "Cat_MasterDataGroupItem/RemoveSelected/", selectedIds.join(","));
        return false;
    });
</script>

<div class="VnRMain">
    <table style="width:100%">
        @Html.HiddenFor(mode => mode.ID)
        @*@Html.Hidden("pr_objectName", Model == null ? string.Empty : Model.ObjectName)
            @Html.Hidden("ImportIdCreate", Model == null ? Guid.Empty : Model.ID)*@
        <tbody>
            <tr><td colspan="3" style=""></td></tr>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                <td valign="top">
                    <div>
                        <div style="overflow:hidden">
                            <div style="float:left; width:530px">
                                <div id="dvCode">
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(mode => mode.Code)
                                    </div>
                                    <div class="FieldValue">
                                        @Html.VnrTextBoxFor(mode => mode.Code)
                                    </div>
                                    <div style="clear: both;"></div>
                                </div>

                                <div id="dvMasterDataGroupName">
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(mode => mode.MasterDataGroupName)
                                    </div>
                                    <div class="FieldValue">
                                        @Html.VnrTextBoxFor(mode => mode.MasterDataGroupName)
                                    </div>
                                    <div style="clear: both;"></div>
                                </div>

                                <div>
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(model => model.OrderNumber)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var _OrderNumber = new NumericTextBoxBuilderInfo<int>()
                                            {
                                                Name = "CatMasterDataGroup_OrderNumber",
                                                StyleCss = "width:120px",
                                                Format = ConstantFormat.HRM_Format_Int
                                            };
                                        }
                                        @Html.VnrNumericTextBoxFor(model => model.OrderNumber, _OrderNumber)
                                    </div>
                                </div>

                                <div id="dvNotes">
                                    <div class="FieldTitle170">
                                        @Html.VnrLabelFor(mode => mode.Notes)
                                    </div>
                                    <div class="FieldValue">
                                        @Html.VnrTextAreaFor(mode => mode.Notes)
                                    </div>
                                    <div style="clear: both;"></div>
                                </div>

                            </div>

                        </div>
                        <br />

                        <div class="commandToolBarWidge" id="anchor">
                            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateItem", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
                            <div style="float: right">
                                @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDeleteItem", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
                            </div>
                        </div>

                        <div>
                            <!--Khai báo các thông tin cho Grid-->
                            @using HRM.Presentation.Category.Models
                            @using HRM.Presentation.UI.Controls.Kendo
                            @{
                                //Thông tin hiển column hiển thị
                                string[] valueFields = new string[]
                                {
                                    Cat_MasterDataGroupItemModel.FieldNames.STT,
                                    Cat_MasterDataGroupItemModel.FieldNames.ObjectName,
                                    Cat_MasterDataGroupItemModel.FieldNames.ObjectID,
                                };

                                //Set độ rộng cho từng column
                                Dictionary<string, int> sizeFields = new Dictionary<string, int>()
                                {
                                    {Cat_MasterDataGroupItemModel.FieldNames.STT, 200},
                                    {Cat_MasterDataGroupItemModel.FieldNames.ObjectName, 200},
                                    {Cat_MasterDataGroupItemModel.FieldNames.ObjectID , 100},

                                };

                                //Thông tin hiển thị được dịch
                                Dictionary<string, string> displayFields = new Dictionary<string, string>()
                                {
                                    {Cat_MasterDataGroupItemModel.FieldNames.STT, ConstantDisplay.HRM_INS_RptD02TS_STT},
                                    {Cat_MasterDataGroupItemModel.FieldNames.ObjectName , ConstantDisplay.HRM_Category_MasterDataGroupItem_ObjectName },
                                    {Cat_MasterDataGroupItemModel.FieldNames.ObjectID, ConstantDisplay.HRM_Category_MasterDataGroupItem_ObjectID },
                                };

                                var grid = new GridBuilderInfo
                                {
                                    Name = "grid_Cat_MasterDataGroupItem",
                                    ValueFields = valueFields,
                                    DisplayFields = displayFields,
                                    SizeFields = sizeFields,
                                    //  ShowCommand = true,
                                    //  ShowDeleteButton = true,
                                    //   ShowEditButton = true,
                                    ShowEditIcon = false,
                                    //  EditActionUrl = _hrm_Main_Web + "/Cat_MasterDataGroupItem/Create/",
                                    //  DeleteActionUrl = _hrm_Main_Web + "/Cat_MasterDataGroupItem/Delete/",
                                    AutoBind = true,
                                    //   EditMode = GridEditMode.InLine,
                                    ReadActionUrl = _hrm_Hre_Service + "Cat_GetData/GetMasterGroupItemByMasterGroupIDList",
                                    ReadData = "filterFieldInfo",
                                };
                            }
                            <!--Khởi tạo Grid-->
                            @(Html.VnrGrid<Cat_MasterDataGroupItemModel>(grid).Events(e => e.Save("onSaveImport"))
                                  .HtmlAttributes(new { style = "height:400px" })
                                  .DataSource(dataSource => dataSource
                                      .Ajax()
                                    //.Model(model => model.Field(o => o.ImportName)
                                    //   .Editable(false))
                                  )
                            )
                        </div>

                    </div>
                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
            <tr>
                <td class="Box_Bottom_Left"></td>
                <td class="Box_Bottom_Mid"></td>
                <td class="Box_Bottom_Right"></td>
            </tr>
        </tbody>
    </table>
    @Html.HiddenFor(model => model.ID)
</div>


<script type="text/javascript">

    function filterChildFieldLevel1() {
        var objectNameValue = $("#pr_objectName").val();

        return {
            text: '',
            objectName: objectNameValue,
            objectNameRoot: objectNameValue

            //objectName:"abcde"
        };
    };
    function filterChildFieldLevel2() {
        var objectNameValue = $("#pr_objectName").val();

        return {
            text: '',
            objectName: $("#ChildFieldLevel1").data("kendoDropDownList").value(),
            objectNameRoot: objectNameValue
            //objectName:"abcde"
        };
    };


</script>

