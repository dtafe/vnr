@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Hr.Models
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Infrastructure.Security;

@model HRM.Presentation.Hr.Models.Hre_ReportExpiryContractModel

@{
    ViewBag.Title = "Index";
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var controller = ViewContext.RouteData.Values["Controller"].ToString();
    var action = ViewContext.RouteData.Values["Action"].ToString();
    var screen = controller + "/" + action;

    IList<SelectListItem> listClassType = Enum.GetValues(typeof(EnumDropDown.EvaExpiryContract))
.Cast<EnumDropDown.EvaExpiryContract>()
.Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() })
.ToList();
 
    
}
<script>
    var checkedNodes = [];

    function filterFieldInfo(isExport) {
        var elementPara = {

            DateStart: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateStart").val()),
            DateEnd: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateEnd").val()),
            OrgStructureID: checkedNodes.join(','),
        };
        if (isExport == true) {
            elementPara["ExportId"] = $('#ddlScreenName').val();
        }
        return elementPara;
    }

    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        //Show Hide Panel
        ShowHidePanel();
        $("#btnSearch").click(function () {
            var treeView = $("#treeviewOrg").data("kendoTreeView");
            checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes)
            var grid = $('#gridHre_ReportExpiryContract').data("kendoGrid");
            grid.dataSource.read();
            checkedNodes = [];
        });
    });

    function checkedNodeIds(nodes, checkedNodes) {
        for (var i = 0; i < nodes.length; i++) {
            if (nodes[i].checked) {
                checkedNodes.push(nodes[i].id);
            }
            if (nodes[i].hasChildren) {
                checkedNodeIds(nodes[i].children.view(), checkedNodes);
            }
        }
    }

    $("#btnExport").click(function () {
        //showAjaxLoading()
        var isAccess = checkPermission(PrivilegeType.Export, '@ConstantPermission.Hre_AppendixContract');
        if (!isAccess) {
            return;
        }
        if ($('#ddlScreenName').val() == "") {
            ExportFail();
            return;
        }
        var urlGetData = '@_hrm_Hre_Service' + "Hre_GetData/GetReportExpiryContract";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo(true);
        ExportAll(urlGetData, dataParameter, urlDownload);
        checkedNodes = [];
        //hideAjaxLoading()
    });
</script>

<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            <div class="contendSearchWidge" style="overflow:visible">
                <div class="hrm_box">
                    <div class="FieldTitle">
                        @Html.Label(ConstantDisplay.HRM_HR_Contract_DateEndContract.TranslateString())
                    </div>
                    <div class="FieldValue">
                        @{
                            var DateStart = new DatePickerBuilderInfo()
                            {
                                Value = @Html.DisplayFor(mode => mode.DateStart).ToString(),
                                StyleCss = "width:100px;",
                                Placeholder = ConstantDisplay.HRM_HR_Profile_DateFrom.TranslateString()
                            };
                        }
                        @Html.VnrDatePickerFor(mode => mode.DateStart, DateStart)
                        @{
                            var DateEnd = new DatePickerBuilderInfo()
                            {
                                Value = @Html.DisplayFor(mode => mode.DateEnd).ToString(),
                                StyleCss = "width:100px;",
                                Placeholder = ConstantDisplay.HRM_HR_Profile_DateTo.TranslateString()
                            };
                        }
                        @Html.VnrDatePickerFor(mode => mode.DateEnd, DateEnd)
                    </div>
                    <div id="div14">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.OrgStructureID)
                        </div>
                        <div class="FieldValue">
                            <div class="FieldValue">
                                @Html.Partial("EditorTemplates/OrgStructureTreeViewDropdown")
                            </div>
                        </div>
                    </div>
                    <div style="clear: both;"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="commandToolBarWidge">

    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    <div style="float:right">
        <script>
            function GetScreenName() {
                return {
                    screenName: '@screen'
                };
            }
        </script>
        <div class="FieldValue" style="margin-top: 0;">
            @{
                var screenName = new DropDownListBuilderInfo()
                {
                    Name = "ddlScreenName",
                    DataTextField = "ExportName",
                    DataValueField = "ID",
                    Url = @_hrm_Hr_Service + "Cat_GetData/GetScreenName",
                    Data = "GetScreenName",
                };
            }
            @Html.VnrDropDownList(screenName)
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport", Content = ConstantDisplay.HRM_Common_Export_Button.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
        </div>
    </div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @using HRM.Presentation.UI.Controls.Kendo
    @{
        string[] valueFields = new string[]
        {
            Hre_ReportExpiryContractModel.FieldNames.CodeEmp,
           Hre_ReportExpiryContractModel.FieldNames.ProfileName,
           Hre_ReportExpiryContractModel.FieldNames.OrgStructureName,
           Hre_ReportExpiryContractModel.FieldNames.JobTitleName,
           Hre_ReportExpiryContractModel.FieldNames.PositionName,
           Hre_ReportExpiryContractModel.FieldNames.ContractTypeName,
           Hre_ReportExpiryContractModel.FieldNames.DateSigned,
           Hre_ReportExpiryContractModel.FieldNames.DateStart,
           Hre_ReportExpiryContractModel.FieldNames.DateEnd
        };
        Dictionary<string, int> sizeFields = new Dictionary<string, int>(){
          {Hre_ReportExpiryContractModel.FieldNames.CodeEmp,80},
          {Hre_ReportExpiryContractModel.FieldNames.ProfileName,120},
          {Hre_ReportExpiryContractModel.FieldNames.OrgStructureName,120},
          {Hre_ReportExpiryContractModel.FieldNames.JobTitleName,120},
          {Hre_ReportExpiryContractModel.FieldNames.PositionName,120},
          {Hre_ReportExpiryContractModel.FieldNames.ContractTypeName,150},
          {Hre_ReportExpiryContractModel.FieldNames.DateSigned,140},
          {Hre_ReportExpiryContractModel.FieldNames.DateStart,120},
          {Hre_ReportExpiryContractModel.FieldNames.DateEnd,120}
        };

        Dictionary<string, string>
            displayFields = new Dictionary<string, string>(){
          {Hre_ReportExpiryContractModel.FieldNames.CodeEmp,ConstantDisplay.HRM_HR_Profile_CodeEmp},
          {Hre_ReportExpiryContractModel.FieldNames.ProfileName,ConstantDisplay.HRM_HR_Profile_ProfileName},
          {Hre_ReportExpiryContractModel.FieldNames.OrgStructureName,ConstantDisplay.HRM_HR_Profile_OrgStructureID},
          {Hre_ReportExpiryContractModel.FieldNames.JobTitleName,ConstantDisplay.HRM_HR_Profile_JobTitleID},
          {Hre_ReportExpiryContractModel.FieldNames.PositionName,ConstantDisplay.HRM_HR_Profile_PositionID},
          {Hre_ReportExpiryContractModel.FieldNames.ContractTypeName,ConstantDisplay.HRM_Category_ContractType_ContractTypeName},
          {Hre_ReportExpiryContractModel.FieldNames.DateSigned,ConstantDisplay.HRM_HR_Contract_DateSigned},
          {Hre_ReportExpiryContractModel.FieldNames.DateStart,ConstantDisplay.HRM_HR_Contract_DateStart},
          {Hre_ReportExpiryContractModel.FieldNames.DateEnd,ConstantDisplay.HRM_HR_Contract_DateEnd}
          };
          
        var grid = new GridBuilderInfo
        {
            ShowCheckbox = false,
            ShowEditIcon = false,
            Name = "gridHre_ReportExpiryContract",
            ValueFields = valueFields,
            SizeFields = sizeFields,
            DisplayFields = displayFields,
            ReadActionUrl = _hrm_Hre_Service + "Hre_GetData/GetReportExpiryContract",
            ReadData = "filterFieldInfo"
        };
    }
    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<Hre_ReportExpiryContractModel>(grid))
</div>
