@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@model HRM.Presentation.Category.Models.CatCostCentreModel

    @{
        ViewBag.Title = "Cat Cost Centre";
        Layout = null;
        //var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;

        var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
        var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;

        var lineId = Model == null ? Guid.Empty : Model.ID;
        var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
        
    }

<script>
     SetFieldRequired();
    function checkDuplicationCode() {
        
        var _code = $("#CostCentre_Code").val();
        var _id = '@lineId';
        var param = {
            tableName: 'Cat_CostCentre',
            columnName: 'Code',
            keyword: _code,
            id: _id
        };

        var isduplicate = checkDuplicate('@_hrm_Sys_Service', 'Sys_GetData', 'CheckDuplicate', param, "Code");
        
        return isduplicate;
    }
    function onSave() {
        //if (CheckValidate(data)) {

            // if (!checkDuplicationCode()){

        onSaveAndContinue($('#form_cat_cost_centre'), '@_hrm_Hr_Service', 'api/CatCostCentre/', 'gridCostCentre', 'windowCostCentre'); return false;
            // }

       // }
        return false;
    }
    function onSaveClose() {
        
       // if (CheckValidate(data)) {
          //  if (!checkDuplicationCode()) {
        onSaveAndClose($('#form_cat_cost_centre'), '@_hrm_Hr_Service', 'api/CatCostCentre/', 'gridCostCentre', 'windowCostCentre'); return false;
          //  }
       // }
       // return false;
    }
    function onSaveDataPopUp() {
        
      //  if (CheckValidate(data)) {
         //   if (!checkDuplicationCode()) {
                onlySave($('#form_cat_cost_centre'), '@_hrm_Hr_Service', 'api/CatCostCentre/', 'gridCostCentre'); return false;
          //  }
       // }
    }

</script>
    <!--Form dùng cho edit và update-->
    @using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_cat_cost_centre" }))
    {
        @Html.HiddenFor(model => model.ID)
     

         <table>
        <tr>
            <td>
               
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">
                        @{
                        var _CostCentreCode = new TextBoxBuilderInfo()
                        {
                            Name = "CostCentre_Code",
                            CssStyle = "width:300px"
                        };
                         if(Model != null){
                             _CostCentreCode.Value = Model.Code == null ? string.Empty : Model.Code;
                         }   
                        }
                        @Html.VnrTextBoxFor(mode => mode.Code,_CostCentreCode )
                    </div>

                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.CostCentreName)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.CostCentreName, "width: 300px")

                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.GroupCost)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.GroupCost, "width: 300px")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Description)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Description, "width:500px;height:100px;")
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>

                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-CostCentre", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-catCostCentre", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-catCostCentre", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
 </table>
    }
