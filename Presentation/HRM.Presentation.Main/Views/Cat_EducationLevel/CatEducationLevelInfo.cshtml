@using HRM.Infrastructure.Utilities
@using System.Collections
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Category.Models;
@model Cat_NameEntityModel

@{
    Layout = null;
    var ID = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    IList<SelectListItem> ilType = Enum.GetValues(typeof(EnumDropDown.EntityType))
        .Cast<EnumDropDown.EntityType>()
        .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
        .ToList();
}
<script>
    SetFieldRequiredByScreenName('Cat_NameEntity_Education');
    $(document).ready(function () {
     
    });
    function onSaveNew() {
        $("#NameEntityType7").val("E_EDUCATION_LEVEL");
        $("#EnumType7").val("E_EDUCATION_LEVEL");
        $("#Order_7").val($("#Order7").val());
        //if (!checkDuplicationCode()) {
        onSaveAndContinue($('#form_Cat_EducationLevel'), '@_hrm_Hre_Service', 'api/Cat_EducationLevel/', '@ConstantControlName.HRM_Category_EducationLevel_Grid_Name', '@ConstantControlName.HRM_Category_EducationLevel_PopUp_Name'); return false;
       // }
    }

    function onSaveClose() {
        $("#NameEntityType7").val("E_EDUCATION_LEVEL");
        $("#EnumType7").val("E_EDUCATION_LEVEL");
        $("#Order_7").val($("#Order7").val());
       // if (!checkDuplicationCode()) {
        onSaveAndClose($('#form_Cat_EducationLevel'), '@_hrm_Hre_Service', 'api/Cat_EducationLevel/', '@ConstantControlName.HRM_Category_EducationLevel_Grid_Name', '@ConstantControlName.HRM_Category_EducationLevel_PopUp_Name'); return false;
       // }
    }
    function onSaveDataPopUp() {
        $("#NameEntityType7").val("E_EDUCATION_LEVEL");
        $("#EnumType7").val("E_EDUCATION_LEVEL");
        $("#Order_7").val($("#Order7").val());
       // if (!checkDuplicationCode()) {
        onlySave($('#form_Cat_EducationLevel'), '@_hrm_Hre_Service', 'api/Cat_EducationLevel/', '@ConstantControlName.HRM_Category_EducationLevel_Grid_Name'); return false;
       // }
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Cat_EducationLevel" }))
{
   @Html.HiddenFor(model => model.ID)
   @Html.HiddenFor(model => model.NameEntityType, new { id = "NameEntityType7" })
   @Html.HiddenFor(model => model.EnumType, new { id = "EnumType7" })
    @Html.HiddenFor(model => model.Order, new { id = "Order_7" })
    <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle" style="width: 70px;">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">

                        @*@{
                            var Code = new TextBoxBuilderInfo()
                            {
                                Name = "EducationLevel_Code"
                            };
                            if (Model != null)
                            {
                                Code.Value = Model == null ? string.Empty : Model.Code;
                            }
                                    }*@

                        @Html.VnrTextBoxFor(mode => mode.Code)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle" style="width: 70px;">
                        @Html.VnrLabelFor(mode => mode.NameEntityName)
                    </div>
                    <div class="FieldValue">

                        @Html.VnrTextBoxFor(mode => mode.NameEntityName)
                    </div>
                </div>
                @*<div>
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.EnumType)
                            </div>
                            <div class="FieldValue">
                               @{
                        var EnumType = new DropDownListBuilderInfo()
                        {
                            BindTo = ilType,
                            DataTextField = "Text",
                            DataValueField = "Value"
                        };
                    }
                                @Html.VnrDropDownListFor(mode => mode.EnumType, EnumType)
                            </div>
                        </div>*@
                <div>
                    <div class="FieldTitle" style="width: 70px;">
                        @Html.VnrLabelFor(mode => mode.Order)
                    </div>
                    <div class="FieldValue">

                        @{
    var Order = new NumericTextBoxBuilderInfo<int>()
    {
        Name = "Order7",
        Value = Model != null && Model.Order.HasValue ? Model.Order.Value : 0
    };

                        }
                        @Html.VnrNumericTextBoxFor(mode => mode.Order, Order)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle" style="width: 70px;">
                        @Html.VnrLabelFor(mode => mode.Description)
                    </div>
                    <div class="FieldValue">

                        @Html.VnrTextAreaFor(mode => mode.Description)
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle" style="width: 70px;"></div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-EducationLevel", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveNew", Name = "save-New-EducationLevel", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-EducationLevel", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}
