@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using System.Collections
@model HRM.Presentation.Canteen.Models.Can_MealAllowanceToMoneyModel

@{
    Layout = null;
    var _hrm_Can_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;


    IList<SelectListItem> listMealAllowanceType = Enum.GetValues(typeof(StatusMealAllowanceType))
   .Cast<StatusMealAllowanceType>()
   .Select(x => new SelectListItem { Value = ((int)x).ToString(), Text = EnumDropDown.GetEnumDescription(x) })
   .ToList();

    IList<SelectListItem> listStatus = Enum.GetValues(typeof(StatusMealAllowanceToMoney))
      .Cast<StatusMealAllowanceToMoney>()
      .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
      .ToList();

}

<div class="VnRMain">
    <table style="width:100%">
        <tbody>
            <tr><td colspan="3" style=""></td></tr>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                <td valign="top">
                    <div>
                        <div id="div1">
                            <div class="FieldTitle">
                                @Html.HiddenFor(mode => mode.ID)
                                @Html.VnrLabelFor(mode => mode.ProfileID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    IEnumerable valueProfile = new string[] { };
                                    if (Model != null)
                                    {
                                        valueProfile = new[] { new { ProfileName = Model.ProfileName, Id = Model.ProfileID } };
                                    }
                                }
                                @{
                                    var multiSelectProfileID = new MultiSelectBuilderInfo()
                                    {
                                        DataTextField = "ProfileName",
                                        DataValueField = "Id",
                                        Url = @_hrm_Hr_Service + "HrMultiSelect/GetMultiProfile",
                                        Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                                        MaxSelectedItems = 1,
                                        Value = valueProfile
                                    };
                                }
                                @(Html.VnrMultiSelectFor(mode => mode.ProfileID, multiSelectProfileID))
                            </div>
                        </div>

                        <div id="div2">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.DateFrom)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var datepickerDateFrom = new DatePickerBuilderInfo()
                                    {
                                        Value = @Html.DisplayFor(mode => mode.DateFrom).ToString(),
                                        StyleCss = "width:100px;",
                                        Placeholder = ConstantDisplay.HRM_Can_MealAllowanceToMoney_DateFrom.TranslateString(),
                                        Format = ConstantFormat.HRM_Format_DayMonthYear.TranslateString()
                                    };
                                }
                                @Html.VnrDatePickerFor(model => model.DateFrom, datepickerDateFrom)

                            </div>
                        </div>

                        <div id="div3">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.DateTo)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var datepickerDateTo = new DatePickerBuilderInfo()
                                    {
                                        Value = @Html.DisplayFor(mode => mode.DateTo).ToString(),
                                        StyleCss = "width:100px;",
                                        Placeholder = ConstantDisplay.HRM_Can_MealAllowanceToMoney_DateTo.TranslateString(),
                                        Format = ConstantFormat.HRM_Format_DayMonthYear.TranslateString()
                                    };
                                }
                                @Html.VnrDatePickerFor(model => model.DateTo, datepickerDateTo)
                            </div>
                        </div>

                        <div id="div4">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.MealAllowanceTypeID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var _MealAllowanceTypeSettingName = new ComboBoxBuilderInfo()
                                    {
                                        DataTextField = "MealAllowanceTypeName",
                                        DataValueField = "Id",
                                        Url = @_hrm_Can_Service + "Canteen_GetData/GetMultiMealAllowanceTypeSetting",
                                        StyleCss = "width:300px;",
                                        Value = Model == null ? string.Empty : Model.MealAllowanceTypeSettingName
                                    };
                                }
                                @Html.VnrComboBoxFor(mode => mode.MealAllowanceTypeID, _MealAllowanceTypeSettingName)
                            </div>
                        </div>
                        <div id="div5">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.Status)
                            </div>
                            <div class="FieldValue">
                               
                                @{
                                    var dropdownProfileStatus = new DropDownListBuilderInfo()
                                    {
                                        DataTextField = "Text",
                                        DataValueField = "Value",
                                        OptionLabel = ConstantDisplay.HRM_Can_MealAllowanceToMoney_Status.TranslateString(),
                                        BindTo = listStatus,
                                        StyleCss = "Width:200px;",
                                        
                                       
                                        
                                    };
                                }
                                @(Html.VnrDropDownListFor(model => model.Status, dropdownProfileStatus))
                            </div>

                        </div>

                        <div id="div6">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.Note)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextAreaFor(mode => mode.Note)
                            </div>
                        </div>
                    </div>
                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
            <tr>
                <td class="Box_Bottom_Left"></td>
                <td class="Box_Bottom_Mid"></td>
                <td class="Box_Bottom_Right"></td>
            </tr>
        </tbody>
    </table>
</div>
