@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Payroll.Models
@model Kai_CategoryModel
@{
    Layout = null;
   // var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    
        IList<SelectListItem> listCategoryType = Enum.GetValues(typeof(EnumDropDown.KaiZenCategoryType))
        .Cast<EnumDropDown.KaiZenCategoryType>()
        .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
        .ToList();

}

<script>
    SetFieldRequired();

    function onSave() {
        //$("#ResponseTable").val("ResponseTable");
        onSaveAndContinue($('#form_Kai_Category'), '@_hrm_Hre_Service', 'api/Kai_Category/', 'grid_Kai_Category', 'windowKai_Category');
        return false;
    }

    function onSaveClose() {
        onSaveAndClose($('#form_Kai_Category'), '@_hrm_Hre_Service', 'api/Kai_Category/', 'grid_Kai_Category', 'windowKai_Category');
        return false;
    }

    function onSaveDataPopUp() {
        onlySave($('#form_Kai_Category'), '@_hrm_Hre_Service', 'api/Kai_Category/', 'grid_Kai_Category'); return false;
    }

</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Kai_Category" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div id=" div1">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">
                        @{
    var _Code = new TextBoxBuilderInfo()
    {
        Width = 300,
        Name = "CategoryInfo_Code"
    };
    if (Model != null)
    {
        _Code.Value = Model.Code == null ? string.Empty : Model.Code;
    }
                        }
                        @Html.VnrTextBoxFor(mode => mode.Code, _Code)
                    </div>
                </div>
                <div id=" div1">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.CategoryName)
                    </div>
                    <div class="FieldValue">
                        @{
    var _CategoryName = new TextBoxBuilderInfo()
    {
        Width = 300,
        Name = "CategoryInfo_CategoryName"
    };
    if (Model != null)
    {
        _CategoryName.Value = Model.CategoryName == null ? string.Empty : Model.CategoryName;
    }
                        }
                        @Html.VnrTextBoxFor(mode => mode.CategoryName, _CategoryName)
                    </div>
                </div>
                <div id=" div1">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.CatalogyType)
                    </div>
                    <div class="FieldValue">
                        @{
    var _CatalogyType = new DropDownListBuilderInfo()
    {
        Name = "CategoryInfo_CatalogyType",
        Value = Model != null && Model.CatalogyType == null ? Model.CatalogyType : string.Empty,
        BindTo = listCategoryType
    };
                        }
                        @Html.VnrDropDownListFor(mode => mode.CatalogyType, _CatalogyType)
                    </div>
                </div>

            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>

                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-Category", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-Category", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-Category", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}
