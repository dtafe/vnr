@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.UI.Controls.Kendo.MultiSelect
@using HRM.Presentation.UI.Controls.Kendo.DropDownList
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Category.Models


@model HRM.Presentation.Category.Models.Cat_JobTitleModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
}

<script>
    SetFieldRequired();
    function onSave() {
        onSaveAndContinue($('#form_Cat_JobTitle'), '@_hrm_Hr_Service', 'api/Cat_JobTitle/', '@ConstantControlName.HRM_gridJobTitle_Name', '@ConstantControlName.HRM_gridJobTitle_PopUp_Name');
        return false;
    }

    function onSaveClose() {
        onSaveAndClose($('#form_Cat_JobTitle'), '@_hrm_Hr_Service', 'api/Cat_JobTitle/', '@ConstantControlName.HRM_gridJobTitle_Name', '@ConstantControlName.HRM_gridJobTitle_PopUp_Name');
        return false;
    }

    function onSaveDataPopUp() {

        onlySave($('#form_Cat_JobTitle'), '@_hrm_Hr_Service', 'api/Cat_JobTitle/', '@ConstantControlName.HRM_gridJobTitle_Name');
        return false;
    }
</script>
<style>
    label {
        min-width: 100px;
    }
</style>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Cat_JobTitle" }))
{


<div class="VnRMain">
    <table style="width:100%">
        <tbody>
            <tr>
                <td valign="top">             
                    <div id="div2">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.Code)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(model => model.Code)
                            @Html.HiddenFor(model => model.ID)
                        </div>
                    </div>     
                    <div id="div3">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.JobTitleName)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(model => model.JobTitleName)
                        </div>
                    </div>
                    <div id="div4">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.JobTitleNameEn)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(model => model.JobTitleNameEn)
                        </div>
                        
                    </div>
                    <div id="div6">
                        <div class="FieldTitle150">
                           @Html.VnrLabelFor(mode => mode.OrgStructureID)
                        </div>
                        <div class="FieldValue">
                            @{
    var orgTreeView = new TreeViewDropdDownBuilderInfo()
    {

        SetFieldName = "OrgStructureID",
        IsShowCheckBox = false,
        Value = Model != null ? Model.OrgStructureName: "",
        SetFieldID = "OrgStructureID",
        Width = "200px",
    };
                            }
                            @Html.Partial("EditorTemplates/OrgTreeViewDropDown", orgTreeView)
                            @Html.HiddenFor(m => m.OrgStructureID)                    
                        </div>
                    </div>
                    <div id="div5">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.CostCentreID)
                        </div>
                        <div class="FieldValue">                           
                           @{
    var costCentreID = new ComboBoxBuilderInfo()
    {
        Name = "JobtitleInfo_CostCentreID",
        DataTextField = "CostCentreName",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiCostCentre",
        StyleCss = "Width: 200px",
        Placeholder = ConstantDisplay.HRM_Category_SelectCostCentre.TranslateString(),
        Autobind = false,
        Value = Model != null ? Model.CostCentreID.ToString() : string.Empty
    };
}
@Html.VnrComboBoxFor(mode => mode.CostCentreID, costCentreID).Text(Model == null ? string.Empty : Model.CostCentreName)             
                        </div>
                    </div>   
                    <div id="div6">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.SalaryMin)
                        </div>
                        <div class="FieldValue">
                            @*@{
                                var numericTextBoxSalaryMin = new NumericTextBoxBuilderInfo<double>()
                                {
                                    Name = "Cat_JobTitle_SalaryMin",
                                    StyleCss = "width:150px",
                                        };
                            }
                            @Html.VnrNumericTextBoxFor(model => model.SalaryMin, numericTextBoxSalaryMin)*@
                            @{
    var SalaryMin = new NumericTextBoxBuilderInfo<double>()
  {
      StyleCss = "width:150px",
      Format = ConstantFormat.HRM_Format_Money
  };
                            }
                            @Html.VnrNumericTextBoxFor(model => model.SalaryMin, SalaryMin)
                        </div>
                    </div>   
                    <div id="div6">
                        <div class="FieldTitle150">
                           @Html.VnrLabelFor(mode => mode.SalaryMax)
                        </div>
                        <div class="FieldValue">
                            @*@{
                                var numericTextBoxSalaryMax = new NumericTextBoxBuilderInfo<double>()
                                {
                                    Name = "Cat_JobTitle_SalaryMax",
                                    StyleCss = "width:150px",  
                                        };
                            }
                            @Html.VnrNumericTextBoxFor(model => model.SalaryMax, numericTextBoxSalaryMax)*@

                            @{
    var SalaryMax = new NumericTextBoxBuilderInfo<double>()
  {
      StyleCss = "width:150px",
      Format = ConstantFormat.HRM_Format_Money
  };
                            }
                            @Html.VnrNumericTextBoxFor(model => model.SalaryMax, SalaryMax)
                        </div>
                    </div>
                    
                    <div id="div5">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.EmployeeTypeID)
                        </div>
                        <div class="FieldValue">
                       
                            @{
    var EmployeeTypeID = new ComboBoxBuilderInfo()
    {
        Name = "JobtitleInfo_EmployeeTypeID",
        DataTextField = "EmployeeTypeName",
        DataValueField = "ID",
        Url = _hrm_Hr_Service + "Cat_GetData/GetMultiEmployeeType",
        StyleCss = "Width: 200px",
        Placeholder = ConstantDisplay.HRM_Category_SelectEmployeeType.TranslateString(),
        Value = Model != null ? Model.EmployeeTypeID.ToString() : string.Empty
    };
                            }
                            @Html.VnrComboBoxFor(mode => mode.EmployeeTypeID, EmployeeTypeID).Text(Model == null ? string.Empty : Model.EmployeeTypeName)
                            
                        </div>
                        
                    </div>     
                    <div id="div6">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.JobDescription)
                        </div>
                        <div class="FieldValue">
                            @(Html.VnrTextAreaFor(model => model.JobDescription, "width:500px;height:100px;"))
                        </div>
                    </div>
                    <div id="div6">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.Notes)
                        </div>
                        <div class="FieldValue">
                            @(Html.VnrTextAreaFor(model => model.Notes, "width:500px;height:100px;"))
                        </div>
                    </div>              
                </td>
                
            </tr>
            <tr>
                <td style="padding-top:2px; padding-bottom:10px;">
                    <div class="LineFooterCommandEdit">
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div>
                        <div class="FieldTitle150">

                        </div>
                        <div class="FieldValue">
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-Cat_JobTitle", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-Cat_JobTitle", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-Cat_JobTitle", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        </div>

                    </div>
                </td>
            </tr>

        </tbody>
    </table>
</div>
}


