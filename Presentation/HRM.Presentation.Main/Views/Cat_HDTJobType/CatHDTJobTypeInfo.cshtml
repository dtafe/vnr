@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.Category.Models;
@model HRM.Presentation.Category.Models.Cat_HDTJobTypeModel

@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var hDTJobTypeId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;

    IList<SelectListItem> list = Enum.GetValues(typeof(EnumDropDown.HDTJobType))
        .Cast<EnumDropDown.HDTJobType>()
        .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) }).OrderBy(p=>p.Text)
        .ToList();

    IList<SelectListItem> liststatus = Enum.GetValues(typeof(HDTJobStatus))
        .Cast<HDTJobStatus>()
        .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) }).OrderBy(p=>p.Text)
        .ToList();

}
<script>   
    SetFieldRequired();
    function checkDuplicationsCode() {

        var _code = $("#HDTJobType_Code").val();
        var _id = '@hDTJobTypeId';
        var param = {
            tableName: 'Cat_HDTJobType',
            columnName: 'Code',
            keyword: _code,
            id: _id
        };

        var isduplicate = checkDuplicate('@_hrm_Sys_Service', 'Sys_GetData', 'CheckDuplicate', param, "Code");

        return isduplicate;
    }
    function showInfo_Type(e) {
        var _HDTJobGroupID = $("#CatHDTJobTypeInfo_HDTJobGroupID").val();
        debugger;
        $.ajax({
            type: 'POST',
            url: '@_hrm_Hr_Service' + "Cat_GetData/GetTypeHDTJobGroupID",
            data: { ID: _HDTJobGroupID },
            dataType: 'json',
            async: false,
            success: function (data) {
                debugger;
                var comboType = $("#Type").data("kendoComboBox");
                comboType.value(data[0].Value);
                comboType.text(data[0].Text);
                comboType.refresh();
            }
        });
    }
    function checkDuplicationCode() {

        var _code = $("#HDTJobTypeInfo_Code").val();
        var _id = '@hDTJobTypeId';
        var param = {
            tableName: 'Cat_HDTJobType',
            columnName: 'Code',
            keyword: _code,
            id: _id
        };

        var isduplicate = checkDuplicate('@_hrm_Sys_Service', 'Sys_GetData', 'CheckDuplicate', param, "Code");

        return isduplicate;
    }
    @*function onSaveNew() {
        var dataCheck = data[''];

        if (!checkDuplicationCode()) {
            onSaveAndContinue($('#form_cat_HDTJobType'), '@_hrm_Hr_Service', 'api/CatHDTJobType/', '@ConstantControlName.HRM_Category_HDTJobType_Grid_Name', '@ConstantControlName.HRM_Category_HDTJobType_PopUp_Name'); return false;

        }
    }*@

    function onSaveClose() {
        onSaveAndClose($('#form_cat_HDTJobType'), '@_hrm_Hr_Service', 'api/CatHDTJobType/', '@ConstantControlName.HRM_Category_HDTJobType_Grid_Name', '@ConstantControlName.HRM_Category_HDTJobType_PopUp_Name'); return false;

    }
    function onSaveDataPopUp() {

        onlySave($('#form_cat_HDTJobType'), '@_hrm_Hr_Service', 'api/CatHDTJobType/', '@ConstantControlName.HRM_Category_HDTJobType_Grid_Name'); return false;
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_cat_HDTJobType" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div class="hrm_box" style="width:50%;">
                    <div id="div6">
                        <div class="FieldTitle170">
                            @Html.VnrLabelFor(mode => mode.HDTJobGroupID)
                        </div>
                        <div class="FieldValue">
                            @{
    var _HDTJobGroupID = new ComboBoxBuilderInfo()
                                {
                                    Name = "CatHDTJobTypeInfo_HDTJobGroupID",
                                    DataTextField = Cat_HDTJobGroupModel.FieldNames.HDTJobGroupName,
                                    DataValueField = Cat_HDTJobGroupModel.FieldNames.ID,
                                    Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiHDTJobGroup",
                                    StyleCss = "width:300px",
                                    Value = Model == null ? string.Empty : Model.HDTJobGroupID.ToString(),
                                    EventChange = "showInfo_Type"
                                };
                            }
                            @(Html.VnrComboBoxFor(mode => mode.HDTJobGroupID, _HDTJobGroupID).Text(Model == null ? string.Empty : Model.HDTJobGroupName))

                        </div>
                    </div>


                    <div>
                        <div class="FieldTitle170">
                            @Html.VnrLabelFor(mode => mode.HDTJobTypeName)
                        </div>
                        <div class="FieldValue">
                            @{
    var txtHDTJobTypeName = new TextBoxBuilderInfo()
    {
        Width = 300,
        Value = Model != null ? Model.HDTJobTypeName : null
    };
                            }
                            @Html.VnrTextBoxFor(mode => mode.HDTJobTypeName, txtHDTJobTypeName)
                        </div>
                    </div>
                    <div>
                        <div class="FieldTitle170">
                            @Html.VnrLabelFor(mode => mode.Code)
                        </div>
                        <div class="FieldValue">
                            @{
    var txtHDTJobTypeCode = new TextBoxBuilderInfo()
    {
        Width = 300,
        Name = "HDTJobType_Code",
        Value = Model != null ? Model.Code : null
    };
    if (Model != null)
    {
        txtHDTJobTypeCode.Value = Model == null ? string.Empty : Model.Code;
    }
                            }
                            @Html.VnrTextBoxFor(mode => mode.Code, txtHDTJobTypeCode)
                        </div>
                    </div>
                    <div>
                        <div class="FieldTitle170">
                            @Html.VnrLabelFor(model => model.HDTJobTypeNameHVN)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(mode => mode.HDTJobTypeNameHVN, "width: 300px")
                        </div>
                    </div>
                    <div>
                        <div class="FieldTitle170">
                            @Html.VnrLabelFor(mode => mode.Type)
                        </div>                        
                        <div class="FieldValue">
                            @{
    var _Type = new ComboBoxBuilderInfo()
    {
        
        DataTextField = "Text",
        DataValueField = "Value",
        BindTo = list,
        Value = (Model == null) ? string.Empty : Model.Type == null ? string.Empty : Model.Type,
        StyleCss = "width:300px;background-color:WhiteSmoke"                                        
        
    };
                            }
                            @Html.VnrComboBoxFor(model => model.Type, _Type).Text((Model == null) ? string.Empty : Model.Type == null ? string.Empty : Model.Type.TranslateString())
                        </div>
                    </div>
                    <div>
                        <div class="FieldTitle170">
                            @Html.VnrLabelFor(mode => mode.Unit)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(mode => mode.Unit, "width: 300px")
                        </div>
                    </div>
                    <div>
                        <div class="FieldTitle170">
                            @Html.VnrLabelFor(mode => mode.Part)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(mode => mode.Part, "width: 300px")
                        </div>
                    </div>
                </div>
                <div class="hrm_box" style="width:50%;">
                    <div>
                        <div class="FieldTitle170">
                            @Html.VnrLabelFor(model => model.Dept)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(mode => mode.Dept, "width: 300px")
                        </div>
                    </div>
                    <div>
                        <div class="FieldTitle170">
                            @Html.VnrLabelFor(model => model.Line)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(mode => mode.Line, "width: 300px")
                        </div>
                    </div>
                    <div>
                        <div class="FieldTitle170">
                            @Html.VnrLabelFor(model => model.Session)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(mode => mode.Session, "width: 300px")
                        </div>
                    </div>
                    
                    <div>
                        <div class="FieldTitle170">
                            @Html.VnrLabelFor(model => model.StandardElement)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(mode => mode.StandardElement, "width: 300px")
                        </div>
                    </div>
                    <div>
                        <div class="FieldTitle170">
                            @Html.VnrLabelFor(model => model.EncryptJob)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(mode => mode.EncryptJob, "width: 300px")
                        </div>
                    </div>
                
                    <div>
                        <div class="FieldTitle170">
                            @Html.VnrLabelFor(mode => mode.Status)
                        </div>
                        <div class="FieldValue">
                            @{
                                var comboboxstatus = new DropDownListBuilderInfo()
                                {
                                    Name = "catHDTJobTypeInfo_Status",
                                    DataTextField = "Text",
                                    DataValueField = "Value",
                                    BindTo = liststatus,
                                    StyleCss = "Width: 300px",
                                    Value = (Model == null || Model.Status == null) ? HDTJobStatus.E_WAITING.ToString() : Model.Status
                                };
                            }
                            @Html.VnrDropDownListFor(model => model.Status, comboboxstatus).Text((Model != null && Model.Status != null) ? Model.Status.TranslateString() : null)
                        </div>
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle170"></div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-HDTJobType", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-catHDTJobType", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}
<script>
    debugger;
    var Hre_HDTJob_Type = $('#Type').data("kendoComboBox");
    Hre_HDTJob_Type.readonly();
</script>
@{
    if(Model != null)
    {
        <script>
            debugger;
            var _HDTJob_Status = $('#catHDTJobTypeInfo_Status').data("kendoDropDownList");
            _HDTJob_Status.readonly();
            //_HDTJob_Status.enable(false);
        </script>
    }
}