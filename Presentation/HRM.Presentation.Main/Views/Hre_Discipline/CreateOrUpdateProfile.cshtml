@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Hr.Models
@using System.Collections;

@model Hre_DisciplineModel
@{
    ViewBag.Title = "Hre Discipline";
    Layout = null;
    var _Hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;

    Guid ProfileID = Guid.Empty;
    string aaa = ViewBag.profileID;
    if (!string.IsNullOrEmpty(aaa))
    {
        ProfileID = Common.ConvertToGuid(aaa.ToString());
    }
}
<script>
    SetFieldRequired();
    SetFieldRequiredByScreenName('Hre_Discipline_Tab');
    //Hàm lưu
    function onSave() {
        onlySave($('#form_Hre_Discipline'), '@_Hrm_Hre_Service', 'api/Hre_Discipline/', 'gridDiscipline', 'windowDiscipline');
        return false;
    }

    //Hàm lưu và đóng
    function onSaveClose() {
        onSaveAndClose($('#form_Hre_Discipline'), '@_Hrm_Hre_Service', 'api/Hre_Discipline/', 'gridDiscipline', 'windowDiscipline');
        return false;
    }
    @*//Ham lưu và tạo mới
    function doSaveNew() {
        if (doSave()) {
            KendoRouteMapping('Hrm_Main_Web/Hre_Discipline/CreateOrUpdateProfile/', 'Hrm_Main_Web', '@_hrm_Main_Web');
        }
    }*@

    function onSaveDataPopUp() {
        onlySave($('#form_Hre_Discipline'), '@_Hrm_Hre_Service', 'api/Hre_Discipline/', 'gridDiscipline'); return false;
    }

</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Hre_Discipline" }))
{
    @Html.HiddenFor(model => model.Discipline_ID)
    <table style="width:100%">
        <tbody>
            <tr>
                @*<td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>*@
                <td valign="top" style="background-color: #ffffff;">
                    <div style="display: block; padding-top: 10px; float: left;">
                        <div>
                            @{
    if (Model != null)
    {
        @Html.HiddenFor(m => m.ProfileID)
    }
    else
    {
        @Html.Hidden("ProfileID", ProfileID)
    }
                            }
                        </div>
                        <div style="float:left; padding-right:20px">
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.ViolationRule)
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrTextBoxFor(model => model.ViolationRule, "width: 250px")
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.DecisionNo)
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrTextBoxFor(model => model.DecisionNo, "width: 250px")
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.DateOfViolation)
                                </div>
                                <div class="FieldValue">
                                    @{
    var _dateOfViolation = new DatePickerBuilderInfo()
    {
        Name = "DisciplineInfo_DateOfViolation",
    };
                                    }
                                    @Html.VnrDatePickerFor(model => model.DateOfViolation, _dateOfViolation)
                                </div>
                            </div>
                            <div id="div3">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.DateOfEffective)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var _DateOfEffective = new DatePickerBuilderInfo()
                                        {
                                            Name = "DisciplineInfo_DateOfEffective",
                                        };
                                    }
                                    @Html.VnrDatePickerFor(model => model.DateOfEffective, _DateOfEffective)
                                </div>
                                <div style="clear: both;"></div>
                            </div>

                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.DateEndOfViolation)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var _dateEndOfViolation = new DatePickerBuilderInfo()
                                        {
                                            Name = "DisciplineInfo_DateEndOfViolation",
                                        };
                                    }
                                    @Html.VnrDatePickerFor(model => model.DateEndOfViolation, _dateEndOfViolation)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.ContentOfDiscipline)
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrTextAreaFor(model => model.ContentOfDiscipline, "min-width: 250px")
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div13">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.ResultOfRecidivism)
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrTextAreaFor(model => model.ResultOfRecidivism, "min-width: 250px")
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div33">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.UserApprovedID)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        IEnumerable UserApproved = new string[] { };
                                        if (Model != null)
                                        {
                                            UserApproved = new[] { new { UserLogin = Model.UserApprovedName, ID = Model.UserApprovedID } };
                                        }
                                                                        }
                                                                        @{
                                        var userApprovedID = new MultiSelectBuilderInfo()
                                        {
                                            Name = "DisciplineInfo_UserApprovedID",
                                             DataTextField = "UserLogin",
                                            DataValueField = "ID",
                                            Url = @_hrm_Sys_Service + "Sys_GetData/GetMultiUserApproved_E_DISCIPLINE",
                                             Placeholder = ConstantDisplay.HRM_System_SelectUser.TranslateString(),
                                             MaxSelectedItems = 1,
                                             Value = UserApproved
                                         };
                                    }
                                    @(Html.VnrMultiSelectFor(mode => mode.UserApprovedID, userApprovedID))
                                </div>
                            </div>
                            <div id="div3">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.UserHeadID)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var displayUserHead = Hre_DisciplineModel.FieldNames.ProfileName;
                                        IEnumerable valueUserHead = new string[] { };
                                        if (Model != null)
                                        {
                                            valueUserHead = new[] { new { UserHeadName = Model.UserHeadName, ID = Model.UserHeadID } };
                                        }

                                        if (Model != null && Model.UserHeadName != null)
                                        {
                                            displayUserHead = Hre_DisciplineModel.FieldNames.UserHeadName;
                                        }

                                        var UserHead = new MultiSelectBuilderInfo()
                                        {
                                            Name = "DisciplineInfo_UserHeadID",
                                            DataTextField = displayUserHead,
                                            DataValueField = Hre_DisciplineModel.FieldNames.ID,
                                            Url = @_Hrm_Hre_Service + "Hre_GetData/GetMultiProfile",
                                            Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                                            MaxSelectedItems = 1,
                                            Value = valueUserHead,
                                        };
                                    }
                                    @(Html.VnrMultiSelectFor(mode => mode.UserHeadID, UserHead))
                                </div>
                                <div style="clear: both;"></div>
                            </div>
                            <div id="div3">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.UnionAgentID)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var displayUnionAgent = Hre_DisciplineModel.FieldNames.ProfileName;
                                        IEnumerable valueUnionAgent = new string[] { };
                                        if (Model != null)
                                        {
                                            valueUnionAgent = new[] { new { UnionAgentName = Model.UnionAgentName, ID = Model.UnionAgentID } };
                                        }

                                        if (Model != null && Model.UnionAgentName != null)
                                        {
                                            displayUnionAgent = Hre_DisciplineModel.FieldNames.UnionAgentName;
                                        }

                                        var UnionAgent = new MultiSelectBuilderInfo()
                                        {
                                            Name = "DisciplineInfo_UnionAgentID",
                                            DataTextField = displayUnionAgent,
                                            DataValueField = Hre_DisciplineModel.FieldNames.ID,
                                            Url = @_Hrm_Hre_Service + "Hre_GetData/GetMultiProfile",
                                            Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                                            MaxSelectedItems = 1,
                                            Value = valueUnionAgent,
                                        };
                                    }
                                    @(Html.VnrMultiSelectFor(mode => mode.UnionAgentID, UnionAgent))
                                </div>
                                <div style="clear: both;"></div>
                            </div>

                        </div>
                        <div style="float:left;">

                            <div class="DivContentTitleValue" id="div33">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.DescriptionOfViolation)
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrTextAreaFor(model => model.DescriptionOfViolation)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div33">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.ViolationExplain)
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrTextAreaFor(model => model.ViolationExplain)
                                </div>
                            </div>
                            <div class="DivContentTitleValue" id="div33">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.Notes)
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrTextAreaFor(model => model.Notes)
                                </div>
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td style="padding-top:2px; padding-bottom:10px;">
                    <div class="LineFooterCommandEdit">
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div>
                        <div class="FieldTitle" >
                        </div>
                        <div class="FieldValue">
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save_Discipline", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-Close_Discipline", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @*@Html.VnrButton(new ButtonBuilderInfo() { EventClick = "doSaveNew", Name = "save-new_Discipline", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })*@
                        </div>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
}