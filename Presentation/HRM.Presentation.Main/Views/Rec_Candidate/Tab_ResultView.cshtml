@using HRM.Infrastructure.Utilities
@using HRM.Infrastructure.Security
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.Recruitment.Models

@model Rec_CandidateModel

@{
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var candidateID = Guid.Empty;
    string HistoryApproves = "";
    if (Model != null)
    {
        candidateID = Model.ID;
        HistoryApproves = Model.ApproveHistory;
    }
}


<script>
    $(document).ready(function () {
        $("#IsReadyBizTrip").click(function () {
            return false;
        });
    });
</script>
<div class="VnRMain">
    <table style="width: 100%; height: 580px; vertical-align: top">
        <tbody>
            <tr>
                <td valign="top" style="background-color: #ffffff; vertical-align: top">
                    <div style="display: block; vertical-align: top; padding-top: 10px;">
                        <fieldset>
                            <legend>
                                @ConstantDisplay.HRM_REC_RecruitmentInfo.TranslateString()
                            </legend>
                            <div style="float: left; width: 450px">
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelForNoneIcon(model => model.PositionName)
                                    </div>
                                    <div class="FieldValueView">
                                        @Html.DisplayFor(model => model.PositionName)
                                    </div>
                                </div>
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelForNoneIcon(model => model.SourceAdsName)
                                    </div>
                                    <div class="FieldValueView">
                                        @Html.DisplayFor(model => model.SourceAdsName)
                                    </div>
                                </div>
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelForNoneIcon(model => model.YearOfExperience)
                                    </div>
                                    <div class="FieldValueView">
                                        @Html.DisplayFor(model => model.YearOfExperience)
                                    </div>
                                </div>
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelForNoneIcon(model => model.IsReadyBizTrip)
                                    </div>
                                    <div class="FieldValue">
                                        @{
                                            var IsReadyBizTrip = new CheckBoxBuilderInfo()
                                            {
                                            };
                                            if (Model != null)
                                            {
                                                if (Model.IsReadyBizTrip == true)
                                                {
                                                    IsReadyBizTrip.Value = true;
                                                }
                                                else
                                                {
                                                    IsReadyBizTrip.Value = false;
                                                }
                                            }
                                        }
                                        @Html.VnrCheckBoxFor(model => model.IsReadyBizTrip, IsReadyBizTrip)
                                    </div>
                                </div>
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelForNoneIcon(model => model.OrgStructureName)
                                    </div>
                                    <div class="FieldValueView">
                                        @Html.DisplayFor(model => model.OrgStructureName)
                                    </div>
                                </div>
                                @*<div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelForNoneIcon(model => model.Assessment)
                                    </div>
                                    <div class="FieldValueView">
                                        @Html.DisplayFor(model => model.Assessment)
                                    </div>
                                </div>*@
                                @*<div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelForNoneIcon(model => model.UserCreate)
                                    </div>
                                    <div class="FieldValueView">
                                        @Html.DisplayFor(model => model.UserCreate)
                                    </div>
                                </div>*@
                                @*<div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelForNoneIcon(model => model.FileAttachment)
                                    </div>
                                    <div class="FieldValueView">
                                        @Html.DisplayFor(model => model.FileAttachment)
                                    </div>
                                </div>*@
                            </div>
                            <div style="float: left; width: 450px">
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelForNoneIcon(model => model.Status)
                                    </div>
                                    <div class="FieldValueView">
                                        @Html.DisplayFor(model => model.StatusView)
                                    </div>
                                </div>
                                @*<div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelForNoneIcon(model => model.StatusLast)
                                    </div>
                                    <div class="FieldValueView">
                                        @Html.DisplayFor(model => model.StatusLast)
                                    </div>
                                </div>*@
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelForNoneIcon(model => model.ScorePotential)
                                    </div>
                                    <div class="FieldValueView">
                                        @Html.DisplayFor(model => model.ScorePotential)
                                    </div>
                                </div>
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelForNoneIcon(model => model.DateStartWorking)
                                    </div>
                                    <div class="FieldValueView">
                                        @Html.DisplayFor(model => model.DateStartWorking)
                                    </div>
                                </div>
                                <div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelForNoneIcon(model => model.SalarySuggest)
                                    </div>
                                    <div class="FieldValueView">
                                        @Html.DisplayFor(model => model.SalarySuggest)
                                    </div>
                                </div>
                                @*<div class="DivContentTitleValue" id="div13">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelForNoneIcon(model => model.UserUpdate)
                                    </div>
                                    <div class="FieldValueView">
                                        @Html.DisplayFor(model => model.UserUpdate)
                                    </div>
                                </div>*@
                            </div>
                        </fieldset>
                    </div>



                    <div style=" display: block; float: left; width: 100%;">
                        <fieldset>
                            <legend>
                                @ConstantDisplay.HRM_REC_ApproveHistory.TranslateString()
                            </legend>
                            <div style="overflow:hidden">
                                <!--Khai báo các thông tin cho Grid-->
                                @{
                                    string[] valueFields = new string[]
                            {
                                HistoryApprove.FieldNames.DateApprove,
                                HistoryApprove.FieldNames.UserApprove,
                                HistoryApprove.FieldNames.Changes,
                                HistoryApprove.FieldNames.Status,
                            };
                                    Dictionary<string, int> sizeFields = new Dictionary<string, int>()
                            {
                                {HistoryApprove.FieldNames.DateApprove,110},
                                {HistoryApprove.FieldNames.UserApprove,120},
                                {HistoryApprove.FieldNames.Changes,120},
                                {HistoryApprove.FieldNames.Status,120},
                            };

                                    Dictionary<string, string> displayFields = new Dictionary<string, string>()
                            {
                                {HistoryApprove.FieldNames.DateApprove, ConstantDisplay.HRM_Attendance_Roster_DateApprove},
                                {HistoryApprove.FieldNames.UserApprove, ConstantDisplay.HRM_Attendance_AttendanceTable_UserApprove},
                                {HistoryApprove.FieldNames.Changes, ConstantDisplay.HRM_HR_WorkHistory_PositionID},
                                {HistoryApprove.FieldNames.Status, ConstantDisplay.HRM_HR_WorkHistory_Status},
                            };
                                    var filterable = new Dictionary<string, bool>()
                            {
                               {HistoryApprove.FieldNames.DateApprove,true},
                               {HistoryApprove.FieldNames.UserApprove,true},
                                {HistoryApprove.FieldNames.Changes,true},
                                {HistoryApprove.FieldNames.Status,true},
                            };

                                    var grid = new GridBuilderInfo
                                    {
                                        Name = "gridHistoryApprove",
                                        ReadActionUrl = _hrm_Hre_Service + "Rec_GetData/GetHistoryApprove?HistoryApproves=" + HistoryApproves,
                                        ValueFields = valueFields,
                                        SizeFields = sizeFields,
                                        DisplayFields = displayFields,
                                        PageSize = 10,
                                        GridHeight = 370,
                                        ShowCheckAll = false,
                                        AutoBind = true
                                    };
                                }

                                <!--Khởi tạo Grid-->
                                @(Html.VnrGrid<HistoryApprove>(grid))
                            </div>
                        </fieldset>
                    </div>
                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
        </tbody>
    </table>
</div>
<div class="clear"></div>