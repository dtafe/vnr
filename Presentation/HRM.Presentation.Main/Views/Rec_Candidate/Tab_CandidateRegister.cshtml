@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.Recruitment.Models
@using HRM.Infrastructure.Security

@model Rec_CandidateModel
@{
    ViewBag.Title = "Tab_CandidateRegister";
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;

    IList<SelectListItem> listGender = Enum.GetValues(typeof(EnumDropDown.Gender))
            .Cast<EnumDropDown.Gender>()
            .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) }).OrderBy(p=>p.Text)
            .ToList();
    IList<SelectListItem> listMarriageStatus = Enum.GetValues(typeof(EnumDropDown.MarriageStatus))
            .Cast<EnumDropDown.MarriageStatus>()
            .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) }).OrderBy(p=>p.Text)
            .ToList();
}
<script>


    function loadCustomNation() {
        debugger;
        var Nation = $("#NationalityID").data("kendoDropDownList");
        Nation.search("Việt Nam");
    }

    function loadCustomTC() {
        debugger;
        var TCountry = $("#Candidate_TCountryID").data("kendoComboBox");
        TCountry.value($("#NationalityID").val());
        //TCountry.select(TCountry.ul.children().eq(0));
    }

    function loadCustomPC() {
        debugger;
        var PCountry = $("#Candidatep_PCountryID").data("kendoComboBox");
        PCountry.value($("#NationalityID").val());
        //PCountry.select(PCountry.ul.children().eq(0));
    }

</script>
<style>
    .tableLeft {
        float: left;
        width: 500px;
        display: block;
    }

        .tableLeft .FieldTitle {
            width: 170px;
        }
</style>

<div style="margin-top:3px">
    <div style="width:100%">
        <fieldset>
            <legend>
                @ConstantDisplay.HRM_HR_Profile_Basic.TranslateString()
            </legend>
            <div class="hrm_box">
                <div id="div13">
                    <div class="FieldTitle170">
                        @Html.VnrLabelForNoneIcon(model => model.CandidateName)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(model => model.CandidateName)
                    </div>
                </div>
                <div id="div13">
                    <div class="FieldTitle170">
                        @Html.VnrLabelForNoneIcon(model => model.CandidateNumber)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(model => model.CandidateNumber)
                    </div>
                </div>
                <div id="div13">
                    <div class="FieldTitle170">
                        @Html.VnrLabelForNoneIcon(model => model.DateOfBirth)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _dob = new DatePickerBuilderInfo()
                            {
                                StyleCss = "width:100px",
                            };
                        }
                        @Html.VnrDatePickerFor(model => model.DateOfBirth, _dob)
                    </div>
                </div>
                <div id="div13">
                    <div class="FieldTitle170">
                        @Html.VnrLabelForNoneIcon(model => model.Gender)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _gender = new DropDownListBuilderInfo()
                            {
                                DataValueField = "Value",
                                DataTextField = "Text",
                                BindTo = listGender
                            };
                        }
                        @Html.VnrDropDownListFor(model => model.Gender, _gender)
                    </div>
                </div>
                <div id="div13">
                    <div class="FieldTitle170">
                        @Html.VnrLabelForNoneIcon(model => model.EthnicID)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _ethnic = new DropDownListBuilderInfo()
                            {
                                DataValueField = "ID",
                                DataTextField = "EthnicGroupName",
                                Url = _hrm_Hre_Service + "Cat_GetData/GetMultiEthnicGroup",
                            };
                        }
                        @Html.VnrDropDownListFor(model => model.EthnicID, _ethnic)
                    </div>
                </div>
                <div id="div13">
                    <div class="FieldTitle170">
                        @Html.VnrLabelForNoneIcon(model => model.ReligionID)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _religion = new DropDownListBuilderInfo()
                            {
                                DataValueField = "ID",
                                DataTextField = "ReligionName",
                                Url = _hrm_Hre_Service + "Cat_GetData/GetMultiReligion",
                            };
                        }
                        @Html.VnrDropDownListFor(model => model.ReligionID, _religion)
                    </div>
                </div>
                <div id="div13">
                    <div class="FieldTitle170">
                        @Html.VnrLabelForNoneIcon(model => model.Origin)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(model => model.Origin)
                    </div>
                </div>

            </div>
            <div class="hrm_box">
                <div id="div13">
                    <div class="FieldTitle170">
                        @Html.VnrLabelForNoneIcon(model => model.NameEnglish)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(model => model.NameEnglish)
                    </div>
                </div>
                <div id="div13">
                    <div class="FieldTitle170">
                        @Html.VnrLabelForNoneIcon(model => model.CodeCandidate)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(model => model.CodeCandidate)
                    </div>
                </div>
                <div id="div13">
                    <div class="FieldTitle170">
                        @Html.VnrLabelForNoneIcon(model => model.MarriageStatus)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _marriage = new DropDownListBuilderInfo()
                            {
                                DataValueField = "Value",
                                DataTextField = "Text",
                                BindTo = listMarriageStatus
                            };
                        }
                        @Html.VnrDropDownListFor(model => model.MarriageStatus, _marriage)
                    </div>
                </div>

                <div id="div13">
                    <div class="FieldTitle170">
                        @Html.VnrLabelForNoneIcon(model => model.NationalityID)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _National = new DropDownListBuilderInfo()
                            {
                                DataValueField = "ID",
                                DataTextField = "CountryName",
                                Url = _hrm_Hre_Service + "Cat_GetData/GetMultiCountry",
                            };
                            if (Model == null)
                            {
                                _National.EventDataBound = "loadCustomNation";
                            }
                        }
                        @Html.VnrDropDownListFor(model => model.NationalityID, _National)
                    </div>
                </div>
                <div id="div13">
                    <div class="FieldTitle170">
                        @Html.VnrLabelForNoneIcon(model => model.PlaceOfBirth)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _PlaceOfBirth = new ComboBoxBuilderInfo()
                            {
                                DataValueField = "ProvinceName",
                                DataTextField = "ProvinceName",
                                Url = _hrm_Hre_Service + "Cat_GetData/GetMultiProvince",
                                Placeholder = ConstantDisplay.HRM_Category_SelectProvince.TranslateString(),
                                StyleCss = "Width: 200px"
                            };
                        }
                        @Html.VnrComboBoxFor(model => model.PlaceOfBirth, _PlaceOfBirth)
                    </div>
                </div>
                <div id="div13">
                    <div class="FieldTitle170">
                        @Html.VnrLabelForNoneIcon(model => model.EducationLevelID)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _nameEntity = new DropDownListBuilderInfo()
                            {
                                DataValueField = "ID",
                                DataTextField = "NameEntityName",
                                Url = _hrm_Hre_Service + "Cat_GetData/GetMultiEducationLevel",
                            };
                        }
                        @Html.VnrDropDownListFor(model => model.EducationLevelID, _nameEntity)
                    </div>
                </div>
            </div>
            @* <div class="hrm_box"> *@
            <div class='hrm-image k-upload' style="float:left">
                @{
                    var img = Html.DisplayFor(model => model.ImagePath).ToString();
                    var defaultImage = "no_avatar.jpg";
                    if (img == "")
                    {
                        img = defaultImage;
                    }
                    var imgUrl = _hrm_Main_Web + "Images/";
                }
                <div>
                    <div class="close" lang="@imgUrl@defaultImage" id="btn-delete-image" style="font-size: 15px; margin-bottom: -17px; margin-right: 2px;">
                        <span class="glyphicon glyphicon-remove"></span>
                    </div>
                </div>
                <div id="kendoUploadImage">
                    <img id="imgUploaded" src="@imgUrl@img" alt="Profile Image" style="padding-bottom:0px" />
                </div>
                <script>
                    $("#btn-delete-image").click(function () {
                        $("#imgUploaded").attr("src", this.lang);
                        $("#ImagePath").val('');
                    });
                    function onSuccess(e) {
                        var responseTxt = jQuery.parseJSON(e.XMLHttpRequest.responseText);
                        var status = responseTxt.Status;
                        var srcValue = responseTxt.FileUrl;
                        if (status == true) {
                            $("#imgUploaded").attr('src', srcValue);
                            $("#ImagePath").val('');
                            $("#ImagePath").val(responseTxt.FileName);
                            $("#fileLabel").html(responseTxt.FileName);
                        } else {
                            $("#imgUploaded").attr('src', '@imgUrl');
                            $("#ImagePath").val('');
                        }
                    }
                </script>
                @{
                    var uploadTemplateFile = new UploadBuilderInfo
                    {
                        Name = "files",
                        SaveUrl = _hrm_Main_Web + "Home/SaveImageUpload",
                        EventSuccess = "onSuccess",
                        Width = 85,
                    };
                }
                <style>
                    #files {
                        display: none;
                    }

                    .custom-file-upload {
                        border: 1px solid #ccc;
                        display: inline-block;
                        padding: 2px 9px;
                        cursor: pointer;
                    }
                </style>
                <label class="custom-file-upload">
                    @Html.VnrUpload(uploadTemplateFile)
                    <span class="glyphicon glyphicon-cloud-upload"></span> Chọn tập tin...
                </label>
                @Html.HiddenFor(model => model.ImagePath)
                <div class="clear"></div>
                @*</div>*@
            </div>
        </fieldset>
    </div>
    <div>
        <div style="width:100%">
            <fieldset>
                <legend>
                    @ConstantDisplay.HRM_Rec_ContractInfo.TranslateString()
                </legend>
                <div class="hrm_box">
                    <div id="div13">
                        <div class="FieldTitle170">
                            @Html.VnrLabelForNoneIcon(model => model.Mobile)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(model => model.Mobile)
                        </div>
                    </div>
                    <div id="div13">
                        <div class="FieldTitle170">
                            @Html.VnrLabelForNoneIcon(model => model.Phone)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(model => model.Phone)
                        </div>
                    </div>
                    <div id="div13">
                        <div class="FieldTitle170">
                            @Html.VnrLabelForNoneIcon(model => model.Email)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(model => model.Email)
                        </div>
                    </div>
                </div>
                <div class="hrm_box">
                    <div>
                        <div class="FieldTitle170">
                            @Html.VnrLabelForNoneIcon(model => model.Mobile2)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(model => model.Mobile2)
                        </div>
                    </div>
                </div>
                <div style="float:left; width:100%">
                    <div id="div13" style="padding-top:1px">
                        <div class="FieldTitle170">
                            @Html.VnrLabelForNoneIcon(model => model.TAddress)
                        </div>
                        <div style="width:100%">
                            @{
                                string valuetcountry = string.Empty;
                                if (Model == null || Model.TCountryID == null)
                                {
                                    valuetcountry = "Việt Nam";
                                }
                            }
                            @{
                                var tCountryID = new ComboBoxBuilderInfo()
                                {
                                    Name = "Candidate_TCountryID",
                                    StyleCss = "Width: 150px",
                                    DataTextField = "CountryName",
                                    DataValueField = "ID",
                                    ServerFilter = true,
                                    Autobind = true,
                                    FilterType = FilterType.Contains,
                                    Url = _hrm_Hre_Service + "Cat_GetData/GetMultiCountry",
                                    Placeholder = ConstantDisplay.HRM_Category_SelectCountry.TranslateString(),
                                    //Value = Model == null ? string.Empty : Model.TCountryID.ToString(),
                                    Value = valuetcountry,
                                   
                                };
                                if (Model == null)
                                {
                                    tCountryID.EventDataBound = "loadCustomTC";
                                }
                            }
                            @Html.VnrComboBoxFor(model => model.TCountryID, tCountryID).Text(Model == null ? string.Empty : Model.TCountryName)

                            <script>
                                function filterProvinces() {

                                    return {
                                        country: $("#Candidate_TCountryID").val(),
                                        provinceFilter: $("#Candidate_TProvinceID").data("kendoComboBox").input.val()
                                    };
                                }
                            </script>

                         

                            @{
                                var tProvince = new ComboBoxBuilderInfo()
                                {
                                    Name = "Candidate_TProvinceID",
                                    StyleCss = "Width: 150px",
                                    DataTextField = "ProvinceName",
                                    DataValueField = "ID",
                                    ServerFilter = true,
                                    FilterType = FilterType.Contains,
                                    Url = _hrm_Hre_Service + "Cat_GetData/GetProvinceCascading/",
                                    CascadeFrom = "Candidate_TCountryID",
                                    Data = "filterProvinces",
                                    //Autobind = false,
                                    Placeholder = ConstantDisplay.HRM_Category_SelectProvince.TranslateString(),
                                    Value = Model == null ? string.Empty : Model.TProvinceID.ToString(),
                                  
                                };
                            }
                            @Html.VnrComboBoxFor(model => model.TProvinceID, tProvince).Text(Model == null ? string.Empty : Model.TProvinceName)

                            <script>
                                function filterDistricts() {
                                    return {
                                        province: $("#Candidate_TProvinceID").val(),
                                        districtFilter: $("#Candidate_TDistrictID").data("kendoComboBox").input.val()
                                    };
                                }
                            </script>
                            @{
                                var tDistrictID = new ComboBoxBuilderInfo()
                                {
                                    Name = "Candidate_TDistrictID",
                                    DataTextField = "DistrictName",
                                    DataValueField = "ID",
                                    FilterType = FilterType.Contains,
                                    Url = _hrm_Hre_Service + "Cat_GetData/GetDistrictCascading/",
                                    CascadeFrom = "Candidate_TProvinceID",
                                    ServerFilter = true,
                                    StyleCss = "Width: 150px",
                                    Data = "filterDistricts",
                                    Placeholder = ConstantDisplay.HRM_Category_SelectDistrict.TranslateString(),
                                    Value = Model == null ? string.Empty : Model.TDistrictID.ToString()
                                };
                            }
                            @Html.VnrComboBoxFor(model => model.TDistrictID, tDistrictID).Text(Model == null ? string.Empty : Model.TDistrictName)
                            @Html.VnrTextBoxFor(model => model.TAddress)

                        </div>
                    </div>

                    <div id="div13" style="padding-top:1px">
                        <div class="FieldTitle170">
                            @Html.VnrLabelForNoneIcon(model => model.PAddress)
                        </div>
                        <div style="width: 100%">
                            @{
                                string valuepcountry = string.Empty;
                                if (Model == null || Model.PCountryID == null)
                                {
                                    valuepcountry = "Việt Nam";
                                }
                            }
                            @{
                                var pCountry = new ComboBoxBuilderInfo()
                                {
                                    Name = "Candidatep_PCountryID",
                                    DataTextField = "CountryName",
                                    DataValueField = "ID",
                                    StyleCss = "Width: 150px",
                                    ServerFilter = true,
                                    Autobind = true,
                                    FilterType = FilterType.Contains,
                                    Url = _hrm_Hre_Service + "Cat_GetData/GetMultiCountry",
                                    Placeholder = ConstantDisplay.HRM_Category_SelectCountry.TranslateString(),
                                   // Value = Model == null ? string.Empty : Model.PCountryID.ToString(),
                                    Value = valuepcountry
                                };
                                if (Model == null)
                                {
                                    pCountry.EventDataBound = "loadCustomPC";
                                }
                            }
                            @Html.VnrComboBoxFor(model => model.PCountryID, pCountry).Text(Model == null ? string.Empty : Model.PCountryName)
                            <script>
                                function filterProvincesDown() {
                                    return {
                                        country: $("#Candidatep_PCountryID").val(),
                                        provinceFilter: $("#Candidatep_PProvinceID").data("kendoComboBox").input.val()
                                    };
                                }
                            </script>
                            @{
                                var pProvince = new ComboBoxBuilderInfo()
                                {
                                    Name = "Candidatep_PProvinceID",
                                    DataTextField = "ProvinceName",
                                    DataValueField = "ID",
                                    StyleCss = "Width: 150px",
                                    FilterType = FilterType.Contains,
                                    Url = _hrm_Hre_Service + "Cat_GetData/GetProvinceCascading/",
                                    Placeholder = ConstantDisplay.HRM_Category_SelectProvince.TranslateString(),
                                    CascadeFrom = "Candidatep_PCountryID",
                                    ServerFilter = true,
                                    Data = "filterProvincesDown",
                                    Value = Model == null ? string.Empty : Model.PProvinceID.ToString()

                                };
                            }
                            @Html.VnrComboBoxFor(model => model.PProvinceID, pProvince).Text(Model == null ? string.Empty : Model.PProvinceName)
                            <script>
                                function filterDistrictsDown() {
                                    return {
                                        province: $("#Candidatep_PProvinceID").val(),
                                        districtFilter: $("#Candidatep_PDistrictID").data("kendoComboBox").input.val()
                                    };
                                }
                            </script>
                            @{
                                var pDistrict = new ComboBoxBuilderInfo()
                                {
                                    Name = "Candidatep_PDistrictID",
                                    DataTextField = "DistrictName",
                                    StyleCss = "Width: 150px",
                                    DataValueField = "ID",
                                    FilterType = FilterType.Contains,
                                    Url = _hrm_Hre_Service + "Cat_GetData/GetDistrictCascading/",
                                    Placeholder = ConstantDisplay.HRM_Category_SelectDistrict.TranslateString(),
                                    CascadeFrom = "Candidatep_PProvinceID",
                                    ServerFilter = true,
                                    Data = "filterDistrictsDown",
                                    Value = Model == null ? string.Empty : Model.PDistrictID.ToString()
                                };
                            }
                            @Html.VnrComboBoxFor(model => model.PDistrictID, pDistrict).Text(Model == null ? string.Empty : Model.PDistrictName)
                            @Html.VnrTextBoxFor(model => model.PAddress)
                        </div>
                    </div>
                </div>
            </fieldset>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        debugger;
        var _CodeCandidate = document.getElementById("CodeCandidate");
        _CodeCandidate.readOnly = true;
    });
</script>