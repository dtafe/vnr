@using HRM.Infrastructure.Utilities;
@using HRM.Infrastructure.Security;
@using HRM.Presentation.UI.Controls.Kendo;

@model HRM.Presentation.Recruitment.Models.Rec_CandidateQualificationSeachModel
@{
    // ViewBag.Title = ConstantDisplay.HRM_Rec_Candidate_Title.TranslateString();
    Layout = null;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var candidateID = Guid.Empty;
    if (ViewBag.CandidateID != null)
    {
        candidateID = ViewBag.CandidateID;
    }
}
<script type="text/javascript">
    
    ReadGrid("grid_QualificationCandidate");
    ReadGrid("grid_CandidateComputingLevel");
    ReadGrid("grid_CandidateLanguageLevel");
    @*function filterInfo(isexport) {
        return {
            CandidateID: $("#CandidateID").val(),
            ValueFields: $("#valueFieldsGridRecruitmentHistory").val(),
            IsExport: isexport
        };
    };
    $("#btnExportAll").click(function () {
        var grid = $('#gridTab_RecruitmentHistory').data("kendoGrid");
        if (grid.dataSource.total() == 0) {
            ExportAllFail();
            return;
        }
        var urlGetData = '@_hrm_Hre_Service' + "Rec_GetData/ExportAllRecruitmentHistoryList/";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterInfo(true);
        ExportAll(urlGetData, dataParameter, urlDownload, '@ConstantPermission.Rec_Candidate');
    });*@

</script>
<div>
    @{
        if (Model != null)
        {
            @Html.HiddenFor(mode => mode.CandidateID)
        }
        else
        {
            @Html.Hidden("CandidateID", candidateID)
        }

    }

</div>
<div style="padding-top:3px">
    <!--Khen thưởng-->
    <div>
        @{
            var window = new WindowBuilderInfo
            {
                Name = "windowQualifitcationCandidate",
                Visible = false,
                Width = 700,
                LoadContentFrom = @_hrm_Main_Web + "Rec_CandidateQualification/CandidateQualificationInfo/",
            };
        }
        @(Html.VnrWindow(window))
        <script>
            var titleCreatePopUpQualification = '@Html.Raw(ConstantDisplay.HRM_HR_Qualification_AddNew.TranslateString())';
            var titleEditPopUpQualification = '@Html.Raw(ConstantDisplay.HRM_HR_Qualification_Update.TranslateString())';
            function filterFieldInfo() {
                return {
                    CandidateID: $("#CandidateID").val(),
                    //ValueFields: $("#valueFieldsGridQualificationCandidate").val(),
                    //IsExport: isexport
                };
            };

            //Xử lý sự kiện click button tìm kiếm
            $(document).ready(function () {

                $("#btnSearchQualification").click(function () {
                    ReadGrid("grid_Qualification");
                });

                //Show Hide Panel
                ShowHidePanel();

                //Xử lý Edit
                var url = '@_hrm_Main_Web' + "Rec_CandidateQualification/CandidateQualificationInfo/";
                EditGridPopUp("grid_QualificationCandidate", "windowQualifitcationCandidate", url, '@ConstantPermission.Hre_Qualification', titleEditPopUpQualification);
            });

            //Xử lý tạo mới
            $("#btnCreateQualificationCandidate").click(function () {
                
                var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Rec_Candidate');
                if (!isAccess) {
                    return;
                }
                var x = '@candidateID';
                if (x == '') {
                    PopUpCreate("windowError");
                }
                else {
                    //var url = '@_hrm_Main_Web' + "Rec_CandidateQualification/CandidateQualificationInfo/";
                    //PopUpEdit("windowQualifitcationCandidate", url, SelectID, titleCreatePopUpQualification);
                    PopUpCreate("windowQualifitcationCandidate", titleCreatePopUpQualification, '@ConstantPermission.Rec_Candidate');
                }
            });

            //Xử Lý grid
            GridCheckbox("grid_QualificationCandidate");

            //Xử lý delete
            $('#btnDeleteQualificationCandidate').click(function (e) {
                
                if (selectedIds == "") {
                    DeleteFail();
                    return;
                }
                DeleteSelected('grid_QualificationCandidate', '@_hrm_Main_Web' + "Rec_CandidateQualification/RemoveSelected/", selectedIds, '@ConstantPermission.Rec_Candidate');
                //e.preventDefault();
                //DeleteSelected("grid_QualificationCandidate", '@_hrm_Main_Web' + "Rec_CandidateQualification/RemoveSelecteds/", selectedIds, '@ConstantPermission.Rec_Candidate');
                selectedIds = [];
                return false;
            });

            //Expoprt
            $("#btnExportAll").click(function () {

                var grid = $('#grid_QualificationCandidate').data("kendoGrid");
                if (grid.dataSource.total() == 0) {
                    ExportAllFail();
                    return;
                }
                var urlGetData = '@_hrm_Hre_Service' + "Rec_GetData/ExportQualificationCandidateList/";
                var urlDownload = '@_hrm_Main_Web';
                var dataParameter = filterFieldInfo(true);
                ExportAll(urlGetData, dataParameter, urlDownload, '@ConstantPermission.Rec_Candidate');
            });

            $("#btnExportSelected").click(function () {
                if (selectedIds == "") {
                    ExportSelectedFail();
                    return;
                }
                var urlGetData = '@_hrm_Hre_Service' + "Rec_GetData/ExportQualificationCandidateSelected/";
                var urlDownload = '@_hrm_Main_Web';
                var listIds = selectedIds.join(",");
                var listFields = $('#valueFieldsGrid').val();
                ExportSelected(urlGetData, listIds, listFields, urlDownload, '@ConstantPermission.Rec_Candidate');
            });

        </script>

        <div class="commandToolBarWidge">
            <div class="GridTitle">
                @Html.VnrLabel(ConstantDisplay.HRM_HR_Qualification.TranslateString())
            </div>
            <div style="float:right">
                @*<div class="btn-group">
                        <button type="button" class="k-button btn-default dropdown-toggle" data-toggle="dropdown">
                            <img src="@ConstantPath.IconExportPath" width="15" height="15" />
                            @ConstantDisplay.HRM_Common_ExportDropdown_Title.TranslateString()
                            <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu pull-right" role="menu">
                            <li>@Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExportSelected", Content = ConstantAction.HRM_Common_ExportSelected.TranslateString(), ImageUrl = ConstantPath.IconExportPath, CssStyle = "border:0" })</li>
                            <li>@Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExportAll", Content = ConstantAction.HRM_Common_ExportAll.TranslateString(), ImageUrl = ConstantPath.IconExportPath, CssStyle = "border:0" })</li>
                        </ul>
                    </div>*@
                @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateQualificationCandidate", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
                @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDeleteQualificationCandidate", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
            </div>
            <div class="clear"></div>
        </div>

        <div>
            <!--Khai báo các thông tin cho Grid-->
            @using HRM.Presentation.Recruitment.Models
            @using HRM.Presentation.UI.Controls.Kendo
            @{
                string[] valueFields = new string[]
                        {
                            Rec_CandidateQualificationModel.FieldNames.QualificationName,
                            Rec_CandidateQualificationModel.FieldNames.CertificateName,
                            Rec_CandidateQualificationModel.FieldNames.NameEntityName,
                            Rec_CandidateQualificationModel.FieldNames.DateFinish,
                            Rec_CandidateQualificationModel.FieldNames.TrainingPlace,
                            Rec_CandidateQualificationModel.FieldNames.FieldOfTraining
                        };

                var sizeFields = new Dictionary<string, int>()
                        {
                            {Rec_CandidateQualificationModel.FieldNames.QualificationName,140},
                            {Rec_CandidateQualificationModel.FieldNames.CertificateName,100},
                            {Rec_CandidateQualificationModel.FieldNames.NameEntityName,70},
                            {Rec_CandidateQualificationModel.FieldNames.DateFinish,100},
                            {Rec_CandidateQualificationModel.FieldNames.TrainingPlace,90},
                            {Rec_CandidateQualificationModel.FieldNames.FieldOfTraining,120},
                        };

                //var filterable = new Dictionary<string, bool>()
                //{

                //};

                var displayFields = new Dictionary<string, string>()
                        {
                            {Rec_CandidateQualificationModel.FieldNames.QualificationName,ConstantDisplay.HRM_HR_Qualification_QualificationName},
                            {Rec_CandidateQualificationModel.FieldNames.CertificateName,ConstantDisplay.HRM_HR_Qualification_CertificateName},
                            {Rec_CandidateQualificationModel.FieldNames.NameEntityName,ConstantDisplay.HRM_HR_Qualification_SpecialLevelID},
                            {Rec_CandidateQualificationModel.FieldNames.DateFinish,ConstantDisplay.HRM_HR_Qualification_DateFinish},
                            {Rec_CandidateQualificationModel.FieldNames.TrainingPlace,ConstantDisplay.HRM_HR_Qualification_TrainingPlace},
                            {Rec_CandidateQualificationModel.FieldNames.FieldOfTraining,ConstantDisplay.HRM_HR_Qualification_FieldOfTraining},
                        };

                var grid = new GridBuilderInfo
                {

                    Name = "grid_QualificationCandidate",
                    ValueFields = valueFields,
                    SizeFields = sizeFields,
                    DisplayFields = displayFields,
                    ReadActionUrl = _hrm_Hre_Service + "Rec_GetData/GetCandidateQualificationByCandidateID",
                    ReadData = "filterFieldInfo",
                    AutoBind = true,
                    GridHeight = 162,
                    ShowDeleteButton = true,
                    ShowCheckAll = false,
                };
            }

            @(Html.VnrGrid<Rec_CandidateQualificationModel>(grid))
        </div>
        @{
            var valueFields1 = string.Empty;
            for (int i = 0; i < valueFields.Count(); i++)
            {
                valueFields1 += "," + valueFields[i];
            }
        }
        @Html.Hidden("valueFieldsGridQualificationCandidate", valueFields1)
    </div>
</div>
<div>
    <!--Kỹ luật-->
    <div>
        @{
            var windowDisc = new WindowBuilderInfo
            {
                Name = "windowCandidateComputingLevel",
                Visible = false,
                Width=700,
                LoadContentFrom = @_hrm_Main_Web + "Rec_CandidateComputingLevel/CandidateComputingLevelInfo/",
            };
        }
        @(Html.VnrWindow(windowDisc))
        <script>
            var titleEditPopUpDiscipline = '@Html.Raw(ConstantDisplay.HRM_HR_Computing_Edit.TranslateString())';
            var titleCreatePopUpDiscipline = '@Html.Raw(ConstantDisplay.HRM_HR_Computing_AddNew.TranslateString())';


            //Xử lý sự kiện click button tìm kiếm
            $(document).ready(function () {

                //$("#btnSearchComputing").click(function () {
                //    ReadGrid("grid_Computing");
                //});

                //Show Hide Panel
                ShowHidePanel();

                //Xử lý Edit
                var url = '@_hrm_Main_Web' + "Rec_CandidateComputingLevel/CandidateComputingLevelInfo/";
                EditGridPopUp("grid_CandidateComputingLevel", "windowCandidateComputingLevel", url, '@ConstantPermission.Hre_Discipline', titleEditPopUpDiscipline);
            });

            //Xử lý tạo mới
            $("#btnCreateCandidateComputingLevel").click(function () {
                
                var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Rec_Candidate');
                if (!isAccess) {
                    return;
                }
                var x = '@candidateID';
                if (x == '') {
                    PopUpCreate("windowError");
                }
                else {
                    @*var url = '@_hrm_Main_Web' + "Rec_CandidateComputingLevel/CandidateComputingLevelInfo/";
                    PopUpEdit("windowCandidateComputingLevel", url, SelectID, titleCreatePopUpDiscipline);*@
                    PopUpCreate("windowCandidateComputingLevel", titleCreatePopUpDiscipline, '@ConstantPermission.Rec_Candidate');
                }
            });

            //Xử Lý grid
            GridCheckbox("grid_CandidateComputingLevel");

            //Xử lý delete
            $('#btnDeleteCandidateComputingLevel').click(function (e) {
                if (selectedIds == "") {
                    DeleteFail();
                    return;
                }
                e.preventDefault();
                DeleteSelected("grid_CandidateComputingLevel", '@_hrm_Main_Web' + "Rec_CandidateComputingLevel/RemoveSelected/", selectedIds, '@ConstantPermission.Rec_Candidate');
                return false;
            });

            //Expoprt
            @*$("#btnExportAllCandidateComputingLevel").click(function () {
                var grid = $('#grid_Computing').data("kendoGrid");
                if (grid.dataSource.total() == 0) {
                    ExportAllFail();
                    return;
                }
                var urlGetData = '@_Hrm_Hre_Service' + "Hre_GetData/ExportRewardList/";
                var urlDownload = '@_hrm_Main_Web';
                var dataParameter = filterFieldInfo(true);
                ExportAll(urlGetData, dataParameter, urlDownload, '@ConstantPermission.Hre_Discipline');
            });

            $("#btnExportSelectedCandidateComputingLevel").click(function () {
                if (selectedIds == "") {
                    ExportSelectedFail();
                    return;
                }
                var urlGetData = '@_Hrm_Hre_Service' + "Hre_GetData/ExportRewardSelected/";
                var urlDownload = '@_hrm_Main_Web';
                var listIds = selectedIds.join(",");
                var listFields = $('#valueFieldsGridDisc').val();
                ExportSelected(urlGetData, listIds, listFields, urlDownload, '@ConstantPermission.Hre_Discipline');
            });*@

        </script>

        <div class="commandToolBarWidge">
            <div class="GridTitle">
                @Html.VnrLabel(ConstantDisplay.HRM_HR_ProfileComputing.TranslateString())

            </div>
            <div style="float:right">

                @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateCandidateComputingLevel", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
                @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDeleteCandidateComputingLevel", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
            </div>
            <div class="clear"></div>
        </div>

        <div>
            <!--Khai báo các thông tin cho Grid-->
            @{
                var valueFieldsDiscipline = new string[]
                        {

                            Rec_CandidateComputingLevelModel.FieldNames.ComputingType,
                            Rec_CandidateComputingLevelModel.FieldNames.ComputingLevel,
                            Rec_CandidateComputingLevelModel.FieldNames.UserUpdate,
                            Rec_CandidateComputingLevelModel.FieldNames.DateUpdate,

                        };

                var sizeFieldsDiscipline = new Dictionary<string, int>()
                        {

                            {Rec_CandidateComputingLevelModel.FieldNames.ComputingType, 115},
                            {Rec_CandidateComputingLevelModel.FieldNames.ComputingLevel, 60},
                            {Rec_CandidateComputingLevelModel.FieldNames.UserUpdate, 110},
                            {Rec_CandidateComputingLevelModel.FieldNames.DateUpdate, 110},

                        };

                var filterableDiscipline = new Dictionary<string, bool>()
                {

                };

                var displayFieldsDiscipline = new Dictionary<string, string>()
                        {

                            {Rec_CandidateComputingLevelModel.FieldNames.ComputingType, ConstantDisplay.HRM_Category_ComputingType},
                            {Rec_CandidateComputingLevelModel.FieldNames.ComputingLevel, ConstantDisplay.HRM_HR_Computing_Level},
                            {Rec_CandidateComputingLevelModel.FieldNames.UserUpdate, ConstantDisplay.HRM_Payroll_UnusualED_UserUpdate},
                            {Rec_CandidateComputingLevelModel.FieldNames.DateUpdate, ConstantDisplay.HRM_Payroll_UnusualED_DateUpdate},

                        };

                var grid_ComputingCandidateComputingLevel = new GridBuilderInfo
                {

                    Name = "grid_CandidateComputingLevel",
                    ValueFields = valueFieldsDiscipline,
                    SizeFields = sizeFieldsDiscipline,
                    DisplayFields = displayFieldsDiscipline,
                    ReadActionUrl = _hrm_Hre_Service + "Rec_GetData/GetCandidateComputingLevelByCandidateID",
                    ReadData = "filterFieldInfo",
                    AutoBind = true,
                    ShowDeleteButton = true,
                    GridHeight = 162,
                    ShowCheckAll = false,
                };
            }
            @(Html.VnrGrid<Rec_CandidateComputingLevelModel>(grid_ComputingCandidateComputingLevel))
        </div>
        @{
            var sizeFieldsDis = string.Empty;
            for (int i = 0; i < valueFieldsDiscipline.Count(); i++)
            {
                sizeFieldsDis += "," + valueFieldsDiscipline[i];
            }
        }
        @Html.Hidden("valueFieldsGridCandidateComputingLevel", sizeFieldsDis)
    </div>
</div>
<div>

    <div>
        @{
            var windowAcci = new WindowBuilderInfo
            {
                Name = "windowCandidateLanguageLevel",
                Visible = false,
                Width=700,
                LoadContentFrom = @_hrm_Main_Web + "Rec_CandidateLanguageLevel/CandidateLanguageLevelInfo/",
            };
        }
        @(Html.VnrWindow(windowAcci))
        <script>
            var titleEditPopUpAccident = '@Html.Raw(ConstantDisplay.HRM_HR_Language_Edit.TranslateString())';
            var titleCreatePopUpAccident = '@Html.Raw(ConstantDisplay.HRM_HR_Language_AddNew.TranslateString())';


            //Xử lý sự kiện click button tìm kiếm
            $(document).ready(function () {

                $("#btnSearchCandidateLanguageLevel").click(function () {
                    ReadGrid("grid_CandidateLanguageLevel");
                });

                //Show Hide Panel
                ShowHidePanel();

                //Xử lý Edit
                var url = '@_hrm_Main_Web' + "Rec_CandidateLanguageLevel/CandidateLanguageLevelInfo/";
                EditGridPopUp("grid_CandidateLanguageLevel", "windowCandidateLanguageLevel", url, '@ConstantPermission.Rec_Candidate', titleEditPopUpAccident);
            });

            //Xử lý tạo mới
            $("#btnCreateCandidateLanguageLevel").click(function () {
                
                var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Rec_Candidate');
                if (!isAccess) {
                    return;
                }
                var x = '@candidateID';
                if (x == '') {
                    PopUpCreate("windowError");
                }
                else {
                    @*var url = '@_hrm_Main_Web' + "Rec_CandidateLanguageLevel/LanguageInfo/";
                    PopUpEdit("windowLanguage", url, SelectID, titleCreatePopUpAccident);*@
                    PopUpCreate("windowCandidateLanguageLevel", titleCreatePopUpAccident, '@ConstantPermission.Rec_Candidate');
                }
            });

            //Xử Lý grid
            GridCheckbox("grid_CandidateLanguageLevel");

            //Xử lý delete
            $('#btnDeleteCandidateLanguageLevel').click(function (e) {
                if (selectedIds == "") {
                    DeleteFail();
                    return;
                }
                e.preventDefault();
                DeleteSelected("grid_CandidateLanguageLevel", '@_hrm_Main_Web' + "Rec_CandidateLanguageLevel/RemoveSelected/", selectedIds, '@ConstantPermission.Rec_Candidate');
                return false;
            });

            //Expoprt
            @*$("#btnExportAllLanguage").click(function () {
                var grid = $('#grid_Language').data("kendoGrid");
                if (grid.dataSource.total() == 0) {
                    ExportAllFail();
                    return;
                }
                var urlGetData = '@_hrm_Hre_Service' + "Rec_GetData/ExportRewardList/";
                var urlDownload = '@_hrm_Main_Web';
                var dataParameter = filterFieldInfo(true);
                ExportAll(urlGetData, dataParameter, urlDownload, '@ConstantPermission.Hre_Accident');
            });

            $("#btnExportSelectedLanguage").click(function () {
                if (selectedIds == "") {
                    ExportSelectedFail();
                    return;
                }
                var urlGetData = '@_hrm_Hre_Service' + "Hre_GetData/ExportRewardSelected/";
                var urlDownload = '@_hrm_Main_Web';
                var listIds = selectedIds.join(",");
                var listFields = $('#valueFieldsGridAcc').val();
                ExportSelected(urlGetData, listIds, listFields, urlDownload, '@ConstantPermission.Hre_Qualification');
            });*@

        </script>
        <div class="commandToolBarWidge">
            <div class="GridTitle">
                @Html.VnrLabel(ConstantDisplay.HRM_HR_ProfileLanguage.TranslateString())
            </div>
            <div style="float:right">

                @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateCandidateLanguageLevel", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
                @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDeleteCandidateLanguageLevel", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
            </div>
            <div class="clear"></div>
        </div>

        <div>
            <!--Khai báo các thông tin cho Grid-->
            @{

                var valueFieldsAccident = new string[]
                        {

                            Rec_CandidateLanguageLevelModel.FieldNames.LanguageSkill,
                            Rec_CandidateLanguageLevelModel.FieldNames.LanguageType,
                            Rec_CandidateLanguageLevelModel.FieldNames.LanguageLevel,
                            Rec_CandidateLanguageLevelModel.FieldNames.UserUpdate,
                            Rec_CandidateLanguageLevelModel.FieldNames.DateUpdate,

                        };

                Dictionary<string, int> sizeFieldsAccident = new Dictionary<string, int>()
                        {

                            {Rec_CandidateLanguageLevelModel.FieldNames.LanguageSkill, 80},
                            {Rec_CandidateLanguageLevelModel.FieldNames.LanguageType, 100},
                            {Rec_CandidateLanguageLevelModel.FieldNames.LanguageLevel, 70},
                            {Rec_CandidateLanguageLevelModel.FieldNames.UserUpdate, 110},
                            {Rec_CandidateLanguageLevelModel.FieldNames.DateUpdate, 110}
                        };

                Dictionary<string, string> displayFieldsAccident = new Dictionary<string, string>()
                        {

                            {Rec_CandidateLanguageLevelModel.FieldNames.LanguageSkill, ConstantDisplay.HRM_HR_Language_Skill},
                            {Rec_CandidateLanguageLevelModel.FieldNames.LanguageType, ConstantDisplay.HRM_HR_Language_Type},
                            {Rec_CandidateLanguageLevelModel.FieldNames.LanguageLevel, ConstantDisplay.HRM_HR_Language_Level},
                            {Rec_CandidateLanguageLevelModel.FieldNames.UserUpdate, ConstantDisplay.HRM_Payroll_UnusualED_UserUpdate},
                            {Rec_CandidateLanguageLevelModel.FieldNames.DateUpdate, ConstantDisplay.HRM_Payroll_UnusualED_DateUpdate}
                        };

                var grid_CandidateLanguageLevel = new GridBuilderInfo
                {
                    Name = "grid_CandidateLanguageLevel",
                    ValueFields = valueFieldsAccident,
                    SizeFields = sizeFieldsAccident,
                    DisplayFields = displayFieldsAccident,
                    ReadActionUrl = @_hrm_Hre_Service + "Rec_GetData/GetCandidateLanguageLevelByCandidateID",
                    ShowCommand = false,
                    ReadData = "filterFieldInfo",
                    AutoBind = true,
                    GridHeight = 162,
                    ShowCheckAll = false,
                    //ReadData = "filterFieldInfo"
                };
            }
            <!--Khởi tạo Grid-->
            @(Html.VnrGrid<HRM.Presentation.Recruitment.Models.Rec_CandidateLanguageLevelModel>(grid_CandidateLanguageLevel))
        </div>
        @{
            var sizeFieldsAcc = string.Empty;
            for (int i = 0; i < valueFieldsAccident.Count(); i++)
            {
                sizeFieldsAcc += "," + valueFieldsAccident[i];
            }
        }
        @Html.Hidden("valueFieldsGridCandidateLanguageLevel", sizeFieldsAcc)
    </div>
</div>
<script>
    $("#grid_QualificationCandidate .k-grid-pager").css('display', 'none');
    $("#grid_CandidateComputingLevel .k-grid-pager").css('display', 'none');
    $("#grid_CandidateLanguageLevel .k-grid-pager").css('display', 'none');
    $(document).ready(function () {
        $("#panelbarQualification").kendoPanelBar();
    });
</script>






