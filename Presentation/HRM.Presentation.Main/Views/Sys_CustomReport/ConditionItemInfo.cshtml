@using HRM.Infrastructure.Utilities;
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.HrmSystem.Models
@model HRM.Presentation.HrmSystem.Models.Rep_ConditionItemModel
@{
    Layout = null;
    var _hrm_Att_Web = ConstantPathWeb.Hrm_Att_Web;
    var _hrm_Att_Service = ConstantPathWeb.Hrm_Att_Service;
    var _hrm_Cat_Service = ConstantPathWeb.Hrm_Cat_Service;
    var _hrm_Sal_Service = ConstantPathWeb.Hrm_Sal_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;

    IList<SelectListItem> List_Operator = Enum.GetValues(typeof(Operator))
.Cast<Operator>()
.Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
.ToList();

    Guid MasterID = Guid.Empty;
    if (ViewBag.MasterID != null)
    {
        MasterID = ViewBag.MasterID;
    }
    
}

<script type="text/javascript">
    function onSaveNewConditionItem() {
        // var dataCheck = data[''];

        //if (CheckValidate(data) && !checkDuplicationCode()) {
        onSaveAndContinue($('#form_rep_ConditionItem'), '@_hrm_Sys_Service', 'api/Rep_ConditionItem/', 'grid_ConditionItem', 'windowRepConditionItem');

        return false;

        //}
    };

    function onSaveCloseConditionItem() {
        // if (CheckValidate(data) && !checkDuplicationCode()) {
        onSaveAndClose($('#form_rep_ConditionItem'), '@_hrm_Sys_Service', 'api/Rep_ConditionItem/', 'grid_ConditionItem', 'windowRepConditionItem');
        return false;

        // }
    };
    function onSaveDataPopUpConditionItem() {

        //  if (CheckValidate(data)) {
        //  if (!checkDuplicationCode()) {
        onlySave($('#form_rep_ConditionItem'), '@_hrm_Sys_Service', 'api/Rep_ConditionItem/', 'grid_ConditionItem');

        return false;
        //  }
        // }
    };


    function filterColumn() {
       
        return {
            ID: $("#TableName").val()
        };
    };





</script>


@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_rep_ConditionItem" }))
{
    @Html.HiddenFor(model => model.ID, new {id="ID_IDConditionItem" })
    <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.ConditionItemName)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.ConditionItemName)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.ConditionID)
                    </div>
                    <div class="FieldValue">
                        @{
                            var dropdownlist = new DropDownListBuilderInfo()
                            {
                                Url=_hrm_Sys_Service+"Sys_GetData/GetMulti_Condition?MasterID="+MasterID.ToString(),
                                DataValueField = "ID",
                                DataTextField = "ConditionGroupName",
                                StyleCss = "width:200px;",
                                Autobind=true,
                                OptionLabel=null,
                                
                            };
                        }
                        @Html.VnrDropDownListFor(m=>m.ConditionID,dropdownlist)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.TableName)
                    </div>
                    <div class="FieldValue">
                        @{
                            var comboboxTable = new ComboBoxBuilderInfo()
                            {
                                
                                Url = _hrm_Sys_Service + "Sys_GetData/GetMulti_Table?MasterID=" + MasterID.ToString(),
                                DataValueField = "ID",
                                DataTextField = "Name",
                                StyleCss = "width:200px;",
                                Autobind=true,
                                
                            };
                        }
                        @Html.VnrComboBoxFor(m => m.TableName, comboboxTable)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.ColumnName)
                    </div>
                    <div class="FieldValue">
                        @{
                            var comboboxColumn = new ComboBoxBuilderInfo()
                            {
                                Url = _hrm_Sys_Service + "Sys_GetData/GetMulti_Column",
                                DataValueField = "ID",
                                DataTextField = "Name",
                                StyleCss = "width:200px;",
                                CascadeFrom = "TableName",
                                ServerFilter=true,
                                Data = "filterColumn",
                            };
                        }
                        @Html.VnrComboBoxFor(m => m.ColumnName, comboboxColumn)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.Operator)
                    </div>
                    <div class="FieldValue">
                        @{
                            var Operator = new DropDownListBuilderInfo()
                            {
                                BindTo = List_Operator,
                                DataTextField = "Text",
                                DataValueField = "Value"
                            };
                        }
                        @Html.VnrDropDownListFor(mode => mode.Operator, Operator)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.Value1)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.Value1)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.Value2)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.Value2)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.JoinType)
                    </div>
                    <div class="FieldValue">
                        @{
                            IList<SelectListItem> List_WhereType = Enum.GetValues(typeof(WhereType))
                        .Cast<WhereType>()
                        .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
                        .ToList();
                            var joinType = new DropDownListBuilderInfo()
                            {
                                BindTo = List_WhereType,
                                DataTextField = "Text",
                                DataValueField = "Value",
                                OptionLabel=null,
                            };
                        }
                        @Html.VnrDropDownListFor(mode => mode.JoinType, joinType)
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle"></div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUpConditionItem", Name = "save-ConditionItem", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveNewConditionItem", Name = "save-New-ConditionItem", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveCloseConditionItem", Name = "save-close-ConditionItem", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    
                    </div>
                </div>
            </td>
        </tr>
    </table>
}