@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.UI.Controls.Kendo.DropDownList
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Category.Models
@using HRM.Infrastructure.Security
@model HRM.Presentation.Category.Models.Cat_GradePayrollModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    //var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;

    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var gradePayrollID = Guid.Empty;
    if (Model != null)
    {
        gradePayrollID = Model.ID;
    }

}
<script type="text/javascript">
    function filterFieldInfoCommission() {
        return {
            GradeID: $("#ID").val(),
            MethodPayroll:'@MethodPayroll.E_COMMISSION_PAYMENT.ToString()'
        };
    }
    function EvenCreateCommission()
    {
        var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Sal_PayCommission');
        if (!isAccess) {
            return;
        }
        @*var x = '@Model.ID';*@
        var x = $("#ID").val();
        KendoRouteMapping('#Hrm_Main_Web/Cat_Element/Create?GradeID=' + x + "&MethodPayroll=" + '@MethodPayroll.E_COMMISSION_PAYMENT.ToString()', 'Hrm_Hre_Web', '@_hrm_Main_Web', true);
    };
</script>
<div class="VnRMain">
    <table style="width:100%">
        <tbody>
            <tr>
                <td class="Box_Top_Left"></td>
                <td valign="middle" class="Box_Top_Mid"></td>
                <td class="Box_Top_Right"></td>
            </tr>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                <td valign="top">
                    <div style="display: block; float: left; width:100%">
                        <div class="FieldTitle">
                            @Html.VnrLabel(ConstantDisplay.HRM_Category_GradePayroll_GradeMethod.TranslateString())
                        </div>
                        <div class="FieldValue" style="float: left;width:85%">
                            <div>
                                <div>
                                    <div class="commandToolBarWidge" id="anchor">
                                        <div>
                                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick="EvenCreateCommission",Name = "btnCreateCommission", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
                                        </div>
                                    </div>

                                    <!--Khai báo các thông tin cho Grid-->
                                    @using HRM.Presentation.Category.Models
                                    @using HRM.Presentation.UI.Controls.Kendo
                                    @{

                                        IList<SelectListItem> List_CatElementDataType = Enum.GetValues(typeof(DisplayTypeBasicSalary))
                                      .Cast<DisplayTypeBasicSalary>()
                                      .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
                                      .ToList();

                                        Dictionary<object, object[]> foreignKey = new Dictionary<object, object[]>()
                                           {
                                             //  {"ShiftID",new object[] { "ID", "ShiftName", ViewData["Cat_Shift"], ConstantDisplay.HRM_Attendance_Overtime_ShiftID,""}},
                                                { CatElementModel.FieldNames.ElementLevel,new object[] { "Value", "Text", List_CatElementDataType, "",""}},};

                                                                            //Thông tin hiển column hiển thị
                                                                            var valueFields = new string[]
                                            {
                                                CatElementModel.FieldNames.DisplayIndex,
                                                CatElementModel.FieldNames.OrderNumber,
                                                CatElementModel.FieldNames.ElementCode,
                                                CatElementModel.FieldNames.ElementName,
                                                CatElementModel.FieldNames.Formula,
                                              //  CatElementModel.FieldNames.ColumnName,

                                                CatElementModel.FieldNames.Invisible,
                                                CatElementModel.FieldNames.IsBold,
                                                //CatElementModel.FieldNames.DisplayIndex,
                                                CatElementModel.FieldNames.ElementLevel,
                                               // CatElementModel.FieldNames.Type,
                                                //CatElementModel.FieldNames.Description
                                            };

                                                                            //Set độ rộng cho từng column
                                                                            var sizeFields = new Dictionary<string, int>()
                                            {
                                                {CatElementModel.FieldNames.DisplayIndex, 100},
                                                {CatElementModel.FieldNames.ElementCode,200},
                                                {CatElementModel.FieldNames.ElementName, 250},
                                                {CatElementModel.FieldNames.Formula, 200},
                                            //    {CatElementModel.FieldNames.ColumnName, 80},
                                                {CatElementModel.FieldNames.OrderNumber, 42},
                                                {CatElementModel.FieldNames.Invisible, 110},
                                                {CatElementModel.FieldNames.IsBold, 65},
                                                {CatElementModel.FieldNames.ElementLevel, 110},
                                              //  {CatElementModel.FieldNames.Type, 120},
                                    //{CatElementModel.FieldNames.Description, 200}
                                            };

                                                                            //Thông tin hiển thị được dịch
                                                                            var displayFields = new Dictionary<string, string>()
                                            {
                                                {CatElementModel.FieldNames.DisplayIndex, ConstantDisplay.HRM_Category_Element_DisplayIndex},
                                                {CatElementModel.FieldNames.ElementCode, ConstantDisplay.HRM_Category_Element_Code},
                                                {CatElementModel.FieldNames.ElementName , ConstantDisplay.HRM_Category_Element_ElementName },
                                                {CatElementModel.FieldNames.Formula, ConstantDisplay.HRM_Category_Element_Formula },
                                               // {CatElementModel.FieldNames.ColumnName, ConstantDisplay.HRM_System_DynamicColumn_ColumnName },
                                                {CatElementModel.FieldNames.OrderNumber, ConstantDisplay.HRM_Category_Element_OrderNumber },
                                                {CatElementModel.FieldNames.Invisible, ConstantDisplay.HRM_Category_Element_Invisible},
                                                {CatElementModel.FieldNames.IsBold, ConstantDisplay.HRM_Category_Element_IsBold},
                                                {CatElementModel.FieldNames.ElementLevel, ConstantDisplay.HRM_Category_Element_ElementLevel},
                                               // {CatElementModel.FieldNames.Type, ConstantDisplay.HRM_Category_Element_Type},
                                               // {CatElementModel.FieldNames.Description, ConstantDisplay.HRM_Category_Element_Description}
                                            };

                                                                            var DisableFields = new string[]
                                            {
                                                CatElementModel.FieldNames.ElementCode,

                                                CatElementModel.FieldNames.Formula,

                                            };

                                        var grid = new GridBuilderInfo
                                        {
                                            Name = "grid_Commission",
                                            ValueFields = valueFields,
                                            SizeFields = sizeFields,
                                            DisplayFields = displayFields,
                                            ReadActionUrl = _hrm_Hr_Service + "Cat_GetData/GetElementListbyMethodPayroll",
                                            ReadData = "filterFieldInfoCommission",
                                            AutoBind = true,
                                            ShowEditIcon = false,
                                            ShowCheckbox = false,
                                            EditMode = GridEditMode.InCell,
                                            DisableFields = DisableFields,
                                            ForeignKey = foreignKey,
                                            ShowSaveButton = true,
                                            Batch = true,
                                            GridHeight = 500,
                                            EditActionUrl = _hrm_Main_Web + "Cat_GradePayroll/CreateList",
                                        };
                                    }

                                    <!--Khởi tạo Grid-->
                                    @(Html.VnrGrid<CatElementModel>(grid))
                                </div>
                            </div>
                        </div>
                    </div>
                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>

            </tr>
            <tr>
                <td class="Box_Bottom_Left"></td>
                <td class="Box_Bottom_Mid"></td>
                <td class="Box_Bottom_Right"></td>
            </tr>
        </tbody>
    </table>

</div>

