@using HRM.Infrastructure.Utilities;
@using HRM.Infrastructure.Security;

@model HRM.Presentation.Category.Models.Cat_GradePayrollSearchlModel
@{
    ViewBag.Title = HRM.Infrastructure.Utilities.ConstantDisplay.HRM_Category_GradeAttendance_Title.TranslateString();
    Layout = null;
    //var _Hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    //var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;

    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
}

<script type="text/javascript">
    var checkedNodes = [];

    //Khởi tạo điều kiện tìm kiếm
    function filterFieldInfo() {
        var GradeCfgName = $('#@Html.FieldIdFor(model => model.GradeCfgName)').val();
        var Code = $('#@Html.FieldIdFor(model => model.Code)').val();

        return {
            GradeCfgName: GradeCfgName,
            Code: Code,

        };
    }
    //function filterFieldInfo() {
    //    var _form = $('#form-search');
    //    var queryEntity = _form.serialize();
    //    var entity = queryStringToJSON(queryEntity);
    //    return entity;
    //}

    //Hàm xử lý sự kiện edit trên lưới
    function eEditGradeAttendance(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var id = dataItem.Id;
        KendoRouteMapping('#Hrm_Main_Web/Cat_GradePayroll/Edit/' + id, 'Hrm_Main_Web', '@_hrm_Main_Web');
    }

    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        //Xử lý show hide form tìm kiếm
        ShowHidePanel();
        //Jump anchor
        jumpAnchor("anchor");
        //
        $("#btnSearch").click(function () {
            var grid = $('#gridCat_GradePayroll').data("kendoGrid");
            grid.dataSource.read();
            checkedNodes = [];
        });
        //Xử Lý Grid
        GridCheckbox("gridCat_GradePayroll");
        //Xử lý nút Edit
        @*var isAccess = checkPermission(PrivilegeType.Modify, '@ConstantPermission.Cat_GradeAttendance');
        if (!isAccess) {
            return;
        }*@
        EditGridNewPage("gridCat_GradePayroll", '#Hrm_Main_Web/Cat_GradePayroll/Edit/', 'Hrm_Main_Web', '@_hrm_Main_Web');
        //Xử lý nút Delete
        @*var isAccess = checkPermission(PrivilegeType.Delete, '@ConstantPermission.Sys_Group');
        if (!isAccess) {
            return;
        }*@
        DeleteGrid("gridCat_GradePayroll", '@_hrm_Main_Web' + "Cat_GradePayroll/Remove/");
        $("#btnCreate").click(function () {
            @*var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Cat_GradeAttendance');
            if (!isAccess) {
                return;
            }*@
            KendoRouteMapping('#Hrm_Main_Web/Cat_GradePayroll/Create/', 'Hrm_Main_Web', '@_hrm_Main_Web');
        });
        $('#btnDelete').click(function (e) {
            @*var isAccess = checkPermission(PrivilegeType.Delete, '@ConstantPermission.Cat_GradeAttendance');
            if (!isAccess) {
                return;
            }*@
            DeleteSelected("gridCat_GradePayroll", '@_hrm_Main_Web' + "Cat_GradePayroll/RemoveSelected/", selectedIds.join(","), '@ConstantPermission.Cat_GradePayroll');
            return false;
        });
    });
    function showpage(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var id = dataItem.Id;
        window.location.href = '@_hrm_Main_Web' + 'Cat_GradePayroll/Edit/' + id;
    }
    function NewPageInsert() {
        window.location.href = '@_hrm_Main_Web' + 'Cat_GradePayroll/Create';
    }
</script>


<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            
                <div class="contendSearchWidge">
                    <form id="form-search">
                        <div>
                           
                                <div id="div2">
                                    <div class="FieldTitle" style="width:150px">
                                        @Html.VnrLabelFor(mode => mode.GradeCfgName)
                                    </div>
                                    <div class="FieldValue">
                                        @Html.VnrTextBoxFor(model => model.GradeCfgName)

                                    </div>
                                    <div style="clear: both;"></div>
                                </div>
                                <div id="div2">
                                    <div class="FieldTitle" style="width:150px">
                                        @Html.VnrLabelFor(mode => mode.Code)
                                    </div>
                                    <div class="FieldValue">
                                        @Html.VnrTextBoxFor(model => model.Code)

                                    </div>
                                    <div style="clear: both;"></div>
                                </div>
                            
                        </div>
</form>
</div>
            
        </div>
    </div>
</div>
<div class="commandToolBarWidge" id="anchor">
    <div style="float:left">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreate", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl=ConstantPath.IconAddNewPath })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    </div>
    <div style="float:right">
        <div class="HideExportCate">
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport", Content = ConstantAction.HRM_Common_Export.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
        </div>
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnChangeGradePayroll", Content = ConstantDisplay.HRM_ChangeColumn.TranslateString(), ImageUrl = ConstantPath.Hrm_ChangeColumnIcon })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
    </div>
    <div class="clear"></div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @using HRM.Presentation.Category.Models
    @using HRM.Presentation.UI.Controls.Kendo
    @{
        var columnMode = string.Empty;
        var defaultColumnMode = string.Empty;
        var userId = Session[SessionObjects.UserId];
        //Lấy tên lưới cộng thêm tên của control và action để tránh trùng nhau
        var gridControlName = ConstantControlName.HRM_gridCat_GradePayroll_Grid_Name + "__Cat_GradePayroll_Index";
        HRM.Presentation.Main.Controllers.Sys_ColumnModeController control = new HRM.Presentation.Main.Controllers.Sys_ColumnModeController();
        //Get thông tin cấu hình trong database
        GridBuilderModel gridInfo = control.GetGridBuilderInfo(userId + "," + gridControlName);

        var grid = new GridBuilderInfo
        {
            Name = ConstantControlName.HRM_gridCat_GradePayroll_Grid_Name,
            ReadActionUrl = @_hrm_Hr_Service + "Cat_GetData/GetGradePayrollList/",
            ReadData = "filterFieldInfo",
        };

        if (gridInfo != null && gridInfo.ValueFields != null && gridInfo.ValueFields.Any())
        {
            grid.ValueFields = gridInfo.ValueFields;
            grid.SizeFields = gridInfo.SizeFields;
            grid.Filterable = gridInfo.FilterFields;
            grid.DisplayFields = gridInfo.DisplayFields;
            grid.LockedFields = gridInfo.LockedFields;
            grid.GroupFields = gridInfo.GroupFields;
            if (gridInfo.PageSize > 0)
            {
                grid.PageSize = gridInfo.PageSize;
            }
            columnMode = gridInfo.StringXml;
        }
        else
        {
            grid.ValueFields = new string[]
            {
                //Cat_GradeAttendanceModel.FieldNames.ID,
                Cat_GradePayrollModel.FieldNames.Code,
                Cat_GradePayrollModel.FieldNames.GradeCfgName,
           
                //Cat_GradePayrollModel.FieldNames.IsFormulaSalary,
                //Cat_GradePayrollModel.FieldNames.IsMoneySalary,
                //Cat_GradePayrollModel.FieldNames.IsProductSalary,
                Cat_GradePayrollModel.FieldNames.Description,
       
            };
            grid.SizeFields = new Dictionary<string, int>()
            {
                 {Cat_GradePayrollModel.FieldNames.Code,100},
                //{Cat_GradeAttendanceModel.FieldNames.ID,50},
                {Cat_GradePayrollModel.FieldNames.GradeCfgName,130},
           
                //{Cat_GradePayrollModel.FieldNames.IsFormulaSalary, 160},
                //{Cat_GradePayrollModel.FieldNames.IsMoneySalary, 160},
                //{Cat_GradePayrollModel.FieldNames.IsProductSalary, 120},
                {Cat_GradePayrollModel.FieldNames.Description, 250},
          
            };

            grid.DisplayFields = new Dictionary<string, string>()
            {
                {Cat_GradePayrollModel.FieldNames.Code, ConstantDisplay.HRM_Category_GradePayroll_Code},
                //{Cat_GradeAttendanceModel.FieldNames.ID,"<div></div>"},
                {Cat_GradePayrollModel.FieldNames.GradeCfgName, ConstantDisplay.HRM_Category_GradePayroll_GradeCfgName},

                //{Cat_GradePayrollModel.FieldNames.IsFormulaSalary, ConstantDisplay.HRM_Category_GradePayroll_IsFormulaSalary},
                //{Cat_GradePayrollModel.FieldNames.IsMoneySalary, ConstantDisplay.HRM_Category_GradePayroll_IsMoneySalary},
                //{Cat_GradePayrollModel.FieldNames.IsProductSalary, ConstantDisplay.HRM_Category_GradePayroll_IsProductSalary},
                {Cat_GradePayrollModel.FieldNames.Description, ConstantDisplay.HRM_Category_GradePayroll_Description},
            
            };
            defaultColumnMode = control.SetDefaultGridBuilderInfo(grid);
        }
        //var grid = new GridBuilderInfo
        //{
        //    Name = "gridCat_GradePayroll",
        //    ValueFields = valueFields,
        //    SizeFields = sizeFields,
        //    DisplayFields = displayFields,
        //    ReadActionUrl = _hrm_Hr_Service + "Cat_GetData/GetGradePayrollList/",
        //    ReadData = "filterFieldInfo"
        //};
    }
    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<HRM.Presentation.Category.Models.Cat_GradePayrollModel>(grid))
    <script>
        ClickButtonChangeColum("btnChangeGradePayroll", "Cat_GradePayrollModel");
        $(document).ready(function () {
            $("#" + '@ConstantControlName.HRM_ChangeColum_Grid_Name').val('@gridControlName');
            $("#" + '@ConstantControlName.HRM_ChangeColum_ColumMode_Name').val('@Html.Raw(columnMode)');
            $("#" + '@ConstantControlName.HRM_ChangeColum_Default_ColumMode_Name').val('');
            $("#" + '@ConstantControlName.HRM_ChangeColum_Default_ColumMode_Name').val('@Html.Raw(defaultColumnMode)')
        });
    </script>
</div>





