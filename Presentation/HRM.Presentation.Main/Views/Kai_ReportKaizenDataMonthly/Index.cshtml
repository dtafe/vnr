@using System.Collections
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.Payroll.Models
@using HRM.Infrastructure.Security
@model Kai_ReportKaizenDataMonthlyModel
@{
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    Layout = null;
}

<script>
    var gridName = 'Grid_Kai_ReportKaizenData';
    var checkedNodes = [];
    //Khởi tạo điều kiện tìm kiếm
    function filterFieldInfo(isExport) {
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        var dataParameter = {
            OrgStructureID: checkedNodes.join(','),
            OrgStructureName: $('#@Html.FieldIdFor(model => model.OrgStructureName)').val(),
            IsExport: isExport,
            ValueFields: $('#valueFieldsGrid').val()
        };
        return dataParameter;
    }
    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {

        $("#btnSearch").click(function () {
            var treeView = $("#treeviewOrg").data("kendoTreeView");
            checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes)
            ReadGrid(gridName);
        });
    });
</script>
<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            <div class="contendSearchWidge" style="overflow:visible">
                <div class="hrm_box">
                    <div id="div2">
                        <div class="FieldTitle">
                            @Html.Label(ConstantDisplay.HRM_Salary_KaizenDataMonthApply.TranslateString())
                        </div>
                        <div class="FieldValue">
                            @{
                                var datepickerMonthStart = new DatePickerBuilderInfo()
                                {
                                    StyleCss = "width:100px;",
                                    Format = ConstantFormat.HRM_Format_MonthYear,

                                };
                            }
                            @Html.VnrDatePickerFor(model => model.DateFrom, datepickerMonthStart)

                            @{
                                var datepickerMonthEnd = new DatePickerBuilderInfo()
                                {
                                    StyleCss = "width:100px;",
                                    Format = ConstantFormat.HRM_Format_MonthYear,
                                };
                            }
                            @Html.VnrDatePickerFor(model => model.DateTo, datepickerMonthEnd)

                        </div>
                        <br />
                    </div>
                    <div>
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.OrgStructureName)
                        </div>
                        <div class="FieldValue">
                            @Html.Partial("EditorTemplates/OrgStructureTreeViewDropdown")
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="commandToolBarWidge" style="margin-top:3px">   
    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })  
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @{
      
            string[] valueFields = new string[]
                            {
                                Kai_ReportKaizenDataMonthlyModel.FieldNames.CodeEmp,
                                Kai_ReportKaizenDataMonthlyModel.FieldNames.ProfileName,
                                Kai_ReportKaizenDataMonthlyModel.FieldNames.OrgStructureName,
                                Kai_ReportKaizenDataMonthlyModel.FieldNames.KaizenName,
                                Kai_ReportKaizenDataMonthlyModel.FieldNames.Month,
                                Kai_ReportKaizenDataMonthlyModel.FieldNames.CategoryName,
                                Kai_ReportKaizenDataMonthlyModel.FieldNames.MarkIdea,
                                Kai_ReportKaizenDataMonthlyModel.FieldNames.MarkPerform,
                                Kai_ReportKaizenDataMonthlyModel.FieldNames.SumMark,
                                Kai_ReportKaizenDataMonthlyModel.FieldNames.SumAmount,
                                Kai_ReportKaizenDataMonthlyModel.FieldNames.Accumulate,
                                
                            };


        Dictionary<string, int> sizeFields = new Dictionary<string, int>()
                            {
                                 {Kai_ReportKaizenDataMonthlyModel.FieldNames.CodeEmp, 100},
                                 {Kai_ReportKaizenDataMonthlyModel.FieldNames.ProfileName, 150},
                                 {Kai_ReportKaizenDataMonthlyModel.FieldNames.OrgStructureName, 120},
                                 {Kai_ReportKaizenDataMonthlyModel.FieldNames.KaizenName,150},
                                 {Kai_ReportKaizenDataMonthlyModel.FieldNames.Month, 100},
                                 {Kai_ReportKaizenDataMonthlyModel.FieldNames.CategoryName, 120},
                                 {Kai_ReportKaizenDataMonthlyModel.FieldNames.MarkIdea, 100},
                                 {Kai_ReportKaizenDataMonthlyModel.FieldNames.MarkPerform, 150},
                                 { Kai_ReportKaizenDataMonthlyModel.FieldNames.SumMark,130},
                                 {Kai_ReportKaizenDataMonthlyModel.FieldNames.SumAmount,130},
                                 {Kai_ReportKaizenDataMonthlyModel.FieldNames.Accumulate, 100},
                            
                            };
        Dictionary<string, bool> Filterable = new Dictionary<string, bool>()
                            {
                                 {Kai_ReportKaizenDataMonthlyModel.FieldNames.CodeEmp, true},
                                 {Kai_ReportKaizenDataMonthlyModel.FieldNames.ProfileName, true},
                                 {Kai_ReportKaizenDataMonthlyModel.FieldNames.OrgStructureName, true},
                                 {Kai_ReportKaizenDataMonthlyModel.FieldNames.KaizenName,true},
                                 {Kai_ReportKaizenDataMonthlyModel.FieldNames.Month, true},
                                 {Kai_ReportKaizenDataMonthlyModel.FieldNames.CategoryName, true},
                                 {Kai_ReportKaizenDataMonthlyModel.FieldNames.MarkIdea, true},
                                 {Kai_ReportKaizenDataMonthlyModel.FieldNames.MarkPerform, true},
                                 { Kai_ReportKaizenDataMonthlyModel.FieldNames.SumMark,true},
                                 {Kai_ReportKaizenDataMonthlyModel.FieldNames.SumAmount,true},
                                 {Kai_ReportKaizenDataMonthlyModel.FieldNames.Accumulate, true},

                            };
        
        Dictionary<string, string> displayFields = new Dictionary<string, string>()
                            {
                                {Kai_ReportKaizenDataMonthlyModel.FieldNames.CodeEmp, ConstantDisplay.HRM_HR_Profile_CodeEmp},
                                {Kai_ReportKaizenDataMonthlyModel.FieldNames.ProfileName, ConstantDisplay.HRM_HR_Profile_ProfileName},
                                {Kai_ReportKaizenDataMonthlyModel.FieldNames.OrgStructureName, ConstantDisplay.HRM_HR_Profile_OrgStructureName},
                                {Kai_ReportKaizenDataMonthlyModel.FieldNames.KaizenName, ConstantDisplay.HRM_Kai_KaiZenData_KaizenName},
                                {Kai_ReportKaizenDataMonthlyModel.FieldNames.Month, ConstantDisplay.HRM_Kai_KaiZenData_Month},
                                {Kai_ReportKaizenDataMonthlyModel.FieldNames.CategoryName, ConstantDisplay.HRM_Kai_Category_CategoryName},
                                {Kai_ReportKaizenDataMonthlyModel.FieldNames.MarkIdea, ConstantDisplay.HRM_Kai_KaiZenData_MarkIdea},
                                {Kai_ReportKaizenDataMonthlyModel.FieldNames.MarkPerform, ConstantDisplay.HRM_Kai_KaiZenData_MarkPerform},
                                {Kai_ReportKaizenDataMonthlyModel.FieldNames.SumMark, ConstantDisplay.HRM_Kai_KaiZenData_SumMark},
                                {Kai_ReportKaizenDataMonthlyModel.FieldNames.SumAmount, ConstantDisplay.HRM_Kai_KaiZenData_SumAmount},
                                {Kai_ReportKaizenDataMonthlyModel.FieldNames.Accumulate, ConstantDisplay.HRM_Kai_KaiZenData_Accumulate},
                            
                            };

                    var grid = new GridBuilderInfo
                    {

                        Name = "Grid_Kai_ReportKaizenData",
                        ReadActionUrl = _hrm_Hre_Service + "Sal_GetData/GetkaiZenDataList/",
                        ValueFields = valueFields,
                        SizeFields = sizeFields,
                        DisplayFields = displayFields,
                        Filterable = Filterable,
                        ReadData = "filterFieldInfo",
                    };
    }

    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<Kai_ReportKaizenDataMonthlyModel>(grid))
</div>
@{
    var valueFields1 = string.Empty;
    for (int i = 0; i < valueFields.Count(); i++)
    {
        valueFields1 += "," + valueFields[i];
    }
}
@Html.Hidden("valueFieldsGrid", valueFields1)


