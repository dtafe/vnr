@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Attendance.Models
@using HRM.Presentation.UI.Controls.Kendo
@using System.Collections
@using HRM.Infrastructure.Utilities

@model HRM.Presentation.Attendance.Models.Att_CompensationConfigModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    List<SelectListItem> lstMonth = Common.Month();
}

<script>
    //var Validator = CheckValidate();
    SetFieldRequired();

    function onSave() {
        onSaveAndContinue($('#form_Att_CompensationConfigInfo'), '@_hrm_Hr_Service', 'api/Att_CompensationConfig/', '@ConstantControlName.HRM_Att_CompensationConfig_Grid_Name', '@ConstantControlName.HRM_Att_CompensationConfig_PopUp_Name');
        return false;
    }

    function onSaveClose() {
        onSaveAndClose($('#form_Att_CompensationConfigInfo'), '@_hrm_Hr_Service', 'api/Att_CompensationConfig/', '@ConstantControlName.HRM_Att_CompensationConfig_Grid_Name', '@ConstantControlName.HRM_Att_CompensationConfig_PopUp_Name');
        return false;
    }
    function onSaveDataPopUp() {
        onlySave($('#form_Att_CompensationConfigInfo'), '@_hrm_Hr_Service', 'api/Att_CompensationConfig/', '@ConstantControlName.HRM_Att_CompensationConfig_Grid_Name'); return false;
    }

</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Att_CompensationConfigInfo" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div id="div1">
                    <div class="FieldTitle170">
                        @Html.VnrLabelFor(mode => mode.ProfileName)
                        @Html.HiddenFor(mode => mode.ID, "width: 300px")
                    </div>
                    <div class="FieldValue">

                        @{
                            IEnumerable valueProfile = new string[] { };
                            if (Model != null)
                            {
                                valueProfile = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
                            }
                        }
                        @{
                            var _Profile = new MultiSelectBuilderInfo()
                            {
                                Name = "CompensationConfigInfo_ProfileID",
                                DataTextField = "ProfileName",
                                DataValueField = "ID",
                                Url = @_hrm_Hr_Service + "Hre_GetData/GetAllMultiProfile",
                                Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                                MaxSelectedItems = 1,
                                Value = valueProfile,
                                Width = 300,
                            };
                        }
                        @(Html.VnrMultiSelectFor(mode => mode.ProfileID, _Profile))

                    </div>

                </div>
                <div>
                    <div class="FieldTitle170 ">
                        @Html.VnrLabelFor(mode => mode.Year)
                    </div>
                    <div class="FieldValue">
                      @{
                        var _Year = new NumericTextBoxBuilderInfo<int>()
                        {
                            Name = "CompensationConfigInfo_Year",
                            Format = ConstantFormat.HRM_Format_Number_Integer,
                            StyleCss="width:150px"
                        };
                      }
                        @Html.VnrNumericTextBoxFor(model=>model.Year,_Year)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle170 ">
                        @Html.VnrLabelFor(mode => mode.MonthBeginInYear)
                    </div>
                    <div class="FieldValue">
                        @{
                         var _MonthBeginInYear = new DropDownListBuilderInfo()
                            {
                                Name = "CompensationConfigInfo_MonthBeginInYear",
                                BindTo=lstMonth,
                                StyleCss = "width:300px"
                            };
                        }
                        @Html.VnrDropDownListFor(model => model.MonthBeginInYear, _MonthBeginInYear)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle170 ">
                        @Html.VnrLabelFor(mode => mode.InitAvailable)
                    </div>
                    <div class="FieldValue">
                        @{
                        var _InitAvailable = new NumericTextBoxBuilderInfo<double>()
                        {
                            Name = "CompensationConfigInfo_InitAvailable",
                            StyleCss = "width:150px"
                        };
                        }
                        @Html.VnrNumericTextBoxFor(model => model.InitAvailable, _InitAvailable)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle170 ">
                        @Html.VnrLabelFor(mode => mode.MonthResetInitAvailable)
                    </div>
                    <div class="FieldValue">
                        @{
                    var _MonthResetInitAvailable = new DropDownListBuilderInfo()
                       {
                           Name = "CompensationConfigInfo_MonthResetInitAvailable",
                           BindTo = lstMonth,
                           StyleCss = "width:300px"
                       };
                        }
                        @Html.VnrDropDownListFor(model => model.MonthResetInitAvailable, _MonthResetInitAvailable)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle170 ">
                        @Html.VnrLabelFor(mode => mode.MonthStartProfile)
                    </div>
                    <div class="FieldValue">
                        @{
                        var _MonthStartProfile = new DropDownListBuilderInfo()
                           {
                               Name = "CompensationConfigInfo_MonthStartProfile",
                               BindTo = lstMonth,
                               StyleCss = "width:300px"
                           };
                        }
                        @Html.VnrDropDownListFor(model => model.MonthStartProfile, _MonthStartProfile)
                    </div>
                </div>

            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle170">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-AttCompensationConfigInfo", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-AttCompensationConfigInfo", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-AttCompensationConfigInfo", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })

                    </div>
                </div>
            </td>
        </tr>
    </table>
}