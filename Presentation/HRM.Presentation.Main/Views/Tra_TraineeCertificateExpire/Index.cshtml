
@using HRM.Infrastructure.Security;
@using HRM.Presentation.Training.Models;
@using HRM.Infrastructure.Utilities;

@model HRM.Presentation.Training.Models.Tra_TraineeCertificateExpireSearchModel
@{
    ViewBag.Title = ConstantDisplay.HRM_Tra_TraineeProgress_Title.TranslateString();
    Layout = null;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var controller = ViewContext.RouteData.Values["Controller"].ToString();
    var action = ViewContext.RouteData.Values["Action"].ToString();
    var screen = controller + "/" + action;
    IList<SelectListItem> listTraineeStatus = Enum.GetValues(typeof(EnumDropDown.TraineeStatus))
            .Cast<EnumDropDown.TraineeStatus>()
            .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
            .ToList();
}
@Html.Hidden("Screen", screen)
<script type="text/javascript">
    var checkedNodes = [];
    var userLG = $('#UserLoginId').val();
    var isCreateTemplate = false;
    var isCreateTemplateForDynamicGrid = false;
    //Khởi tạo điều kiện tìm kiếm
    function filterFieldInfo(isExport) {
        var dataParameter = {
            IsExport: false,
            ValueFields: $('#valueFieldsGrid').val(),
            IsCreateTemplate: isCreateTemplate,
            IsCreateTemplateForDynamicGrid: isCreateTemplateForDynamicGrid,
        };
        if (isExport == true) {
            dataParameter["ExportId"] = $('#ddlScreenName').val();
        }
        return dataParameter;
    }


    $(document).ready(function () {
        //Xử lý show hide form tìm kiếm
        ShowHidePanel();
        //Jump anchor
        jumpAnchor("anchor");
    });
  
    $("#btnExportAll").click(function () {
        var grid = $('#gridTra_Trainee').data("kendoGrid");
        if (grid.dataSource.total() == 0) {
            ExportAllFail();
            return;
        }
        var urlGetData = '@_hrm_Hre_Service' + "Rec_GetData/ExportTraineeExpiredCertificate/";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo();
        var listFields = $('#valueFieldsGrid').val();
        ExportAll(urlGetData, dataParameter, urlDownload, '@ConstantPermission.Tra_TraineeCertificateExpire');
    });

</script>

<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
            </h3>
        </div>
    </div>
</div>
<div class="commandToolBarWidge" id="anchor" style="vertical-align: top">
    <div style="float:right">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExportAll", Content = ConstantAction.HRM_Common_Export.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnChangeColumnTraineeCertificateExpire", Content = ConstantDisplay.HRM_ChangeColumn.TranslateString(), ImageUrl = ConstantPath.Hrm_ChangeColumnIcon })
     </div>
    <div class="clear"></div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @using HRM.Presentation.Recruitment.Models
    @using HRM.Presentation.UI.Controls.Kendo
    @{
        var columnMode = string.Empty;
        var defaultColumnMode = string.Empty;
        var userId = Session[SessionObjects.UserId];
        //Lấy tên lưới cộng thêm tên của control và action để tránh trùng nhau
        var gridControlName = ConstantControlName.HRM_gridTra_TraineeCertificate_Name + "__Tra_TraineeCertificateExpire_Index";
        HRM.Presentation.Main.Controllers.Sys_ColumnModeController control = new HRM.Presentation.Main.Controllers.Sys_ColumnModeController();
        //Get thông tin cấu hình trong database
        GridBuilderModel gridInfo = control.GetGridBuilderInfo(userId + "," + gridControlName);

        var grid = new GridBuilderInfo
        {
            Name = ConstantControlName.HRM_gridTra_TraineeCertificate_Name,
            ReadActionUrl = _hrm_Hre_Service + "Tra_GetData/GetTraineeExpiredCertificateList/",
            ReadData = "filterFieldInfo",
            AutoBind = true
        };

        if (gridInfo != null && gridInfo.ValueFields != null && gridInfo.ValueFields.Any())
        {
            grid.ValueFields = gridInfo.ValueFields;
            grid.SizeFields = gridInfo.SizeFields;
            grid.Filterable = gridInfo.FilterFields;
            grid.DisplayFields = gridInfo.DisplayFields;
            grid.LockedFields = gridInfo.LockedFields;
            grid.GroupFields = gridInfo.GroupFields;
            if (gridInfo.PageSize > 0)
            {
                grid.PageSize = gridInfo.PageSize;
            }
            columnMode = gridInfo.StringXml;
        }
        else
        {
            grid.ValueFields = new string[]
            {
                Tra_TraineeCertificateModel.FieldNames.CodeEmp,
                Tra_TraineeCertificateModel.FieldNames.ProfileName,
                Tra_TraineeCertificateModel.FieldNames.CertificateName,
                Tra_TraineeCertificateModel.FieldNames.DateCertificate,
                Tra_TraineeCertificateModel.FieldNames.DateExpireCertificate,
                Tra_TraineeCertificateModel.FieldNames.IsNonWaring
            };
            grid.SizeFields = new Dictionary<string, int>()
            {
                {Tra_TraineeCertificateModel.FieldNames.CodeEmp,110},
                {Tra_TraineeCertificateModel.FieldNames.ProfileName,130},
                {Tra_TraineeCertificateModel.FieldNames.CertificateName,130},
                {Tra_TraineeCertificateModel.FieldNames.DateCertificate,110},
                {Tra_TraineeCertificateModel.FieldNames.DateExpireCertificate,110},
                {Tra_TraineeCertificateModel.FieldNames.IsNonWaring,90}
            };

            grid.DisplayFields = new Dictionary<string, string>()
            {
                {Tra_TraineeCertificateModel.FieldNames.CodeEmp, ConstantDisplay.HRM_Att_Report_CodeEmp},
                {Tra_TraineeCertificateModel.FieldNames.ProfileName, ConstantDisplay.HRM_Tra_Trainee_ProfileID},
                {Tra_TraineeCertificateModel.FieldNames.CertificateName, ConstantDisplay.HRM_Tra_TraineeCertificate_CertificateID},
                {Tra_TraineeCertificateModel.FieldNames.DateCertificate,  ConstantDisplay.HRM_Tra_TraineeCertificate_DateCertificate},
                {Tra_TraineeCertificateModel.FieldNames.DateExpireCertificate,  ConstantDisplay.HRM_Tra_TraineeCertificate_DateExpireCertificate},
                {Tra_TraineeCertificateModel.FieldNames.IsNonWaring, ConstantDisplay.HRM_Tra_TraineeCertificate_IsNonWaring},

            };
            defaultColumnMode = control.SetDefaultGridBuilderInfo(grid);
        }
        //var grid = new GridBuilderInfo
        //{
        //    Name = "gridTra_TraineeCertificate",
        //    ValueFields = valueFields,
        //    SizeFields = sizeFields,
        //    DisplayFields = displayFields,
        //    ReadActionUrl = _hrm_Hre_Service + "Tra_GetData/GetTraineeExpiredCertificateList/",
        //    ReadData = "filterFieldInfo",
        //    AutoBind = true
    
            
        //};
    }
    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<HRM.Presentation.Training.Models.Tra_TraineeCertificateModel>(grid))
    <script>
        ClickButtonChangeColum("btnChangeColumnTraineeCertificateExpire", "Tra_TraineeCertificateModel");
        $(document).ready(function () {
            $("#" + '@ConstantControlName.HRM_ChangeColum_Grid_Name').val('@gridControlName');
            $("#" + '@ConstantControlName.HRM_ChangeColum_ColumMode_Name').val('@Html.Raw(columnMode)');
            $("#" + '@ConstantControlName.HRM_ChangeColum_Default_ColumMode_Name').val('');
            $("#" + '@ConstantControlName.HRM_ChangeColum_Default_ColumMode_Name').val('@Html.Raw(defaultColumnMode)');
        });
    </script>
</div>
@{
    var listValueField = grid.ValueFields;
    var valueFields1 = string.Empty;
    if (listValueField != null)
    {
        for (int i = 0; i < listValueField.Count(); i++)
        {
            valueFields1 += "," + listValueField[i];
        }
    }
}
@Html.Hidden("valueFieldsGrid", valueFields1)