@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.HrmSystem.Models

@model Sys_AllSettingModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;

    var _hrm_Cat_Service = ConstantPathWeb.Hrm_Hre_Service;
   
    IList<SelectListItem> listSaleTypes = Enum.GetValues(typeof(EnumDropDown.SalesType))
     .Cast<EnumDropDown.SalesType>()
     .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() })
     .ToList();

}

<script>
    

   

    @*function onSave() {
        onSaveAndContinue($('#form_Sal_ConfigElement'), '@_hrm_Hr_Service', 'api/Sal_ItemForShop/', 'grid_Sal_ItemForShop', 'windowConfigElement');
        return false;
    }*@

    function onSaveClose() {
        debugger;
        var valueConfig = "";
        var id = $("#ConfigID").val();
        var key = $("#ValueKey").val();
        valueConfig = $("#Estimate_SalaryAverage").val() + "," + $("#Estimate_WorkHour").val();
        $.ajax({
            type: 'POST',
            url: '@_hrm_Hr_Service' + "Sal_GetData/SaveConfigEstimate",
            data: { ID: id, Key: key, Value1: $("#Estimate_SalaryAverage").val(), Value2: $("#Estimate_WorkHour").val() },
            dataType: 'json',
            success: function (returnValue) {
                
                var status = returnValue.split('/');
                if (status[0] == "Success") {
                    var strValue = status[1].split(',');
                    var windowConfig = $("#windowConfigElement").data("kendoWindow");
                    windowConfig.refresh().close();
                    var salary = $("#Estimate_SalaryAverage").data("kendoNumericTextBox");
                    var workhours = $("#Estimate_WorkHour").data("kendoNumericTextBox");
                    salary.value(strValue[0]);
                    workhours.value(strValue[1]);
                }
                
            }
        });
        @*onSaveAndClose($('#form_Sal_ConfigElement'), '@_hrm_Hr_Service', 'api/Sal_ItemForShop/', 'grid_Sal_ItemForShop', 'windowConfigElement');*@
        return false;
    }

    @*function onSaveDataPopUp() {
        onlySave($('#form_Sal_ConfigElement'), '@_hrm_Hr_Service', 'api/Sal_ItemForShop/', 'grid_Sal_ItemForShop'); return false;
    }*@

</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Sal_Estimate" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabel(ConstantDisplay.HRM_Sal_EstimateDetail_SalaryAverage.ToString().TranslateString())
                    </div>
                    <div class="FieldValue">
                        @{
                          var SalaryAverage = new NumericTextBoxBuilderInfo<double>()
                            {
                                Name = "Estimate_SalaryAverage",
                                
                             
                            };
                        }
                        @Html.VnrNumericTextBoxFor(m => m.SalaryAverage, SalaryAverage)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabel(ConstantDisplay.HRM_Sal_EstimateDetail_WorkHour.ToString().TranslateString())
                    </div>
                    <div class="FieldValue">
                        @{
                        var WorkHour = new NumericTextBoxBuilderInfo<double>()
                          {
                              Name = "Estimate_WorkHour",


                          };
                        }
                        @Html.VnrNumericTextBoxFor(m => m.WorkHour, WorkHour)
                    </div>
                </div>

            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle">

                    </div>

                    <div class="FieldValue">
                        @*@Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-ConfigElement", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-ConfigElement", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })*@
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-ConfigElement", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}
<script>
    $(document).ready(function () {
        
        var key = $("#ValueKey").val();
        var configValue = $("#ValueConfig").val();
        var strValue = configValue.split(',');
        var salary = $("#Estimate_SalaryAverage").data("kendoNumericTextBox");
        var workhours = $("#Estimate_WorkHour").data("kendoNumericTextBox");
        salary.value(strValue[0]);
        workhours.value(strValue[1]);
     
    });
</script>