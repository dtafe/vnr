@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@using System.Collections

@using HRM.Presentation.Recruitment.Models

@model Rec_InterviewModel
@{
    Layout = null;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    Guid CdID = Guid.Empty;
    string ID = ViewBag.ID;
    if (!string.IsNullOrEmpty(ID))
    {
        CdID = Common.ConvertToGuid(ID.ToString());
    }
}
@{
    IList<SelectListItem> Result = Enum.GetValues(typeof(Interview))
       .Cast<Interview>()
       .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
       .ToList();
}
<script>
    SetFieldRequired();
    function onSave() {
        onSaveAndContinue($('#form_Rec_Interview'), '@_hrm_Hre_Service', 'api/Rec_Interview/', '@ConstantControlName.HRM_Rec_Interview_Grid_Name', '@ConstantControlName.HRM_Rec_Interview_PopUp_Name');
    }

    function onSaveClose() {
        onSaveAndClose($('#form_Rec_Interview'), '@_hrm_Hre_Service', 'api/Rec_Interview/', '@ConstantControlName.HRM_Rec_Interview_Grid_Name', '@ConstantControlName.HRM_Rec_Interview_PopUp_Name');
    }

    function onSaveDataPopUp() {
        onlySave($('#form_Rec_Interview'), '@_hrm_Hre_Service', 'api/Rec_Interview/', '@ConstantControlName.HRM_Rec_Interview_Grid_Name');
    }
    //Lấy tên candidatename
    //SetFieldRequiredByScreenName('Rec_Interview');
    //$(document).ready(function () {
    //    document.getElementById("CandidateName1").disabled = true;
    //    $("#CandidateName1").val($("#CandidateNameGenarel").val());
    //});

    // Hiển thị Vòng phỏng vấn
    //$("#InterviewInfo_CandidateID").change(function () {
    $("#InterviewInfo_CandidateID").ready(function () {

        ShowHre_ProgressBar();
        var _ID = $('#InterviewInfo_CandidateID').val();
        $.ajax({
            url: '@_hrm_Hre_Service' + 'Rec_GetData/getLevelInterview',
            type: 'POST',
            data: { ID: _ID },
            success: function (Status) {
                $("#LevelInterview").val(Status);
                CloseHre_ProgressBar();
            },
        });
    });
    //Hiển thị Name yêu cầu tuyển
    //$("#InterviewInfo_CandidateID").change(function () {
    $("#InterviewInfo_CandidateID").ready(function () {

        ShowHre_ProgressBar();
        var _ID = $('#InterviewInfo_CandidateID').val();
        $.ajax({
            url: '@_hrm_Hre_Service' + 'Rec_GetData/getJobInterview',
            type: 'POST',
            data: { ID: _ID },
            success: function (Status) {
                $("#JobVacancyName").val(Status);
                CloseHre_ProgressBar();
            },
        });
    });
    //Hiển thị ID yêu cầu tuyển
    //$("#InterviewInfo_CandidateID").change(function () {
    $("#InterviewInfo_CandidateID").ready(function () {

        ShowHre_ProgressBar();
        var _ID = $('#InterviewInfo_CandidateID').val();
        $.ajax({
            url: '@_hrm_Hre_Service' + 'Rec_GetData/getJobIDInterview',
            type: 'POST',
            data: { ID: _ID },
            success: function (Status) {
                $("#JobVacancyID").val(Status);
                CloseHre_ProgressBar();
            },
        });
    });
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Rec_Interview" }))
{
    <table>
        <tbody>
            <tr>
                <td valign="top">
                    <div class="hrm_box">
                        <!--Tên ứng viên-->
                        <div id="div4">
                            <div class="FieldTitle150 ">
                                @Html.HiddenFor(m => m.ID)
                                @Html.VnrLabelFor(mode => mode.CandidateName)
                            </div>
                            <div class="FieldValue">
                                @{
                                    IEnumerable valueCandidate = new string[] { };
                                    if (Model != null)
                                    {
                                        valueCandidate = new[] { new { CandidateName = Model.CandidateName, ID = Model.CandidateID } };
                                    }
                                }
                                @{
                                    var CandidateID = new MultiSelectBuilderInfo()
                                    {
                                        Name = "InterviewInfo_CandidateID",
                                        DataTextField = "CandidateName",
                                        DataValueField = "ID",
                                        Width = 300,
                                        Url = _hrm_Hre_Service + "Rec_GetData/GetMultiCandidate",
                                        MaxSelectedItems = 1,
                                        Value = valueCandidate,
                                    };
                                }
                                @Html.VnrMultiSelectFor(mode => mode.CandidateID, CandidateID)
                                @*@Html.VnrTextBox("CandidateName1", "width: 200px")*@
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <!--Bảng câu hỏi-->
                        <div id="div4">
                            <div class="FieldTitle150 ">
                                @Html.VnrLabelFor(mode => mode.QuestionQuestionaireID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var dropdownQuestioniareID = new DropDownListBuilderInfo()
                                    {
                                        DataTextField = "QuestionaireName",
                                        DataValueField = "ID",
                                        StyleCss = "width:300px",
                                        Url = _hrm_Hre_Service + "Rec_GetData/GetMultiQuestionaire",
                                        Value = @Html.DisplayFor(mode => mode.QuestionQuestionaireID).ToString(),
                                        //OptionLabel = ConstantDisplay.HRM_Interview_Taget.Translate(),
                                        Enable = true,
                                        //StyleCss = "width:250px"
                                    };
                                }
                                @Html.VnrDropDownListFor(mode => mode.QuestionQuestionaireID, dropdownQuestioniareID)
                            </div>

                        </div>
                        <!--Địa chỉ-->
                        <div id="div4">
                            <div class="FieldTitle150 ">
                                @Html.VnrLabelFor(mode => mode.Address)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextBoxFor(mode => mode.Address, "width: 300px")
                            </div>
                        </div>
                        <!--Người phỏng vấn 1-->
                        <div id="div4">
                            <div class="FieldTitle150 ">
                                @Html.VnrLabelFor(mode => mode.Interviewer1)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextBoxFor(model => model.Interviewer1, "width: 300px")
                            </div>
                        </div>
                        <!--Điểm 1-->
                        <div id="div4">
                            <div class="FieldTitle150 ">
                                @Html.VnrLabelFor(mode => mode.Score1)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextBoxFor(model => model.Score1, "width: 300px")
                            </div>
                        </div>
                        <!--Kết quả-->
                        <div id="div4">
                            <div class="FieldTitle150 ">
                                @Html.VnrLabelFor(mode => mode.ResultInterview)
                            </div>
                            <div class="FieldValue">
                                @{
                                var ResultInterview = new DropDownListBuilderInfo()
                                {
                                    DataTextField = "Text",
                                    DataValueField = "Value",
                                    StyleCss = "width:300px",
                                    BindTo = Result,
                                    OptionLabel = ConstantDisplay.HRM_Category_SelectType.TranslateString()
                                };
                                }
                                @Html.VnrDropDownListFor(mode => mode.ResultInterview, ResultInterview)
                            </div>
                        </div>
                        <!--Ghi chú 1-->
                        <div id="div3" class="DivContentTitleValue">
                            <div class="FieldTitle150 ">
                                @Html.VnrLabelFor(mode => mode.Comment1)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextAreaFor(mode => mode.Comment1, "width: 300px")
                            </div>
                        </div>
                    </div>
                    <div class="hrm_box">
                        <!--Vòng phỏng vấn-->
                        <div id="div4">
                            <div class="FieldTitle150 ">
                                @Html.VnrLabelFor(mode => mode.LevelInterview)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextBoxFor(mode => mode.LevelInterview, "width: 300px")
                            </div>
                        </div>
                        <!--Ngày phỏng vấn-->
                        <div id="div4">
                            <div class="FieldTitle150 ">
                                @Html.VnrLabelFor(mode => mode.DateInterview)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var dateInterview = new DatePickerBuilderInfo()
                                    {
                                        StyleCss = "width:120px"
                                    };
                                }
                                @Html.VnrDatePickerFor(model => model.DateInterview, dateInterview)
                            </div>
                            <div class="FieldTitle150 ">
                                @Html.VnrLabelFor(mode => mode.Hour)
                            </div>
                            <div class="FieldValue">
                                @Html.Kendo().MaskedTextBoxFor(model => model.Hour).Mask("00:00").HtmlAttributes(new { style = "width:60px" })
                            </div>
                        </div>
                        <!--Yêu cầu tuyển-->
                        <div id="div4">
                            <div class="FieldTitle150 ">
                                @Html.VnrLabelFor(mode => mode.JobVacancyID)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextBoxFor(model => model.JobVacancyName, "width: 300px")
                                @Html.HiddenFor(mode => mode.JobVacancyID, "width: 300px")
                            </div>
                        </div>
                        <!--Người phỏng vấn 2-->
                        <div id="div4">
                            <div class="FieldTitle150 ">
                                @Html.VnrLabelFor(mode => mode.Interviewer2)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextBoxFor(model => model.Interviewer2, "width: 300px")
                            </div>
                        </div>
                        <!--Điểm 2-->
                        <div id="div4">
                            <div class="FieldTitle150 ">
                                @Html.VnrLabelFor(mode => mode.Score2)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextBoxFor(model => model.Score2, "width: 300px")
                            </div>
                        </div>
                        <!--Đánh giá 2-->
                        <div id="div4">
                            <div class="FieldTitle150 ">
                                @Html.VnrLabelFor(mode => mode.Comment2)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextAreaFor(model => model.Comment2, "width: 300px")
                            </div>
                        </div>
                    </div>

                </td>
            </tr>
            <tr>
                <td valign="top">
                    <div>
                        <div id="div3" class="DivContentTitleValue">
                            <div class="FieldTitle150 ">
                                @Html.VnrLabelFor(mode => mode.Comment)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextAreaFor(mode => mode.Comment, "width:750px")
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td style="padding-top:2px; padding-bottom:10px;">
                    <div class="LineFooterCommandEdit">
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div>
                        <div class="FieldTitle150 ">

                        </div>
                        <div class="FieldValue">
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-Interview1", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-Interview1", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-Interview1", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        </div>
                    </div>
                </td>
            </tr>
    </table>
}
