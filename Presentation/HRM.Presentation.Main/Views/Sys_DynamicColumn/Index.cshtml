@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.HrmSystem.Models
@using HRM.Infrastructure.Utilities
@using HRM.Infrastructure.Security;

@model Sys_DynamicColumnModel

@{
    //ViewBag.Title = HRM.Infrastructure.Utilities.Constant.TitleListCategory;
    Layout = null;
    var hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var hrm_Sys_Web = ConstantPathWeb.Hrm_Sys_Web;
    var window = new WindowBuilderInfo
    {
        Name = "windowDynamicColumn",
        Visible = false,
        Title = "Thông Tin Cột Động",
        LoadContentFrom = @hrm_Sys_Web + "Sys_DynamicColumn/Sys_DynamicInfo/",
    };
}
@(Html.VnrWindow(window))
<script type="text/javascript">
    var checkedNodes = [];

    //Khởi tạo điều kiện tìm kiếm
    function filterFieldInfo() {
        //var _form = $('#form-search');
        //var queryEntity = _form.serialize();
        //var entity = queryStringToJSON(queryEntity);
        //return entity;
        
        return {
            ColumnName: $('#ColumnName1').val()
        };
    }
  //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        //Show Hide Panel
        ShowHidePanel();
        $("#btnSearch").click(function () {
            ReadGrid("gridDynamicColumn");
            //var grid = $('#gridDynamicColumn').data("kendoGrid");
            //grid.dataSource.read();
        });
        //Xử Lý Grid
        GridCheckbox("gridDynamicColumn");
        $('#btnDelete').click(function (e) {
            var isAccess = checkPermission(PrivilegeType.Delete, '@ConstantPermission.Sys_DynamicColumn');
            if (!isAccess) {
                return;
            }
            e.preventDefault();
            DeleteSelected("gridDynamicColumn", '@hrm_Sys_Web' + "Sys_DynamicColumn/RemoveSelected/", selectedIds.join(","));
            return false;
        });
        
    });
   
    $("#btnCreate").click(function () {
        var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Sys_DynamicColumn');
        if (!isAccess) {
            return;
        }
        
        PopUpCreate("windowDynamicColumn");
    });

    function onEditDynamicColumn(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var url = '@hrm_Sys_Web' + "Sys_DynamicColumn/Sys_DynamicInfo/";
        PopUpEdit("windowDynamicColumn", url, dataItem.Id);
    }   
    function ddlDataTypeChange() {
        var value = this.value();
        //alert(value);
        if(value == "Datetime" ||value == "Float"||value=="Int")
        {
            //alert(1);          
            $("#Length").data("kendoNumericTextBox").enable(false);
            $("#Length").data("kendoNumericTextBox").value(null);
        }
        else {
            $("#Length").data("kendoNumericTextBox").enable();
        }
    }
</script>
<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->           
                <div class="contendSearchWidge">
                    <form id="form-search">
                        <div id="div2">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(model => model.ColumnName)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextBox("ColumnName1")
                            </div>
                        </div>
                    </form>
                </div>
        </div>
    </div>
</div>
<div class="commandToolBarWidge">
    <div style="float:left">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreate", Content = ConstantAction.HRM_Common_Create.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    </div>
    <div style="float:right">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete", Content = "Delete", ImageUrl = ConstantPath.IconDeletePath })
    </div>
    <div class="clear"></div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @using HRM.Presentation.HrmSystem.Models
    @using HRM.Presentation.UI.Controls.Kendo
    @{        
        string[] valueFields = new string[] 
        { 
            Sys_DynamicColumnModel.FieldNames.ColumnName,
            Sys_DynamicColumnModel.FieldNames.Code,
            Sys_DynamicColumnModel.FieldNames.Status, 
            Sys_DynamicColumnModel.FieldNames.DataType, 
            Sys_DynamicColumnModel.FieldNames.Length,
            Sys_DynamicColumnModel.FieldNames.TableName, 
            Sys_DynamicColumnModel.FieldNames.Comment 
        };
        Dictionary<string, int> sizeFields = new Dictionary<string, int>()
        {
            {Sys_DynamicColumnModel.FieldNames.ColumnName, 150},
            {Sys_DynamicColumnModel.FieldNames.Code, 100},
            {Sys_DynamicColumnModel.FieldNames.Status, 150},
            {Sys_DynamicColumnModel.FieldNames.DataType, 150},
            {Sys_DynamicColumnModel.FieldNames.Length, 100},
            {Sys_DynamicColumnModel.FieldNames.TableName, 150},
            {Sys_DynamicColumnModel.FieldNames.Comment, 250}            
        };
        var filterable = new Dictionary<string, bool>()
        {
            {Sys_DynamicColumnModel.FieldNames.ColumnName,true}            
        };

        Dictionary<string, string> displayFields = new Dictionary<string, string>()
        {
            {Sys_DynamicColumnModel.FieldNames.ColumnName, ConstantDisplay.HRM_System_DynamicColumn_ColumnName},
            {Sys_DynamicColumnModel.FieldNames.Code, ConstantDisplay.HRM_System_DynamicColumn_Code},
            {Sys_DynamicColumnModel.FieldNames.Status, ConstantDisplay.HRM_System_DynamicColumn_Status},
            {Sys_DynamicColumnModel.FieldNames.DataType, ConstantDisplay.HRM_System_DynamicColumn_DataType},
            {Sys_DynamicColumnModel.FieldNames.Length, ConstantDisplay.HRM_System_DynamicColumn_Length},
            {Sys_DynamicColumnModel.FieldNames.TableName, ConstantDisplay.HRM_System_DynamicColumn_TableName},
            {Sys_DynamicColumnModel.FieldNames.Comment, ConstantDisplay.HRM_System_DynamicColumn_Comment}
        };

        var grid = new GridBuilderInfo
        {
            Name = "gridDynamicColumn",
            ValueFields = valueFields,
            SizeFields = sizeFields,
            DisplayFields = displayFields,
            Filterable = filterable,
            ReadActionUrl = @hrm_Sys_Service + "Sys_GetData/GetDynamicColumnList/",
            ShowCreateButton = true,
            ShowEditIcon = false,
            //ShowCustomEdit = false,
            //EventCustomEdit = "onEditDynamicColumn",
            DeleteActionUrl = @hrm_Sys_Web + "Sys_DynamicColumn/Delete/",
            IdPropertyName = "Id",
            ReadData = "filterFieldInfo",
        };
    }

    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<Sys_DynamicColumnModel>(grid))
</div>

