@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using System.Collections
@using HRM.Presentation.Evaluation.Models
@model Eva_SaleBonusModel

@{
    Layout = null;
    var _Hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    IList<SelectListItem> lstEvaBonusType = Enum.GetValues(typeof(EvaBonusType))
        .Cast<EvaBonusType>()
        .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
        .ToList();
    IEnumerable lstJobTitleName = null;
    IEnumerable lstSalesType = null;
        if(Model!=null)
        {
             lstJobTitleName = new[] { new { JobTitleName = Model.JobTitleName, ID = Model.JobTittleID } };
             lstSalesType = new[] { new { SalesTypeName = Model.SalesTypeName, ID = Model.SalesTypeID } };
            
        }
}
<script>
    SetFieldRequired();
    function Setvalue() {
        $("#SalesType2").val($("#SalesType_SaleBonus").val());

    }
    function onSave() {
        Setvalue();
        onSaveAndContinue($('#form_Eva_SaleBonus'), '@_Hrm_Hre_Service', 'api/Eva_SaleBonus/', '@ConstantControlName.HRM_Evaluation_SaleBonus_Grid_Name', '@ConstantControlName.HRM_Evaluation_SaleBonus_PopUp_Name');
        return false;
    }
    function onSaveClose() {
        Setvalue();
        onSaveAndClose($('#form_Eva_SaleBonus'), '@_Hrm_Hre_Service', 'api/Eva_SaleBonus/', '@ConstantControlName.HRM_Evaluation_SaleBonus_Grid_Name', '@ConstantControlName.HRM_Evaluation_SaleBonus_PopUp_Name');
        return false;
    }
    function onSaveDataPopUp() {
        Setvalue();
        onlySave($('#form_Eva_SaleBonus'), '@_Hrm_Hre_Service', 'api/Eva_SaleBonus/', '@ConstantControlName.HRM_Evaluation_SaleBonus_PopUp_Name'); return false;
    }
</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Eva_SaleBonus" }))
{
    @Html.HiddenFor(model => model.ID)
    <div style="width:99%">
        <table>
            <tr>
                <td>
                    <div style="display:block; padding-top:10px;">
                        <fieldset>
                            <legend>
                                @ConstantDisplay.HRM_Evaluation_SaleBonus.TranslateString()
                                @Html.HiddenFor(model => model.SalesTypeID, new { id = "SalesType2" })
                            </legend>

                                <div id="div5">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.JobTitleName)
                                    </div>
                                    <div class="FieldValue">
                                        
                                        @{
                                            
                                        var JobTitleName = new MultiSelectBuilderInfo
                                        {
                                            DataTextField = "JobTitleName",
                                            DataValueField = "ID",
                                            Url = @_Hrm_Hre_Service + "Cat_GetData/GetMultiJobTitle",
                                            MaxSelectedItems = 1,
                                            Width = 300,                                            
                                            Placeholder = ConstantDisplay.HRM_Category_SelectJobTitle.TranslateString(),
                                            Value = lstJobTitleName
                                        };
                                        }
                                        @Html.VnrMultiSelectFor(mode => mode.JobTittleID, JobTitleName)
                                    </div>
                                    <div style="clear: both;"></div>
                                </div>
                                <div>
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.SalesTypeID)
                                    </div>
                                    <div class="FieldValue">

                                      @{
                                        var SalesTypeID = new MultiSelectBuilderInfo()
                                        {
                                            Name = "SalesType_SaleBonus",
                                            DataTextField = "SalesTypeName",
                                            DataValueField = "ID",
                                            Url = @_Hrm_Hre_Service + "Eva_GetData/GetMultiSalesType",
                                            Placeholder = ConstantDisplay.HRM_Evaluation_SalesType_Choose.TranslateString(),
                                            MaxSelectedItems = 1,
                                            Width = 300,
                                            Value = lstSalesType
                                        };
                                    }
                                    @Html.VnrMultiSelectFor(model => model.SalesTypeID, SalesTypeID)
                                    </div>
                                    <div style="clear: both;"></div>
                                </div>
                            <div>
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.Type)
                                </div>
                                <div class="FieldValue">
                                    @{
                                    var Type = new DropDownListBuilderInfo()
                                    {
                                        StyleCss = "width:300px",
                                    DataTextField = "Text",
                                    DataValueField = "Value",
                                    OptionLabel = ConstantDisplay.HRM_Attendance_SelectType.TranslateString(),
                                    BindTo=lstEvaBonusType

                                    };
                                    }
                                    @Html.VnrDropDownListFor(mode => mode.Type, Type)
                                </div>
                                <div style="clear: both;"></div>
                            </div>
                            <div>
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.DateOfEffect)
                                </div>
                                <div class="FieldValue">

                                    @{
                                    var DateOfEffect = new DatePickerBuilderInfo()
                                    {
                                        Format="dd/MM/yyyy",
                                        StyleCss="width:120px"
                                    };

                                    }
                                    @Html.VnrDatePickerFor(model => model.DateOfEffect, DateOfEffect)
                                </div>
                                <div style="clear: both;"></div>
                            </div>
                            <div>
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.FromPercent)
                                </div>
                                <div class="FieldValue">

                                    @{
                                    var FromPercent = new NumericTextBoxBuilderInfo<double>()
                                    {
                                        StyleCss = "width:150px",
                                    };

                                    }
                                    @Html.VnrNumericTextBoxFor(model => model.FromPercent, FromPercent)
                                </div>
                                <div style="clear: both;"></div>
                            </div>
                            <div>
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.ToPercent)
                                </div>
                                <div class="FieldValue">

                                    @{
                                    var ToPercent = new NumericTextBoxBuilderInfo<double>()
                                    {
                                        StyleCss = "width:150px",
                                    };

                                    }
                                    @Html.VnrNumericTextBoxFor(model => model.ToPercent, ToPercent)
                                </div>
                                <div style="clear: both;"></div>
                            </div>
                            <div>
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.Amount)
                                </div>
                                <div class="FieldValue">

                                    @{
                                    var Amount = new NumericTextBoxBuilderInfo<double>()
                                    {
                                        StyleCss = "width:150px",
                                    };

                                    }
                                    @Html.VnrNumericTextBoxFor(model => model.Amount, Amount)
                                </div>
                                <div style="clear: both;"></div>
                            </div>
                            <div>
                                <div class="FieldTitle150">
                                    @Html.VnrLabelFor(mode => mode.Note)
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrTextAreaFor(model => model.Note, "width:500px;height:100px;")
                                </div>
                                <div style="clear: both;"></div>
                            </div>
                        </fieldset>
                    </div>
                </td>
            </tr>
            <tr>
                <td style="padding-top:2px; padding-bottom:10px;">
                    <div class="LineFooterCommandEdit">
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div>
                        <div class="FieldTitle150">

                        </div>
                        <div class="FieldValue" >
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-EvalSaleBonus", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-EvalSaleBonus", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-EvalSaleBonus", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        </div>

                    </div>
                </td>
            </tr>
        </table>
    </div>
}

