@using HRM.Infrastructure.Utilities
@using System.Collections
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.Category.Models;

@model Cat_PerformanceTypeModel

@{
    Layout = null;
    var ID = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
}
<script>
    SetFieldRequired();
    function checkDuplicationCode() {

        var _code = $("#Code").val();
        var _id = '@ID';
        var param = {
            tableName: 'Cat_PerformanceType',
            columnName: 'Code',
            keyword: _code,
            id: _id
        };

        var isduplicate = checkDuplicate('@_hrm_Sys_Service', 'Sys_GetData', 'CheckDuplicate', param, "Code");

        return isduplicate;
    }
    function onSaveNew() {
        if (!checkDuplicationCode()) {
            onSaveAndContinue($('#form_Cat_PerformanceType'), '@_hrm_Hre_Service', 'api/Cat_PerformanceType/', '@ConstantControlName.HRM_Category_PerformanceType_Grid_Name', '@ConstantControlName.HRM_Category_PerformanceType_PopUp_Name'); return false;
        }
    }

    function onSaveClose() {
        if (!checkDuplicationCode()) {
            onSaveAndClose($('#form_Cat_PerformanceType'), '@_hrm_Hre_Service', 'api/Cat_PerformanceType/', '@ConstantControlName.HRM_Category_PerformanceType_Grid_Name', '@ConstantControlName.HRM_Category_PerformanceType_PopUp_Name'); return false;
        }
    }
    function onSaveDataPopUp() {
        if (!checkDuplicationCode()) {
            onlySave($('#form_Cat_PerformanceType'), '@_hrm_Hre_Service', 'api/Cat_PerformanceType/', '@ConstantControlName.HRM_Category_PerformanceType_Grid_Name'); return false;
        }
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Cat_PerformanceType" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
    <div>
        <div class="FieldTitle150">
            @Html.VnrLabelFor(mode => mode.PerformanceTypeName)
        </div>
        <div class="FieldValue">
           
            @Html.VnrTextBoxFor(mode => mode.PerformanceTypeName, "width: 300px")
        </div>
    </div>
    <div>
        <div class="FieldTitle150">
            @Html.VnrLabelFor(mode => mode.Code)
        </div>
        <div class="FieldValue">
            @{
            var Code = new TextBoxBuilderInfo()
            {
                Width = 300,
                Name = "Code"
            };
            if (Model != null)
            {
                Code.Value = Model == null ? string.Empty : Model.Code;
            }
            }
          
            @Html.VnrTextBoxFor(mode => mode.Code,Code)
        </div>
    </div>
  
 
     <div>
        <div class="FieldTitle150">
            @Html.VnrLabelFor(mode => mode.Description)
        </div>
        <div class="FieldValue">
          
            @Html.VnrTextAreaFor(mode => mode.Description, "width:500px;height:100px;")
        </div>

    </div>
           </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
    <div>
        <div class="FieldTitle150"></div>
        <div class="FieldValue">
            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-PerformanceType", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveNew", Name = "save-New-PerformanceType", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-PerformanceType", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
        </div>
    </div>
             </td>
        </tr>
    </table>
}
