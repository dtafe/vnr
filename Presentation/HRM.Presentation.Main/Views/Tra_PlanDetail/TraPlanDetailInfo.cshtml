@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Payroll.Models
@using HRM.Presentation.Training.Models

@model Tra_PlanDetailModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;

    var _hrm_Cat_Service = ConstantPathWeb.Hrm_Hre_Service;
    IList<SelectListItem> listSaleTypes = Enum.GetValues(typeof(EnumDropDown.SalesType))
     .Cast<EnumDropDown.SalesType>()
     .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() })
     .ToList();

}

<script>
    SetFieldRequired();

    function onSave() {
        
        $("#PlanID").val($("#Plan_ID").val());
        onSaveAndContinue($('#form_Tra_PlanDetail'), '@_hrm_Hr_Service', 'api/Tra_PlanDetail/', 'grid_PlanDetail_info', 'windownTra_PlanDetail');
        //chưa có cách giải quyết nên tạm thời làm theo cách này
        setTimeout(function () {
            debugger;
            var grid = $("#grid_PlanDetail_info").data("kendoGrid");
            var sumQuantity = grid._data[0].SumQuantity;
            var sumQuantityNumberTextBox = $("#SumQuantity").data("kendoNumericTextBox");
            sumQuantityNumberTextBox.value(sumQuantity);
        }, 1000);

        return false;
    }

    function onSaveClose() {
        $("#PlanID").val($("#Plan_ID").val());
        onSaveAndClose($('#form_Tra_PlanDetail'), '@_hrm_Hr_Service', 'api/Tra_PlanDetail/', 'grid_PlanDetail_info', 'windownTra_PlanDetail');
        debugger;
        //chưa có cách giải quyết nên tạm thời làm theo cách này
        setTimeout(function () {
            debugger;
            var grid = $("#grid_PlanDetail_info").data("kendoGrid");
            var sumQuantity = grid._data[0].SumQuantity;
            var sumQuantityNumberTextBox = $("#SumQuantity").data("kendoNumericTextBox");
            sumQuantityNumberTextBox.value(sumQuantity);
        }, 1000);

        return false;
    }

    function onSaveDataPopUp() {
        $("#PlanID").val($("#Plan_ID").val());
        onlySave($('#form_Tra_PlanDetail'), '@_hrm_Hr_Service', 'api/Tra_PlanDetail/', 'grid_PlanDetail_info');
        //chưa có cách giải quyết nên tạm thời làm theo cách này
        setTimeout(function () {
            debugger;
            var grid = $("#grid_PlanDetail_info").data("kendoGrid");
            var sumQuantity = grid._data[0].SumQuantity;
            var sumQuantityNumberTextBox = $("#SumQuantity").data("kendoNumericTextBox");
            sumQuantityNumberTextBox.value(sumQuantity);
        }, 1000);

        return false;
    }

</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Tra_PlanDetail" }))
{
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(mode => mode.PlanID)
    <table>
            <tr>
                <td>
                    @*<div id="div3">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(model => model.PlanID)

                        </div>
                        <div class="FieldValue">
                            @{
                                    var planID = new ComboBoxBuilderInfo
                                    {
                                        Name = "PlanDetailInfo_PlanID",
                                        DataTextField = "PlanName",
                                        DataValueField = "ID",
                                        Url = _hrm_Cat_Service + "Tra_GetData/GetMultiPlanName",
                                        StyleCss = "width:200px;",
                                        ServerFilter = true
                                    };
                            }
                            @Html.VnrComboBoxFor(mode => mode.PlanID, planID)
                        </div>
                    </div>*@
                    <div id="dvSalesTypeID">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.OrgStructureID)
                        </div>
                        <div class="FieldValue">
                            @{
    var org = new TreeViewDropdDownBuilderInfo()
    {

        Value = Model == null ? string.Empty : Model.OrgStructureName,
        SetFieldID = "OrgStructureID",
        SetFieldName = "OrgStructureID",
        IsShowCheckBox = false,
    };
                            }
                            @Html.Partial("EditorTemplates/OrgTreeViewDropDown", org)
                            @Html.HiddenFor(model => model.OrgStructureID)
                            @Html.HiddenFor(model => model.OrgStructureName)
                        </div>
                    </div>

                    <div id="div1">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.Quantity)
                        </div>
                        <div class="FieldValue">
                            @{
    var Quantity = new NumericTextBoxBuilderInfo<int>()
   {
       StyleCss = "width:150px",
       Name = "PlanDetailInfo_Quantity",
       Format = ConstantFormat.HRM_Format_Int
   };
                            }
                            @(Html.VnrNumericTextBoxFor(model => model.Quantity, Quantity))

                        </div>
                    </div>

                </td>
            </tr>
        <tr></tr>
        <tr></tr>
        <tr></tr>
        <tr style="height:20px">
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr style="height:20px">
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>

                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-TraPlanDetail", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-TraPlanDetail", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-TraPlanDetail", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}
@if (Model != null)
{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#treeviewDropdownAnotherInput").val('@Model.OrgStructureName');
            $("#OrgStructureID").val('@Model.OrgStructureID');
            @*var treeview = $("#treeviewOrg").data("kendoTreeView");
            var getitem = treeview.dataSource.get('@Model.OrgStructureID');
            treeview.findByUid(getitem.uid);
            var selectitem = treeview.findByUid(getitem.uid);
            treeview.select(selectitem);*@
        });
        $('#@ConstantDisplay.HRM_HR_GeneralProfile_H_IdProfile').val('@Model.ID');

    </script>
}
