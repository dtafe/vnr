@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Hr.Models
@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.Payroll.Models

@model Sal_ReportAllowanceDetailSearchModel
@{
    ViewBag.Title = "Index";
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;

    var controller = ViewContext.RouteData.Values["Controller"].ToString();
    var action = ViewContext.RouteData.Values["Action"].ToString();
    var screen = controller + "/" + action;

    IList<SelectListItem> lstStatusEmployee = Enum.GetValues(typeof(EnumDropDown.StatusEmployee))
        .Cast<EnumDropDown.StatusEmployee>()
        .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
        .ToList();
}
@Html.Hidden("Screen", screen)

<script type="text/javascript">
    SetFieldRequired();
    debugger;
    var isCreateTemplate = false;
    var isCreateTemplateForDynamicGrid = false;
    

    function filterFieldInfo(isExport) {
        var SE = $("#StatusSyn").val() != null ? $("#StatusSyn").val().join(',') : null;
        var WP = $("#WorkPlace").val() != null ? $("#WorkPlace").val().join(',') : null;
        var checkedNodes = [];
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes);
        var elementPara = {
            CutOffDurationID: $('#ReportAllowanceDetail_CutOffDurationID').val(),
            OrgStructureID: checkedNodes.join(','),
            UnusualEDTypeID: $('#ReportAllowanceDetail_UnusualEDTypeID').val(),
            StatusSyn: SE,
            WorkPlace: WP,
            IsCreateTemplate: isCreateTemplate,
            IsCreateTemplateForDynamicGrid: isCreateTemplateForDynamicGrid,
            UserID: '@Session[SessionObjects.ProfileID]',
        };
        if (isExport == true) {
            elementPara["ExportId"] = $('#ddlScreenName').val();
        }
        return elementPara;
    }

    $("#btnSearch").click(function () {
        ShowHre_ProgressBar();
        isCreateTemplate = false;
        isCreateTemplateForDynamicGrid = false;
        $.ajax({
            url: '@_hrm_Hr_Service' + "Sal_GetData/GetReportAllowanceDetail",
            type: 'POST',
            data: filterFieldInfo(false),
            datatype: 'json',
            success: function (data) {
                CloseHre_ProgressBar();
                debugger;
                if (data[0] == 'error' && data[1] != null) {
                    ShowNotificationProcessor(data[1]);
                } else {
                    var grid = VnrGridDynamic;
                    grid.GridName = "grid_Sal_ReportAllowanceDetail";
                    grid.DataSource = data.Data;
                    VnrGridDynamicControl(grid);
                }
            }
        });
    });

    $("#btnCreateTemplate").click(function () {
        isCreateTemplate = true;
        isCreateTemplateForDynamicGrid = true;
        CreateTemplate('@_hrm_Hr_Service' + 'Sal_GetData/GetReportAllowanceDetail', filterFieldInfo(true));
    });

    $("#btnExport").click(function () {
        debugger;
        //var isAccess = checkPermission(PrivilegeType.Export, '@HRM.Infrastructure.Security.ConstantPermission.Hre_ReportAllowanceDetail');
        //if (!isAccess) {
        //    return;
        //}
        //if (!isAccess) {
        //    return;
        //}
        if ($('#ddlScreenName').val() == "") {
            ExportFail();
            return;
        }
        var urlGetData = '@_hrm_Hr_Service' + "Sal_GetData/GetReportAllowanceDetail/";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo(true);
        ExportAll(urlGetData, dataParameter, urlDownload);
        checkedNodes = [];
    });


</script>


@Html.Hidden("valueFields")
<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            <div class="contendSearchWidge" style="overflow:visible">
                <div class="hrm_box">
                    <div id="div1">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(model => model.CutOffDurationID)
                        </div>
                        <div class="FieldValue">
                            @{
                                var cutOffDurationName = new DropDownListBuilderInfo()
                                {
                                    Name = "ReportAllowanceDetail_CutOffDurationID",
                                    DataTextField = "CutOffDurationName",
                                    DataValueField = "ID",
                                    Url = _hrm_Hr_Service + "Att_GetData/GetMultiCutOffDuration",
                                    StyleCss = "width:200px"
                                };
                            }
                            @(Html.VnrDropDownList(cutOffDurationName))
                        </div>
                    </div>
                    
                    <div id="div2">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.OrgStructureID)
                        </div>
                        <div class="FieldValue">
                            <div class="FieldValue">
                                @{
                                    var Org = new TreeViewDropdDownBuilderInfo()
                                    {
                                        Name = "treeviewOrg",
                                        Width="200px",
                                    };
                                }
                                @Html.Partial("EditorTemplates/OrgTreeViewDropDown",Org)
                                @*@Html.HiddenFor(mode => mode.OrgStructureID)*@
                            </div>
                        </div>
                    </div>
                    <div id="div3">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(model => model.UnusualEDTypeID)
                        </div>
                        <div class="FieldValue">
                            @{
                                var UnusualEDTypeID = new DropDownListBuilderInfo()
                                {
                                    Name = "ReportAllowanceDetail_UnusualEDTypeID",
                                    DataTextField = "UnusualAllowanceCfgName",
                                    DataValueField = "ID",
                                    Url = _hrm_Hr_Service + "Cat_GetData/UnusualAllowanceCfg_multi",
                                    StyleCss = "width:200px"
                                };
                            }
                            @(Html.VnrDropDownList(UnusualEDTypeID))
                        </div>
                    </div>
                </div> 
                <div class="hrm_box">
                    <div id="div2">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.StatusSyn)
                        </div>
                        <div class="FieldValue">
                            @{
                                var _StatusEmployees = new MultiSelectBuilderInfo()
                                {
                                    DataTextField = "Text",
                                    DataValueField = "Value",
                                    BindTo = lstStatusEmployee,
                                    Value = @Html.DisplayFor(mode => mode.StatusSyn).ToString(),
                                    Enable = true,
                                    Placeholder = @ConstantDisplay.HRM_Category_SelectStatus.TranslateString(),
                                };
                            }
                            @(Html.VnrMultiSelectFor(mode => mode.StatusSyn, _StatusEmployees))
                        </div>

                    </div>
                    <div id="div4">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(model => model.WorkPlace)
                        </div>
                        <div class="FieldValue">
                            @{
                                var _WorkPlace = new MultiSelectBuilderInfo()
                                {
                                    DataTextField = "WorkPlaceName",
                                    DataValueField = "ID",
                                    Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiWorkPlace",
                                    Placeholder = ConstantDisplay.HRM_Category_SelectPayrollGroup.TranslateString(),
                                };
                            }
                            @(Html.VnrMultiSelectFor(mode => mode.WorkPlace, _WorkPlace))
                        </div>
                    </div>
                </div>               
            </div>
        </div>
    </div>
</div>
<div class="commandToolBarWidge">
    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    <div style="float:right">
        <script>
            function GetScreenName() {
                return {
                    screenName: '@screen'
                };
            }
        </script>
        <div class="FieldValue" style="margin-top: 0;">
            @{
                var screenName = new DropDownListBuilderInfo()
                {
                    Name = "ddlScreenName",
                    DataTextField = "ExportName",
                    DataValueField = "ID",
                    Url = @_hrm_Hr_Service + "Cat_GetData/GetScreenName",
                    StyleCss = "width:200px;",
                    Data = "GetScreenName",
                };
            }
            @Html.VnrDropDownList(screenName)

            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport", Content = ConstantDisplay.HRM_Common_Export_Button.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateTemplate", Content = ConstantDisplay.HRM_Common_CreateTemplate_Button.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
        </div>
    </div>
</div>

<div id="grid_Sal_ReportAllowanceDetail">

</div>




