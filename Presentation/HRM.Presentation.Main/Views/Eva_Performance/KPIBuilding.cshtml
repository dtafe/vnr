@using System.Collections
@using HRM.Infrastructure.Security
@using HRM.Presentation.Evaluation.Models
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Infrastructure.Utilities

@model Eva_PerformanceModel
@{
    Layout = null;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    
}


<script language="javascript">
    var gridName = 'gridKPIBuilding';
    var selectedIds = [];

    function CheckLeader()
    {
        var LeaderID = $("#ProfileIDByUser").val();
        var ProfileID = $("#ProfileID").val();
        if (LeaderID != null || LeaderID != "") {
            $.ajax({
                traditional: true,
                url: '@_hrm_Hre_Service' + 'Hre_GetData/CheckLeader/',
                data: { LeaderID: LeaderID, ProfileID: ProfileID },
                type: 'POST',
                success: function (data) {
                    $("#Approve").show();
                },
            });
        }

    }

    $(document).ready(function () {
        $("#Approve").hide();
        CheckLeader();
        if ($("#Status").val() == "Approve") {
            $("#btnSubmit").hide();
        }
        else {
            $("#btnSubmit").show();
        }


    });

    function Submit()
    {
        
        if ($("#PerformanceID").val() == null || $("#PerformanceID").val() == "") {
            ShowNotificationProcessor("Chưa Có Đánh Giá");
            return;

        }
        else {
            var grid = $("#" + gridName).data("kendoGrid");
            parameterMap = grid.dataSource.transport.parameterMap;
            var currentData = grid.dataSource.view();
            var detailData = [];
            for (var i = 0; i < currentData.length; i++) {
                detailData.push(currentData[i].toJSON());
            }
            var lstModel = {};
            $.extend(lstModel, parameterMap({ models: detailData, PerformanceID: $("#PerformanceID").val() }));
            $.ajax({
                traditional: true,
                url: '@_hrm_Hre_Service' + 'Eva_GetData/SubmitKPIforPerformance/',
                data: lstModel,
                type: 'POST',
                success: function (data) {
                    ReadGrid(gridName);
                    ShowNotificationProcessor("Cập Nhật Thành Công");
                },
                error: function (data) { }
            });
        }
    }

    function Approve() {
         if ($("#PerformanceID").val() == null || $("#PerformanceID").val() == "") {
            ShowNotificationProcessor("Chưa Có Đánh Giá");
            return;

        }
        else {
            var grid = $("#" + gridName).data("kendoGrid");
            parameterMap = grid.dataSource.transport.parameterMap;
            var currentData = grid.dataSource.view();
            var detailData = [];
            for (var i = 0; i < currentData.length; i++) {
                detailData.push(currentData[i].toJSON());
            }
            var lstModel = {};
            $.extend(lstModel, parameterMap({ models: detailData, PerformanceID: $("#PerformanceID").val() }));
            $.ajax({
                traditional: true,
                url: '@_hrm_Hre_Service' + 'Eva_GetData/ApproveKPIforPerformance/',
                data: lstModel,
                type: 'POST',
                success: function (data) {
                    ReadGrid(gridName);
                    ShowNotificationProcessor("Cập Nhật Thành Công");
                },
                error: function (data) { }
            });
        }
    }

    function filterFieldInfo() {
        return {
            PerformanceID:  $("#PerformanceID").val()
        };
    }





</script>
<div class="commandToolBarWidge" id="anchor">
    <div style="float:left">
        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "Submit", Name = "btnSubmit", Content = ConstantAction.HRM_Common_Submit.TranslateString(), ImageUrl = ConstantPath.IconApprovePath })
        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "Approve", Name = "btnApprove", Content = ConstantAction.HRM_Common_Approve.TranslateString(), ImageUrl = ConstantPath.IconApprovePath })
    </div>
    <div style="float:right">
    </div>

    <div class="clear"></div>
</div>
@*Đánh Giá Của Nhân Viên*@
<div>
    <table style="width:100%">
        <tbody>
            <tr>
                <td valign="top">
                    <div>
                        <div style="display: block; padding-top: 10px;">
                            <fieldset>
                                <legend>
                                    Thông Tin Của Nhân Viên
                                </legend>
                               

                                <div style="float:left;">
                                    <div>
                                        <div class="FieldTitle">
                                            @Html.HiddenFor(mode => mode.ProfileID)
                                            @Html.HiddenFor(mode => mode.PerformanceID)
                                            @Html.VnrLabelFor(mode => mode.PerformanceTypeID)
                                        </div>
                                        <div class="FieldValue">
                                            @Html.VnrDisplayFor(mode => mode.PerformanceTypeName)
                                        </div>
                                    </div>

                                    <div>
                                        <div class="FieldTitle">
                                            @Html.VnrLabelFor(mode => mode.PerformancePlanName)
                                        </div>
                                        <div class="FieldValue">
                                            @Html.VnrDisplayFor(mode => mode.PerformancePlanName)
                                        </div>
                                    </div>
                                    </div>
                                <div style="float:left;">
                                    <div>
                                        <div class="FieldTitle">
                                            @Html.VnrLabelFor(mode => mode.Status)
                                        </div>
                                        <div class="FieldValue">
                                            @Html.VnrDisplayFor(mode => mode.Status)
                                        </div>
                                    </div>

                                    <div>
                                        <div class="FieldTitle">
                                            @Html.VnrLabelFor(mode => mode.ProfileName)
                                        </div>
                                        <div class="FieldValue">
                                            @Html.VnrDisplayFor(mode => mode.ProfileName)
                                        </div>
                                    </div>
                                </div>

</fieldset>
                        </div>
                    </div>

                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
        </tbody>
    </table>
</div>

@*Các Tiêu Chí Tự Đánh Giá Của Nhân Viên*@
<fieldset>
    <legend>Các Tiêu Chí Tự Đánh Giá Của Nhân Viên</legend>

    <div>
        <!--Khai báo các thông tin cho Grid-->
        @{
            string[] valueFields = new[]
        {
         Eva_PerformanceForDetailModel.FieldNames.KPIName,
         Eva_PerformanceForDetailModel.FieldNames.DescriptionKPIFix,
          Eva_PerformanceForDetailModel.FieldNames.DescriptionKP,
        };

            var sizeFields = new Dictionary<string, int>()
        {
            {Eva_PerformanceForDetailModel.FieldNames.KPIName,200},
            {Eva_PerformanceForDetailModel.FieldNames.DescriptionKPIFix,300},
            {Eva_PerformanceForDetailModel.FieldNames.DescriptionKP,300}
        };

            var filterable = new Dictionary<string, bool>()
        {
            {Eva_PerformanceForDetailModel.FieldNames.KPIName,true},
        };
            string[] disabledFields = new[]
        {
         Eva_PerformanceForDetailModel.FieldNames.KPIName,
         Eva_PerformanceForDetailModel.FieldNames.DescriptionKPIFix,
        };
            var displayFields = new Dictionary<string, string>()
        {
            {Eva_PerformanceForDetailModel.FieldNames.KPIName,ConstantDisplay.HRM_Evaluation_KPIName},
            {Eva_PerformanceForDetailModel.FieldNames.DescriptionKPIFix,ConstantDisplay.HRM_Evaluation_PerformanceForDetail_DescriptionKPIFix},
             {Eva_PerformanceForDetailModel.FieldNames.DescriptionKP,ConstantDisplay.HRM_Evaluation_PerformanceForDetail_DescriptionKP},
        };

            var grid = new GridBuilderInfo
            {
                Name = "gridKPIBuilding",
                ValueFields = valueFields,
                SizeFields = sizeFields,
                DisableFields=disabledFields,
                DisplayFields = displayFields,
                Filterable = filterable,
                ServerOperation = false,
                ShowEditIcon = false,
                AutoBind = true,
                ReadActionUrl = @_hrm_Hre_Service + "Eva_GetData/GetPerformanceForDetailByPerformanceID/",
                ReadData = "filterFieldInfo",
                GridHeight = 200,
                EditMode = GridEditMode.InCell,
                ShowCheckbox=false
            };
        }

        @(Html.VnrGrid<Eva_PerformanceForDetailModel>(grid))
    </div>
</fieldset>
