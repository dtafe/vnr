@using HRM.Infrastructure.Utilities
@using HRM.Presentation.HrmSystem.Models
@using HRM.Presentation.UI.Controls.Kendo
@using System.Collections

@model HRM.Presentation.HrmSystem.Models.Sys_DelegateApproveModel
@{
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    IList<SelectListItem> lstApproveType = Enum.GetValues(typeof(ApproveType))
 .Cast<ApproveType>()
 .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
 .ToList();
}

<script>
    SetFieldRequired();

    function onSave() {
        onSaveAndContinue($('#form_Sys_DelegateApprove'), '@_hrm_Sys_Service', 'api/Sys_DelegateApprove/', '@ConstantControlName.HRM_Sys_Delegate_Grid_Name', '@ConstantControlName.HRM_Sys_Delegate_PopUp_Name');
        return false;
    }

    function onSaveClose() {
        onSaveAndClose($('#form_Sys_DelegateApprove'), '@_hrm_Sys_Service', 'api/Sys_DelegateApprove/', '@ConstantControlName.HRM_Sys_Delegate_Grid_Name', '@ConstantControlName.HRM_Sys_Delegate_PopUp_Name');
        return false;
    }
    function onSaveDataPopUp() {
        onlySave($('#form_Sys_DelegateApprove'), '@_hrm_Sys_Service', 'api/Sys_DelegateApprove/', '@ConstantControlName.HRM_Sys_Delegate_Grid_Name'); return false;
    }

</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Sys_DelegateApprove" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>

                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.UserID)
                    </div>
                    <div class="FieldValue">
                        @{
    IEnumerable Requester = new string[] { };
    if (Model != null)
    {
        Requester = new[] { new { UserLogin = Model.UserName, ID = Model.UserID } };
    }
                        }
                        @{
    var requesterID = new MultiSelectBuilderInfo()
     {
         Width = 300,
         Name = "SysDelegateInfo_UserID",
         DataTextField = "UserLogin",
         DataValueField = "ID",
         Url = @_hrm_Sys_Service + "Sys_GetData/GetMultiUser",
         Placeholder = ConstantDisplay.HRM_System_SelectUser.TranslateString(),
         MaxSelectedItems = 1,
         Value = Requester
     };
                        }
                        @(Html.VnrMultiSelectFor(mode => mode.UserID, requesterID))
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.UserDelegateID)
                    </div>
                    <div class="FieldValue">
                        @{
    IEnumerable UserDelegateName = new string[] { };
    if (Model != null)
    {
        UserDelegateName = new[] { new { UserLogin = Model.UserDelegateName, ID = Model.UserDelegateID } };
    }
                        }
                        @{
    var UserDelegateID = new MultiSelectBuilderInfo()
     {
         Width = 300,
         Name = "SysDelegateInfo_UserDelegateID",
         DataTextField = "UserLogin",
         DataValueField = "ID",
         Url = @_hrm_Sys_Service + "Sys_GetData/GetMultiUser",
         Placeholder = ConstantDisplay.HRM_System_SelectUser.TranslateString(),
         MaxSelectedItems = 1,
         Value = UserDelegateName
     };
                        }
                        @(Html.VnrMultiSelectFor(mode => mode.UserDelegateID, UserDelegateID))
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.DateFrom)
                    </div>
                    <div class="FieldValue">
                        @{
    var DateFrom = new DatePickerBuilderInfo()
    {
        Name = "SysDelegateInfo_DateFrom",
        StyleCss = "width:120px"
    };
                        }
                        @Html.VnrDatePickerFor(model => model.DateFrom, DateFrom)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.DateTo)
                    </div>
                    <div class="FieldValue">
                        @{
    var DateTo = new DatePickerBuilderInfo()
    {
        Name = "SysDelegateInfo_DateTo",
        StyleCss = "width:120px"
    };
                        }
                        @Html.VnrDatePickerFor(model => model.DateTo, DateTo)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.DataTypeDelegate)
                    </div>
                    <div class="FieldValue">
                        @{
    var dropdownStatus = new DropDownListBuilderInfo()
    {
        Name = "SysDelegateInfo_DataTypeDelegate",
        DataTextField = "Text",
        DataValueField = "Value",
        BindTo = lstApproveType,
        OptionLabel = @ConstantDisplay.HRM_System_UserApprove_SelectType.TranslateString(),
        StyleCss = "width:306px;",
        Value = Model != null ? Model.DataTypeDelegate : null
    };
                        }
                        @(Html.VnrDropDownListFor(mode => mode.DataTypeDelegate, dropdownStatus))
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-recTag", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-recTag", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-recTag", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })

                    </div>
                </div>
            </td>
        </tr>
    </table>
}