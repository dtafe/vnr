@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@model HRM.Presentation.Category.Models.Cat_ItemModel

@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
}
<script>
    SetFieldRequired();

    function onSaveNew() {
        // var dataCheck = data[''];

        //if (CheckValidate(data) && !checkDuplicationCode()) {
        onSaveAndContinue($('#form_cat_Item'), '@_hrm_Hr_Service', 'api/Cat_Item/', 'grid_Cat_Item', 'windowCatItem'); return false;

        //}
    }

    function onSaveClose() {
        // if (CheckValidate(data) && !checkDuplicationCode()) {
        onSaveAndClose($('#form_cat_Item'), '@_hrm_Hr_Service', 'api/Cat_Item/', 'grid_Cat_Item', 'windowCatItem'); return false;

        // }
    }
    function onSaveDataPopUp() {

        //  if (CheckValidate(data)) {
        //  if (!checkDuplicationCode()) {
        onlySave($('#form_cat_Item'), '@_hrm_Hr_Service', 'api/Cat_Item/', 'grid_Cat_Item'); return false;
        //  }
        // }
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_cat_Item" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">
                        @{
    var _Code = new TextBoxBuilderInfo()
    {
        Width = 300,
        Name = "CatItemInfo_Code"
    };
    if (Model != null)
    {
        _Code.Value = Model == null ? string.Empty : Model.Code;
    }
                        }
                        @Html.VnrTextBoxFor(mode => mode.Code, "width: 300px")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.ItemName)
                    </div>
                    <div class="FieldValue">

                        @Html.VnrTextBoxFor(mode => mode.ItemName, "width: 300px")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelForNoneIcon(model => model.LineItemID)
                    </div>
                    <div class="FieldValue">
                        @{
    var dropdownLineItemID = new DropDownListBuilderInfo()
                            {
                                Name = "CatLineItemInfo_LineItemID",
                                DataTextField = "LineItemName",
                                DataValueField = "ID",
                                Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiLineItem",
                                Value = @Html.DisplayFor(mode => mode.LineItemID).ToString(),
                                Enable = true,
                                StyleCss = "width:300px;",
                                OptionLabel = @ConstantDisplay.HRM_Category_SelectLineItem.TranslateString()
                            };
                        }
                        @(Html.VnrDropDownListFor(mode => mode.LineItemID, dropdownLineItemID))
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Note)
                    </div>
                    <div class="FieldValue">

                        @Html.VnrTextAreaFor(mode => mode.Note, "width:500px;height:100px;")
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150"></div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-CatItem", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveNew", Name = "save-New-CatItem", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-CatItem", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}
