@using HRM.Infrastructure.Utilities
@using HRM.Infrastructure.Security
@using HRM.Presentation.Attendance.Models;
@using HRM.Presentation.UI.Controls.Kendo

@model Att_ReportDetailLeaveSickModel
@{
    ViewBag.Title = "Index";
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var controller = ViewContext.RouteData.Values["Controller"].ToString();
    var action = ViewContext.RouteData.Values["Action"].ToString();
    var screen = controller + "/" + action;

}
@Html.Hidden("Screen", screen)

<script>
    var checkedNodes = [];
    var isCreateTemplate = false;
    var isCreateTemplateForDynamicGrid = false;
    SetFieldRequired();
    function filterFieldInfo(isExport) {
        checkedNodes = [];
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes);
        var elementPara = {
            OrgStructureID: checkedNodes.join(','),
            FromDate: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#FromDate").val()),
            ToDate: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#ToDate").val()),
            ValueFields: $('#valueFieldsGrid').val(),
            ShiftIDs: $("#SShift").val(),
            LeaveDayTypeIDs: $("#SLeaveDayType").val(),
            isIncludeQuitEmp: document.getElementById('@Html.FieldIdFor(model => model.isIncludeQuitEmp)').checked,
            IsCreateTemplate: isCreateTemplate,
            IsCreateTemplateForDynamicGrid: isCreateTemplateForDynamicGrid,
            UserExport: $('#UserLoginName').val()
        };
        if (isExport == true) {
            elementPara["ExportId"] = $('#ddlScreenName').val();
        }
        return elementPara;
    }
    function paramExport(isExportDDL) {
        
        checkedNodes = [];
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes);

        var _srcType = $('#msl_SrcType').val() != null ? $('#msl_SrcType').val().join(',') : $('#msl_SrcType').val();
        var _type = $('#msl_Type').val() != null ? $('#msl_Type').val().join(',') : $('#msl_Type').val();
        var _shift = $('#mls_Shift').val() != null ? $('#mls_Shift').val().join(',') : $('#mls_Shift').val();
        var param = {
            OrgStructureID: checkedNodes.join(','),
            FromDate: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#FromDate").val()),
            ToDate: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#ToDate").val()),
            ShiftIDs: $("#SShift").val(),
            LeaveDayTypeIDs: $("#SLeaveDayType").val(),
            isIncludeQuitEmp: document.getElementById('@Html.FieldIdFor(model => model.isIncludeQuitEmp)').checked,
            ValueFields: $('#valueFieldsGrid').val(),
            IsCreateTemplate: isCreateTemplate,
            IsCreateTemplateForDynamicGrid: isCreateTemplateForDynamicGrid,
            UserExport: $('#UserLoginName').val()
        };
        if (isExportDDL == true) {
            param["ExportId"] = $('#ddlScreenName').val();
        }
        return param;
    }


    //var Validator = CheckValidate();
    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        //Show hide panel
        ShowHidePanel();
        $("#btnSearch").click(function () {
            $.ajax({
                type: 'POST',
                url: '@_hrm_Hr_Service' + 'Att_GetData/GetReportDetailLeaveSickListValidate',
                data: filterFieldInfo(),
                dataType: 'json',
                async: false,
                success: function (data) {
                    
                    if (data[0] == "error") {
                        ShowNotificationProcessor(data[1]);
                    }
                    else {
                        var grid = $('#gridAtt_ReportDetailLeaveSick').data("kendoGrid");
                        grid.dataSource.read();
                    }
                }
            });
            return false;
        });

    });


    $("#btnExport").click(function () {
        var isAccess = checkPermission(PrivilegeType.Export, '@ConstantPermission.Att_ReportDetailLeaveSick');
        if (!isAccess) {
            return;
        }
        if ($('#ddlScreenName').val() == "") {
            ExportFail();
            return;
        }
        var urlGetData = '@_hrm_Hr_Service' + "Att_GetData/GetReportDetailLeaveSickList/";
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = paramExport(true);
        ExportAll(urlGetData, dataParameter, urlDownload);
    });

    $("#btnCreateTemplate").click(function () {
        
        isCreateTemplate = true;
        isCreateTemplateForDynamicGrid = false;
        CreateTemplate('@_hrm_Hr_Service' + '/Att_GetData/GetReportDetailLeaveSickList', filterFieldInfo(true));
    });

</script>



<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            <div class="contendSearchWidge">
                <div style="float:left; width:430px">
                    <div id="div2">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(m => m.FromDate)
                            @Html.HiddenFor(m => m.UserExport)
                        </div>
                        <div class="FieldValue">
                            @{
                                var DateFrom = new DatePickerBuilderInfo()
                                {
                                    Value = DateTime.Today.ToShortDateString(),
                                    StyleCss = "width:100px;",
                                    Placeholder = ConstantDisplay.HRM_HR_Profile_DateFrom.TranslateString()
                                };

                            }
                            @Html.VnrDatePickerFor(mode => mode.FromDate, DateFrom)
                        </div>
                    </div>
                    <div id="div3">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(m => m.ToDate)
                        </div>
                        <div class="FieldValue">
                            @{
                                var DateTo = new DatePickerBuilderInfo()
                                {
                                    Value = DateTime.Today.ToShortDateString(),
                                    StyleCss = "width:100px;",
                                    Placeholder = ConstantDisplay.HRM_HR_Profile_DateTo.TranslateString()
                                };
                            }
                            @Html.VnrDatePickerFor(mode => mode.ToDate, DateTo)
                        </div>
                    </div>
                    <div id="div5">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.OrgStructureID)
                        </div>
                        <div class="FieldValue">
                            @Html.Partial("EditorTemplates/OrgStructureTreeViewDropdown")
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                </div>
                <div style="width:550px; display:block; float:left">
                    <div id="div8">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.ShiftIDs)
                        </div>
                        <div class="FieldValue">
                            @{
                                var _ShiftType = new MultiSelectBuilderInfo()
                                {
                                    Name = "SShift",
                                    DataTextField = "ShiftName",
                                    DataValueField = "ID",
                                    Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiShift",
                                    Placeholder = ConstantDisplay.HRM_Att_SelectShift.TranslateString(),
                                };
                            }

                            @(Html.VnrMultiSelectFor(mode => mode.ShiftIDs, _ShiftType))
                        </div>
                    </div>

                    <div id="div8">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.LeaveDayTypeIDs)
                        </div>
                        <div class="FieldValue">
                            @{
                                var _LeaveDayType = new MultiSelectBuilderInfo()
                                {
                                    Name = "SLeaveDayType",
                                    DataTextField = "LeaveDayTypeName",
                                    DataValueField = "ID",
                                    Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiLeaveDayType",
                                    Placeholder = ConstantDisplay.HRM_Category_SelectLeaveDayType.TranslateString(),
                                };
                            }

                            @(Html.VnrMultiSelectFor(mode => mode.LeaveDayTypeIDs, _LeaveDayType))
                        </div>
                    </div>

                    <div id="div6">
                        <div class="FieldTitle">
                        </div>
                        <div class="FieldValue" style="font-weight:bold">
                            @{
                                var IsIncludeQuitEmp = new CheckBoxBuilderInfo() { };
                            }
                            @Html.VnrCheckBoxFor(model => model.isIncludeQuitEmp, IsIncludeQuitEmp)
                            @Html.VnrLabelFor(mode => mode.isIncludeQuitEmp)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="commandToolBarWidge">
    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    <div style="float:right">
        <script>
            function GetScreenName() {
                return {
                    screenName: '@screen'
                };
            }
        </script>
        <div class="FieldValue" style="margin-top: 0;">
            @{
                var screenName = new DropDownListBuilderInfo()
                {
                    Name = "ddlScreenName",
                    DataTextField = "ExportName",
                    DataValueField = "ID",
                    Url = @_hrm_Hr_Service + "Cat_GetData/GetScreenName",
                    Data = "GetScreenName",
                };
            }
            @Html.VnrDropDownList(screenName)
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport", Content = ConstantAction.HRM_Common_ExportReport.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateTemplate", Content = ConstantAction.HRM_Common_CreateTemplate.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
        </div>
    </div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @{
        string[] valueFields = new string[]
                            {
                                 Att_ReportDetailLeaveSickModel.FieldNames.CodeEmp,
                                Att_ReportDetailLeaveSickModel.FieldNames.ProfileName,
                               Att_ReportDetailLeaveSickModel.FieldNames.DepartmentCode,
                                Att_ReportDetailLeaveSickModel.FieldNames.Date,
                                Att_ReportDetailLeaveSickModel.FieldNames.ShiftName,
                                Att_ReportDetailLeaveSickModel.FieldNames.InTime,
                                Att_ReportDetailLeaveSickModel.FieldNames.OutTime,
                                Att_ReportDetailLeaveSickModel.FieldNames.IsPaid,
                                Att_ReportDetailLeaveSickModel.FieldNames.SC,
                                Att_ReportDetailLeaveSickModel.FieldNames.SU,
                                Att_ReportDetailLeaveSickModel.FieldNames.SD,
                                Att_ReportDetailLeaveSickModel.FieldNames.DateFrom ,
                                Att_ReportDetailLeaveSickModel.FieldNames.DateTo,
                                Att_ReportDetailLeaveSickModel.FieldNames.UserExport,
                                Att_ReportDetailLeaveSickModel.FieldNames.DateExport,
                            };
        Dictionary<string, int> sizeFields = new Dictionary<string, int>()
                            {
                                 {Att_ReportDetailLeaveSickModel.FieldNames.CodeEmp,70},
                                {Att_ReportDetailLeaveSickModel.FieldNames.ProfileName,135},
                                {Att_ReportDetailLeaveSickModel.FieldNames.JobtitleName,110},
                                {Att_ReportDetailLeaveSickModel.FieldNames.PositionName,110},
                                {Att_ReportDetailLeaveSickModel.FieldNames.BranchCode,97},
                                {Att_ReportDetailLeaveSickModel.FieldNames.DivisionCode,80},
                                {Att_ReportDetailLeaveSickModel.FieldNames.DepartmentCode,99},
                                {Att_ReportDetailLeaveSickModel.FieldNames.TeamCode,80},
                                {Att_ReportDetailLeaveSickModel.FieldNames.SectionCode,80},
                                {Att_ReportDetailLeaveSickModel.FieldNames.Date,81},
                                {Att_ReportDetailLeaveSickModel.FieldNames.ShiftName,90},
                                {Att_ReportDetailLeaveSickModel.FieldNames.InTime,65},
                                {Att_ReportDetailLeaveSickModel.FieldNames.OutTime,62},
                                {Att_ReportDetailLeaveSickModel.FieldNames.IsPaid,157},
                                {Att_ReportDetailLeaveSickModel.FieldNames.SC,80},
                                {Att_ReportDetailLeaveSickModel.FieldNames.SU,80},
                                {Att_ReportDetailLeaveSickModel.FieldNames.SD,80},
                                {Att_ReportDetailLeaveSickModel.FieldNames.DateFrom,100},
                                {Att_ReportDetailLeaveSickModel.FieldNames.DateTo,80},
                                {Att_ReportDetailLeaveSickModel.FieldNames.UserExport,80},
                                {Att_ReportDetailLeaveSickModel.FieldNames.DateExport,80},
                            };

        Dictionary<string, string> displayFields = new Dictionary<string, string>()
                            {
                                    {Att_ReportDetailLeaveSickModel.FieldNames.CodeEmp,ConstantDisplay.HRM_Attendance_CodeEmp},
                                {Att_ReportDetailLeaveSickModel.FieldNames.ProfileName,ConstantDisplay.HRM_Attendance_ProfileName},
                                {Att_ReportDetailLeaveSickModel.FieldNames.DepartmentCode,ConstantDisplay.HRM_Attendance_DepartmentCode},
                                {Att_ReportDetailLeaveSickModel.FieldNames.Date,ConstantDisplay.HRM_Attendance_Leaveday_DateLeave},
                                {Att_ReportDetailLeaveSickModel.FieldNames.ShiftName,ConstantDisplay.HRM_Attendance_ShiftId},
                                {Att_ReportDetailLeaveSickModel.FieldNames.InTime,ConstantDisplay.HRM_Attendance_InTime},
                                {Att_ReportDetailLeaveSickModel.FieldNames.OutTime,ConstantDisplay.HRM_Attendance_OutTime},
                                {Att_ReportDetailLeaveSickModel.FieldNames.IsPaid,ConstantDisplay.HRM_Attendance_Leaveday_IsPaid},
                                {Att_ReportDetailLeaveSickModel.FieldNames.SC,ConstantDisplay.HRM_Attendance_Leaveday_SC},
                                {Att_ReportDetailLeaveSickModel.FieldNames.SU,ConstantDisplay.HRM_Attendance_Leaveday_SU},
                                {Att_ReportDetailLeaveSickModel.FieldNames.SD,ConstantDisplay.HRM_Attendance_Leaveday_SD},
                                {Att_ReportDetailLeaveSickModel.FieldNames.DateFrom,ConstantDisplay.HRM_Attendance_DateFrom},
                                {Att_ReportDetailLeaveSickModel.FieldNames.DateTo,ConstantDisplay.HRM_Attendance_DateTo},
                                {Att_ReportDetailLeaveSickModel.FieldNames.UserExport,ConstantDisplay.HRM_Att_Report_UserExport},
                                {Att_ReportDetailLeaveSickModel.FieldNames.DateExport,ConstantDisplay.HRM_Attendance_DateExport},
                            };
        Dictionary<string, string> formatFields = new Dictionary<string, string>()
        {
            {Att_OvertimeModel.FieldNames.WorkDate, ConstantFormat.HRM_Format_DayMonthYear},
            {Att_OvertimeModel.FieldNames.InTime, ConstantFormat.HRM_Format_HourMinSecond},
            {Att_OvertimeModel.FieldNames.OutTime, ConstantFormat.HRM_Format_HourMinSecond}
        };
        string[] hiddenFiedlds = new string[]
        {
                                Att_ReportDetailLeaveSickModel.FieldNames.DateFrom ,
                                Att_ReportDetailLeaveSickModel.FieldNames.DateTo,
                                Att_ReportDetailLeaveSickModel.FieldNames.UserExport,
                                Att_ReportDetailLeaveSickModel.FieldNames.DateExport,
        };
        var grid = new GridBuilderInfo
        {
            Name = "gridAtt_ReportDetailLeaveSick",
            ValueFields = valueFields,
            SizeFields = sizeFields,
            DisplayFields = displayFields,
            ReadActionUrl = _hrm_Hr_Service + "Att_GetData/GetReportDetailLeaveSickList",
            ShowNextPrevious = true,
            PageSize = 50,
            ShowPageNumber = true,
            ReadData = "filterFieldInfo",
            FormatFields = formatFields,
            ServerOperation = false,
            ShowEditIcon = false,
            ShowCheckbox = false,
            HiddenFields = hiddenFiedlds
        };

    }

    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<Att_ReportDetailLeaveSickModel>(grid))
</div>

@{
    var valueFields1 = string.Empty;
    for (int i = 0; i < valueFields.Count(); i++)
    {
        valueFields1 += "," + valueFields[i];
    }
}
@Html.Hidden("valueFieldsGrid", valueFields1)