@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.UI.Controls.Kendo.DropDownList
@using HRM.Presentation.UI.Controls.Kendo.MultiSelect

@using HRM.Infrastructure.Utilities
@using System.Collections;

@model HRM.Presentation.Training.Models.Tra_RequirementTrainModel
@{

    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;



    IList<SelectListItem> lstStatus = Enum.GetValues(typeof(RequirementTrainStatus))
.Cast<RequirementTrainStatus>()
.Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
.ToList();
}

<script>
    SetFieldRequired();
    document.getElementById("TraRequirementTrainInSide_StatusApprove3").readOnly = true;
    document.getElementById("TraRequirementTrainInSide_StatusApprove").readOnly = true;
    document.getElementById("TraRequirementTrainInSide_StatusApprove2").readOnly = true;
</script>
<div class="VnRMain" style="height:450px;">
    <div style="display: block">
        <div class="hrm_box">
            <div id="div7">
                <div class="FieldTitle170">
                    @Html.VnrLabelFor(mode => mode.PlanID)
                    @Html.HiddenFor(mode => mode.ID)
                    @Html.HiddenFor(mode => mode.IsTrainingOutside)
                </div>
                <div class="FieldValue">
                    @{
                        var _PlanID = new ComboBoxBuilderInfo()
                        {
                            DataTextField = "PlanName",
                            DataValueField = "ID",
                            Url = @_hrm_Hr_Service + "Tra_GetData/GetMultiPlanName",
                            Value = @Html.DisplayFor(mode => mode.PlanID).ToString(),
                            //OptionLabel = @ConstantDisplay.HRM_Attendance_SelectOvertimeType.TranslateString(),
                            StyleCss = "width:200px"
                        };
                    }
                    @(Html.VnrComboBoxFor(mode => mode.PlanID, _PlanID).Text(Model != null && Model.PlanName != null ? Model.PlanName.ToString() : string.Empty))
                    @Html.ValidationMessageFor(model => model.PlanID)
                </div>
            </div>
            <div>
                <div class="FieldTitle170">
                    @Html.VnrLabelFor(model => model.RequirementTrainName)
                </div>
                <div class="FieldValue">
                    @{
                        var _RequirementTrainName = new TextBoxBuilderInfo()
                        {
                            //Name = "TraRequirementTrain_RequirementTrainName"
                        };
                    }
                    @Html.VnrTextBoxFor(model => model.RequirementTrainName)
                </div>
            </div>
            <div>
                <div class="FieldTitle170">
                    @Html.Label(ConstantDisplay.HRM_Tra_RequirementTrain_RequetDateFrom.TranslateString())
                </div>
                <div class="FieldValue">
                    @{
                        var _DateFrom = new DatePickerBuilderInfo()
                        {
                            Name = "TraRequirementTrainInSide_DateFrom",
                            StyleCss = "width:97.5px",
                        };

                        @Html.VnrDatePickerFor(model => model.DateFrom, _DateFrom)

                    }
                    @{
                        var _DateTo = new DatePickerBuilderInfo()
                                                                {
                                                                    Name = "TraRequirementTrainInSide_DateTo",
                                                                    StyleCss = "width:97.5px",
                                                                };
                                                                @Html.VnrDatePickerFor(model => model.DateTo, _DateTo)
                    }

                </div>
            </div>
            <div>
                <div class="FieldTitle170">
                    @Html.VnrLabelFor(model => model.IsTrainingOutside)
                </div>
                <div class="FieldValue">
                    @Html.VnrRadioButtonFor(model => model.IsTrainingInside, "TraRequirementTrainInSide_IsTrainingOutside")
                    @Html.VnrLabelFor(model => model.IsTrainingInside)
                    @Html.VnrRadioButtonFor(model => model.IsTrainingOutside, "TraRequirementTrainInSide_IsTrainingOutside")
                    @Html.VnrLabelFor(model => model.IsTrainingOutside)
                </div>
            </div>
            <div id="div13">
                <div class="FieldTitle170">
                    @Html.VnrLabelFor(mode => mode.Status)
                </div>
                <div class="FieldValue">
                    @{
                        var _Status = new DropDownListBuilderInfo()
                        {
                            Name = "TraRequirementTrainInSide_Status",
                            DataTextField = "Text",
                            DataValueField = "Value",
                            BindTo = lstStatus,
                            OptionLabel = @ConstantDisplay.HRM_Category_SelectStatus.TranslateString(),
                            StyleCss = "width:200px"
                        };
                    }
                    @(Html.VnrDropDownListFor(mode => mode.Status, _Status))
                    @Html.ValidationMessageFor(model => model.Status)
                </div>
            </div>
            <div id="div2">
                <div class="FieldTitle170">
                    @Html.VnrLabelFor(mode => mode.Description)

                </div>
                <div class="FieldValue">
                    @{
                        var _Description = new TextAreaBuilderInfo()
                        {

                        };
                    }
                    @Html.VnrTextAreaFor(model => model.Description)
                </div>
            </div>
            <div>
                <div class="FieldTitle170">
                    @Html.VnrLabelFor(model => model.Target)
                </div>
                <div class="FieldValue">
                    @Html.VnrTextAreaFor(model => model.Target)
                </div>
            </div>
            <div id="div2">
                <div class="FieldTitle170">

                    @Html.VnrLabelFor(mode => mode.UserApproveID)
                </div>
                <div class="FieldValue">
                    @{
                        var _UserApproveID = new ComboBoxBuilderInfo()
                        {
                            Name = "TraRequirementTrainInSide_UserApproveID",
                            DataTextField = "UserInfoName",
                            DataValueField = "ID",
                            Url = @_hrm_Hr_Service + "Sys_GetData/GetMultiUserApproved_" + ApproveType.E_TRA_REQUIREMENTTRAIN.ToString(),
                            Placeholder = ConstantDisplay.HRM_System_SelectUserApprove.TranslateString(),
                        };
                    }
                    @Html.VnrComboBoxFor(model => model.UserApproveID, _UserApproveID)
                </div>
            </div>
            <div id="div2">
                <div class="FieldTitle170">

                    @Html.VnrLabelFor(mode => mode.UserApproveID2)
                </div>
                <div class="FieldValue">
                    @{
                        var _UserApproveID2 = new ComboBoxBuilderInfo()
                        {
                            Name = "TraRequirementTrainInSide_UserApproveID2",
                            DataTextField = "UserInfoName",
                            DataValueField = "ID",
                            Url = @_hrm_Hr_Service + "Sys_GetData/GetMultiUserApproved_" + ApproveType.E_TRA_REQUIREMENTTRAIN.ToString(),
                            Placeholder = ConstantDisplay.HRM_System_SelectUserApprove.TranslateString(),
                        };
                    }
                    @Html.VnrComboBoxFor(model => model.UserApproveID2, _UserApproveID2)
                </div>
            </div>
            <div id="div2">
                <div class="FieldTitle170">

                    @Html.VnrLabelFor(mode => mode.UserApproveID3)
                </div>
                <div class="FieldValue">
                    @{
                        var _UserApproveID3 = new ComboBoxBuilderInfo()
                        {
                            Name = "TraRequirementTrainInSide_UserApproveID3",
                            DataTextField = "UserInfoName",
                            DataValueField = "ID",
                            Url = @_hrm_Hr_Service + "Sys_GetData/GetMultiUserApproved_" + ApproveType.E_TRA_REQUIREMENTTRAIN.ToString(),
                            Placeholder = ConstantDisplay.HRM_System_SelectUserApprove.TranslateString(),
                        };
                    }
                    @Html.VnrComboBoxFor(model => model.UserApproveID3, _UserApproveID3)
                </div>
            </div>
        </div>
        <div class="hrm_box">
            <div id="div3">
                <div class="FieldTitle170">
                    @Html.VnrLabelFor(mode => mode.PersonRequirement)
                </div>
                <div class="FieldValue">
                    @(Html.VnrTextBoxFor(mode => mode.PersonRequirement))
                </div>
            </div>
            <div id="div3">

                <div class="FieldTitle170">
                    @Html.VnrLabelFor(mode => mode.TrainingDeptIdea)
                </div>
                <div class="FieldValue">

                    @(Html.VnrTextBoxFor(mode => mode.TrainingDeptIdea))

                </div>
            </div>
            <div id="div3">

                <div class="FieldTitle170">
                    @Html.VnrLabelFor(mode => mode.ManagementDeptIdea)
                </div>
                <div class="FieldValue">

                    @(Html.VnrTextAreaFor(mode => mode.ManagementDeptIdea))

                </div>
            </div>
            <div id="div3">

                <div class="FieldTitle170">
                    @Html.VnrLabelFor(mode => mode.Notes)
                </div>
                <div class="FieldValue">

                    @(Html.VnrTextAreaFor(mode => mode.Notes))

                </div>
            </div>
            <div id="div3">

                <div class="FieldTitle170">
                    @Html.VnrLabelFor(mode => mode.ResultAchieved)
                </div>
                <div class="FieldValue">

                    @(Html.VnrTextAreaFor(mode => mode.ResultAchieved))

                </div>
            </div>
            <div id="div3">

                <div class="FieldTitle170">
                    @Html.VnrLabelFor(mode => mode.StatusApprove)
                </div>
                <div class="FieldValue">
                    @{
                        var _StatusApprove = new TextBoxBuilderInfo()
                         {
                             Name = "TraRequirementTrainInSide_StatusApprove",
                             CssStyle = "width:200px;background-color:WhiteSmoke"
                         };
                    }
                    @(Html.VnrTextBoxFor(mode => mode.StatusApprove, _StatusApprove))
                </div>
            </div>
            <div id="div3">

                <div class="FieldTitle170">
                    @Html.VnrLabelFor(mode => mode.StatusApprove2)
                </div>
                <div class="FieldValue">
                    @{
                        var _StatusApprove2 = new TextBoxBuilderInfo()
                         {
                             Name = "TraRequirementTrainInSide_StatusApprove2",
                             CssStyle = "width:200px;background-color:WhiteSmoke"
                         };
                    }
                    @(Html.VnrTextBoxFor(mode => mode.StatusApprove2, _StatusApprove2))
                </div>
            </div>
            <div id="div3">

                <div class="FieldTitle170">
                    @Html.VnrLabelFor(mode => mode.StatusApprove3)
                </div>
                <div class="FieldValue">
                    @{
                        var _StatusApprove3 = new TextBoxBuilderInfo()
                         {
                             Name = "TraRequirementTrainInSide_StatusApprove3",
                             CssStyle = "width:200px;background-color:WhiteSmoke"
                         };
                    }
                    @(Html.VnrTextBoxFor(mode => mode.StatusApprove3, _StatusApprove3))
                </div>
            </div>
        </div>
    </div>
</div>
