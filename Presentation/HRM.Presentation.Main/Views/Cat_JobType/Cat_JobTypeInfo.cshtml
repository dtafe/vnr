@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@model HRM.Presentation.Category.Models.Cat_JobTypeModel

@{
    Layout = null;
    //var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    //var _hrm_Hr_Service = ConstantPathWeb.Hrm_Sys_Service;

    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;

}
<script>
    SetFieldRequired();

    function checkDuplicationCode() {

        var _code = $("#HDTJobType_Code").val();
        var _id = '@lineId';
        var param = {
            tableName: 'Cat_HDTJobType',
            columnName: 'Code',
            keyword: _code,
            id: _id
        };

        var isduplicate = checkDuplicate('@_hrm_Hr_Service', 'Sys_GetData', 'CheckDuplicate', param, "Code");

        return isduplicate;
    }

    function onSaveNew() {
        onSaveAndContinue($('#form_cat_JobType'), '@_hrm_Hr_Service', 'api/Cat_JobType/', '@ConstantControlName.HRM_Category_JobType_Grid_Name', '@ConstantControlName.HRM_Category_JobType_PopUp_Name'); return false;
    }

    function onSaveClose() {
        onSaveAndClose($('#form_cat_JobType'), '@_hrm_Hr_Service', 'api/Cat_JobType/', '@ConstantControlName.HRM_Category_JobType_Grid_Name', '@ConstantControlName.HRM_Category_JobType_PopUp_Name'); return false;
    }
    function onSaveDataPopUp() {
        onlySave($('#form_cat_JobType'), '@_hrm_Hr_Service', 'api/Cat_JobType/', '@ConstantControlName.HRM_Category_JobType_Grid_Name'); return false;
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_cat_JobType" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _HDTJobType = new TextBoxBuilderInfo()
                            {
                                Name = "HDTJobType_Code",
                                CssStyle = "width:300px"
                            };
                            if (Model != null)
                            {
                                _HDTJobType.Value = Model.Code == null ? string.Empty : Model.Code;
                            }
                        }
                        @Html.VnrTextBoxFor(mode => mode.Code, _HDTJobType)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.JobTypeName)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.JobTypeName, "width: 300px")
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.RoleID)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _RoleID = new DropDownListBuilderInfo()
                            {
                                StyleCss = "width:300px",
                                Name = "JobTypeInfo_RoleID",
                                DataTextField = "RoleName",
                                DataValueField = "ID",
                                Url = _hrm_Hr_Service + "Cat_GetData/GetMultiRole"
                            };
                        }
                        @(Html.VnrDropDownListFor(mode => mode.RoleID, _RoleID))
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Note)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Note, "width:500px;height:100px;")
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150"></div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-JobType", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveNew", Name = "save-New-Cat_JobType", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-Cat_JobType", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}
