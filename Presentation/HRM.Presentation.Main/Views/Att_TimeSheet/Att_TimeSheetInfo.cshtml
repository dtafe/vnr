@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.UI.Controls.Kendo.MultiSelect
@using HRM.Presentation.UI.Controls.Kendo.DropDownList
@using HRM.Presentation.Attendance.Models
@using System.Collections
@model HRM.Presentation.Attendance.Models.Att_TimeSheetModel

@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
}
<script>
    SetFieldRequired();

    function onSaveNew() {
        var ProfileID = $('#@Html.FieldIdFor(model => model.ProfileID)').val();
        ProfileID != null ? $('#@Html.FieldIdFor(model => model.ProfileIDs)').val(ProfileID.join(',')) : null;
        checkedNodes = [];
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes);
        checkedNodes != null ? $('#@Html.FieldIdFor(model => model.OrgStructureID)').val(checkedNodes.join(',')) : null;
        $("#OrgStructureID").val(checkedNodes.join(','));

        onSaveAndContinue($('#form_Att_TimeSheet'), '@_hrm_Hr_Service', 'api/Att_TimeSheet/', '@ConstantControlName.HRM_Att_TimeSheet_Grid_Name', '@ConstantControlName.HRM_Att_TimeSheet_PopUp_Name'); return false;
    }

    function onSaveClose() {
        var ProfileID = $('#@Html.FieldIdFor(model => model.ProfileID)').val();
        ProfileID != null ? $('#@Html.FieldIdFor(model => model.ProfileIDs)').val(ProfileID.join(',')) : null;
        checkedNodes = [];
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes);
        checkedNodes != null ? $('#@Html.FieldIdFor(model => model.OrgStructureID)').val(checkedNodes.join(',')) : null;
        $("#OrgStructureID").val(checkedNodes.join(','));
        onSaveAndClose($('#form_Att_TimeSheet'), '@_hrm_Hr_Service', 'api/Att_TimeSheet/', '@ConstantControlName.HRM_Att_TimeSheet_Grid_Name', '@ConstantControlName.HRM_Att_TimeSheet_PopUp_Name'); return false;
    }
    function onSaveDataPopUp() {
        var ProfileID = $('#@Html.FieldIdFor(model => model.ProfileID)').val();
        ProfileID != null ? $('#@Html.FieldIdFor(model => model.ProfileIDs)').val(ProfileID.join(',')) : null;
        checkedNodes = [];
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes);
        checkedNodes != null ? $('#@Html.FieldIdFor(model => model.OrgStructureID)').val(checkedNodes.join(',')) : null;
        $("#OrgStructureID").val(checkedNodes.join(','));
        onlySave($('#form_Att_TimeSheet'), '@_hrm_Hr_Service', 'api/Att_TimeSheet/', '@ConstantControlName.HRM_Att_TimeSheet_Grid_Name'); return false;
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Att_TimeSheet" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div id="div2">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.ProfileID)
                        @(Html.HiddenFor(model => model.ProfileIDs, "width: 300px"))
                        @(Html.HiddenFor(model => model.OrgStructureID, "width: 300px"))
                    </div>
                    <div class="FieldValue">
                        @{
    IEnumerable valuepro = new string[] { };
    if (Model != null)
    {
        valuepro = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
    }
                        }
                        @{
    var multiSelectProfileID = new MultiSelectBuilderInfo()
    {
        Width = 300,
        DataTextField = "ProfileName",
        DataValueField = "ID",
        Url = @_hrm_Hr_Service + "HrMultiSelect/GetMultiProfile",
        Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
        //     MaxSelectedItems = 1,
        Value = valuepro
    };
                        }

                        @Html.ChooseEmpOrOrgFor(mode => mode.ProfileID, multiSelectProfileID, _hrm_Hr_Service + "Att_GetData/GetProfileByOrgId")
                    </div>
                </div>
                <div class="DivContentTitleValue" id="div13">
                    <div class="FieldTitle150">
                        @Html.VnrLabelForNoneIcon(model => model.RoleID)
                    </div>
                    <div class="FieldValue">
                        @{
                            var tCountryID = new ComboBoxBuilderInfo()
                            {
                                Name = "TimeSheetInfo_RoleID",
                                StyleCss = "Width: 300px",
                                DataTextField = "RoleName",
                                DataValueField = "ID",
                                //ServerFilter = true,
                                //FilterType = FilterType.Contains,
                                Url = _hrm_Hr_Service + "Cat_GetData/GetMultiRole",
                                Placeholder = ConstantDisplay.HRM_Category_SelectRole.TranslateString(),
                                Value = Model == null ? string.Empty : Model.RoleID.ToString()
                            };
                        }
                        @Html.VnrComboBoxFor(model => model.RoleID, tCountryID).Text(Model == null ? string.Empty : Model.RoleName)
                    </div>
                </div>

                <div class="DivContentTitleValue" id="div13">
                    <div class="FieldTitle150">
                        @Html.VnrLabelForNoneIcon(model => model.JobTypeID)
                    </div>
                    <div class="FieldValue">
                        @*<script>
                            function filterProvinces() {
                                
                                return {
                                    RoleID: $("#RoleID").val(),
                                    jobtitleFilter: $("#JobTypeID").data("kendoComboBox").input.val()
                                };
                            }
                        </script>*@
                        @{
                                var tProvince = new ComboBoxBuilderInfo()
                                {
                                    Name = "TimeSheetInfo_JobTypeID",
                                    StyleCss = "Width: 300px",
                                    DataTextField = "JobTypeName",
                                    DataValueField = "ID",
                                    //ServerFilter = true,
                                    //FilterType = FilterType.Contains,
                                    Url = _hrm_Hr_Service + "Cat_GetData/GetMultiJobType/",
                                    //CascadeFrom = "RoleID",
                                    //Data = "filterProvinces",
                                    //Autobind = false,
                                    Placeholder = ConstantDisplay.HRM_Category_SelectJobType.TranslateString(),
                                    Value = Model == null ? string.Empty : Model.JobTypeID.ToString()
                                };
                        }
                        @Html.VnrComboBoxFor(model => model.JobTypeID, tProvince).Text(Model == null ? string.Empty : Model.JobTypeName)

                    </div>
                </div>



                @*<div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.RoleID)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _RoleID = new DropDownListBuilderInfo()
                            {
                                Name = "TimeSheetInfo_RoleID",
                                DataTextField = "RoleName",
                                DataValueField = "ID",
                                Url = _hrm_Hr_Service + "Cat_GetData/GetMultiRole"
                            };
                        }
                        @(Html.VnrDropDownListFor(mode => mode.RoleID, _RoleID))
                    </div>
                </div>*@
                @*<div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.JobTypeID)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _JobTypeID = new DropDownListBuilderInfo()
                             {
                                 Name = "TimeSheetInfo_JobTypeID",
                                 DataTextField = "JobTypeName",
                                 DataValueField = "ID",
                                 Url = _hrm_Hr_Service + "Cat_GetData/GetMultiJobType"
                             };
                        }
                        @(Html.VnrDropDownListFor(mode => mode.JobTypeID, _JobTypeID))
                    </div>
                </div>*@
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.NoHour)
                    </div>
                    <div class="FieldValue">
                        @{
                             var _NoHour = new NumericTextBoxBuilderInfo<double>()
                             {
                                 StyleCss = "width:150px",
                                Name = "TimeSheetInfo_NoHour",
                                Format = ConstantFormat.HRM_Format_Number_Double.ToString(),
                            };
                        }
                        @(Html.VnrNumericTextBoxFor(model => model.NoHour, _NoHour))
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Sector)
                    </div>
                    <div class="FieldValue">
                        @{
                          var _Sector = new NumericTextBoxBuilderInfo<double>()
                          {
                              StyleCss = "width:150px",
                           Name = "TimeSheetInfo_Sector",
                           Format = ConstantFormat.HRM_Format_Number_Double.ToString(),
                       };
                        }
                        @(Html.VnrNumericTextBoxFor(model => model.Sector, _Sector))
                    </div>
                </div>

                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Date)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _Date = new DatePickerBuilderInfo()
                            {
                                
                                Name = "TimeSheetInfo_Date",
                                StyleCss="width:120px;"
                            };
                        }
                        @Html.VnrDatePickerFor(model => model.Date, _Date)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Note)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Note, "width:500px;height:100px;")
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150"></div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-Att_TimeSheet", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveNew", Name = "save-New-Att_TimeSheet", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-Att_TimeSheet", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}
