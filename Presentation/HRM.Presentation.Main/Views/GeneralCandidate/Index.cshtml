@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@model HRM.Presentation.Recruitment.Models.Rec_CandidateModel
@{
    Layout = null;
    var _Hrm_Rec_Web = ConstantPathWeb.Hrm_Rec_Web;
    var _hrm_Att_Service = ConstantPathWeb.Hrm_Att_Service;
   // Guid CandidateID1 = Model != null ? Model.ID : Guid.Empty;
}

@Html.Hidden("tabselect")
<script>
    function filterFieldInfo_Reload(isExport) {
        
        var param = {
            CandidateID: SelectID,
            IsExport: isExport,
            ValueFields: $('#valueFieldsGrid').val()
        };
        return param;
    }

    function reload() {
        LoadForm();
    }
</script>
<style>
    .btn-custom {
        color: #333333;
        border-radius: 0 !important;
        border-bottom: 0 !important;
        border-top: 0 !important;
    }
    .btn-group-custom {
        width: 100% !important;
        background-color: #f4f4f4;
        border-top: 0px solid #cccccc;
        border-right: 1px solid #cccccc;
        border-bottom: 0px solid #cccccc;
        margin-bottom: 0px;
    }
    .k-dropdown .k-input {
        border-top-left-radius: 1px;
        border-bottom-left-radius: 1px;
        border-top-right-radius: 1px;
        border-bottom-right-radius: 1px;
    }
    .curentSelected {
        background-color: #ebebeb;
        color: #42a5dc !important;
    }
</style>
@Html.Hidden("valueFieldsGrid")
<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            @*<h3>
                    @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                </h3>*@
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                <ul class="breadcrumb">
                    <li><a href="/Home">@ConstantDisplay.HRM_HR_Profile_Home.TranslateString()</a> </li>
                    <li><a href="/">@ConstantDisplay.HRM_Recruitment.TranslateString()</a></li>
                    <li><a href="/">@ConstantDisplay.HRM_REC_CandidateInfo.TranslateString()</a></li>
                    <li class="active" id="candidateNameView">
                    </li>
                </ul>

            </h3>
            <div>
                <div id="buttonTop" class="btn-group btn-group-sm btn-group-custom">
                    <button type="button" value="child_Rec" id="btnInfoPersional" class="btn btn-default btn-custom" onclick="EvenClickBtn(this.value)">@ConstantDisplay.HRM_REC_CandidateInfo.TranslateString()</button>
                </div>
                @Html.Hidden("buttonCurentSelect")
            </div>
            <table cellpadding="0" cellspacing="0" style="vertical-align: top; width: 100%;" class="Hrm_hr_general_table">
                <tr style="height:500px;">
                    <td style="vertical-align: top; width: 300px;height:500px;">

                        <div style="float:left; width: 300px">
                            @{
                                var org = new TreeViewDropdDownBuilderInfo()
                                {
                                    Name = "CandidateDetail_OrgStructureID",
                                    Width = "300px",
                                };
                            }
                            @Html.Partial("EditorTemplates/OrgTreeViewDropDown", org)
                        </div>
                        <div>
                            @Html.Partial("GridCandidate")
                        </div>
                    </td>
                    <td style="vertical-align: top; width: 100%;height:500px;" class="td_general_table">
                        <div id="child_Rec">
                            <ul>
                                <li>@ConstantDisplay.HRM_REC_ResultView.TranslateString()</li>
                                <li>@ConstantDisplay.HRM_REC_CandidateInfo.TranslateString()</li>
                                <li>@ConstantDisplay.HRM_REC_CandidateHistory.TranslateString()</li>
                                <li>@ConstantDisplay.HRM_REC_Interview.TranslateString()</li>
                                <li>@ConstantDisplay.HRM_REC_CandidateQualification.TranslateString()</li>
                                <li>@ConstantDisplay.HRM_Rec_Relative.TranslateString()</li>
                                <li>@ConstantDisplay.HRM_REC_CandidateExperience.TranslateString()</li>
                              
                            </ul>
                            <div></div>
                            <div></div>
                            <div></div>
                            <div></div>
                            <div></div>
                            <div></div>
                            <div></div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <div data-role="toolbar" id="Text111111" class="k-toolbar k-widget k-toolbar-resizable" data-uid="65034744-fb88-4854-95f2-642d004914c0"></div>
                    </td>
                </tr>
            </table>
        </div>
    </div>
</div>




<script type="text/javascript">
    //lưu id Candidate is selected
    var SelectID = "";
    //lưu tabid is selected
    var tabID = "child_Rec-1";
    //lưu giá trị của các btn cha để ẩn hiện các tabbar con tương ứng với btn
    var isSelectTabId = "child_Rec";
    //Biến static dùng để lưu dữ liệu giữa 2 page
    var tabIndex = 0;

    //Biến lưu tạm các tabindex con đang được chọn để load lại khi quay lại tab cha
    var IndexHre = 0;
    var IndexAtt = 0;
    var IndexHistory = 0;
    var IndexInfoContact = 0;
    var IndexEvaluation = 0;
    var IndexSal = 0;

    //Array để lưu tất cả các tab
    var arrChildTab = [["child_Rec-1", ""], ["child_Rec-2", ""], ["child_Rec-3", ""], ["child_Rec-4", ""], ["child_Rec-5", ""], ["child_Rec-6", ""], ["child_Rec-7", ""]];


    //Init các tabstrip
    $("#child_Rec").kendoTabStrip({ select: onSelect, animation: false });


    //Xử lý đổi backgroud cho button khi button được chọn
    $(function () {
        $('#buttonTop button').click(function () {
            var removeId = $("#buttonCurentSelect").val();
            if (removeId != '') {
                $("#" + removeId).removeClass('curentSelected');
            }
            $(this).addClass('curentSelected');
            $("#buttonCurentSelect").val(this.id);
        })
    });

    //even select in tabstrip
    function onSelect(e) {
        var ParentTab = e.sender._ariaId.replace("_ts_active", "");
        if (ParentTab == "child_Rec") {
            IndexHre = e.contentElement.id.replace("child_Rec-", "");
        }
        if (IsFormLoaded(e.contentElement.id)) {
            tabID = e.contentElement.id;
            if (ParentTab == "child_Rec")
                LoadForm();
            return;
        }

        //Get tab id is select
        tabID = e.contentElement.id;
        LoadForm();
    };
    var CandidateId = $("#" + '@ConstantDisplay.HRM_Rec_GeneralCandidate_H_IdCandidate').val();
    //Hàm trả về chuỗi url post action
    function FindPostUrl(tabid) {
        switch (tabid) {

            // Tab Thông Tin ứng viên
            case "child_Rec-1":
                return '@_Hrm_Rec_Web' + "Rec_Candidate/Tab_ResultView";
                break;
            case "child_Rec-2":
                return '@_Hrm_Rec_Web' + "Rec_Candidate/Tab_DetailInfoView";
                break;
            case "child_Rec-3":
                return '@_Hrm_Rec_Web' + "Rec_Candidate/Tab_RecruitmentHistory";
                break;
            case "child_Rec-4":
                return '@_Hrm_Rec_Web' + "Rec_Candidate/Tab_Interview";
                break;
            case "child_Rec-5":
                return '@_Hrm_Rec_Web' + "Rec_Candidate/Tab_CandidateQualification";
                break;
            case "child_Rec-6":
                return '@_Hrm_Rec_Web' + "Rec_Candidate/Tab_RecruitmentRelative";
                break;
            case "child_Rec-7":
                return '@_Hrm_Rec_Web' + "Rec_Candidate/Tab_CandidateHistory";
                break;
            default:
                return '@_Hrm_Rec_Web' + "Rec_Candidate/Tab_DetailInfoView";
        }

    };


    //Load content cho tab đang select
    function LoadForm() {
        //Loại bỏ lần load đầu tiên khi tabIndex==0
        if (tabID.split(/[\s-]+/)[tabID.split(/[\s-]+/).length - 1] == "0")
            return;

        //Mở hiệu ứng load form
        ShowHre_ProgressBar();

        var url = FindPostUrl(tabID);
        $.ajax({
            url: url,
            data: { id: SelectID },
            type: 'POST',
            async: false,
            success: function (data) {
                $("#" + tabID).html(data);
                CloseHre_ProgressBar();
                //ReadGrid(@ConstantDisplay.HRM_Rec_GeneralCandidate_GridName);
            },
            error: function (data) {
                CloseHre_ProgressBar();
                
            }
        });


        //đóng hiệu ứng load form

    };

    //Xử lý ẩn hiện tabbar khi click btn
    function EvenClickBtn(id) {
        if (id != isSelectTabId) {
            $("#" + isSelectTabId).hide();
            $("#" + id).show();
            isSelectTabId = id;
        }

        //lấy lại tab Index đã lưu trong sự kiện changetab
        UpdateTabIndex();

        //Kiểm tra xem trong quá khứ đã load form này chưa
        if (IsFormLoaded(isSelectTabId + "-" + tabIndex)) {
            return;
        }

        //load lại form tương tứng
        if (tabIndex != -1) {
            tabID = isSelectTabId + "-" + tabIndex;
            LoadForm();
        }
    };

    //lấy lại tab Index đã lưu trong sự kiện changetab
    function UpdateTabIndex() {
        //lấy lại tab Index đã lưu trong sự kiện changetab
        if (isSelectTabId == "child_Rec") {
            tabIndex = IndexHre;
        }
    };

    //Kiểm tra xem tab đã được load tương ứng với Candidate đang select hay chưa
    //nếu chưa thì gán lại Candidateid cho tab đó luôn
    function IsFormLoaded(tabid) {
        for (var i = 0; i < arrChildTab.length; i++) {
            if (arrChildTab[i][0] == tabid) {
                if (arrChildTab[i][1] == SelectID)
                    return true;
                //Gán id vào tab và trả về false để load dữ liệu cho tab
                arrChildTab[i][1] = SelectID;
                return false;
            }
        }
    }

</script>

<style>
    .textbox {
        background: white;
        border: 1px solid #c5c5c5;
        border-radius: 3px;
        color: #2e2e2e;
        outline: none;
        height: 25px;
        width: 260px;
        position: relative;
        z-index: 0;
        padding-left: 5px;
    }
</style>


