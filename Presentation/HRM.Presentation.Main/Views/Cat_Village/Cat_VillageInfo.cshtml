@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Category.Models
@using HRM.Presentation.UI.Controls.Kendo

@model HRM.Presentation.Category.Models.Cat_VillageModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
}

<script>
    //var Validator = CheckValidate();
    SetFieldRequired();

    function onSave() {
      //  if (CheckValidate(data)) {
        onSaveAndContinue($('#form_Cat_Village'), '@_hrm_Hr_Service', 'api/Cat_Village/', '@ConstantControlName.HRM_Category_Village_Grid_Name', '@ConstantControlName.HRM_Category_Village_PopUp_Name');
       // }
        return false;
    }

    function onSaveClose() {
      //  if (CheckValidate(data)) {
        onSaveAndClose($('#form_Cat_Village'), '@_hrm_Hr_Service', 'api/Cat_Village/', '@ConstantControlName.HRM_Category_Village_Grid_Name', '@ConstantControlName.HRM_Category_Village_PopUp_Name');
       // }
        return false;
    }
    function onSaveDataPopUp() {

        //    if (CheckValidate(data)) {
        //   if (!checkDuplicationCode()) {
        onlySave($('#form_Cat_Village'), '@_hrm_Hr_Service', 'api/Cat_Village/', '@ConstantControlName.HRM_Category_Village_Grid_Name'); return false;
        //    }
        // }
    }

</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Cat_Village" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div id="div4">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">
                        @{
                        var _Code = new TextBoxBuilderInfo()
                        {
                            Name = "VillageInfo_Code",
                            CssStyle = "width:300px"
                        };
                        if (Model != null)
                        {
                            _Code.Value = Model.Code == null ? string.Empty : Model.Code;
                        }
                        }
                        @(Html.VnrTextBoxFor(model => model.Code, _Code))
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div5">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.VillageName)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _VillageName = new TextBoxBuilderInfo()
                            {
                                Name = "VillageInfo_VillageName",
                                CssStyle = "width:300px"
                            };
                            if (Model != null)
                            {
                                _VillageName.Value = Model.VillageName == null ? string.Empty : Model.VillageName;
                            }
                        }
                        @(Html.VnrTextBoxFor(model => model.VillageName, _VillageName))
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div class="DivContentTitleValue" id="div13">
                    <div class="FieldTitle150">
                        @Html.VnrLabelForNoneIcon(model => model.ProvinceID)
                    </div>
                    <div class="FieldValue">
                        @{
                                var _ProvinceID = new ComboBoxBuilderInfo()
                            {
                                Name = "VillageInfo_ProvinceID",
                                StyleCss = "Width: 300px",
                                DataTextField = "ProvinceName",
                                DataValueField = "ID",
                                ServerFilter = true,
                                FilterType = FilterType.Contains,
                                Url = _hrm_Hr_Service + "Cat_GetData/GetMultiProvince/",
                                //CascadeFrom = "TCountryID",
                                //Data = "filterProvinces",
                                //Autobind = false,
                                Placeholder = ConstantDisplay.HRM_Category_SelectProvince.TranslateString(),
                                Value = Model == null ? string.Empty : Model.ProvinceID.ToString()
                            };
                        }
                        @Html.VnrComboBoxFor(model => model.ProvinceID, _ProvinceID).Text(Model == null ? string.Empty : Model.ProvinceName)

                    </div>
                </div>
                <div class="DivContentTitleValue" id="div13">
                    <div class="FieldTitle150">
                        @Html.VnrLabelForNoneIcon(model => model.DistrictID)
                    </div>
                    <div class="FieldValue">
                        <script>
                            function filterDistricts() {
                                return {
                                    province: $("#VillageInfo_ProvinceID").val(),
                                    districtFilter: $("#VillageInfo_DistrictID").data("kendoComboBox").input.val()
                                };
                            }
                        </script>
                        @{
                        var _DistrictID = new ComboBoxBuilderInfo()
                            {
                                Name = "VillageInfo_DistrictID",
                                DataTextField = "DistrictName",
                                DataValueField = "ID",
                                FilterType = FilterType.Contains,
                                Url = _hrm_Hr_Service + "Cat_GetData/GetDistrictCascading/",
                                CascadeFrom = "VillageInfo_ProvinceID",
                                ServerFilter = true,
                                StyleCss = "Width: 300px",
                                Data = "filterDistricts",
                                Placeholder = ConstantDisplay.HRM_Category_SelectDistrict.TranslateString(),
                                Value = Model == null ? string.Empty : Model.DistrictID.ToString()
                            };
                        }
                        @Html.VnrComboBoxFor(model => model.DistrictID, _DistrictID).Text(Model == null ? string.Empty : Model.DistrictName)
                    </div>
                </div>

                <div id="div7">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Notes)
                    </div>
                    <div class="FieldValue">
                        @(Html.VnrTextAreaFor(model => model.Notes, "width:500px;height:100px;"))
                    </div>
                    <div style="clear: both;"></div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-CatVillage", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-CatVillage", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-CatVillage", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })

                    </div>
                </div>
            </td>
        </tr>
    </table>
}