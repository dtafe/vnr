@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.HrmSystem.Models
@model System.Xml.XmlNodeList
@{
    Layout = null;
    var _hrm_Att_Web = ConstantPathWeb.Hrm_Att_Web;
    var _hrm_Att_Service = ConstantPathWeb.Hrm_Att_Service;
    var _hrm_Cat_Service = ConstantPathWeb.Hrm_Cat_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Sys_Web = ConstantPathWeb.Hrm_Sys_Web;
}


<script type="text/javascript">
    function RenderControl_DateTime(e) {
        var value = ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', e.sender._oldText);
        var id = e.sender.element[0].id;
        ListObjectValue[parseInt(id.split('_')[2]) - 1] = id.split('_')[1] + "/" + value;
    };
    function RenderControl_Numberic(e) {
        var value = e.sender.value();
        var id = e.sender.options.name;
        ListObjectValue[parseInt(id.split('_')[2]) - 1] = id.split('_')[1] + "/" + value;
    };
    $(".RenderControl_CheckBox").change(function (e) {
        var value = e.currentTarget.checked;
        var id = e.currentTarget.id;
       
    });
    $(".RenderControl_TextBox").change(function (e) {
        var value = e.currentTarget.value;
        var id = e.currentTarget.id;
        ListObjectValue[parseInt(id.split('_')[2]) - 1] = id.split('_')[1] + "/" + value;
    });

    function EvenDropDownListRenderControl(e) {
        var value = e.currentTarget.checked;
        var id = e.currentTarget.id;
        ListObjectValue[parseInt(id.split('_')[2]) - 1] = id.split('_')[1] + "/" + value;
    };


    
</script>
@{
    if (Model != null)
    {
        int index = 0;
        foreach (System.Xml.XmlNode i in Model)
        {
            index++;
            string controlType = i[Rep_ControlModel.FieldNames.ControlType].InnerText;
            string name = i[Rep_ControlModel.FieldNames.Name].InnerText;
            string ID=i[Rep_ControlModel.FieldNames.ConditionItemID].InnerText;
            string MasterID=i[Rep_ControlModel.FieldNames.MasterID].InnerText;
            string TableName=i[Rep_ControlModel.FieldNames.TableName].InnerText;
            string IsEnum=i[Rep_ControlModel.FieldNames.IsEnum].InnerText;
            string ValueField = i[Rep_ControlModel.FieldNames.ValueField].InnerText;
            string TextField = i[Rep_ControlModel.FieldNames.TextField].InnerText;
            
            if (controlType == CustomReportControl.CheckBox.ToString())
            {
                <text>
                    <div style="float:left; width:400px;">
                        <label>@Html.Raw(name)</label>
                        @Html.CheckBox("a_"+ID + "_" + index.ToString(), false, new { @class = "k-textbox RenderControl_CheckBox" })
                    </div>
                </text>
            }
            else if (controlType == CustomReportControl.Combobox.ToString())
            {
                <text>
                    <script type="text/javascript">
                        function ReadDataRenderControl() {
                            return {
                                MasterID: '@MasterID',
                                TableName: '@TableName',
                                IsEnum: '@IsEnum',
                                ValueField:'@ValueField',
                                TextField: '@TextField',
                            };
                        };

                    </script>
                    <div style="float:left; width:400px;">
                        <label>@Html.Raw(name)</label>
                        @Html.TextBox("a_" + ID + "_" + index.ToString())
                        @{
                            var dropdown = new DropDownListBuilderInfo()
                            {
                                Name = "a_" + ID + "_" + index.ToString(),
                                DataValueField="Value",
                                DataTextField="Text",
                                Url = _hrm_Sys_Service+"Sys_GetData/GetDataRenderControl?MasterID="+MasterID,
                                Data="ReadDataRenderControl",
                                EventChange="EvenDropDownListRenderControl",
                                Autobind=true,
                            };
                        }
                        @Html.VnrDropDownList(dropdown)
                    </div>
                </text>
            }
            else if (controlType == CustomReportControl.DateFromDateTo.ToString())
            {
                <text>
                    <div style="float:left; width:450px;">
                        <label>@Html.Raw(name)</label>
                        @{
                            var dateFrom = new DatePickerBuilderInfo()
                            {
                                Name = "a_" + ID + "_" + index.ToString(),
                                StyleCss = "width:150px;",
                                Placeholder = ConstantDisplay.HRM_HR_Profile_DateTo.TranslateString(),
                            };
                            index++;
                        }
                        @Html.VnrDatePicker(dateFrom).Events(m => m.Change("RenderControl_DateTime"))

                        @{
                            var dateTo = new DatePickerBuilderInfo()
                            {
                                Name = "a_" + ID + "_" + index.ToString(),
                                StyleCss = "width:150px;",
                                Placeholder = ConstantDisplay.HRM_HR_Profile_DateTo.TranslateString(),
                            };
                        }
                        @Html.VnrDatePicker(dateTo).Events(m => m.Change("RenderControl_DateTime"))
                    </div>
                </text>
            }
            else if (controlType == CustomReportControl.Datetime.ToString())
            {
                <text>
                    <div style="float:left; width:400px;">
                        <label>@Html.Raw(name)</label>
                        @{
                            var datetime = new DateTimePickerBuilderInfo()
                            {
                                Name = "a_" + ID + "_" + index.ToString(),
                                StyleCss = "width:150px;",
                                Placeholder = ConstantDisplay.HRM_HR_Profile_DateTo.TranslateString(),
                            };
                        }
                        @Html.VnrDateTimePicker(datetime).Events(m => m.Change("RenderControl_DateTime"))
                    </div>
                </text>
            }
            else if (controlType == CustomReportControl.Numberic.ToString())
            {
                <text>
                    <div style="float:left; width:400px;">
                        <label>@Html.Raw(name)</label>
                        @{
                var numberic = new NumericTextBoxBuilderInfo<double>()
                {
                    Name = "a_" + ID + "_" + index.ToString(),
                    Format = ConstantFormat.HRM_Format_Money,
                };
                        }
                        @Html.VnrNumericTextBox(numberic).Events(m => m.Change("RenderControl_Numberic"))
                    </div>
                </text>
            }
            else if (controlType == CustomReportControl.Org.ToString())
            {
                <text>
                    <div style="float:left; width:400px;">
                        <label>@Html.Raw(name)</label>
                        @{
                            var Control_Tree = new TreeViewDropdDownBuilderInfo()
                            {
                                IsShowCheckBox = false,
                                LoadOnDemand = false,
                                SetFieldID = "a_" + ID + "_" + index.ToString(),
                                SetFieldName = "a_" + ID + "_" + index.ToString(),
                            };
                        }
                        @Html.Partial("EditorTemplates/OrgTreeViewDropDown", Control_Tree)
                        @Html.Hidden("a_" + ID + "_" + index.ToString(), "", new { @class = "RenderControl_TextBox" })
                    </div>
                </text>
            }
            else
            {
                <text>
                    <div style="float:left; width:400px;">
                        <label>@Html.Raw(name)</label>
                        @Html.TextBox("a_" + ID + "_" + index.ToString(), "", new { @class = "k-textbox RenderControl_TextBox" })
                    </div>
                </text>
            }
        }
    }

}