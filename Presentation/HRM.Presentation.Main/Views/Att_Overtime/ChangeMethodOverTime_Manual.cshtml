@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.UI.Controls.Kendo.DropDownList
@using HRM.Presentation.UI.Controls.Kendo.MultiSelect

@using HRM.Infrastructure.Utilities
@using System.Collections;
@model HRM.Presentation.Attendance.Models.Att_OvertimeModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
}

<script type="text/javascript">
    
    var registerHours = '@(Model != null ? Model.RegisterHours : 0)';
    var typeoff = '@(Model != null ? Model.OvertimeTypeTimeOffRateLit.Replace("%","") : "0")';
    $("#HourToTimeOff").keyup(function (e) {
        
        var timeoff = $("#HourToTimeOff").val();
        var time = $("#TimeRegister").val();
        if (!isNaN(timeoff) && timeoff != "") {
            $("#TimeRegister").val(parseFloat(registerHours) - parseFloat(timeoff));
            var t = (parseFloat(registerHours) - parseFloat($("#TimeRegister").val())) / 100 * typeoff;
            $("#TimeOffReal").val(t);
        }
        else {
            $('#TimeOffReal').val('0');
            $("#HourToTimeOff").val('0');
            $("#TimeRegister").val('0');
        }
    });
    $("#TimeRegister").keyup(function (e) {
        
        var timeoff = $("#HourToTimeOff").val();
        var time = $("#TimeRegister").val();

        if (!isNaN(time) && time != "") {
            $("#HourToTimeOff").val(parseFloat(registerHours) - parseFloat(time));
            var t = (parseFloat(registerHours) - parseFloat(time)) / 100 * typeoff;
            $("#TimeOffReal").val(t);
        }
        else {
            $('#TimeOffReal').val('0');
            $("#HourToTimeOff").val('0');
            $("#TimeRegister").val('0');
        }
    });

    $("#TimeOffReal").keyup(function (e) {
        
        var timeoff = $("#HourToTimeOff").val();
        var time = $("#TimeRegister").val();
        var timeoffreal = $("#TimeOffReal").val();
        if (!isNaN(timeoffreal) && timeoffreal != "") {
            if (typeoff == 0) {
                $("#HourToTimeOff").val(0);
                $("#TimeRegister").val(0);
            }
            else {
                var t = timeoffreal / typeoff * 100;
                $("#HourToTimeOff").val(t);
                $("#TimeRegister").val(registerHours - t);
            }
        }
        else {
            $('#TimeOffReal').val('0');
            $("#HourToTimeOff").val('0');
            $("#TimeRegister").val('0');
        }
    });






    function onSaveClose() {
        $.ajax({
            type: 'POST',
            url: '@_hrm_Hr_Service' + 'Att_GetData/ChangeMethodOverTime_Manual',
            data: $('#form_Att_OvertimeModel').serializeArray(),
            dataType: 'json',
            async: false,
            success: function (returnValue) {
                ShowNotificationProcessor("Lưu Thành Công !");//Chưa Dịch
                $("#windowAtt_ChangeMethodOverTime_Manual").data("kendoWindow").close();
                ReadGrid("gridAtt_Overtime");
            },
            error: function (data) {
                ShowNotificationProcessor("Lỗi !");//Chưa Dịch
                $("#windowAtt_ChangeMethodOverTime_Manual").data("kendoWindow").close();
            }
        });
    }
    function onSaveDataPopUp() {
        $.ajax({
            type: 'POST',
            url: '@_hrm_Hr_Service' + 'Att_GetData/ChangeMethodOverTime_Manual',
            data: $('#form_Att_OvertimeModel').serializeArray(),
            dataType: 'json',
            async: false,
            success: function (returnValue) {
                ShowNotificationProcessor("Lưu Thành Công !");//Chưa Dịch
                ReadGrid("gridAtt_Overtime");
            },
            error: function (data) {
                ShowNotificationProcessor("Lỗi !");//Chưa Dịch
                $("#windowAtt_ChangeMethodOverTime_Manual").data("kendoWindow").close();
            }
        });
        
    }


</script>

@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Att_OvertimeModel" }))
{
    @Html.ValidationSummary(false)
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.ProfileID)
    @Html.HiddenFor(model => model.OvertimeTypeID)
    <div class="VnRMain">
        <table style="width:100%">
            <tbody>
                <tr>
                    <td class="Box_Top_Left"></td>
                    <td valign="middle" class="Box_Top_Mid"></td>
                    <td class="Box_Top_Right"></td>
                </tr>
                <tr>
                    <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                    <td valign="top" style="float:left;background-color: #ffffff;">
                        <div>
                            <div id="div9">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.ProfileName)
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrLabel(Model.ProfileName)
                                  </div>
                            </div>
                            <div id="div8">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(m => m.WorkDate)
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrLabelFor(m=>m.WorkDate)
                                </div>
                            </div>
                            <div id="div7">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.OvertimeTypeName)
                                 </div>
                                <div class="FieldValue">
                                   @Html.VnrLabel(Model.OvertimeTypeName)

                                  </div>
                                <br />
                            </div>
                          
                        </div>
                        <div>


                            <div id="div44">
                                <div class="FieldTitle">
                                    Ngày Nghỉ Bù
                                </div>
                                <div class="FieldValue">
                                    @{
                                        DatePickerBuilderInfo LeaveDay1 = new DatePickerBuilderInfo() { };
                                    }
                                    @Html.VnrDatePickerFor(m => m.LeaveDay1, LeaveDay1)
                                </div>
                            </div>
                            <div id="div44">
                                <div class="FieldTitle">
                                    Ngày Nghỉ Bù Tiếp Theo
                                </div>
                                <div class="FieldValue">
                                    @{
    DatePickerBuilderInfo LeaveDay2 = new DatePickerBuilderInfo() { };
                                    }
                                    @Html.VnrDatePickerFor(m => m.LeaveDay2, LeaveDay2)
                                </div>
                            </div>

                        </div>

                    </td>
                    <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                    <td>
                        <div id="div77">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(m => m.TimeStartOverTime)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrLabel(Model.TimeStartOverTime)
                            </div>
                        </div>
                        <div id="div71">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(m => m.OvertimeTypeTimeOffRateLit)
                            </div>
                            <div class="FieldValue">
                              @Html.VnrLabel(Model.OvertimeTypeTimeOffRateLit)
                            </div>
                        </div>
                        <div id="div29">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(m => m.TimeOffReal)
                            </div>
                            <div class="FieldValue">
                                @{
    TextBoxBuilderInfo TimeOffReal = new TextBoxBuilderInfo()
                                    {
                                        Name = "TimeOffReal",
                                        Value = Model.TimeOffReal.ToString(),
                                    };
                                }
                                @Html.VnrTextBoxFor(model => model.TimeOffReal, TimeOffReal)
                            </div>
                        </div>

                        <div id="div2">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(m => m.HourToTimeOff)
                            </div>
                            <div class="FieldValue">
                                @{
    TextBoxBuilderInfo HourToTimeOff = new TextBoxBuilderInfo()
    {
        Name = "HourToTimeOff",
        Value = Model.HourToTimeOff.ToString(),
    };
                                }
                                @Html.VnrTextBoxFor(model => model.HourToTimeOff, HourToTimeOff)
                            </div>
                        </div>
                        <div id="div2">
                            <div class="FieldTitle150">
                                @Html.VnrLabelFor(mode => mode.TimeRegister)
                            </div>
                            <div class="FieldValue">
                                @{
    TextBoxBuilderInfo TimeRegister = new TextBoxBuilderInfo()
    {
        Name = "TimeRegister",
        Value = Model.TimeRegister.ToString(),
    };
                                }
                                @Html.VnrTextBoxFor(model => model.TimeRegister, TimeRegister)
                            </div>
                            <br />
                        </div>

                        <div id="div44">
                            <div class="FieldTitle150">
                                Không Tích Lũy Cho Dữ Liệu Tăng Ca Trả Tiền
                            </div>
                            <div class="FieldValue">
                             @{
                                 CheckBoxBuilderInfo checkbox=new CheckBoxBuilderInfo()
                                 {
                                     
                                 };
                             }
                                @Html.VnrCheckBoxFor(m => m.IsNonOvertime, checkbox)
                            </div>
                        </div>



                    </td>
                </tr>
                <tr>
                    <td style="padding-top:2px; padding-bottom:10px;">
                        <div class="LineFooterCommandEdit">
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                    <td valign="top" style="float:left;background-color: #ffffff;">
                        <div id="div9">
                            <div class="FieldTitle150">

                            </div>
                            <div class="FieldValue">
                                @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-OrgStructure", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                                @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-catOrgStructure", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            </div>
                            <div class="Box_Mid_Left"></div>

                        </div>

                    </td>

                </tr>
            </tbody>
        </table>
    </div>
}