@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using System.Collections;

@model HRM.Presentation.Attendance.Models.Att_OvertimeUpdateModel

@{
    Layout = null;
   
    var lineId = Model == null ? Guid.Empty : Model.ID;
  
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    

    IList<SelectListItem> listMethodPayment = Enum.GetValues(typeof(EnumDropDown.MethodPayment))
         .Cast<EnumDropDown.MethodPayment>()
         .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
         .ToList();

    IList<SelectListItem> listStatus = Enum.GetValues(typeof(EnumDropDown.OverTimeStatus))
       .Cast<EnumDropDown.OverTimeStatus>()
       .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
       .ToList();
}
<script>
    $(document).ready(function () {
        $.ajax({
            type: 'POST',
            url: '@_hrm_Hr_Service' + 'Att_GetData/GetConfigAproveOverTime',
            data: {},
            dataType: 'json',
            success: function (data) {
                debugger;
                if (data != undefined && data > 2) {
                    $("#infoUserApproveID3").show();
                }
                else {
                    $("#infoUserApproveID3").hide();
                }
            },
            error: function () {
                alert('error');
            }
        });
    });

    function onSaveClose() {
        onSaveAndClose($('#form_att_overtime'), '@_hrm_Hr_Service', 'api/Att_OvertimeEdit/', '@ConstantControlName.HRM_Attendance_Overtime_Grid_Name', '@ConstantControlName.HRM_Attendance_Overtime_PopUp_Name'); return false;

    }
    function onSaveDataPopUp() {
        onlySave($('#form_att_overtime'), '@_hrm_Hr_Service', 'api/Att_OvertimeEdit/', '@ConstantControlName.HRM_Attendance_Overtime_Grid_Name'); return false;
    }


</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_att_overtime" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div>
               
                        <div id="div2">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.WorkDate)
                           
                            </div>
                            <div class="FieldValue">
                                @{
                                    TextBoxBuilderInfo txt_WorkDate = new TextBoxBuilderInfo()
                                    {
                                        Value = (Model != null && Model.WorkDate != null) ? Model.WorkDate.ToString(ConstantFormat.HRM_Format_DayMonthYear_HoursMinSecond) : string.Empty,
                                        Disabled = true,
                                        Width=100
                                    };
                                }
                                
                              
                                @Html.VnrTextBoxFor(model => model.WorkDate, txt_WorkDate)  @Html.HiddenFor(model => model.WorkDate)
                            </div>
                        </div>
                        <div id="div2">
                            <div class="FieldTitle">

                                @Html.VnrLabelFor(mode => mode.ShiftID)
                            </div>
                            <div class="FieldValue">

                                @{
                                    TextBoxBuilderInfo _textboxShiftName = new TextBoxBuilderInfo()
                                    {
                                        Value=(Model!=null && Model.ShiftName != null)?Model.ShiftName.ToString():string.Empty,
                                        Disabled=true
                                    };
                                }
                                @Html.VnrTextBoxFor(model => model.ShiftName, _textboxShiftName)  @Html.HiddenFor(model => model.ShiftID)
                            </div>
                            <br />
                        </div>
                        <div id="div3">

                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.ProfileName) 
                            </div>
                            <div class="FieldValue">
                                @{
                                    TextBoxBuilderInfo _textboxProfileName = new TextBoxBuilderInfo()
                                    {
                                        Value=(Model!=null && Model.ProfileName != null)?Model.ProfileName:string.Empty,
                                        Disabled=true
                                    };
                                }
                                @(Html.VnrTextBoxFor(model => model.ProfileName, _textboxProfileName))@Html.HiddenFor(model => model.ProfileID)
                            </div>
                            <br />
                        </div>
                        <div id="div5">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.RegisterHours)
                            </div>
                            <div class="FieldValue">
                                @{
                                    TextBoxBuilderInfo _textboxRegisterHours = new TextBoxBuilderInfo()
                                    {
                                        Value=(Model!=null && Model.RegisterHours != null )?Model.RegisterHours.ToString():string.Empty,
                                         Disabled=true
                                    };
                                }
                                @(Html.VnrTextBoxFor(model => model.RegisterHours, _textboxRegisterHours))@Html.HiddenFor(model => model.RegisterHours)
                            </div>
                            <br />
                        </div>
                        <div id="div6">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.MethodPayment)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var dropdownMethodPayment = new DropDownListBuilderInfo()
                                    {
                                        Name = "MethodPayment",
                                        DataTextField = "Text",
                                        DataValueField = "Value",
                                        BindTo = listMethodPayment,
                                        OptionLabel = @ConstantDisplay.HRM_Attendance_SelectMethodPayment.TranslateString(),
                                        StyleCss = "width:200px"
                                    };
                                }
                                @(Html.VnrDropDownListFor(mode => mode.MethodPayment, dropdownMethodPayment))
                                @Html.ValidationMessageFor(model => model.MethodPayment)
                            </div>
                            <br />
                        </div>
                        <div id="div7">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.OvertimeTypeID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var dropdownOvertimeTypeID = new DropDownListBuilderInfo()
                                    {
                                        Name = "AttOvertimeInfo_OvertimeTypeID",
                                        DataTextField = "OvertimeTypeName",
                                        DataValueField = "ID",
                                        Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiOvertimeType",
                                        Value = @Html.DisplayFor(mode => mode.OvertimeTypeID).ToString(),
                                        OptionLabel = @ConstantDisplay.HRM_Attendance_SelectOvertimeType.TranslateString(),
                                        StyleCss = "width:200px"
                                    };
                                }
                                @(Html.VnrDropDownListFor(mode => mode.OvertimeTypeID, dropdownOvertimeTypeID))
                                @Html.ValidationMessageFor(model => model.OvertimeTypeID)
                            </div>
                            <br />
                        </div>
                        <div id="div13">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.Status)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var dropdownStatus = new DropDownListBuilderInfo()
                                    {
                                        Name = "AttOvertimeInfo_Status",
                                        DataTextField = "Text",
                                        DataValueField = "Value",
                                        BindTo = listStatus,
                                        OptionLabel = @ConstantDisplay.HRM_Category_SelectStatus.TranslateString(),
                                        StyleCss = "width:200px"
                                    };
                                }
                                @(Html.VnrDropDownListFor(mode => mode.Status, dropdownStatus))
                               
                            </div>
                            <br />
                        </div>
                   
                  
                        <div id="div7">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.ReasonOT)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextAreaFor(model => model.ReasonOT)
                                @Html.ValidationMessageFor(model => model.ReasonOT)
                            </div>
                            <br />
                        </div>
                        <div id="div8">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.UserApproveID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    IEnumerable valueUserApprove = new string[] { };
                                    if (Model != null)
                                    {
                                        valueUserApprove = new[] { new { UserInfoName = Model.UserApproveName1, ID = Model.UserApproveID } };
                                    }
                                }
                                @{
                                    var multiSelectUserApproveID = new MultiSelectBuilderInfo()
                                    {
                                        Name = "UserApproveID",
                                        DataTextField = "UserInfoName",
                                        DataValueField = "ID",
                                        Url = @_hrm_Sys_Service + "Sys_GetData/GetMultiUser",
                                        Placeholder = ConstantDisplay.HRM_System_SelectUserApprove.TranslateString(),
                                        MaxSelectedItems = 1,
                                        Value = valueUserApprove
                                    };
                                }
                                @(Html.VnrMultiSelectFor(mode => mode.UserApproveID, multiSelectUserApproveID))
                            </div>
                            <br />
                        </div>
                    <div id="infoUserApproveID3">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.UserApproveID3)
                        </div>
                        <div class="FieldValue">
                            @{
                                    IEnumerable valueUserApprove3 = new string[] { };
                                    if (Model != null)
                                    {
                                        valueUserApprove3 = new[] { new { UserInfoName = Model.UserApproveName3, ID = Model.UserApproveID3 } };
                                    }
                            }
                            @{
                            var _UserApproveID3 = new MultiSelectBuilderInfo()
                            {
                                Name = "UserApproveID3",
                                DataTextField = "UserInfoName",
                                DataValueField = "ID",
                                Url = @_hrm_Sys_Service + "Sys_GetData/GetMultiUser",
                                Placeholder = ConstantDisplay.HRM_System_SelectUserApprove.TranslateString(),
                                MaxSelectedItems = 1,
                                Value = valueUserApprove3
                            };
                            }
                            @(Html.VnrMultiSelectFor(mode => mode.UserApproveID3, _UserApproveID3))
                        </div>
                        <br />
                    </div>

                        <div id="div9">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.UserApproveID2)
                            </div>
                            <div class="FieldValue">
                                @{
                                    IEnumerable valueUserApprove2 = new string[] { };
                                    if (Model != null)
                                    {
                                        valueUserApprove2 = new[] { new { UserInfoName = Model.UserApproveName2, ID = Model.UserApproveID2 } };
                                    }
                                }
                                @{
                                    var multiSelectUserApproveID2 = new MultiSelectBuilderInfo()
                                    {
                                        Name = "UserApproveID2",
                                        DataTextField = "UserInfoName",
                                        DataValueField = "ID",
                                        Url = @_hrm_Sys_Service + "Sys_GetData/GetMultiUser",
                                        Placeholder = ConstantDisplay.HRM_System_SelectUserApprove.TranslateString(),
                                        MaxSelectedItems = 1,
                                        Value = valueUserApprove2
                                    };
                                }
                                @(Html.VnrMultiSelectFor(mode => mode.UserApproveID2, multiSelectUserApproveID2))
                            </div>
                            <br />
                        </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle">
                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-AttOvertime", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-AttOvertime", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
    
                        
   
}
