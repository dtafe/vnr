@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@model HRM.Presentation.Attendance.Models.Att_OvertimeModel

@{
    ViewBag.Title = "CatCategory";
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
}

<script>

    function onSave() {
                onSaveAndContinue($('#form_att_overtime_changeMethodPayment'), '@_hrm_Hr_Service', 'api/Att_Overtime/', 'gridAtt_Overtime', 'windowAtt_ChangeMethodPayment'); return false;
    }
    function onSaveClose() {
                onSaveAndClose($('#form_att_overtime_changeMethodPayment'), '@_hrm_Hr_Service', 'api/Att_Overtime/', 'gridAtt_Overtime', 'windowAtt_ChangeMethodPayment'); return false;
    }
    function onSaveDataPopUp() {
                onlySave($('#form_att_overtime_changeMethodPayment'), '@_hrm_Hr_Service', 'api/Att_Overtime/', 'gridAtt_Overtime'); return false;
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_att_overtime_changeMethodPayment" }))
{
    @Html.HiddenFor(model => model.ID)


     <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.ProfileName)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.ProfileName, "width:300px")
                        @Html.ValidationMessageFor(model => model.ProfileName)
                    </div>
                </div>
                <div id="div2">
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.WorkDate)
                        @Html.HiddenFor(mode => mode.ID)
                    </div>
                    <div class="FieldValue">
                        @{
                            var datetimepickerWorkDate = new DateTimePickerBuilderInfo()
                            {
                                Value = @Html.DisplayFor(mode => mode.WorkDate).ToString(),
                                Format = ConstantFormat.HRM_Format_DayMonthYear_HoursMin.TranslateString(),
                                Enable = false
                            };
                        }
                        @Html.VnrDateTimePickerFor(model => model.WorkDate, datetimepickerWorkDate)
                        @Html.ValidationMessageFor(model => model.WorkDate)
                    </div>
                </div>



                <div id="div7">
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.OvertimeTypeID)
                    </div>
                    <div class="FieldValue">
                        @{
                        var dropdownOvertimeTypeID = new DropDownListBuilderInfo()
                        {
                            Name = "OvertimeTypeID",
                            DataTextField = "OvertimeTypeName",
                            DataValueField = "ID",
                            Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiOvertimeType",
                            Value = @Html.DisplayFor(mode => mode.OvertimeTypeID).ToString(),
                            OptionLabel = @ConstantDisplay.HRM_Attendance_SelectOvertimeType.TranslateString(),
                            Enable = false,
                            StyleCss = "width:170px"
                        };
                        }
                        @(Html.VnrDropDownListFor(mode => mode.OvertimeTypeID, dropdownOvertimeTypeID))
                        @Html.ValidationMessageFor(model => model.OvertimeTypeID)
                    </div>
                    <br />
                </div>
                <div id="div5">
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.RegisterHours)
                    </div>
                    <div class="FieldValue">
                        @{
                                var numericTextBoxApproveHours = new NumericTextBoxBuilderInfo<double>()
                                {
                                    StyleCss = "width:170px;"
                                };
                        }
                        @Html.VnrNumericTextBoxFor(model => model.ApproveHours, numericTextBoxApproveHours)
                        @Html.ValidationMessageFor(model => model.ApproveHours)
                    </div>
                    <br />
                </div>

            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle">

                    </div>
                    <div class="FieldValue">
                       @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-Category", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-catCategory", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-catCategory", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
 </table>
}

