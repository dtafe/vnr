@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.UI.Controls.Kendo.DropDownList
@using HRM.Presentation.UI.Controls.Kendo.MultiSelect

@using HRM.Infrastructure.Utilities
@using System.Collections;

@model HRM.Presentation.Attendance.Models.Att_OvertimeModel
@{

    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;

    IList<SelectListItem> listMethodPayment = Enum.GetValues(typeof(EnumDropDown.MethodPayment))
         .Cast<EnumDropDown.MethodPayment>()
         .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
         .ToList();

    IList<SelectListItem> listStatus = Enum.GetValues(typeof(EnumDropDown.OverTimeStatus))
       .Cast<EnumDropDown.OverTimeStatus>()
       .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
       .ToList();
}

@Html.ValidationSummary(false)
@Html.AntiForgeryToken()

<div class="VnRMain">
    <table style="width:100%">
        <tbody>
            <tr><td colspan="3" style=""></td></tr>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                <td valign="top" style="float:left;background-color: #ffffff;">
                    <div>
                        <div style="float:left; width:579px">
                            <div id="div2">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.WorkDate)
                                    @Html.HiddenFor(mode => mode.ID)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var datetimepickerWorkDate = new DateTimePickerBuilderInfo()
                                        {
                                            Value = @Html.DisplayFor(mode => mode.WorkDate).ToString(),
                                            Format = ConstantFormat.HRM_Format_DayMonthYear_HoursMin.TranslateString(),
                                            StyleCss="width:100px"
                                        };
                                    }
                                    @Html.VnrDateTimePickerFor(model => model.WorkDate, datetimepickerWorkDate)
                                    @Html.ValidationMessageFor(model => model.WorkDate)
                                </div>
                            </div>
                            <div id="div2">
                                <div class="FieldTitle">

                                    @Html.VnrLabelFor(mode => mode.ShiftID)
                                </div>
                                <div class="FieldValue">

                                    @{

                                        var _dropdownShiftID = new DropDownListBuilderInfo()
                                        {

                                            DataTextField = "ShiftName",
                                            DataValueField = "ID",
                                            Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiShift",
                                            OptionLabel = @ConstantDisplay.HRM_Category_SelectShift.TranslateString(),
                                            Autobind = true,
                                        };
                                    }
                                    @(Html.VnrDropDownListFor(mode => mode.ShiftID, _dropdownShiftID))
                                    <script>
                                        var dropdownlist = $("#ShiftID").data("kendoDropDownList");
                                        dropdownlist.value('@Html.DisplayFor(mode => mode.ShiftID).ToString()');
                                    </script>
                                </div>
                                <br />
                            </div>
                            <div id="div3">

                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.ProfileName)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        IEnumerable valueProfile = new string[] { };
                                        if (Model != null)
                                        {
                                            valueProfile = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
                                        }
                                    }
                                    @{
                                        var Profile = new MultiSelectBuilderInfo()
                                         {
                                             DataTextField = "ProfileName",
                                             DataValueField = "ID",
                                             Url = @_hrm_Hr_Service + "HrMultiSelect/GetMultiProfile",
                                             Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                                             MaxSelectedItems = 1,
                                             Value = valueProfile
                                         };
                                    }
                                    @(Html.VnrMultiSelectFor(mode => mode.ProfileID, Profile))

                                </div>
                                <br />
                            </div>
                            <div id="div5">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.RegisterHours)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var numericTextBoxRegisterHours = new NumericTextBoxBuilderInfo<double>()
                                        {
                                            StyleCss = "width:200px;"
                                        };
                                    }
                                    @Html.VnrNumericTextBoxFor(model => model.RegisterHours, numericTextBoxRegisterHours)
                                    @Html.ValidationMessageFor(model => model.RegisterHours)
                                </div>
                                <br />
                            </div>
                            <div id="div6">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.MethodPayment)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var dropdownMethodPayment = new DropDownListBuilderInfo()
                                        {
                                            Name = "MethodPayment",
                                            DataTextField = "Text",
                                            DataValueField = "Value",
                                            BindTo = listMethodPayment,
                                            OptionLabel = @ConstantDisplay.HRM_Attendance_SelectMethodPayment.TranslateString(),
                                            StyleCss = "width:200px"
                                        };
                                    }
                                    @(Html.VnrDropDownListFor(mode => mode.MethodPayment, dropdownMethodPayment))
                                    @Html.ValidationMessageFor(model => model.MethodPayment)
                                </div>
                                <br />
                            </div>
                            <div id="div7">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.OvertimeTypeID)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var dropdownOvertimeTypeID = new DropDownListBuilderInfo()
                                        {

                                            DataTextField = "OvertimeTypeName",
                                            DataValueField = "ID",
                                            Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiOvertimeType",
                                            Value = @Html.DisplayFor(mode => mode.OvertimeTypeID).ToString(),
                                            OptionLabel = @ConstantDisplay.HRM_Attendance_SelectOvertimeType.TranslateString(),
                                            StyleCss = "width:200px"
                                        };
                                    }
                                    @(Html.VnrDropDownListFor(mode => mode.OvertimeTypeID, dropdownOvertimeTypeID))
                                    @Html.ValidationMessageFor(model => model.OvertimeTypeID)
                                </div>
                                <br />
                            </div>
                            <div id="div13">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.Status)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        var dropdownStatus = new DropDownListBuilderInfo()
                                        {
                                            Name = "Status",
                                            DataTextField = "Text",
                                            DataValueField = "Value",
                                            BindTo = listStatus,
                                            OptionLabel = @ConstantDisplay.HRM_Category_SelectStatus.TranslateString(),
                                            StyleCss = "width:200px"
                                        };
                                    }
                                    @(Html.VnrDropDownListFor(mode => mode.Status, dropdownStatus))
                                    @Html.ValidationMessageFor(model => model.Status)
                                </div>
                                <br />
                            </div>
                        </div>
                        <div style="display: block; float: left; width: 600px">
                            <div id="div7">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.ReasonOT)
                                </div>
                                <div class="FieldValue">
                                    @Html.VnrTextAreaFor(model => model.ReasonOT)
                                    @Html.ValidationMessageFor(model => model.ReasonOT)
                                </div>
                                <br />
                            </div>
                            <div id="div8">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.UserApproveID)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        IEnumerable valueUserApprove = new string[] { };
                                        if (Model != null)
                                        {
                                            valueUserApprove = new[] { new { UserInfoName = Model.UserApproveName1, ID = Model.UserApproveID } };
                                        }
                                    }
                                    @{
                                        var multiSelectUserApproveID = new MultiSelectBuilderInfo()
                                        {
                                            Name = "UserApproveID",
                                            DataTextField = "UserInfoName",
                                            DataValueField = "ID",
                                            Url = @_hrm_Sys_Service + "Sys_GetData/GetMultiUser",
                                            Placeholder = ConstantDisplay.HRM_System_SelectUserApprove.TranslateString(),
                                            MaxSelectedItems = 1,
                                            Value = valueUserApprove
                                        };
                                    }
                                    @(Html.VnrMultiSelectFor(mode => mode.UserApproveID, multiSelectUserApproveID))
                                </div>
                                <br />
                            </div>

                            <div id="div9">
                                <div class="FieldTitle">
                                    @Html.VnrLabelFor(mode => mode.UserApproveID2)
                                </div>
                                <div class="FieldValue">
                                    @{
                                        IEnumerable valueUserApprove2 = new string[] { };
                                        if (Model != null)
                                        {
                                            valueUserApprove2 = new[] { new { UserInfoName = Model.UserApproveName2, ID = Model.UserApproveID2 } };
                                        }
                                    }
                                    @{
                                        var multiSelectUserApproveID2 = new MultiSelectBuilderInfo()
                                        {
                                            Name = "UserApproveID2",
                                            DataTextField = "UserInfoName",
                                            DataValueField = "ID",
                                            Url = @_hrm_Sys_Service + "Sys_GetData/GetMultiUser",
                                            Placeholder = ConstantDisplay.HRM_System_SelectUserApprove.TranslateString(),
                                            MaxSelectedItems = 1,
                                            Value = valueUserApprove2
                                        };
                                    }
                                    @(Html.VnrMultiSelectFor(mode => mode.UserApproveID2, multiSelectUserApproveID2))
                                </div>
                                <br />
                            </div>
                        </div>
                    </div>
                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
            <tr>
                <td class="Box_Bottom_Left"></td>
                <td class="Box_Bottom_Mid"></td>
                <td class="Box_Bottom_Right"></td>
            </tr>
        </tbody>
    </table>
    @Html.HiddenFor(mode => mode.ID)
</div>
