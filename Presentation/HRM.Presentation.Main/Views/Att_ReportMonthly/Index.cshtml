@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Attendance.Models
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Infrastructure.Security
@model HRM.Presentation.Attendance.Models.Att_ReportMonthlyModel

@{
    ViewBag.Title = "Index";
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var controller = ViewContext.RouteData.Values["Controller"].ToString();
    var action = ViewContext.RouteData.Values["Action"].ToString();
    var screen = controller + "/" + action;

}
@Html.Hidden("Screen", screen)
<script>
    SetFieldRequired();
    var checkedNodes = [];
    var isCreateTemplate = false;
    var isCreateTemplateForDynamicGrid = false;
    function filterFieldInfo(isExportDDL) {
        debugger;
        checkedNodes = [];
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes);
        var _Month = ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', "01/" + $("#ReportMonthly_Month").val());
        var elementPara = {
            OrgStructureID: checkedNodes.join(','),
            Month: _Month,
            IsCreateTemplate: isCreateTemplate,
            IsCreateTemplateForDynamicGrid: isCreateTemplateForDynamicGrid,
            UserExport: $('#UserLoginName').val()
        };
        if (isExportDDL == true) {
            elementPara["ExportId"] = $('#ddlScreenName').val();
        }
        return elementPara;
    }
    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        //Show Hide Panel
        ShowHidePanel();
        $("#btnSearch").click(function () {
            debugger;
            var _Month = $('#ReportMonthly_Month').val();
            if (_Month == '')
            {
                ShowNotificationProcessor('@ConstantDisplay.HRM_Common_Search_Month.TranslateString()' + " " + '@ConstantDisplay.HRM_Common_NotEmtpy.TranslateString()');
                return;
            }
            isCreateTemplate = false;
            isCreateTemplateForDynamicGrid = false;
            $.ajax({
                type: 'POST',
                url: '@_hrm_Hr_Service' + 'Att_GetData/GetReportMonthly',
                data: filterFieldInfo(),
                dataType: 'json',
                async: false,
                success: function (data) {
                    var grid = VnrGridDynamic;
                    grid.GridName = "gridAtt_ReportMonthly";
                    grid.DataSource = data.Data;
                    grid.PageSize = 50;

                    VnrGridDynamicControl(grid);
                    CloseHre_ProgressBar();
                }
            });
            return false;
        });
    });


    $("#btnExport").click(function () {
        debugger;
        var _Month = $('#ReportMonthly_Month').val();
        if (_Month == '') {
            ShowNotificationProcessor('@ConstantDisplay.HRM_Common_Search_Month.TranslateString()' + " " + '@ConstantDisplay.HRM_Common_NotEmtpy.TranslateString()');
            return;
        }
        isCreateTemplate = false;
        isCreateTemplateForDynamicGrid = true;
        var isAccess = checkPermission(PrivilegeType.Export, '@ConstantPermission.Att_ReportMonthlyTimeSheet');
        if (!isAccess) {
            return;
        }
        if ($('#ddlScreenName').val() == "") {
            ExportFail();
            return;
        }
        var urlGetData = '@_hrm_Hr_Service' + '/Att_GetData/GetReportMonthly';
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo(true);
        ExportAll(urlGetData, dataParameter, urlDownload);
    });

    $("#btnCreateTemplate").click(function () {
        debugger;

        var _Month = $('#ReportMonthly_Month').val();
        if (_Month == '') {
            ShowNotificationProcessor('@ConstantDisplay.HRM_Common_Search_Month.TranslateString()' + " " + '@ConstantDisplay.HRM_Common_NotEmtpy.TranslateString()');
            return;
        }
        isCreateTemplate = true;
        isCreateTemplateForDynamicGrid = true;
        CreateTemplate('@_hrm_Hr_Service' + '/Att_GetData/GetReportMonthly', filterFieldInfo(true));
    });

</script>

@Html.Hidden("valueFields")
<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->

            <div class="contendSearchWidge">
                <div>
                    <div class="hrm_box">
                        <div id="div1">
                            <div class="FieldTitle">
                          @Html.VnrLabelFor(model=>model.Month)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var _Month = new DatePickerBuilderInfo()
                                    {
                                        Name = "ReportMonthly_Month",
                                        Format = ConstantFormat.HRM_Format_MonthYear,
                                        StyleCss="Width:90px",
                                        Value=DateTime.Today.Date.ToString()
                                    };
                                }
                                @Html.VnrDatePickerFor(model => model.Month, _Month)
                            </div>
                        </div>
                        <div id="div6">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.OrgStructureID)
                            </div>
                            <div class="FieldValue">
                                @Html.Partial("EditorTemplates/OrgStructureTreeViewDropdown")
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="commandToolBarWidge">

    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    <div style="float:right">
        <script>
            function GetScreenName() {
                return {
                    screenName: '@screen'
                };
            }
        </script>
        <div class="FieldValue" style="margin-top: 0;">
            @{
                var screenName = new DropDownListBuilderInfo()
                {
                    Name = "ddlScreenName",
                    DataTextField = "ExportName",
                    DataValueField = "ID",
                    Url = @_hrm_Hr_Service + "Cat_GetData/GetScreenName",
                    Data = "GetScreenName",
                };
            }
            @Html.VnrDropDownList(screenName)
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport", Content = ConstantAction.HRM_Common_ExportReport.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateTemplate", Content = "Tạo template", ImageUrl = ConstantPath.IconExportPath })
        </div>
    </div>
</div>

<div>
    <div id="gridAtt_ReportMonthly"></div>
</div>

