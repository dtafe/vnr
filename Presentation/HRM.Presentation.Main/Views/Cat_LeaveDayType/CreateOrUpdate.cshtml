@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.UI.Controls.Kendo.DropDownList
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Category.Models

@model HRM.Presentation.Category.Models.CatLeaveDayTypeModel
@{
    //var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;

    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;


    IList<SelectListItem> listInsuranceType = Enum.GetValues(typeof(EnumDropDown.InsuranceType))
      .Cast<EnumDropDown.InsuranceType>()
      .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
      .ToList();

    IList<SelectListItem> listSalaryType = Enum.GetValues(typeof(EnumDropDown.SalaryType))
    .Cast<EnumDropDown.SalaryType>()
    .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
    .ToList();
}
<div class="VnRMain">
    <table style="width:100%">
        <tbody>
            <tr>
                <td class="Box_Top_Left"></td>
                <td valign="middle" class="Box_Top_Mid"></td>
                <td class="Box_Top_Right"></td>
            </tr>
            <tr>
                <td class="Box_Mid_Left">&nbsp;&nbsp;&nbsp;</td>
                <td valign="top">
                    @Html.HiddenFor(model => model.ID)
                    @Html.HiddenFor(model => model.DateCreate)
                    <div style="float:left">
                        <div id="div6">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.OrgStructureID)
                            </div>
                            <div class="FieldValue">
                                @Html.Partial("EditorTemplates/OrgStructureTreeViewDropdownForCreate")
                                @Html.HiddenFor(model => model.OrgStructureID)
                                @Html.HiddenFor(model => model.OrgStructureName)
                            </div>
                        </div>
                        <div id="div3">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.LeaveDayTypeName)
                            </div>
                            <div class="FieldValue">
                                @(Html.VnrTextBoxFor(model => model.LeaveDayTypeName, "width:300px"))
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div2">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.Code)
                            </div>
                            <div class="FieldValue">
                                
                                @(Html.VnrTextBoxFor(model => model.Code))
                            </div>
                            <div style="clear: both;"></div>
                        </div>

                        <div id="div4">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.PaidRate)
                            </div>
                            <div class="FieldValue">
                                @{

                                    var PaidRate = new NumericTextBoxBuilderInfo<double>()
                                    {

                                    };
                                }
                                @(Html.VnrNumericTextBoxFor(model => model.PaidRate, PaidRate))

                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div5">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.SocialRate)
                            </div>
                            <div class="FieldValue">
                                @{

                                    var SocialRate = new NumericTextBoxBuilderInfo<double>()
                                    {

                                    };
                                }
                                @(Html.VnrNumericTextBoxFor(model => model.SocialRate, SocialRate))

                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div5">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.Penalty)
                            </div>
                            <div class="FieldValue">
                                @{

                                    var Penalty = new NumericTextBoxBuilderInfo<double>()
                                    {
                                        Format = "n0",

                                    };
                                }
                                @(Html.VnrNumericTextBoxFor(model => model.Penalty, Penalty))

                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div5">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.MaxPerTimes)
                            </div>
                            <div class="FieldValue">
                                @{

                                    var MaxPerTimes = new NumericTextBoxBuilderInfo<int>()
                                    {
                                        Format = "n0"
                                    };
                                }
                                @(Html.VnrNumericTextBoxFor(model => model.MaxPerTimes, MaxPerTimes))

                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div5">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.MaxPerYear)
                            </div>
                            <div class="FieldValue">
                                @{

                                    var MaxPerYear = new NumericTextBoxBuilderInfo<int>()
                                    {
                                        Format = "n0"
                                    };
                                }
                                @(Html.VnrNumericTextBoxFor(model => model.MaxPerYear, MaxPerYear))

                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div3">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.MaxPerMonth)
                            </div>
                            <div class="FieldValue">
                                @{

                                    var MaxPerMonth = new NumericTextBoxBuilderInfo<int>()
                                    {
                                        Format = "n0"
                                    };
                                }
                                @(Html.VnrNumericTextBoxFor(model => model.MaxPerMonth, MaxPerMonth))
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div>
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.Formula)
                            </div>
                            <div class="FieldValue">

                                @Html.VnrTextAreaFor(mode => mode.Formula)
                            </div>
                        </div>
                    </div>




                    <div style="float:left; display:block; margin-left:70px">
                        <div id="div7">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.IsWorkDay)
                            </div>
                            <div class="FieldValue">
                                @(Html.EditorFor(model => model.IsWorkDay))
                            </div>
                        </div>
                        <div id="div7">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.IsAnnualLeave)
                            </div>
                            <div class="FieldValue">
                                @(Html.EditorFor(model => model.IsAnnualLeave))
                            </div>
                        </div>
                        <div id="div7">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.IsTimeOffInLieu)
                            </div>
                            <div class="FieldValue">
                                @(Html.EditorFor(model => model.IsTimeOffInLieu))
                            </div>
                        </div>
                        <div id="div7">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.IsTimeOffMakeUp)
                            </div>
                            <div class="FieldValue">
                                @(Html.EditorFor(model => model.IsTimeOffMakeUp))
                            </div>
                        </div>
                        <div id="div7">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.IsLoadRelatives)
                            </div>
                            <div class="FieldValue">
                                @(Html.EditorFor(model => model.IsLoadRelatives))
                            </div>
                        </div>
                        <div id="div13">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.InsuranceType)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var dropdownInsuranceType = new DropDownListBuilderInfo()
                                    {
                                        Name = "InsuranceType",
                                        DataTextField = "Text",
                                        DataValueField = "Value",
                                        BindTo = listInsuranceType,
                                        OptionLabel = @ConstantDisplay.HRM_Category_SelectStatus.TranslateString(),
                                        StyleCss = "width:200px"
                                    };
                                }
                                @(Html.VnrDropDownListFor(mode => mode.InsuranceType, dropdownInsuranceType))
                                @Html.ValidationMessageFor(model => model.InsuranceType)
                            </div>
                            <br />
                        </div>

                        <div id="div7">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.OvertimeID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var dropdownOvertimeTypeID = new DropDownListBuilderInfo()
                                    {
                                        Name = "OvertimeID",
                                        DataTextField = "OvertimeTypeName",
                                        DataValueField = "ID",
                                        Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiOvertimeType",
                                        Value = @Html.DisplayFor(mode => mode.OvertimeID).ToString(),
                                        OptionLabel = @ConstantDisplay.HRM_Attendance_SelectOvertimeType.TranslateString(),
                                        Enable = true,
                                        StyleCss = "width:200px",

                                    };
                                }
                                @(Html.VnrDropDownListFor(mode => mode.OvertimeID, dropdownOvertimeTypeID))
                                @Html.ValidationMessageFor(model => model.OvertimeID)
                            </div>
                            <br />
                        </div>

                        <div id="div13">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.SalaryType)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var dropdownSalaryType = new DropDownListBuilderInfo()
                                    {
                                        Name = "SalaryType",
                                        DataTextField = "Text",
                                        DataValueField = "Value",
                                        BindTo = listSalaryType,
                                        OptionLabel = @ConstantDisplay.HRM_Category_SelectStatus.TranslateString(),
                                        StyleCss = "width:200px"
                                    };
                                }
                                @(Html.VnrDropDownListFor(mode => mode.SalaryType, dropdownSalaryType))
                                @Html.ValidationMessageFor(model => model.SalaryType)
                            </div>
                            <br />
                        </div>



                        <div id="div4">
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.MissInOutReasonID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var TAMScanReasonMissName = new MultiSelectBuilderInfo()
                                    {
                                        DataTextField = "TAMScanReasonMissName",
                                        DataValueField = "ID",
                                        Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiTAMScanReasonMiss",
                                        Placeholder = ConstantDisplay.HRM_Category_LeaveDayType_SelectTAMScanReasonMiss.TranslateString(),
                                        MaxSelectedItems = 1,
                                        Autobind = true,
                                        Value = new string[] { @Html.DisplayFor(mode => mode.MissInOutReasonID).ToString() }
                                        //Name = "TAMScanReasonMissName1"
                                    };
                                }
                                @(Html.VnrMultiSelectFor(mode => mode.MissInOutReasonID, TAMScanReasonMissName))
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div>
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.CodeStatistic)
                            </div>
                            <div class="FieldValue">
                                @(Html.VnrTextBoxFor(model => model.CodeStatistic, "width:150px"))
                            </div>

                        </div>

                        <div>
                            <div class="FieldTitle170">
                                @Html.VnrLabelFor(mode => mode.Notes)
                            </div>
                            <div class="FieldValue">

                                @Html.VnrTextAreaFor(mode => mode.Notes)
                            </div>
                        </div>
                    </div>

                </td>
                <td class="Box_Mid_Right">&nbsp;&nbsp;&nbsp;&nbsp;</td>
            </tr>
            <tr>
                <td class="Box_Bottom_Left"></td>
                <td class="Box_Bottom_Mid"></td>
                <td class="Box_Bottom_Right"></td>
            </tr>
        </tbody>
    </table>
</div>


<!-- Gán giá trị cho cây phòng ban khi edit -->
@if (Model != null)
{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#TreeViewDropDownInput").val('@Model.OrgStructureName');
            $("#OrgStructureID").val('@Model.OrgStructureID');
            @*var treeview = $("#treeviewOrg").data("kendoTreeView");
            var getitem = treeview.dataSource.get('@Model.OrgStructureID');
            treeview.findByUid(getitem.uid);
            var selectitem = treeview.findByUid(getitem.uid);
            treeview.select(selectitem);*@
        });
        $('#@ConstantDisplay.HRM_HR_GeneralProfile_H_IdProfile').val('@Model.ID');

    </script>
}