@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@model HRM.Presentation.Category.Models.CatLeaveDayTypeModel

@{
    ViewBag.Title = "CatLeaveDayTypeInfo";
    Layout = null;
    //var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    //var _hrm_Hr_Service = ConstantPathWeb.Hrm_Sys_Service;

    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;

}
<script>
    SetFieldRequired();
    //var data = SetCharacteFieldRequired();
    function checkDuplicationCode() {

        var _code = $("#LeavedayType_Code").val();
        var _id = '@lineId';
        var param = {
            tableName: 'Cat_LeaveDayType',
            columnName: 'Code',
            keyword: _code,
            id: _id
        };

        var isduplicate = checkDuplicate('@_hrm_Hr_Service', 'Sys_GetData', 'CheckDuplicate', param, "Code");

        return isduplicate;
    }
    function onSave() {
        //if (CheckValidate(data)) {
        //    if (!checkDuplicationCode()) {
        onSaveAndContinue($('#form_Cat_LeaveDayType'), '@_hrm_Hr_Service', 'api/CatLeaveDayType/', 'grid_Cat_LeaveDayType', 'windowCatLeaveDayType');
        //    }
        //}
        //return false;
    }

    function onSaveClose() {
        //if (CheckValidate(data)) {
        //    if (!checkDuplicationCode()) {
        onSaveAndClose($('#form_Cat_LeaveDayType'), '@_hrm_Hr_Service', 'api/CatLeaveDayType/', 'grid_Cat_LeaveDayType', 'windowCatLeaveDayType');
        //    }
        //}
        //return false;
    }

    function onSaveDataPopUp() {

        //if (CheckValidate(data)) {
        //    if (!checkDuplicationCode()) {
        onlySave($('#form_Cat_LeaveDayType'), '@_hrm_Hr_Service', 'api/CatLeaveDayType/', 'grid_Cat_LeaveDayType'); return false;
        //    }
        //}
    }
</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Cat_LeaveDayType" }))
{
    @Html.HiddenFor(model => model.ID)


    <table>
        <tr>
            <td>
                <div id="div3">
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.LeaveDayTypeName)
                    </div>
                    <div class="FieldValue">
                        @(Html.VnrTextBoxFor(model => model.LeaveDayTypeName, "width:300px"))
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div2">
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">
                        @{
    var _LeavedayTypeCode = new TextBoxBuilderInfo()
    {
        Name = "LeavedayType_Code",
        CssStyle = "width:150px"
    };
    if (Model != null)
    {
        _LeavedayTypeCode.Value = Model.Code == null ? string.Empty : Model.Code;
    }
                        }
                        @(Html.VnrTextBoxFor(model => model.Code, _LeavedayTypeCode))
                    </div>
                    <div style="clear: both;"></div>
                </div>

                <div id="div4">
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.PaidRate)
                    </div>
                    <div class="FieldValue">
                        @{

    var PaidRate = new NumericTextBoxBuilderInfo<double>()
    {

    };
                        }
                        @(Html.VnrNumericTextBoxFor(model => model.PaidRate, PaidRate))
                        @*@(Html.Kendo().NumericTextBoxFor(model => model.PaidRate))*@
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div5">
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.SocialRate)
                    </div>
                    <div class="FieldValue">
                        @{

    var SocialRate = new NumericTextBoxBuilderInfo<double>()
    {

    };
                        }
                        @(Html.VnrNumericTextBoxFor(model => model.SocialRate, SocialRate))
                        @*@(Html.Kendo().NumericTextBoxFor(model => model.SocialRate))*@
                    </div>
                    <div style="clear: both;"></div>
                </div>
                <div id="div4">
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.MissInOutReasonID)
                    </div>
                    <div class="FieldValue">
                        @{
    var TAMScanReasonMissName = new MultiSelectBuilderInfo()
    {
        DataTextField = "TAMScanReasonMissName",
        DataValueField = "ID",
        Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiTAMScanReasonMiss",
        Placeholder = ConstantDisplay.HRM_Category_LeaveDayType_SelectTAMScanReasonMiss.TranslateString(),
        MaxSelectedItems = 1,
        Autobind = true,
        Value = new string[] { @Html.DisplayFor(mode => mode.MissInOutReasonID).ToString() }
        //Name = "TAMScanReasonMissName1"
    };
                        }
                        @(Html.VnrMultiSelectFor(mode => mode.MissInOutReasonID, TAMScanReasonMissName))
                    </div>
                    <div style="clear: both;"></div>
                </div>

            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle">
                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-LeaveDayType", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-catLeaveDay", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-catLeaveDay", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}


