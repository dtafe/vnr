@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.HrmSystem.Models

@model Sys_AllSettingModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;

    var _hrm_Cat_Service = ConstantPathWeb.Hrm_Hre_Service;

    IList<SelectListItem> listSaleTypes = Enum.GetValues(typeof(EnumDropDown.SalesType))
     .Cast<EnumDropDown.SalesType>()
     .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() })
     .ToList();

}

<script>
    SetFieldRequired();



    @*function onSave() {
        onSaveAndContinue($('#form_Sal_ConfigElement'), '@_hrm_Hr_Service', 'api/Sal_ItemForShop/', 'grid_Sal_ItemForShop', 'windowConfigElement');
        return false;
    }*@

    function onSaveClose() {

        var valueConfig = "";
        var id = $("#ConfigID").val();
        var key = $("#ValueKey").val();
        var elementMulti = $("#ConfigElementInfo_Value1").data("kendoMultiSelect");
        var value = elementMulti._values;
        for (var i = 0; i < value.length; i++) {
            valueConfig += value[i] + ",";
        }
        $.ajax({
            type: 'POST',
            url: '@_hrm_Hr_Service' + "Sal_GetData/SaveConfigElement",
            data: { ID: id, Key: key, Value: valueConfig.substring(0, valueConfig.length - 1) },
            dataType: 'json',
            success: function (returnValue) {

                var status = returnValue.split('/');
                if (status[0] == "Success") {
                    var windowConfig = $("#windowConfigElement").data("kendoWindow");
                    windowConfig.refresh().close();
                    var elementConfiged = $("#ElementType").data("kendoMultiSelect");
                    elementConfiged.dataSource.filter({});
                    elementConfiged.value(status[1].split(","));
                }

            }
        });
        @*onSaveAndClose($('#form_Sal_ConfigElement'), '@_hrm_Hr_Service', 'api/Sal_ItemForShop/', 'grid_Sal_ItemForShop', 'windowConfigElement');*@
        return false;
    }

    @*function onSaveDataPopUp() {
        onlySave($('#form_Sal_ConfigElement'), '@_hrm_Hr_Service', 'api/Sal_ItemForShop/', 'grid_Sal_ItemForShop'); return false;
    }*@

</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Sal_ConfigElement" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.Value1)
                    </div>
                    <div class="FieldValue">
                        @{
    var _Value1 = new MultiSelectBuilderInfo
  {
      Name = "ConfigElementInfo_Value1",
      DataTextField = "ElementName",
      DataValueField = "ElementCode",
      Url = @_hrm_Cat_Service + "Cat_GetData/GetElementType",
      // MaxSelectedItems = 1,
      Placeholder = ConstantDisplay.HRM_Category_SelectElementType.TranslateString(),
  };
                        }
                        @Html.VnrMultiSelectFor(mode => mode.Value1, _Value1)
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle">

                    </div>

                    <div class="FieldValue">
                        @*@Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-ConfigElement", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-ConfigElement", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })*@
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-ReportTotalAnnulaTaxableIncome", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}
<script>
    $(document).ready(function () {
        debugger
        var key = $("#ValueKey").val();
        var configValue = $("#ValueConfig").val();

        var elemnetConfig = $("#ConfigElementInfo_Value1").data("kendoMultiSelect");
        elemnetConfig.dataSource.filter({});
        elemnetConfig.value(configValue.split(","));
    });
</script>