@using HRM.Infrastructure.Utilities;
@using HRM.Presentation.UI.Controls.Kendo

@model HRM.Presentation.Recruitment.Models.Rec_InterviewCampaignModel
@{
    ViewBag.Title = "Index  InterviewCampaign";
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    string CandidateIds = null;
    if (ViewData["CandidateIds"] != null)
    {
        CandidateIds = ViewData["CandidateIds"].ToString();
    }

}
<script>
    //var data = SetCharacteFieldRequired();
    //$("#CanId").val("#CandidateIds");

    function GetDataInterviewCampaign() {
        debugger;
        var listIDs = "";
        var grid = $("#gridRec_InterviewDetail").data("kendoGrid");
        for (var i = 0; i < grid.dataSource._data.length; i++) {
            listIDs += grid.dataSource._data[i].ID + ",";
        }
        var lstCandidateIds = listIDs.substring(0, listIDs.length - 1);
        $("#listCandidateIds").val(lstCandidateIds);



        @*alert('@CandidateIds');*@
        var result = false;
        var radioItem = $("input[type=radio]");
        radioItem.change(function () {
            for (var i = 0; i < radioItem.length; i++) {
                if (radioItem[i].checked) {
                    radioItem[i].value = true;
                }
                else {
                    radioItem[i].value = false;
                }
            }
        });


        var pagram = {
            listCandidateGuidIds: lstCandidateIds.split(','),
            InterviewCampaignName: $("#InterviewCampaignName").val(),
            HoldDate: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#HoldDate").val()),
            DateInterviewFrom: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateInterviewFrom").val()),
            DateInterviewTo: ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#DateInterviewTo").val()),
        };
        return pagram;
    };

    function doSave() {
        debugger;
        @*debugger;
        var listIDs = "";
        var grid = $("#gridRec_InterviewDetail").data("kendoGrid");
        for (var i = 0; i < grid.dataSource._data.length; i++) {
            listIDs += grid.dataSource._data[i].ID + ",";
        }
        var lstCandidateIds = listIDs.substring(0, listIDs.length - 1);
        $("#listCandidateIds").val(lstCandidateIds);
        var result = false;
        var radioItem = $("input[type=radio]");
        radioItem.change(function () {
            for (var i = 0; i < radioItem.length; i++) {
                if (radioItem[i].checked) {
                    radioItem[i].value = true;
                }
                else {
                    radioItem[i].value = false;
                }
            }
        });
        onCreate($('#form-create'), '@_hrm_Hre_Service', 'api/Rec_InterviewCampaign/');*@

        ShowHre_ProgressBar();
        $.ajax({
            url: '@_hrm_Hre_Service' + 'api/Rec_InterviewCampaign/POST',
            data: GetDataInterviewCampaign(),
            type: 'POST',
            async: false,
            traditional: true,
            success: function (responseMessage) {
                debugger;
                CloseHre_ProgressBar();
                //if (responseMessage != "Change") {
                //    if (responseMessage == "ErrorDateOfBirth") {
                //        return dataReturn;
                //    }
                //    debugger;
                //    if (responseMessage.search("Warning") > 0) {
                //        var not = responseMessage.split('|');
                //        ShowNotificationProcessor(not[0]);
                //        var notW = responseMessage.split(',');
                //        ShowNotificationProcessor(notW[1]);
                //        return dataReturn;
                //    }
                //}
                ShowNotificationProcessor(responseMessage.ActionStatus);
                    ReadGrid('gridRec_InterviewDetail');
            },
            error: function (data) {
                Notification('@ConstantMessages.Error.TranslateString()', '@NotificationType.Error.ToString()');
            }
        });

        result = true;
        return result;
    }
</script>
<div>
    @ViewBag.MsgInsert
</div>
<form action="#" method="POST" id="form-create">
    @Html.HiddenFor(m => m.listCandidateIds, CandidateIds)
    <div class="panel-wrap">
        <div id="main-content">
            <div class="widget">
                <div class="section-header">
                    <div class="title">
                        <img src="@ConstantPath.Rec_CandidateIconPath" alt="" width="20" height="20" />
                        @ConstantDisplay.HRM_Rec_InterviewCampaing_AddNew.TranslateString()
                    </div>
                </div>

                <div class="commandToolBarWidge">
                    <div class="options" style="margin-top: 5px;">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "doSave", Name = "save", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
                @Html.Partial("CreateOrUpdate", Model)
            </div>
        </div>
    </div>
</form>




