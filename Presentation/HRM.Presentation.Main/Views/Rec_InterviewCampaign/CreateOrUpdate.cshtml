@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.UI.Controls.Kendo.DropDownList
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Recruitment.Models
@using HRM.Infrastructure.Security

@model HRM.Presentation.Recruitment.Models.Rec_InterviewCampaignModel
@{
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    string[] valueFields = null;
    string CandidateIds = null;
    DateTime dt = DateTime.Now;
    if (ViewData["CandidateIds"] != null)
    {
        CandidateIds = ViewData["CandidateIds"].ToString();
    }
}
<style>
    .hidden-class {
        display: none;
    }
</style>
<script>
    SetFieldRequired();
    $(document).ready(function () {
        $("#listCandidateIds").val('@CandidateIds');
    });
    function filterFieldInfo(isExport) {
        var dataParameter = {
            IsExport: isExport,
            ValueFields: $('#valueFieldsGrid').val()
        };
        return dataParameter;
    }
    
    $('#btnDelete').click(function (e) {
        //  e.preventDefault();
        DeleteSelected("gridRec_InterviewDetail", '@_hrm_Main_Web' + "Rec_InterviewCampaign/RemoveSelected/", selectedIds.join(","), '@ConstantPermission.Rec_InterviewCampaign');
    })

    //lấy RecruitmentHistoryId
    $("#InterviewInfo_CandidateID").ready(function () {

        var _ID = $('#CandidateID').val();
        $.ajax({
            url: '@_hrm_Hre_Service' + 'Rec_GetData/getRecruitmentHistoryId',
            type: 'POST',
            data: { ID: _ID },
            success: function (Status) {
                $("#RecruitmentHistoryID").val(Status);
            },
        });
    });


</script>
<div style="margin-top:3px">
    <div style="width:100%">
        <table style="width:100%">
            <tbody>
                <tr>
                    <td>
                        <div id="anchor" class="commandToolBarWidge">
                            <div class="GridTitle">
                                @ConstantDisplay.HRM_REC_InterviewCampaign.TranslateString()
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td valign="top">
                        <div style="display: block;">
                            <fieldset>
                                <div class="hrm_box">
                                    <div id="div13">
                                        <div class="FieldTitle150">
                                            @Html.VnrLabelForNoneIcon(model => model.InterviewCampaignName)
                                        </div>
                                        <div class="FieldValue">
                                            @*@{
                                                var InterviewCampaignID = new MultiSelectBuilderInfo
                                                {
                                                    DataTextField = "InterviewCampaignName",
                                                    DataValueField = "ID",
                                                    Url = @_hrm_Rec_Service + "Rec_GetData/GetMultiRec_InterviewCampaign",
                                                    MaxSelectedItems = 1,
                                                    Width=200
                                                    //Placeholder = ConstantDisplay.HRM_Category_SelectJobTitle.TranslateString(),
                                                };
                                            }
                                            @Html.VnrMultiSelectFor(mode => mode.ID, InterviewCampaignID)*@
                                            @Html.VnrTextBoxFor(model => model.InterviewCampaignName,"Width:200px;")
                                            @Html.HiddenFor(m => m.listCandidateIds, CandidateIds)
                                        </div>
                                    </div>
                                    <div id="dvDateFrom">
                                        <div class="FieldTitle150">
                                            @Html.VnrLabelFor(mode => mode.HoldDate)
                                        </div>
                                        <div class="FieldValue">
                                            @{
                                                var holdDate = new DatePickerBuilderInfo()
                                                {
                                                    StyleCss = "width: 100px"
                                                };
                                            }
                                            @Html.VnrDatePickerFor(mode => mode.HoldDate, holdDate)
                                        </div>
                                    </div>
                                    <div id="div13">
                                        <div class="FieldTitle150">
                                            @Html.VnrLabelForNoneIcon(model => model.DateInterviewFrom)
                                        </div>
                                        <div class="FieldValue">
                                            @{
                                                var dtfrom = new DatePickerBuilderInfo()
                                                {
                                                    StyleCss = "Width:100px;",
                                                    Placeholder = ConstantDisplay.HRM_HR_Profile_DateFrom.TranslateString(),
                                                };
                                            }
                                            @Html.VnrDatePickerFor(model => model.DateInterviewFrom, dtfrom)
                                        </div>
                                        <div class="FieldValue" style="padding-left:2px;">
                                            @{
                                                var dtto = new DatePickerBuilderInfo()
                                                {
                                                    StyleCss = "Width:100px;",
                                                    Placeholder = ConstantDisplay.HRM_HR_Profile_DateTo.TranslateString()
                                                };
                                            }
                                            @Html.VnrDatePickerFor(model => model.DateInterviewTo, dtto)
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <div>
        <table style="width:100%">
            <tbody>
                <tr>
                    <td valign="top">
                        <div id="anchor" class="commandToolBarWidge">
                            <div class="GridTitle">
                                @Html.VnrLabel(ConstantDisplay.HRM_REC_InterviewCampaignDetail.TranslateString())
                            </div>
                            <div style="float:right">
                               
                                @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })
                            </div>
                            <div class="clear"></div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td valign="top">
                        <div>
                            <!--Khai báo các thông tin cho Grid-->
                            @{
                                
                                valueFields = new string[]
                                {
                                   
                                    Rec_InterviewCampaignDetailModel.FieldNames.CodeCandidate,
                                    Rec_InterviewCampaignDetailModel.FieldNames.CandidateName,
                                    Rec_InterviewCampaignDetailModel.FieldNames.DateInterview,
                                    Rec_InterviewCampaignDetailModel.FieldNames.HourFrom,
                                    Rec_InterviewCampaignDetailModel.FieldNames.HourTo,
                                    Rec_InterviewCampaignDetailModel.FieldNames.LevelInterview
                                };

                                var sizeFields = new Dictionary<string, int>()
                                {
                                  
                                    {Rec_InterviewCampaignDetailModel.FieldNames.CodeCandidate,100},
                                    {Rec_InterviewCampaignDetailModel.FieldNames.CandidateName,140},
                                    {Rec_InterviewCampaignDetailModel.FieldNames.DateInterview,120},
                                    {Rec_InterviewCampaignDetailModel.FieldNames.HourFrom,110},
                                    {Rec_InterviewCampaignDetailModel.FieldNames.HourTo,110},
                                    {Rec_InterviewCampaignDetailModel.FieldNames.LevelInterview,110}
                                };

                                var filterable = new Dictionary<string, bool>()
                                {
                                    {Rec_InterviewCampaignDetailModel.FieldNames.CodeCandidate,true},
                                    {Rec_InterviewCampaignDetailModel.FieldNames.CandidateName,true},
                                    {Rec_InterviewCampaignDetailModel.FieldNames.DateInterview,true},
                                    {Rec_InterviewCampaignDetailModel.FieldNames.HourFrom,true},
                                    {Rec_InterviewCampaignDetailModel.FieldNames.HourTo,true},
                                    {Rec_InterviewCampaignDetailModel.FieldNames.LevelInterview,true}
                                };

                                
                                var displayFields = new Dictionary<string, string>()
                                {
                                    
                                    {Rec_InterviewCampaignDetailModel.FieldNames.CodeCandidate,ConstantDisplay.HRM_Recruitment_InterviewCampaignDetail_CodeCandidate},
                                    {Rec_InterviewCampaignDetailModel.FieldNames.CandidateName,ConstantDisplay.HRM_Recruitment_InterviewCampaignDetail_CandidateName},
                                    {Rec_InterviewCampaignDetailModel.FieldNames.DateInterview,ConstantDisplay.HRM_Recruitment_InterviewCampaignDetail_DateInterview},
                                    {Rec_InterviewCampaignDetailModel.FieldNames.HourFrom,ConstantDisplay.HRM_Recruitment_InterviewCampaignDetail_HourFrom},
                                    {Rec_InterviewCampaignDetailModel.FieldNames.HourTo,ConstantDisplay.HRM_Recruitment_InterviewCampaignDetail_HourTo},
                                    {Rec_InterviewCampaignDetailModel.FieldNames.LevelInterview,ConstantDisplay.HRM_REC_Candidate_LevelInterview}
                                };
                                Dictionary<string, string> formatFields = new Dictionary<string, string>() 
                                {
                                    {Rec_InterviewCampaignDetailModel.FieldNames.DateInterview,ConstantFormat.HRM_Format_DayMonthYear},
                                    {Rec_InterviewCampaignDetailModel.FieldNames.HourFrom,ConstantFormat.HRM_Format_HourMinSecond},
                                    {Rec_InterviewCampaignDetailModel.FieldNames.HourTo,ConstantFormat.HRM_Format_HourMinSecond},
                                };
                                string[] disableFields = new string[]
                                {
                                    Rec_InterviewCampaignDetailModel.FieldNames.CodeCandidate,
                                    Rec_InterviewCampaignDetailModel.FieldNames.CandidateName,
                                    Rec_InterviewCampaignDetailModel.FieldNames.LevelInterview,
                                };
                                var gridRec_InterviewDetail = new GridBuilderInfo
                                {
                                    Name = "gridRec_InterviewDetail",
                                    ValueFields = valueFields,
                                    SizeFields = sizeFields,
                                    DisplayFields = displayFields,
                                    Filterable = filterable,
                                    DisableFields = disableFields,
                                    ReadActionUrl = @_hrm_Hre_Service + "Rec_GetData/GetInCamDetailByCandidateId?selectedIds=" + CandidateIds,
                                    GridHeight = 500,
                                    ShowCheckAll = false,
                                    ShowEditIcon = false,
                                    FormatFields = formatFields,
                                    ShowCheckbox = true,
                                    ShowCommand = true,
                                    ShowEditButton = true,
                                    EditActionUrl = _hrm_Main_Web + "Rec_InterviewCampaign/CreateInLine/",
                                    EditMode = GridEditMode.InLine,
                                    AutoBind = true,
                                };
                            }
                            @(Html.VnrGrid<Rec_InterviewCampaignDetailModel>(gridRec_InterviewDetail))
                        </div>
                        @{
                            var sizeFieldsDis = string.Empty;
                            for (int i = 0; i < valueFields.Count(); i++)
                            {
                                sizeFieldsDis += "," + valueFields[i];
                            }
                        }
                        @Html.Hidden("valueFieldsGridDisc", sizeFieldsDis)
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <br />
</div>
