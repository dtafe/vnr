@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@model HRM.Presentation.Hr.Models.Fin_PurchaseRequestModel

@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;

    var rcID = Guid.Empty;
    if (Model != null)
    {
        rcID = Model.ID;
    }
}
<script>
    SetFieldRequired();


    function onReject() {
        
        $.ajax({
            type: 'POST',
            url: '@_hrm_Sys_Service' + 'Sys_GetData/ProcessReject',
            data: {
                host: '@_hrm_Main_Web',
                _loginID: $("#UserLoginId").val(),
                _recordID: '@rcID',
                type: '@ApproveType.E_FIN_PurchaseRequest.ToString()'
            },
            dataType: 'json',
            async: false,
            success: function (data) {
                
                if (data.Status == '@DataErrorCode.Success.ToString()') {
                    ShowNotificationProcessor('Từ Chối Đơn Hàng Thành Công');
                }                
                else if (data.Status == '@DataErrorCode.Error_Reject.ToString()') {
                    ShowNotificationProcessor('Đơn Hàng Đã Từ Chối Không Được Phép Phê Duyệt');
                }
                else if (data.Status == '@DataErrorCode.NoPermission.ToString()') {
                    ShowNotificationProcessor('Tài Khoản Không Có Quyền Duyệt Đơn Hàng Này');
                }
                else if (data.Status == '@DataErrorCode.Locked.ToString()') {
                    ShowNotificationProcessor('Đối Tượng Này Đã Bị Khóa');
                }
                else {
                    ShowNotificationProcessor('Từ Chối Đối Tượng Thất Bại');
                }

            }
        });
    }

</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_cat_PurchaseRequestApproved" }))
{
    @Html.HiddenFor(model => model.ID)
    <table style="width:300px">
        <tr>
            <td>
                <div>
                    <div class="FieldTitle">
                    </div>
                    <div class="FieldValue">
                        <div>
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onReject", Name = "btnRejectPurchase", Content = ConstantAction.HRM_Common_Reject.TranslateString(), ImageUrl = ConstantPath.IconRejectPath })
                        </div>
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150" style="width:150px">
                        @Html.VnrLabelForNoneIcon(mode => mode.FunctionName)
                    </div>
                    <div class="FieldValue">
                        @Html.DisplayFor(mode => mode.FunctionName)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150" style="width:150px">
                        @Html.VnrLabelForNoneIcon(mode => mode.BudgetOwnerName)
                    </div>
                    <div class="FieldValue">
                        @Html.DisplayFor(mode => mode.BudgetOwnerName)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150" style="width:150px">
                        @Html.VnrLabelForNoneIcon(mode => mode.ChannelName)
                    </div>
                    <div class="FieldValue">
                        @Html.DisplayFor(mode => mode.ChannelName)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150" style="width:150px">
                        @Html.VnrLabelForNoneIcon(mode => mode.BudgetChargedIn)
                    </div>
                    <div class="FieldValue">
                        @Html.DisplayFor(mode => mode.BudgetChargedIn)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150" style="width:150px">
                        @Html.VnrLabelForNoneIcon(mode => mode.From)
                    </div>
                    <div class="FieldValue">
                        @Html.DisplayFor(mode => mode.From)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150" style="width:150px">
                        @Html.VnrLabelForNoneIcon(mode => mode.To)
                    </div>
                    <div class="FieldValue">
                        @Html.DisplayFor(mode => mode.To)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150" style="width:150px">
                        @Html.VnrLabelForNoneIcon(mode => mode.SupplierName)
                    </div>
                    <div class="FieldValue">
                        @Html.DisplayFor(mode => mode.SupplierName)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150" style="width:150px">
                        @Html.VnrLabelForNoneIcon(mode => mode.Status)
                    </div>
                    <div class="FieldValue">
                        @Html.DisplayFor(mode => mode.Status)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle150" style="width:150px">
                        @Html.VnrLabelForNoneIcon(mode => mode.Total)
                    </div>
                    <div class="FieldValue">
                        @Html.DisplayFor(mode => mode.Total)
                    </div>
                </div>

            </td>
        </tr>


    </table>


}
