@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Hr.Models
@using System.Collections;

@model Hre_RewardModel
@{
    ViewBag.Title = "Hre Reward Centre";
    Layout = null;
    var _Hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
}

<script>
    SetFieldRequired();
    //Hàm lưu
    function onSave() {
        onSaveAndContinue($('#form_Hre_Reward'), '@_Hrm_Hre_Service', 'api/Hre_Reward/', 'gridReWard', 'windowReWard');
        return false;
    }

    //Hàm lưu và đóng
    function onSaveClose() {
        onSaveAndClose($('#form_Hre_Reward'), '@_Hrm_Hre_Service', 'api/Hre_Reward/', 'gridReWard', 'windowReWard');
        return false;
    }

    function onSaveDataPopUp() {
        onlySave($('#form_Hre_Reward'), '@_Hrm_Hre_Service', 'api/Hre_Reward/', 'gridReWard'); return false;
    }

</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Hre_Reward" }))
{
    @Html.HiddenFor(model => model.ID)
    <table style="width:100%">
        <tbody>
            <tr>
                <td valign="top">
                    <div style="width:510px">
                        <div id="div1">
                            <div class="FieldTitle">
                                @{
    if (Model != null)
    {
        @Html.HiddenFor(mode => mode.ProfileID)
    }
}
                            </div>
                            <div class="FieldValue">
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div2">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.DateOfIssuance)
                            </div>
                            <div class="FieldValue">
                                @{
    var _dateOfIssuance = new DatePickerBuilderInfo()
    {
    };
                                }
                                @Html.VnrDatePickerFor(model => model.DateOfIssuance, _dateOfIssuance)
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div4">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.DateOfEffective)
                            </div>
                            <div class="FieldValue">
                                @{
    var _dateOfEffective = new DatePickerBuilderInfo()
    {
    };
                                }
                                @Html.VnrDatePickerFor(model => model.DateOfEffective, _dateOfEffective)
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div7">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.RewardValue)
                            </div>
                            <div class="FieldValue">
                                @{
    var RewardValue = new NumericTextBoxBuilderInfo<double>() { };
                                }
                                @Html.VnrNumericTextBoxFor(model => model.RewardValue, RewardValue)
                                @Html.ValidationMessageFor(model => model.RewardValue)
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div8">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.NoOfReward)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextBoxFor(model => model.NoOfReward)
                                @Html.ValidationMessageFor(model => model.NoOfReward)
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                    </div>

                    <div style="display: block;  width: 510px">
                        <div id="div10">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.RequesterID)
                            </div>
                            <div class="FieldValue">
                                @{
    IEnumerable Requester = new string[] { };
    if (Model != null)
    {
        Requester = new[] { new { UserLogin = Model.RequesterName, ID = Model.RequesterID } };
    }
    var requesterID = new MultiSelectBuilderInfo()
        {
            DataTextField = "UserLogin",
            DataValueField = "ID",
            Url = @_hrm_Sys_Service + "Sys_GetData/GetMultiUser",
            Placeholder = ConstantDisplay.HRM_System_SelectUser.TranslateString(),
            MaxSelectedItems = 1,
            Value = Requester
        };
                                }
                                @(Html.VnrMultiSelectFor(mode => mode.RequesterID, requesterID))
                            </div>
                        </div>
                        <div id="div6">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.UserApproveID)
                            </div>
                            <div class="FieldValue">
                                @{
    IEnumerable UserApproveName = new string[] { };
    if (Model != null)
    {
        UserApproveName = new[] { new { UserLogin = Model.UserApproveName, ID = Model.UserApproveID } };
    }
                                }
                                @{
    var userApproveID = new MultiSelectBuilderInfo()
     {
         DataTextField = "UserLogin",
         DataValueField = "ID",
         Url = @_hrm_Sys_Service + "Sys_GetData/GetMultiUser",
         Placeholder = ConstantDisplay.HRM_System_SelectUser.TranslateString(),
         MaxSelectedItems = 1,
         Value = UserApproveName
     };
                                }
                                @(Html.VnrMultiSelectFor(mode => mode.UserApproveID, userApproveID))
                            </div>
                        </div>
                        <div id="div2">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.Reason)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextAreaFor(model => model.Reason)
                                @Html.ValidationMessageFor(model => model.Reason)
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                        <div id="div3">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.Description)
                            </div>
                            <div class="FieldValue">
                                @Html.VnrTextAreaFor(model => model.Description)
                                @Html.ValidationMessageFor(model => model.Description)
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="commandToolBarWidge">
                        <div class="options">
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-new", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        </div>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
}
