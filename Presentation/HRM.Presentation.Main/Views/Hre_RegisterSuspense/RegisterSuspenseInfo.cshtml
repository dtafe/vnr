@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Presentation.UI.Controls.Kendo.MultiSelect
@using HRM.Presentation.UI.Controls.Kendo.DropDownList
@using HRM.Presentation.Hr.Models

@using HRM.Infrastructure.Utilities
@using System.Collections;
@model HRM.Presentation.Hr.Models.Hre_StopWorkingModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
}
@{
    IList<SelectListItem> listTypeSuspense = Enum.GetValues(typeof(EnumDropDown.TypeSuspense))
   .Cast<EnumDropDown.TypeSuspense>()
   .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() })
   .ToList();

    IList<SelectListItem> listStopWorkStatus = Enum.GetValues(typeof(EnumDropDown.StopWorkStatus))
   .Cast<EnumDropDown.StopWorkStatus>()
   .Select(x => new SelectListItem { Text = EnumDropDown.GetEnumDescription(x), Value = x.ToString() })
   .ToList();
    var userId = Session[SessionObjects.UserId];
}

<script>
    SetFieldRequiredByScreenName('Hre_StopWorking_RegisterSuspense');
    function onSave_registersuspense() {
        debugger;
        ShowHre_ProgressBar();
        $("#UserID").val('@userId');
        var _ProfileID = $('#RegisterSuspense_ProfileID').val();
        var _datestop = ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#RegisterSuspense_DateStop").val());
        $.ajax({
            url: '@_hrm_Hr_Service' + 'Hre_GetData/ValidateDateComback',
            type: 'POST',
            data: { ProfileID: _ProfileID[0], DateStop: _datestop },
            success: function (messageValidate) {
                debugger;
                if (messageValidate != '') {
                    ShowNotification('@ConstantDisplay.HRM_Dashboard_Alerts.TranslateString()', messageValidate, "k-block k-info-colored");
                    CloseHre_ProgressBar();
                    return;
                }
                else {
                    CloseHre_ProgressBar();
                    $("#registersuspenseInfo_StopWorkType").val("E_SUSPENSE");
                    var result = false;
                    var IsHoldSal = document.getElementById("IsHoldSal");
                    if (IsHoldSal != null && IsHoldSal.checked) {
                        $("#IsHoldSal").val("true");
                    } else {
                        $("#IsHoldSal").val("false");
                    }
                    onSaveAndContinue($('#form_hre_registersuspense'), '@_hrm_Hr_Service', 'api/Hre_StopWorking/', '@ConstantControlName.HRM_gridHre_RegisterSuspense_Grid_Name', '@ConstantControlName.HRM_gridHre_RegisterSuspense_PopUp_Name');
                    result = true;
                    return result;
                }
            },
        });
    }

    function onSaveClose_registersuspense() {
        debugger;
        ShowHre_ProgressBar();
        $("#UserID").val('@userId');
        var _ProfileID = $('#RegisterSuspense_ProfileID').val();
        var _datestop = ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#RegisterSuspense_DateStop").val());
        $.ajax({
            url: '@_hrm_Hr_Service' + 'Hre_GetData/ValidateDateComback',
            type: 'POST',
            data: { ProfileID: _ProfileID[0], DateStop: _datestop },
            success: function (messageValidate) {
                debugger;
                if (messageValidate != '') {
                    ShowNotification('@ConstantDisplay.HRM_Dashboard_Alerts.TranslateString()', messageValidate, "k-block k-info-colored");
                    CloseHre_ProgressBar();
                    return;
                }
                else {
                    CloseHre_ProgressBar();
                    $("#registersuspenseInfo_StopWorkType").val("E_SUSPENSE");
                    var result = false;
                    var IsHoldSal = document.getElementById("IsHoldSal");
                    if (IsHoldSal != null && IsHoldSal.checked) {
                        $("#IsHoldSal").val("true");
                    } else {
                        $("#IsHoldSal").val("false");
                    }
                    onSaveAndClose($('#form_hre_registersuspense'), '@_hrm_Hr_Service', 'api/Hre_StopWorking/', '@ConstantControlName.HRM_gridHre_RegisterSuspense_Grid_Name', '@ConstantControlName.HRM_gridHre_RegisterSuspense_PopUp_Name');
                    result = true;
                    return result;
                }
            },
        });
    }

    function onSaveDataPopUp_registersuspense() {
        @*ShowHre_ProgressBar();
        $("#UserID").val('@userId');
        var _ProfileID = $('#@Html.FieldIdFor(model => model.ProfileID)').val();
        var _datestop = ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#RegisterSuspense_DateStop").val());
        $.ajax({
            url: '@_hrm_Hr_Service' + 'Hre_GetData/ValidateDateComback',
            type: 'POST',
            data: { ProfileID: _ProfileID[0], DateStop: _datestop },
            success: function (messageValidate) {
                debugger;
                if (messageValidate != '') {
                    ShowNotification('@ConstantDisplay.HRM_Dashboard_Alerts.TranslateString()', messageValidate, "k-block k-info-colored");
                    CloseHre_ProgressBar();
                    return;
                }
                else {
                    CloseHre_ProgressBar();
                    $("#registersuspenseInfo_StopWorkType").val("E_SUSPENSE");
                    var result = false;
                    var IsHoldSal = document.getElementById("IsHoldSal");
                    if (IsHoldSal != null && IsHoldSal.checked) {
                        $("#IsHoldSal").val("true");
                    } else {
                        $("#IsHoldSal").val("false");
                    }
                    onlySave($('#form_hre_registersuspense'), '@_hrm_Hr_Service', 'api/Hre_StopWorking/', '@ConstantControlName.HRM_gridHre_RegisterSuspense_Grid_Name');
                    result = true;
                    return result;
                }
            },
        });*@
        debugger;
        ShowHre_ProgressBar();
        $("#UserID").val('@userId');
        var _ProfileID = $('#RegisterSuspense_ProfileID').val();
        var _datestop = ConvertDatetime('@_hrm_Sys_Service' + 'Sys_GetData/GetFormatDate/', $("#RegisterSuspense_DateStop").val());
        $.ajax({
            url: '@_hrm_Hr_Service' + 'Hre_GetData/ValidateDateComback',
            type: 'POST',
            data: { ProfileID: _ProfileID[0], DateStop: _datestop },
            success: function (messageValidate) {
                debugger;
                if (messageValidate != '') {
                    ShowNotification('@ConstantDisplay.HRM_Dashboard_Alerts.TranslateString()', messageValidate, "k-block k-info-colored");
                    CloseHre_ProgressBar();
                    return;
                }
                else {
                    CloseHre_ProgressBar();
                    $("#registersuspenseInfo_StopWorkType").val("E_SUSPENSE");
                    var result = false;
                    var IsHoldSal = document.getElementById("IsHoldSal");
                    if (IsHoldSal != null && IsHoldSal.checked) {
                        $("#IsHoldSal").val("true");
                    } else {
                        $("#IsHoldSal").val("false");
                    }
                    onlySave($('#form_hre_registersuspense'), '@_hrm_Hr_Service', 'api/Hre_StopWorking/', '@ConstantControlName.HRM_gridHre_RegisterSuspense_Grid_Name');
                    result = true;
                    return result;
                }
            },
        });
    }



    function ProfileSelectRegisterSuspense(e) {
        var _DateHire = $("#RegistersuspenseInfo_DateHire").data("kendoDatePicker");
        var dataItem = this.dataSource.view()[e.item.index()];
        $.ajax({
            url: '@_hrm_Hr_Service' + "Hre_GetData/GetDataViewStop",
            data: { ProfileID: dataItem.ID },
            type: 'POST',
            datatype: 'json',
            success: function (data) {
                if (data != null) {
                    _DateHire.value(data.DateHire);
                    $("#RegistersuspenseInfo_DeptPath").val(data.OrgStructureName);
                }
            }
        });
    }
</script>
<style>
    label {
        min-width: 100px;
    }
</style>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_hre_registersuspense" }))
{

    <div class="VnRMain">
        <table style="width:100%">
            <tbody>
                @Html.HiddenFor(mode => mode.UserID)
                @Html.Hidden("registersuspenseInfo_StopWorkType")
                <tr><td colspan="3" style=""></td></tr>
                <tr>

                    <td valign="top">
                        <div>
                            <div style="float: left">
                                <div id="div1">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.ProfileName)
                                        @Html.HiddenFor(mode => mode.ID)
                                    </div>
                                    <div class="FieldValue">
                                        @{
    IEnumerable valueProfile = new string[] { };
    if (Model != null)
    {
        valueProfile = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
    }
                                        }
                                        @{
    var Profile = new MultiSelectBuilderInfo()
     {
         Name = "RegisterSuspense_ProfileID",
         DataTextField = Hre_RewardModel.FieldNames.ProfileName,
         DataValueField = Hre_RewardModel.FieldNames.ID,
         Url = @_hrm_Hr_Service + "Hre_GetData/GetMultiProfile",
         Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
         MaxSelectedItems = 1,
         Width = 300,
         Value = valueProfile,
         EventSelect = "ProfileSelectRegisterSuspense",
     };
                                        }
                                        @(Html.VnrMultiSelectFor(mode => mode.ProfileID, Profile))
                                    </div>
                                </div>
                                <div id="div2">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.TypeSuspense)
                                    </div>
                                    <div class="FieldValue">
                                        @{
    var _TypeSuspense = new DropDownListBuilderInfo()
    {
        StyleCss = "width:300px;",
        Name = "RegisterSuspense_TypeSuspense",
        DataTextField = "Text",
        DataValueField = "Value",
        BindTo = listTypeSuspense,
        Value = (Model == null || Model.TypeSuspense == null) ? null : Model.TypeSuspense
    };
                                        }
                                        @Html.VnrDropDownListFor(model => model.TypeSuspense, _TypeSuspense)
                                    </div>
                                </div>
                                <div id="div41">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.RequestDate)
                                    </div>
                                    <div class="FieldValue">
                                        @{
    var _RequestDate = new DatePickerBuilderInfo()
    {
        Name = "RegisterSuspense_RequestDate",
        StyleCss = "width:120px;"
    };
                                        }
                                        @Html.VnrDatePickerFor(model => model.RequestDate, _RequestDate)
                                    </div>
                                </div>
                                <div id="div41">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabel(ConstantDisplay.HRM_HR_StopWorking_SuspenseDate.TranslateString())
                                    </div>
                                    <div class="FieldValue">
                                        @{
    var _DateStop = new DatePickerBuilderInfo()
    {
        Name = "RegisterSuspense_DateStop",
        StyleCss = "width:120px;"
    };
                                        }
                                        @Html.VnrDatePickerFor(model => model.DateStop, _DateStop)
                                    </div>
                                </div>
                                <div id="div5">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.IsHoldSal)
                                    </div>
                                    <div class="FieldValue">
                                        @{
    var IsHoldSal = new CheckBoxBuilderInfo()
    {

    };
    if (Model != null)
    {
        if (Model.IsHoldSal == true)
        {
            IsHoldSal.Value = true;
        }
        else
        {
            IsHoldSal.Value = false;
        }
    }
                                        }
                                        @Html.VnrCheckBoxFor(model => model.IsHoldSal, IsHoldSal)
                                    </div>

                                </div>

                                <div id="div7">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.Status)
                                    </div>
                                    <div class="FieldValue">
                                        @{
    var _Status = new DropDownListBuilderInfo()
    {
        StyleCss = "width:300px;",
        Name = "RegisterSuspense_Status",
        DataTextField = "Text",
        DataValueField = "Value",
        BindTo = listStopWorkStatus,
        Value = (Model == null || Model.Status == null) ? EnumDropDown.StopWorkStatus.E_WAITAPPROVE.ToString() : Model.Status
    };
                                        }
                                        @Html.VnrDropDownListFor(model => model.Status, _Status)
                                    </div>
                                </div>
                                <div id="div8">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.Note)
                                    </div>
                                    <div class="FieldValue">
                                        @Html.VnrTextAreaFor(mode => mode.Note, "width: 300px")
                                    </div>
                                </div>
                            </div>
                            <div style="float: left">
                                <div id="div8">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.DateHire)
                                    </div>
                                    <div class="FieldValue">
                                        @{
    var DateHire = new DatePickerBuilderInfo()
    {
        Name = "RegistersuspenseInfo_DateHire",
        StyleCss = "width:100px;"
    };
                                        }
                                        @Html.VnrDatePickerFor(model => model.DateHire, DateHire)
                                    </div>
                                </div>
                                <div id="div8">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.DeptPath)
                                    </div>
                                    <div class="FieldValue">
                                        @{
    var _DeptPath = new TextBoxBuilderInfo()
     {
         Name = "RegistersuspenseInfo_DeptPath",
         Readonly = true,
     };
                                        }
                                        @Html.VnrTextBoxFor(mode => mode.DeptPath, _DeptPath)
                                    </div>
                                </div>

                                <div id="div8">
                                    <div class="FieldTitle150">
                                        @Html.VnrLabelFor(mode => mode.DecisionNo)
                                    </div>
                                    <div class="FieldValue">
                                        @{
    var _DecisionNo = new TextBoxBuilderInfo()
     {
         Width = 300,
         Name = "RegisterSuspense_DecisionNo",
         Readonly = true,
         Value = Model != null ? Model.DecisionNo : null
     };
                                        }
                                        @Html.VnrTextBoxFor(mode => mode.DecisionNo, _DecisionNo)
                                    </div>
                                </div>
                            </div>
                        </div>

                    </td>

                </tr>
                <tr>
                    <td style="padding-top:2px; padding-bottom:10px;">
                        <div class="LineFooterCommandEdit">
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div>
                            <div class="FieldTitle150">

                            </div>
                            <div class="FieldValue">
                                @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp_registersuspense", Name = "save-RecruitmentCampaign", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                                @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave_registersuspense", Name = "save-continue-RecruitmentCampaign", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                                @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose_registersuspense", Name = "save-close-RecruitmentCampaign", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            </div>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
}

<script>
    var _Status = $('#RegisterSuspense_Status').data("kendoDropDownList");
    _Status.readonly();
    var datehire = $('#RegistersuspenseInfo_DateHire').data("kendoDatePicker");
    datehire.readonly();
</script>

<div>
    @{
        if (Model != null && Model.ProfileID != null)
        {
            <script>
                $(document).ready(function () {
                    debugger;
                    var _DateHire = $("#RegistersuspenseInfo_DateHire").data("kendoDatePicker");
                    $.ajax({
                        url: '@_hrm_Hr_Service' + "Hre_GetData/GetDataViewStop",
                        data: { ProfileID: '@Model.ProfileID' },
                        type: 'POST',
                        datatype: 'json',
                        success: function (data) {
                            if (data != null) {
                                _DateHire.value(data.DateHire);
                                $("#RegistersuspenseInfo_DeptPath").val(data.OrgStructureName);
                            }
                        }
                    });
                });
            </script>
        }
    }
</div>
