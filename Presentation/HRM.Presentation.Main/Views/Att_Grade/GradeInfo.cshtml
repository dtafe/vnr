@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Category.Models
@using HRM.Presentation.UI.Controls.Kendo
@using System.Collections

@model HRM.Presentation.Attendance.Models.Att_GradeModel
@{
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var isenable = true;
    if (Model != null)
    {
        isenable = false;
    }
}

<script>
    
    
    SetFieldRequired();

    function onSave() {
        debugger;
        @*var checkedNodes = [];
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes);
        checkedNodes != null ? $('#@Html.FieldIdFor(model => model.OrgStructureID)').val(checkedNodes.join(',')) : null;*@

        onSaveAndContinue($('#form_Att_Grade'), '@_hrm_Hr_Service', 'api/Att_Grade/', '@ConstantControlName.HRM_Attendance_Grade_Grid_Name', '@ConstantControlName.HRM_Attendance_Grade_PopUp_Name');
        return false;
    }

    function onSaveClose() {
        debugger;
        @*var checkedNodes = [];
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes);
        checkedNodes != null ? $('#@Html.FieldIdFor(model => model.OrgStructureID)').val(checkedNodes.join(',')) : null;*@

        onSaveAndClose($('#form_Att_Grade'), '@_hrm_Hr_Service', 'api/Att_Grade/', '@ConstantControlName.HRM_Attendance_Grade_Grid_Name', '@ConstantControlName.HRM_Attendance_Grade_PopUp_Name');
        return false;
    }
    function onSaveDataPopUp() {
        debugger;
        @*var checkedNodes = [];
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes);
        checkedNodes != null ? $('#@Html.FieldIdFor(model => model.OrgStructureID)').val(checkedNodes.join(',')) : null;*@

        onlySave($('#form_Att_Grade'), '@_hrm_Hr_Service', 'api/Att_Grade/', '@ConstantControlName.HRM_Attendance_Grade_Grid_Name'); return false;
    }

</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Att_Grade" }))
{
    @*@Html.HiddenFor(model => model.ID)*@
    <table>
        <tr>
            <td>

                <div style="float:left; width:600px">
                    <div id="div1">
                        <div class="FieldTitle150">
                            @(Html.HiddenFor(model => model.ProfileIDs))
                            @(Html.HiddenFor(model => model.ProfileID))
                            @(Html.HiddenFor(model => model.OrgStructureID))
                            @(Html.HiddenFor(m => m.ProfileIDsExclude))
                            @Html.VnrLabelFor(model => model.ProfileName)
                        </div>
                        <div class="FieldValue">
                            @{
                                IEnumerable valuepro = new string[] { };
                                if (Model != null)
                                {
                                    valuepro = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
                                }

                                var _ProfileIDs1 = new MultiSelectBuilderInfo
                                {
                                    DataTextField = "ProfileName",
                                    DataValueField = "ID",
                                    Url = @_hrm_Hr_Service + "Hre_GetData/GetMultiProfile",
                                    Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                                    Value = valuepro
                                };
                            }
                            @{
                            var ProfileOrOrgStructure = new HRM.Presentation.UI.Controls.VnrSelectProfileOrOrgStructure()
                            {
                                Name = "SelectProfileOrOrgStructureGradeInfo",
                                ProfileMultiSelect = _ProfileIDs1,
                                BindingProfileForField = "ProfileIDs",
                                BindingOrgStructureForField = "OrgStructureID",
                                BindingExclusionProfileForField = "ProfileIDsExclude"

                            };
                            }
                            @Html.Partial("EditorTemplates/SelectProfileOrOrgStructure", ProfileOrOrgStructure)
                        </div>
                        <div style="clear: both;"></div>
                    </div>

                    <div id="div2">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.GradeAttendanceID)
                        </div>
                        <div class="FieldValue">
                            @{
                                IEnumerable Grade_valueGradeAttendance = new string[] { };
                                if (Model != null)
                                {
                                    Grade_valueGradeAttendance = new[] { new { GradeAttendanceName = Model.GradeAttendanceName, ID = Model.GradeAttendanceID } };
                                }
                                                        }
                                                        @{
                                var _GrademultiSelectGradeAttendanceID = new MultiSelectBuilderInfo()
                                {
                                    Width = 300,
                                    Name = "GradeInfo_GradeAttendanceID",
                                    DataTextField = "GradeAttendanceName",
                                    DataValueField = "ID",
                                    Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiGradeAttendance",
                                    Placeholder = ConstantDisplay.HRM_Category_SelectGradeAttendance.TranslateString(),
                                    MaxSelectedItems = 1,
                                    Value = Grade_valueGradeAttendance
                                };
                            }
                            @(Html.VnrMultiSelectFor(mode => mode.GradeAttendanceID, _GrademultiSelectGradeAttendanceID))
                        </div>
                    </div>
                    <div id="div4">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.MonthStart)
                        </div>
                        <div class="FieldValue">
                            @{
                                var _GradedatepickerMonthStart = new DatePickerBuilderInfo()
                                {
                                    Name = "GradeInfo_MonthStart",
                                    Value = @Html.DisplayFor(mode => mode.MonthStart).ToString(),
                                    Placeholder = ConstantDisplay.HRM_Att_Grade_MonthStart.TranslateString(),
                                    //Format = ConstantFormat.HRM_Format_MonthYear.TranslateString()
                                    StyleCss="width:120px"
                                };
                            }
                            @Html.VnrDatePickerFor(model => model.MonthStart, _GradedatepickerMonthStart).Format(ConstantFormat.HRM_Format_MonthYear.TranslateString())
                        </div>
                    </div>
                    <div id="div5">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.MonthEnd)
                        </div>
                        <div class="FieldValue">
                            @{
                                var _GradedatepickerMonthEnd = new DatePickerBuilderInfo()
                                {
                                    Name = "GradeInfo_MonthEnd",
                                    Value = @Html.DisplayFor(mode => mode.MonthEnd).ToString(),
                                    Placeholder = ConstantDisplay.HRM_Att_Grade_MonthEnd.TranslateString(),
                                    // Format = ConstantFormat.HRM_Format_MonthYear.TranslateString()
                                    StyleCss = "width:120px"
                                };
                            }
                            @Html.VnrDatePickerFor(model => model.MonthEnd, _GradedatepickerMonthEnd).Format(ConstantFormat.HRM_Format_MonthYear.TranslateString())
                        </div>
                    </div>
                </div>



            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-AttGrade", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-AttGrade", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-AttGrade", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })

                    </div>
                </div>
            </td>
        </tr>
    </table>
}