@using HRM.Presentation.UI.Controls.Kendo
@using HRM.Infrastructure.Utilities
@using HRM.Presentation.Attendance.Models
@model Att_AnnualLeaveModel
@using HRM.Presentation.UI.Controls.Kendo.DropDownList
@using HRM.Presentation.UI.Controls.Kendo.MultiSelect
@using System.Collections;

@{
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
}

@Html.ValidationSummary(false)
@Html.AntiForgeryToken()

<script>
    SetFieldRequired();


    function onSave() {
        onSaveAndContinue($('#form_Att_AnnualLeave'), '@_hrm_Hre_Service', 'api/Att_AnnualLeave/', '@ConstantControlName.HRM_gridAtt_AnnualLeave_Grid_Name', '@ConstantControlName.HRM_gridAtt_AnnualLeave_PopUp_Name');
        return false;
    }

    function onSaveClose() {
        onSaveAndClose($('#form_Att_AnnualLeave'), '@_hrm_Hre_Service', 'api/Att_AnnualLeave/', '@ConstantControlName.HRM_gridAtt_AnnualLeave_Grid_Name', '@ConstantControlName.HRM_gridAtt_AnnualLeave_PopUp_Name');
        return false;
    }

    function onSaveDataPopUp() {

        onlySave($('#form_Att_AnnualLeave'), '@_hrm_Hre_Service', 'api/Att_AnnualLeave/', '@ConstantControlName.HRM_gridAtt_AnnualLeave_Grid_Name');
        return false;
    }
</script>
<style>
    label {
        min-width: 100px;
    }
</style>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Att_AnnualLeave" }))
{
<div class="VnRMain">
    <table style="width:100%">
        <tbody>
            <tr><td colspan="3" style=""></td></tr>
            <tr>
                <td valign="top">
                    <div id="div2">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.ProfileName)
                            @Html.HiddenFor(mode => mode.ID)
                            @Html.HiddenFor(model => model.OrgStructureID)
                        </div>
                        <div class="FieldValue">
                            @{
                                IEnumerable valuePro = new string[] { };
                                if (Model != null)
                                {
                                    valuePro = new[] { new { ProfileName = Model.ProfileName, ID = Model.ProfileID } };
                                }
                            }
                            @{
                                var mtsProfile = new MultiSelectBuilderInfo()
                                {
                                    Width=300,
                                  Name="AnnualLeave_ProfileIDs",
                                    DataTextField = "ProfileName",
                                    DataValueField = "ID",
                                    Url = @_hrm_Hre_Service + "HrMultiSelect/GetMultiProfile",
                                    Placeholder = ConstantDisplay.HRM_HR_SelectProfile.TranslateString(),
                                    Value = valuePro,
                                };
                            }
                            @Html.ChooseEmpOrOrgFor(mode => mode.ProfileID, mtsProfile, _hrm_Hre_Service + "Att_GetData/GetProfileByOrgId")
                            @(Html.HiddenFor(model => model.ProfileIDs))
                        </div>
                        <br />
                    </div>

                    <div id="div2">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.Year)
                        </div>
                        <div class="FieldValue">
                            @{
                                var _Year = new NumericTextBoxBuilderInfo<int>() {
                                    Name = "AnnualLeave_Year",
                                    StyleCss = "width:150px",
                                    Format = "0" };
                            }
                           @Html.VnrNumericTextBoxFor(mode => mode.Year,_Year)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div4">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.InitAnlValue)
                        </div>
                        <div class="FieldValue">
                          @{
    var InitAnlValue = new NumericTextBoxBuilderInfo<double>()
    {
        StyleCss = "width:150px",
        Name = "AnnualLeave_InitAnlValue",
                                  Format = "0" };
                            }
                            @Html.VnrNumericTextBoxFor(model => model.InitAnlValue, InitAnlValue)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div5">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.InitSickValue)
                        </div>
                        <div class="FieldValue">
                            @{
    var InitSickValue = new NumericTextBoxBuilderInfo<double>()
    {
        StyleCss = "width:150px",
        Name = "AnnualLeave_InitSickValue",
                                    Format = "0" };
                            }
                            @Html.VnrNumericTextBoxFor(model => model.InitSickValue, InitSickValue)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="div7">
                        <div class="FieldTitle150">
                            @Html.VnrLabelFor(mode => mode.InitSaveSickValue)
                        </div>
                        <div class="FieldValue">
                           @{
    var InitSaveSickValue = new NumericTextBoxBuilderInfo<double>()
    {
        StyleCss = "width:150px",
        Name = "AnnualLeave_InitSaveSickValue",
                                   Format = "0" };
                            }
                            @Html.VnrNumericTextBoxFor(model => model.InitSaveSickValue, InitSaveSickValue)
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div>
                        <div class="FieldTitle150">

                        </div>
                        <div class="FieldValue">
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-AnnualLeave", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-AnnualLeave", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                            @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-AnnualLeave", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        </div>

                    </div>
                </td>
            </tr>
        </tbody>
    </table>
    @Html.HiddenFor(mode => mode.ID)
</div>
}