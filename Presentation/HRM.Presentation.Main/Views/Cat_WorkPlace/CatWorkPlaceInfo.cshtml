 @using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using System.Collections
@model HRM.Presentation.Category.Models.CatWorkPlaceModel

@{
    ViewBag.Title = "CatResignReasonInfo";
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineId = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
}
<script>
    SetFieldRequired();

    function onSave() {
        onSaveAndContinue($('#form_Cat_WorkPlace'), '@_hrm_Hre_Service', 'api/CatWorkPlace/', 'grid_Cat_WorkPlace', 'windowCatWorkPlace');
        return false;
    }

    function onSaveClose() {
        onSaveAndClose($('#form_Cat_WorkPlace'), '@_hrm_Hre_Service', 'api/CatWorkPlace/', 'grid_Cat_WorkPlace', 'windowCatWorkPlace');
        return false;
    }
    function onSaveDataPopUp() {
        onlySave($('#form_Cat_WorkPlace'), '@_hrm_Hre_Service', 'api/CatWorkPlace/', 'grid_Cat_WorkPlace'); return false;
    }

</script>
<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_Cat_WorkPlace" }))
{
    @Html.HiddenFor(model => model.ID)
    <table>
        <tr>
            <td>
                <div id="div4">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _WorkPlaceCode = new TextBoxBuilderInfo()
                            {
                                Width = 300,
                                Name = "WorkPlace_Code",
                            };
                            if (Model != null)
                            {
                                _WorkPlaceCode.Value = Model.Code == null ? string.Empty : Model.Code;
                            }
                        }
                        @(Html.VnrTextBoxFor(model => model.Code, _WorkPlaceCode))
                    </div>
                </div>
                <div id="div2">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.WorkPlaceName)
                    </div>
                    <div class="FieldValue">
                        @(Html.VnrTextBoxFor(model => model.WorkPlaceName, "width: 300px"))
                    </div>
                </div>

                <div class="DivContentTitleValue" id="div13">
                    <div class="FieldTitle150">
                        @Html.VnrLabelForNoneIcon(model => model.RegionName)
                    </div>
                    <div class="FieldValue">
                        @{
                            var _RegionID = new ComboBoxBuilderInfo()
                            {
                                Name = "WorkPlaceInfo_RegionID",
                                StyleCss = "Width: 200px",
                                DataTextField = "RegionName",
                                DataValueField = "ID",
                                ServerFilter = true,
                                FilterType = FilterType.Contains,
                                Url = _hrm_Hre_Service + "Cat_GetData/GetMultiRegion/",
                                Placeholder = ConstantDisplay.HRM_Category_SelectRegion.TranslateString(),
                                Value = Model == null ? string.Empty : Model.RegionID.ToString()
                            };
                                                }
                        @Html.VnrComboBoxFor(model => model.RegionID, _RegionID).Text(Model == null ? string.Empty : Model.RegionName)

                    </div>
                </div>



                <div class="DivContentTitleValue" id="div13">
                    <div class="FieldTitle150">
                        @Html.VnrLabelForNoneIcon(model => model.ProvinceID)
                    </div>
                    <div class="FieldValue">
                        @{
                                var tProvince = new ComboBoxBuilderInfo()
                                {
                                    Name = "ProvinceID",
                                    StyleCss = "Width: 200px",
                                    DataTextField = "ProvinceName",
                                    DataValueField = "ID",
                                    ServerFilter = true,
                                    FilterType = FilterType.Contains,
                                    Url = _hrm_Hre_Service + "Cat_GetData/GetMultiProvince/",
                                    Placeholder = ConstantDisplay.HRM_Category_SelectProvince.TranslateString(),
                                    Value = Model == null ? string.Empty : Model.ProvinceID.ToString()
                                };
                        }
                        @Html.VnrComboBoxFor(model => model.ProvinceID, tProvince).Text(Model == null ? string.Empty : Model.ProvinceName)

                    </div>
                </div>
                <div class="DivContentTitleValue" id="div13">
                    <div class="FieldTitle150">
                        @Html.VnrLabelForNoneIcon(model => model.DistrictID)
                    </div>
                    <div class="FieldValue">
                        <script>
                            function filterDistricts() {
                                return {
                                    province: $("#ProvinceID").val(),
                                    districtFilter: $("#DistrictID").data("kendoComboBox").input.val()
                                };
                            }
                        </script>
                        @{
                            var tDistrictID = new ComboBoxBuilderInfo()
                            {
                                DataTextField = "DistrictName",
                                DataValueField = "ID",
                                FilterType = FilterType.Contains,
                                Url = _hrm_Hre_Service + "Cat_GetData/GetDistrictCascading/",
                                CascadeFrom = "ProvinceID",
                                ServerFilter = true,
                                StyleCss = "Width: 200px",
                                Data = "filterDistricts",
                                Placeholder = ConstantDisplay.HRM_Category_SelectDistrict.TranslateString(),
                                Value = Model == null ? string.Empty : Model.DistrictID.ToString()
                            };
                        }
                        @Html.VnrComboBoxFor(model => model.DistrictID, tDistrictID).Text(Model == null ? string.Empty : Model.DistrictName)
                    </div>
                </div>

                <div id="div2">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Address)
                    </div>
                    <div class="FieldValue">
                        @(Html.VnrTextBoxFor(model => model.Address, "width: 300px"))
                    </div>
                </div>
                <div id="div4">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Description)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Description, "width:400px;height:80px;")
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-WorkPlace", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-catWorkPlace", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-catWorkPlace", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}


