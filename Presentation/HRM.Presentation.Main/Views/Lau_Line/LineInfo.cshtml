@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo

@using HRM.Presentation.Laundry.Models
@model HRM.Presentation.Laundry.Models.Lau_LineModel
@{
    ViewBag.Title = "LauLine";
    Layout = null;
    var _hrm_Hre_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var userId = Model == null ? Guid.Empty : Model.ID;
}

<script>

    var data = SetCharacteFieldRequired();

    function checkDuplication() {
        
        var _code = $("#LMSLineInfo_Code").val();
        var _ID = '@userId';
        var param = {
            tableName: 'LMS_LineLMS',
            columnName: 'Code',
            keyword: _code,
            ID: _ID
        };
        var isduplicate = checkDuplicate('@_hrm_Sys_Service', 'Sys_GetData', 'CheckDuplicate', param, "Code");
        
        return isduplicate;
    }

    function onlySavePopUp() {
        debugger;

        onlySave($('#form_lau_LauLine'), '@_hrm_Hre_Service', 'api/Lau_Line/', 'grid_Lau_Line', 'windowLauLine');
        return false;
    }

    function onSave() {

        onSaveAndContinue($('#form_lau_LauLine'), '@_hrm_Hre_Service', 'api/Lau_Line/', 'grid_Lau_Line', 'windowLauLine');
        return false;
    }

    function onSaveClose() {
        onSaveAndClose($('#form_lau_LauLine'), '@_hrm_Hre_Service', 'api/Lau_Line/', 'grid_Lau_Line', 'windowLauLine');
        return false;
    }
</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_lau_LauLine" }))
{
    @Html.HiddenFor(model => model.ID)


    <table>
        <tr>
            <td>
                <div id="div2">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.LineLMSName)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.LineLMSName,  "width:300px")
                    </div>
                </div>
                <div id="div3">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Code)
                    </div>
                    <div class="FieldValue">
                        @{
                        var txtCode = new TextBoxBuilderInfo()
                        {
                            Name = "LMSLineInfo_Code",
                            CssStyle = "width:300px",

                        };
                        if (Model != null)
                        {
                            txtCode.Value = Model == null ? string.Empty : Model.Code;
                        }
                        }
                        @Html.VnrTextBoxFor(mode => mode.Code, txtCode)
                    </div>
                </div>

                <div>
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.DateEffect)
                    </div>
                    <div class="FieldValue">
                        @{
                            var dpDateEffect = new DatePickerBuilderInfo()
                            {
                                StyleCss = "width:150px",
                                //Name = "LauLine_DateEffect"
                            };
                        }
                        @Html.VnrDatePickerFor(model => model.DateEffect, dpDateEffect)
                    </div>
                </div>





                <div id="div4">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.MarkerID)
                    </div>
                    <div class="FieldValue">

                        @{
                            var _MarkerID = new ComboBoxBuilderInfo()
                            {
                                DataTextField = "MarkerName",
                                DataValueField = "ID",
                                Url = @_hrm_Hre_Service + "Lau_GetData/GetMultiMarker",
                                Placeholder = ConstantDisplay.HRM_Laundry_SelectMarker.TranslateString(),
                                Autobind = true,
                                StyleCss = "width:300px;",
                                Name = "LineInfo_MarkerID"
                            };
                        }
                        @Html.VnrComboBoxFor(mode => mode.MarkerID, _MarkerID)
                    </div>
                </div>
                <div id="div5">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.LockerID)
                    </div>
                    <div class="FieldValue">
                       
                        @{
                            var _LockerID = new ComboBoxBuilderInfo()
                            {
                                DataTextField = Lau_LockerModel.FieldNames.LockerLMSName,
                                DataValueField = Lau_LockerModel.FieldNames.ID,
                                Url = @_hrm_Hre_Service + "Lau_GetData/GetMultiLocker",
                                Placeholder = ConstantDisplay.HRM_Laundry_Reader_SelectLocker.TranslateString(),
                                Autobind = true,
                                StyleCss = "width:300px;",
                                Name="LineInfo_LockerID"
                            };
                        }
                        @Html.VnrComboBoxFor(mode => mode.LockerID, _LockerID)
                    </div>
                </div>
                <div id="div6">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.MachineCode)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.MachineCode, "width: 300px")
                    </div>
                </div>
                <div id="div7">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Amount)
                    </div>
                    <div class="FieldValue">
                        @{
                        var LAmount = new NumericTextBoxBuilderInfo<double>()
                            {
                                StyleCss = "width:150px;",                                
                                Format = "n0",
                                Name = "LineInfo_Amount"
                            };
                        }
                        @(Html.VnrNumericTextBoxFor(model => model.Amount, LAmount))
                    </div>
                </div>
                <div id="div8">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.Note)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextAreaFor(mode => mode.Note, "width:500px;height:100px;")
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onlySavePopUp", Name = "only-save-lauLine", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-lauLine", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-lauLine", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>

}

