@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@model HRM.Presentation.Category.Models.CatShiftItemModel

@{
    ViewBag.Title = "CatShift";
    Layout = null;

    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineID = Model == null ? Guid.Empty : Model.ID;
    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    IList<SelectListItem> listShitDurationType = Enum.GetValues(typeof(EnumDropDown.ShiftBreakType))
  .Cast<EnumDropDown.ShiftBreakType>()
  .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
  .ToList();
}


<script>
    var data = SetCharacteFieldRequired();
    function checkDuplicationCode() {

        var _code = $("#Shift_Code").val();
        var _ID = '@lineID';
        var param = {
            tableName: 'Cat_Shift',
            columnName: 'Code',
            keyword: _code,
            ID: _ID
        };

        var isduplicate = checkDuplicate('@_hrm_Sys_Service', 'Sys_GetData', 'CheckDuplicate', param, "Code");

        return isduplicate;
    }
    function onSave() {
        if (CheckValidate(data)) {
            if (!checkDuplicationCode()) {
                onSaveAndContinue($('#form_cat_shift'), '@_hrm_Hr_Service', 'api/CatShift/', 'Shift', 'windowCatShift');
            }

        }
        return false;
    }

    function onSaveClose() {
        if (CheckValidate(data)) {
            if (!checkDuplicationCode()) {
                onSaveAndClose($('#form_cat_shift'), '@_hrm_Hr_Service', 'api/CatShift/', 'Shift', 'windowCatShift');
            }

        }
        return false;
    }
    function onSaveDataPopUp() {

        if (CheckValidate(data)) {
            if (!checkDuplicationCode()) {
                onlySave($('#form_cat_shift'), '@_hrm_Hr_Service', 'api/CatShift/', 'Shift'); return false;
            }
        }
    }
</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_cat_shift" }))
{
    @Html.HiddenFor(model => model.ID)


    <table>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.CoFrom)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.CoFrom, "width:300px")
                        @Html.ValidationMessageFor(model => model.CoFrom)
                    </div>
                </div>
                <div>
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.CoTo)
                    </div>
                    <div class="FieldValue">
                        @Html.VnrTextBoxFor(mode => mode.CoTo, "width:300px")
                        @Html.ValidationMessageFor(model => model.CoTo)
                    </div>
                </div>

                <div id="div7">
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.DurationType)
                    </div>
                    <div class="FieldValue">
                        @{
    var ddlShiftDurationType = new DropDownListBuilderInfo()
    {
        DataTextField = "Text",
        DataValueField = "Value",
        BindTo = listShitDurationType
    };
                        }
                        @Html.VnrDropDownListFor(model => model.DurationType, ddlShiftDurationType)
                    </div>
                </div>

                <div id="div7">
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.OvertimeTypeID)
                    </div>
                    <div class="FieldValue">
                        @{
    var dropdownOvertimeTypeID = new DropDownListBuilderInfo()
    {
        Name = "OvertimeTypeID",
        DataTextField = "OvertimeTypeName",
        DataValueField = "ID",
        Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiOvertimeType",
        Value = @Html.DisplayFor(mode => mode.OvertimeTypeID).ToString(),
        OptionLabel = @ConstantDisplay.HRM_Attendance_SelectOvertimeType.TranslateString(),
        Enable = true,
        StyleCss = "width:300px",

    };
                        }
                        @(Html.VnrDropDownListFor(mode => mode.OvertimeTypeID, dropdownOvertimeTypeID))
                        @Html.ValidationMessageFor(model => model.OvertimeTypeID)
                    </div>
                    <br />
                </div>

                <div id="div6">
                    <div class="FieldTitle">
                        @Html.VnrLabelFor(mode => mode.OrgStructureID)
                    </div>
                    <div class="FieldValue">
                        @Html.Partial("EditorTemplates/OrgStructureTreeViewDropdownForCreate")
                        @Html.HiddenFor(model => model.OrgStructureID)
                        @Html.HiddenFor(model => model.OrgStructureName)


                    </div>
                </div>


            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle">

                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-Shift", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-catShift", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-catShift", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}

@if (Model != null)
{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#TreeViewDropDownInput").val('@Model.OrgStructureName');
            $("#OrgStructureID").val('@Model.OrgStructureID');
            @*var treeview = $("#treeviewOrg").data("kendoTreeView");
            var getitem = treeview.dataSource.get('@Model.OrgStructureID');
            treeview.findByUid(getitem.uid);
            var selectitem = treeview.findByUid(getitem.uid);
            treeview.select(selectitem);*@
        });
        $('#@ConstantDisplay.HRM_HR_GeneralProfile_H_IdProfile').val('@Model.ID');

    </script>
}