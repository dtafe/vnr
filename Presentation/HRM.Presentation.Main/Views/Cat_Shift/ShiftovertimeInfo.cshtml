@using HRM.Infrastructure.Utilities
@using HRM.Presentation.UI.Controls.Kendo
@model HRM.Presentation.Category.Models.CatShiftItemModel

@{
    ViewBag.Title = "CatShiftovertime";
    Layout = null;
    //var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var lineID = Model == null ? Guid.Empty : Model.ID;
    //var _hrm_Hr_Service = ConstantPathWeb.Hrm_Sys_Service;

    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;


    IList<SelectListItem> listShitDurationType = Enum.GetValues(typeof(EnumDropDown.ShiftBreakType))
  .Cast<EnumDropDown.ShiftBreakType>()
  .Select(x => new SelectListItem { Value = x.ToString(), Text = EnumDropDown.GetEnumDescription(x) })
  .ToList();
}


<script>
    //  SetFieldRequiredByScreenName('Cat_Shiftovertime');
    $(document).ready(function () {
        $("#ShiftOvertime_ShiftID").val($("#Shift_ID").val());
    });

    function onSave() {
        onSaveAndContinue($('#form_cat_Shiftovertime'), '@_hrm_Hr_Service', 'api/CatShiftItem/', 'grid_Cat_ShiftItemOvertime', '@ConstantControlName.HRM_Cat_shiftovertime_PopUp_Name');
        return false;
    }

    function onSaveClose() {
        onSaveAndClose($('#form_cat_Shiftovertime'), '@_hrm_Hr_Service', 'api/CatShiftItem/', 'grid_Cat_ShiftItemOvertime', '@ConstantControlName.HRM_Cat_shiftovertime_PopUp_Name');
        return false;
    }
    function onSaveDataPopUp() {
        onlySave($('#form_cat_Shiftovertime'), '@_hrm_Hr_Service', 'api/CatShiftItem/', 'grid_Cat_ShiftItemOvertime'); return false;
    }
</script>

<!--Form dùng cho edit và update-->
@using (Html.BeginForm("#", "", FormMethod.Post, new { id = "form_cat_Shiftovertime" }))
{
    @Html.HiddenFor(model => model.ShiftItem_ID)
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.ShiftOvertime_ShiftID)
    <table>
        <tr>
            <td>
                <div id="div3">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.From)
                    </div>
                    <div class="FieldValue">
                        @{
    var datepickerDateStart = new TimePickerBuilderInfo()
    {
        Name = "ShiftovertimeInfo_From",
        Value = @Html.DisplayFor(mode => mode.From).ToString(),
        StyleCss = "width:120px;",
        Placeholder = ConstantDisplay.HRM_General_TimeFrom.TranslateString(),
        Format = "HH:mm:ss"
    };
                        }
                        @Html.VnrTimePickerFor(model => model.From, datepickerDateStart)

                        @{
    var datepickerTimeCoOut = new TimePickerBuilderInfo()
    {
        Name = "ShiftovertimeInfo_To",
        Value = @Html.DisplayFor(mode => mode.To).ToString(),
        StyleCss = "width:120px;",
        Placeholder = @ConstantDisplay.HRM_General_TimeTo.TranslateString(),
        Format = "HH:mm:ss"
    };
                        }
                        @Html.VnrTimePickerFor(model => model.To, datepickerTimeCoOut)
                    </div>
                    <br />
                </div>
                <div id="div7">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.DurationType)
                    </div>
                    <div class="FieldValue">
                        @{
    var ddlShiftDurationType = new DropDownListBuilderInfo()
    {
        StyleCss = "width:300px",
        Name = "ShiftovertimeInfo_DurationType",
        DataTextField = "Text",
        DataValueField = "Value",
        BindTo = listShitDurationType
    };
                        }
                        @Html.VnrDropDownListFor(model => model.DurationType, ddlShiftDurationType)
                    </div>
                </div>
                <div id="div7">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.OvertimeTypeID)
                    </div>
                    <div class="FieldValue">
                        @{
    var dropdownOvertimeTypeID = new DropDownListBuilderInfo()
    {
        Name = "ShiftovertimeInfo_OvertimeTypeID",
        DataTextField = "OvertimeTypeName",
        DataValueField = "ID",
        Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiOvertimeType",
        Value = @Html.DisplayFor(mode => mode.OvertimeTypeID).ToString(),
        OptionLabel = @ConstantDisplay.HRM_Attendance_SelectOvertimeType.TranslateString(),
        Enable = true,
        StyleCss = "width:300px",

    };
                        }
                        @(Html.VnrDropDownListFor(mode => mode.OvertimeTypeID, dropdownOvertimeTypeID))
                        @Html.ValidationMessageFor(model => model.OvertimeTypeID)
                    </div>
                    <br />
                </div>
                <div id="div6">
                    <div class="FieldTitle150">
                        @Html.VnrLabelFor(mode => mode.OrgStructureID)
                    </div>
                    <div class="FieldValue">
                        @{
    var orgTreeView1 = new TreeViewDropdDownBuilderInfo()
    {
        Name = "orgWorkHistory_Overtime",
        SetFieldName = "OrgStructureID",
        IsShowCheckBox = false,
        Value = Model.OrgStructureName,
        SetFieldID = Model.OrgStructureID.ToString()
    };
                        }
                        @Html.Partial("EditorTemplates/OrgTreeViewDropDown", orgTreeView1)
                        @Html.HiddenFor(m => m.OrgStructureID)
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top:2px; padding-bottom:10px;">
                <div class="LineFooterCommandEdit">
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="FieldTitle150">
                    </div>
                    <div class="FieldValue">
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveDataPopUp", Name = "save-ShiftovertimeInfo", Content = ConstantAction.HRM_Common_Save.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSave", Name = "save-continue-ShiftovertimeInfo", Content = ConstantAction.HRM_Common_SaveNew.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "onSaveClose", Name = "save-close-ShiftovertimeInfo", Content = ConstantAction.HRM_Common_SaveClose.TranslateString(), ImageUrl = ConstantPath.IconSavePath })
                    </div>
                </div>
            </td>
        </tr>
    </table>
}