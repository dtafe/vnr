@using HRM.Infrastructure.Utilities;
@using HRM.Infrastructure.Security;


@model HRM.Presentation.Payroll.Models.Sal_PayrollTableModel
@{
    ViewBag.Title = HRM.Infrastructure.Utilities.ConstantDisplay.HRM_Category_GradeAttendance_Title.TranslateString();
    Layout = null;
    //var _Hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    //var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;

    var _hrm_Sys_Service = ConstantPathWeb.Hrm_Sys_Service;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
}

<script type="text/javascript">
    var checkedNodes = [];

    //Khởi tạo điều kiện tìm kiếm
    function filterFieldInfo() {
        var checkedNodes = [];
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes);

        return {
            OrgStructureID: checkedNodes.join(','),
            CutoffdurationID: $('#ddlCutOffDuration').val(),
        };
    }
    //function filterFieldInfo() {
    //    var _form = $('#form-search');
    //    var queryEntity = _form.serialize();
    //    var entity = queryStringToJSON(queryEntity);
    //    return entity;
    //}

    //Hàm xử lý sự kiện edit trên lưới
    @*function eEditGradeAttendance(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var id = dataItem.Id;
        KendoRouteMapping('#Hrm_Main_Web/Cat_GradePayroll/Edit/' + id, 'Hrm_Main_Web', '@_hrm_Main_Web');
    }*@

    function Validation()
    {
         if ($('#ddlCutOffDuration').val() == "")
        {
            window.ShowNotificationProcessor('@ConstantDisplay.HRM_Payroll_NotSelectCutOffDuration.TranslateString()'); //Chưa Dịch!
            return false;
         }
        return true;
    }

    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        //Xử lý show hide form tìm kiếm
        ShowHidePanel();
        //Jump anchor
        jumpAnchor("anchor");
        //
        $("#btnSearch").click(function () {
            if (Validation())
            {
                ReadGrid('@ConstantControlName.HRM_gridCan_SumryMealRecord_Grid_Name');
            }
        });
        //Xử Lý Grid
        //GridCheckbox("gridCat_GradePayroll");
        //Xử lý nút Edit
        @*var isAccess = checkPermission(PrivilegeType.Modify, '@ConstantPermission.Cat_GradeAttendance');
        if (!isAccess) {
            return;
        }*@
        //EditGridNewPage("gridCat_GradePayroll", '#Hrm_Main_Web/Cat_GradePayroll/Edit/', 'Hrm_Main_Web', '@_hrm_Main_Web');
        //Xử lý nút Delete
        @*var isAccess = checkPermission(PrivilegeType.Delete, '@ConstantPermission.Sys_Group');
        if (!isAccess) {
            return;
        }*@
        //DeleteGrid("gridCat_GradePayroll", '@_hrm_Main_Web' + "Cat_GradePayroll/Remove/");
        @*$("#btnCreate").click(function () {
            var isAccess = checkPermission(PrivilegeType.Create, '@ConstantPermission.Cat_GradeAttendance');
            if (!isAccess) {
                return;
            }
            KendoRouteMapping('#Hrm_Main_Web/Cat_GradePayroll/Create/', 'Hrm_Main_Web', '@_hrm_Main_Web');
        });
        $('#btnDelete').click(function (e) {
            var isAccess = checkPermission(PrivilegeType.Delete, '@ConstantPermission.Cat_GradeAttendance');
            if (!isAccess) {
                return;
            }
            DeleteSelected("gridCat_GradePayroll", '@_hrm_Main_Web' + "Cat_GradePayroll/RemoveSelected/", selectedIds.join(","), '@ConstantPermission.Cat_GradePayroll');
            return false;
        });*@
    });
    @*function showpage(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var id = dataItem.Id;
        window.location.href = '@_hrm_Main_Web' + 'Cat_GradePayroll/Edit/' + id;
    }
    function NewPageInsert() {
        window.location.href = '@_hrm_Main_Web' + 'Cat_GradePayroll/Create';
    }*@

    function ComputeSumryMealRecored() {
        if (Validation())
        {
            ShowHre_ProgressBar();
            $.ajax({
                url: '@_hrm_Hr_Service' + 'Canteen_Getdata/ComputeSumryMealRecord',
                data: filterFieldInfo(),
                type: 'POST',
                success: function (data) {
                    if (data == true) {
                        ShowNotificationProcessor('@ConstantDisplay.SaveSuccess.TranslateString()');
                    }
                    else {
                        ShowNotificationProcessor('Lỗi thử lại sau !');
                    }
                    CloseHre_ProgressBar();
                },
                error: function (data) {
                    ShowNotificationProcessor('Lỗi thử lại sau !');
                    CloseHre_ProgressBar();
                }
            });
        }
    };

</script>


<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->

            <div class="contendSearchWidge">
                <form id="form-search">
                    <div>

                        <div id="div2">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(model => model.CutOffDurationID)
                            </div>
                            <div class="FieldValue">
                                @{
                                    var cutOffDurationName = new DropDownListBuilderInfo()
                                    {
                                        Name = "ddlCutOffDuration",
                                        DataTextField = "CutOffDurationName",
                                        DataValueField = "ID",
                                        Url = _hrm_Hr_Service + "Att_GetData/GetMultiCutOffDuration",
                                        StyleCss = "width:200px",
                                    };
                                }
                                @(Html.VnrDropDownList(cutOffDurationName))
                            </div>
                        </div>
                        <div id="div4">
                            <div class="FieldTitle">
                                @Html.VnrLabelFor(mode => mode.OrgStructureID)
                            </div>
                            <div class="FieldValue">
                                @Html.Partial("EditorTemplates/OrgStructureTreeViewDropdown")
                            </div>
                        </div>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>
<div class="commandToolBarWidge" id="anchor">
    <div style="float:left">
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
        @Html.VnrButton(new ButtonBuilderInfo() { EventClick = "ComputeSumryMealRecored", Name = "btnComputeSumryMealRecored", Content = ConstantAction.HRM_Common_Can_SumryMealRecord.TranslateString(), ImageUrl = ConstantPath.IconAddNewPath })
    </div>
    <div style="float:right">
        <div class="HideExportCate">
            @*@Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport", Content = ConstantAction.HRM_Common_Export.TranslateString(), ImageUrl = ConstantPath.IconExportPath })*@
        </div>
        @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnChangeSumryMealRecord", Content = ConstantDisplay.HRM_ChangeColumn.TranslateString(), ImageUrl = ConstantPath.Hrm_ChangeColumnIcon })
        @*@Html.VnrButton(new ButtonBuilderInfo() { Name = "btnDelete", Content = ConstantAction.HRM_Common_Delete.TranslateString(), ImageUrl = ConstantPath.IconDeletePath })*@
    </div>
    <div class="clear"></div>
</div>
<div>
    <!--Khai báo các thông tin cho Grid-->
    @using HRM.Presentation.Category.Models
    @using HRM.Presentation.UI.Controls.Kendo
    @{
        var columnMode = string.Empty;
        var defaultColumnMode = string.Empty;
        var userId = Session[SessionObjects.UserId];
        //Lấy tên lưới cộng thêm tên của control và action để tránh trùng nhau
        var gridControlName = ConstantControlName.HRM_gridCan_SumryMealRecord_Grid_Name + "__Can_SumryMealRecord_Index";
        HRM.Presentation.Main.Controllers.Sys_ColumnModeController control = new HRM.Presentation.Main.Controllers.Sys_ColumnModeController();
        //Get thông tin cấu hình trong database
        GridBuilderModel gridInfo = control.GetGridBuilderInfo(userId + "," + gridControlName);

        var grid = new GridBuilderInfo
        {
            Name = ConstantControlName.HRM_gridCan_SumryMealRecord_Grid_Name,
            ReadActionUrl = @_hrm_Hr_Service + "Canteen_GetData/GetCan_SumryMealRecord/",
            ReadData = "filterFieldInfo",
        };

        if (gridInfo != null && gridInfo.ValueFields != null && gridInfo.ValueFields.Any())
        {
            grid.ValueFields = gridInfo.ValueFields;
            grid.SizeFields = gridInfo.SizeFields;
            grid.Filterable = gridInfo.FilterFields;
            grid.DisplayFields = gridInfo.DisplayFields;
            grid.LockedFields = gridInfo.LockedFields;
            grid.GroupFields = gridInfo.GroupFields;
            if (gridInfo.PageSize > 0)
            {
                grid.PageSize = gridInfo.PageSize;
            }
            columnMode = gridInfo.StringXml;
        }
        else
        {
            grid.ValueFields = new string[]
            {
                 HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.CodeEmp,
                HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.ProfileName,
                HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.SumAmount,
                HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.Amount3OnMonth,
                HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.AmountEatNotStandar,
                HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.AmountHDTJob,
                HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.AmountNotWorkButHasHDT,
                HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.AmountNotWorkHasEat,
                HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.AmountSubtractWorngStandarHDT,
                HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.CountCardMore,
                HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.DateFrom,
                HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.DateTo,
                HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.TotalMealAllowance,

            };
            grid.SizeFields = new Dictionary<string, int>()
            {
                     {   HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.CodeEmp,100},
                 {   HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.ProfileName,150},
                    {   HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.SumAmount,100},
                       {   HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.Amount3OnMonth,100},
                          {   HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.AmountEatNotStandar,100},
                             {   HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.AmountHDTJob,100},
                                {   HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.AmountNotWorkButHasHDT,100},
                                   {   HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.AmountNotWorkHasEat,100},
                                      {   HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.AmountSubtractWorngStandarHDT,100},
                                         {   HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.CountCardMore,100},
                                            {   HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.DateFrom,100},
                                                       {   HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.DateTo,100},
                                                                                {   HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel.FieldNames.TotalMealAllowance,100},



            };

            //grid.DisplayFields = new Dictionary<string, string>()
            //{
            //    {Cat_GradePayrollModel.FieldNames.Code, ConstantDisplay.HRM_Category_GradePayroll_Code},
            //    //{Cat_GradeAttendanceModel.FieldNames.ID,"<div></div>"},
            //    {Cat_GradePayrollModel.FieldNames.GradeCfgName, ConstantDisplay.HRM_Category_GradePayroll_GradeCfgName},

            //    //{Cat_GradePayrollModel.FieldNames.IsFormulaSalary, ConstantDisplay.HRM_Category_GradePayroll_IsFormulaSalary},
            //    //{Cat_GradePayrollModel.FieldNames.IsMoneySalary, ConstantDisplay.HRM_Category_GradePayroll_IsMoneySalary},
            //    //{Cat_GradePayrollModel.FieldNames.IsProductSalary, ConstantDisplay.HRM_Category_GradePayroll_IsProductSalary},
            //    {Cat_GradePayrollModel.FieldNames.Description, ConstantDisplay.HRM_Category_GradePayroll_Description},

            //};
            defaultColumnMode = control.SetDefaultGridBuilderInfo(grid);
        }
    //var grid = new GridBuilderInfo
    //{
    //    Name = "gridCat_GradePayroll",
    //    ValueFields = valueFields,
    //    SizeFields = sizeFields,
    //    DisplayFields = displayFields,
    //    ReadActionUrl = _hrm_Hr_Service + "Cat_GetData/GetGradePayrollList/",
    //    ReadData = "filterFieldInfo"
    //};
    }
    <!--Khởi tạo Grid-->
    @(Html.VnrGrid<HRM.Presentation.Canteen.Models.Can_SumryMealRecordModel>(grid))
    <script>
        ClickButtonChangeColum("btnChangeSumryMealRecord", "Can_SumryMealRecordModel");
        $(document).ready(function () {
            $("#" + '@ConstantControlName.HRM_ChangeColum_Grid_Name').val('@gridControlName');
            $("#" + '@ConstantControlName.HRM_ChangeColum_ColumMode_Name').val('@Html.Raw(columnMode)');
            $("#" + '@ConstantControlName.HRM_ChangeColum_Default_ColumMode_Name').val('');
            $("#" + '@ConstantControlName.HRM_ChangeColum_Default_ColumMode_Name').val('@Html.Raw(defaultColumnMode)')
        });
    </script>
</div>





