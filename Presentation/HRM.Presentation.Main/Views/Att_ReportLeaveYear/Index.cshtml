@using HRM.Infrastructure.Utilities
@using HRM.Infrastructure.Security
@using HRM.Presentation.Attendance.Models;
@using HRM.Presentation.UI.Controls.Kendo

@model Att_ReportLeaveYearModel
@{
    ViewBag.Title = "Index";
    Layout = null;
    var _hrm_Hr_Service = ConstantPathWeb.Hrm_Hre_Service;
    var _hrm_Main_Web = ConstantPathWeb.Hrm_Main_Web;
    var controller = ViewContext.RouteData.Values["Controller"].ToString();
    var action = ViewContext.RouteData.Values["Action"].ToString();
    var screen = controller + "/" + action;
}
@Html.Hidden("Screen", screen)

<script>
    var checkedNodes = [];
    var isCreateTemplate = false;
    var isCreateTemplateForDynamicGrid = false;
    SetFieldRequired();
    function filterFieldInfo(isExport) {
        checkedNodes = [];
        var treeView = $("#treeviewOrg").data("kendoTreeView");
        var _leaveDayTypeIDs = $('#@Html.FieldIdFor(model=>model.LeaveDayTypeIDs)').val() != null ? $('#@Html.FieldIdFor(model=>model.LeaveDayTypeIDs)').val().join(',') : $('#@Html.FieldIdFor(model=>model.LeaveDayTypeIDs)').val();
        checkedNodeOrderNumbers(treeView.dataSource.view(), checkedNodes);
        var elementPara = {
            CodeEmp: $('#@Html.FieldIdFor(model => model.CodeEmp)').val(),
            OrgStructureID: checkedNodes.join(','),
            LeaveDayTypeIDs: _leaveDayTypeIDs,
            Year: $('#@Html.FieldIdFor(model => model.Year)').val(),
            IsCreateTemplate: isCreateTemplate,
            IsCreateTemplateForDynamicGrid: isCreateTemplateForDynamicGrid,
            UserExport: $('#UserLoginName').val()
        };
        if (isExport == true) {
            elementPara["ExportId"] = $('#ddlScreenName').val();
        }
        return elementPara;
    }

    //Xử lý sự kiện click button tìm kiếm
    $(document).ready(function () {
        ShowHidePanel();
        $("#btnSearch").click(function () {
            ShowHre_ProgressBar();
            $.ajax({
                type: 'POST',
                url: '@_hrm_Hr_Service' + 'Att_GetData/GetReportLeaveYearListValidation',
                data: filterFieldInfo(),
                dataType: 'json',
                async: false,
                success: function (data) {
                    
                    if (data[0] == "error") {
                        CloseHre_ProgressBar();
                        ShowNotificationProcessor(data[1]);
                    }
                    else {
                        
                        $.ajax({
                            url: '@_hrm_Hr_Service' + "Att_GetData/GetReportLeaveYearList",
                            data: filterFieldInfo(false),
                            type: 'POST',
                            datatype: 'json',
                            async: false,
                            success: function (data) {
                                CloseHre_ProgressBar();
                                
                                var grid = VnrGridDynamic;
                                grid.GridName = "gridAtt_ReportLeaveYear";
                                grid.DataSource = data.Data;
                                VnrGridDynamicControl(grid);
                            }
                        });
                    }
                }
            });
            return false;
        });
    });
    $("#btnExport").click(function () {
        ShowHre_ProgressBar();
        var isAccess = checkPermission(PrivilegeType.Export, '@ConstantPermission.Att_ReportLeaveYear');
        if (!isAccess) {
            return;
        }

        if ($('#ddlScreenName').val() == "") {
            ExportFail();
            return;
        }
        var urlGetData = '@_hrm_Hr_Service' + '/Att_GetData/GetReportLeaveYearList';
        var urlDownload = '@_hrm_Main_Web';
        var dataParameter = filterFieldInfo(true);
        ExportAll(urlGetData, dataParameter, urlDownload);
    });

    $("#btnCreateTemplate").click(function () {
        
        isCreateTemplate = true;
        isCreateTemplateForDynamicGrid = true;
        CreateTemplate('@_hrm_Hr_Service' + '/Att_GetData/GetReportLeaveYearList', filterFieldInfo(true));
    });

</script>
<div class="panel-wrap">
    <div id="main-content">
        <div class="widget">
            <h3>
                <!--Dòng title cho biết đang ở form nào và link quay lại-->
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
                <span class="collapse k-icon k-i-arrowhead-n"></span>
            </h3>
            <!--Bất đầu nôi dung tìm kiếm-->
            <div class="contendSearchWidge">
                <div style="float:left; width:400px">
                    <div id="div2">

                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.Year)
                            @Html.HiddenFor(m => m.UserExport)
                        </div>
                        <div class="FieldValue">
                            @{
                                var year = new NumericTextBoxBuilderInfo<int>()
                                {
                                    Value = int.Parse(DateTime.Now.Year.ToString()),
                                    Format = ConstantFormat.HRM_Format_Number_Integer,
                                    StyleCss = "width:80px"
                                };
                            }
                            @(Html.VnrNumericTextBoxFor(model => model.Year, year))
                        </div>
                        <div style="clear: both;"></div>
                    </div>

                    <div id="div5">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.CodeEmp)
                        </div>
                        <div class="FieldValue">
                            @Html.VnrTextBoxFor(mode => mode.CodeEmp)
                        </div>
                    </div>

                    <div id="div5">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.OrgStructureID)
                        </div>
                        <div class="FieldValue">
                            @Html.Partial("EditorTemplates/OrgStructureTreeViewDropdown")
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                </div>
                <div style="display: block; float: left; width: 600px">
                    <div id="div6">
                        <div class="FieldTitle">
                            @Html.VnrLabelFor(mode => mode.LeaveDayTypeIDs)
                        </div>
                        <div class="FieldValue">
                            @{
                                var _LeaveDayTypeIDs = new MultiSelectBuilderInfo()
                                {
                                    DataTextField = "LeaveDayTypeName",
                                    DataValueField = "ID",
                                    Url = @_hrm_Hr_Service + "Cat_GetData/GetMultiLeaveDayType",
                                    Value = @Html.DisplayFor(mode => mode.LeaveDayTypeIDs).ToString(),
                                    Enable = true,
                                    Placeholder = @ConstantDisplay.HRM_Category_SelectLeaveDayType.TranslateString()
                                };
                            }
                            @(Html.VnrMultiSelectFor(mode => mode.LeaveDayTypeIDs, _LeaveDayTypeIDs))
                        </div>

                    </div>
                    <div class="DivContentTitleValue" id="dvNoDisplay0Data">
                        <div class="FieldTitle">
                        </div>
                        <div class="FieldValue">
                            <div style="float:left">
                                @{
                                    var _NoDisplay0Data = new CheckBoxBuilderInfo()
                                    {
                                    };
                                }
                                @Html.VnrCheckBoxFor(mode => mode.NoDisplay0Data, _NoDisplay0Data)
                            </div>
                            <div style="float:left; padding-top:3px">
                                @Html.VnrLabelForNoneIcon(model => model.NoDisplay0Data)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="commandToolBarWidge">

    @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnSearch", Content = ConstantAction.HRM_Common_Search.TranslateString(), ImageUrl = ConstantPath.IconSearchPath })
    <div style="float:right">
        <script>
            function GetScreenName() {
                return {
                    screenName: '@screen'
                };
            }
        </script>
        <div class="FieldValue" style="margin-top: 0;">
            @{
                var screenName = new DropDownListBuilderInfo()
                {
                    Name = "ddlScreenName",
                    DataTextField = "ExportName",
                    DataValueField = "ID",
                    Url = @_hrm_Hr_Service + "Cat_GetData/GetScreenName",
                    Data = "GetScreenName",
                };
            }
            @Html.VnrDropDownList(screenName)
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnExport", Content = ConstantAction.HRM_Common_ExportReport.TranslateString(), ImageUrl = ConstantPath.IconExportPath })
            @Html.VnrButton(new ButtonBuilderInfo() { Name = "btnCreateTemplate", Content = ConstantAction.HRM_Common_CreateTemplate.TranslateString() , ImageUrl = ConstantPath.IconExportPath })
          </div>
    </div>
</div>
<div id="gridAtt_ReportLeaveYear"></div>
